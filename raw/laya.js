function __cons(t, a) {
  return eval(
    'new t(' +
      a
        .map(function(t, e) {
          return 'a[' + e + ']';
        })
        .join(',') +
      ')'
  );
}
var Laya = (window.Laya = (function(t, e) {
  var i = {
    __internals: [],
    __packages: {},
    __classmap: {
      Object: Object,
      Function: Function,
      Array: Array,
      String: String
    },
    __sysClass: {
      object: 'Object',
      array: 'Array',
      string: 'String',
      dictionary: 'Dictionary'
    },
    __propun: { writable: !0, enumerable: !1, configurable: !0 },
    __presubstr: String.prototype.substr,
    __substr: function(t, e) {
      return 1 == arguments.length
        ? i.__presubstr.call(this, t)
        : i.__presubstr.call(this, t, e > 0 ? e : this.length + e);
    },
    __init: function(t) {
      t.forEach(function(t) {
        t.__init$ && t.__init$();
      });
    },
    __isClass: function(t) {
      return t && (t.__isclass || t == Object || t == String || t == Array);
    },
    __newvec: function(t, e) {
      var i = [];
      i.length = t;
      for (var n = 0; n < t; n++) i[n] = e;
      return i;
    },
    __extend: function(t, e) {
      function n() {
        i.un(this, 'constructor', t);
      }
      for (var a in e)
        if (e.hasOwnProperty(a)) {
          var r = Object.getOwnPropertyDescriptor(e, a),
            s = r.get,
            o = r.set;
          s || o
            ? s && o
              ? Object.defineProperty(t, a, r)
              : (s && Object.defineProperty(t, a, s),
                o && Object.defineProperty(t, a, o))
            : (t[a] = e[a]);
        }
      (n.prototype = e.prototype),
        (t.prototype = new n()),
        i.un(t.prototype, '__imps', i.__copy({}, e.prototype.__imps));
    },
    __copy: function(t, e) {
      if (!e) return null;
      t = t || {};
      for (var i in e) t[i] = e[i];
      return t;
    },
    __package: function(e, n) {
      if (!i.__packages[e]) {
        i.__packages[e] = !0;
        var a = t,
          r = e.split('.');
        if (r.length > 1)
          for (var s = 0, o = r.length - 1; s < o; s++) {
            var l = a[r[s]];
            a = l || (a[r[s]] = {});
          }
        a[r[r.length - 1]] || (a[r[r.length - 1]] = n || {});
      }
    },
    __hasOwnProperty: function(t, e) {
      function i(t, e) {
        if (Object.hasOwnProperty.call(e.prototype, t)) return !0;
        var n = e.prototype.__super;
        return null == n ? null : i(t, n);
      }
      return (
        (e = e || this), Object.hasOwnProperty.call(e, t) || i(t, e.__class)
      );
    },
    __typeof: function(t, e) {
      if (!t || !e) return !1;
      if (e === String) return 'string' == typeof t;
      if (e === Number) return 'number' == typeof t;
      if (e.__interface__) e = e.__interface__;
      else if ('string' != typeof e) return t instanceof e;
      return (t.__imps && t.__imps[e]) || t.__class == e;
    },
    __as: function(t, e) {
      return this.__typeof(t, e) ? t : null;
    },
    __int: function(t) {
      return t ? parseInt(t) : 0;
    },
    interface: function(e, n) {
      i.__package(e, {});
      var a = i.__internals,
        r = (a[e] = a[e] || { self: e });
      if (n) {
        var s = n.split(',');
        r.extend = [];
        for (c = 0; c < s.length; c++) {
          var o = s[c];
          (a[o] = a[o] || { self: o }), r.extend.push(a[o]);
        }
      }
      for (var l = t, h = e.split('.'), c = 0; c < h.length - 1; c++)
        l = l[h[c]];
      l[h[h.length - 1]] = { __interface__: e };
    },
    class: function(e, n, a, r) {
      if ((a && i.__extend(e, a), n))
        if ((i.__package(n, e), (i.__classmap[n] = e), n.indexOf('.') > 0)) {
          if (0 == n.indexOf('laya.')) {
            var s = n.split('.');
            (r = r || s[s.length - 1]),
              i[r] &&
                console.log(
                  'Warning!,this class[' + r + '] already exist:',
                  i[r]
                ),
              (i[r] = e);
          }
        } else
          'Main' == n
            ? (t.Main = e)
            : (i[n] &&
                console.log(
                  'Error!,this class[' + n + '] already exist:',
                  i[n]
                ),
              (i[n] = e));
      var o = i.un,
        l = e.prototype;
      o(l, 'hasOwnProperty', i.__hasOwnProperty),
        o(l, '__class', e),
        o(l, '__super', a),
        o(l, '__className', n),
        o(e, '__super', a),
        o(e, '__className', n),
        o(e, '__isclass', !0),
        o(e, 'super', function(t) {
          this.__super.call(t);
        });
    },
    imps: function(t, e) {
      function n(t) {
        var e, r;
        if ((e = i.__internals[t]) && ((a[t] = !0), (r = e.extend)))
          for (var s = 0; s < r.length; s++) n(r[s].self);
      }
      if (!e) return null;
      var a = t.__imps || i.un(t, '__imps', {});
      for (var r in e) n(r);
    },
    superSet: function(t, e, i, n) {
      var a = t.prototype['_$set_' + i];
      a && a.call(e, n);
    },
    superGet: function(t, e, i) {
      var n = t.prototype['_$get_' + i];
      return n ? n.call(e) : null;
    },
    getset: function(t, e, n, a, r) {
      t
        ? (a && (e['_$GET_' + n] = a), r && (e['_$SET_' + n] = r))
        : (a && i.un(e, '_$get_' + n, a), r && i.un(e, '_$set_' + n, r)),
        a && r
          ? Object.defineProperty(e, n, {
              get: a,
              set: r,
              enumerable: !1,
              configurable: !0
            })
          : (a &&
              Object.defineProperty(e, n, {
                get: a,
                enumerable: !1,
                configurable: !0
              }),
            r &&
              Object.defineProperty(e, n, {
                set: r,
                enumerable: !1,
                configurable: !0
              }));
    },
    static: function(t, e) {
      for (var i = 0, n = e.length; i < n; i += 2)
        'length' == e[i]
          ? (t.length = e[i + 1].call(t))
          : (function() {
              var n = e[i],
                a = e[i + 1];
              Object.defineProperty(t, n, {
                get: function() {
                  return delete this[n], (this[n] = a.call(this));
                },
                set: function(t) {
                  delete this[n], (this[n] = t);
                },
                enumerable: !0,
                configurable: !0
              });
            })();
    },
    un: function(t, e, n) {
      return (
        n || (n = t[e]),
        (i.__propun.value = n),
        Object.defineProperty(t, e, i.__propun),
        n
      );
    },
    uns: function(t, e) {
      e.forEach(function(e) {
        i.un(t, e);
      });
    }
  };
  return (
    (t.console = t.console || { log: function() {} }),
    (t.trace = t.console.log),
    (Error.prototype.throwError = function() {
      throw arguments;
    }),
    Object.defineProperty(Array.prototype, 'fixed', { enumerable: !1 }),
    i
  );
})(window, document));
!(function(t, e, i) {
  i.un, i.uns, i.static, i.class, i.getset, i.__newvec;
})(window, document, Laya),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset;
    i.__newvec;
    i.interface('laya.runtime.IMarket'),
      i.interface('laya.filters.IFilter'),
      i.interface('laya.display.ILayout'),
      i.interface('laya.resource.IDispose'),
      i.interface('laya.runtime.IPlatform'),
      i.interface('laya.resource.IDestroy'),
      i.interface('laya.runtime.IConchNode'),
      i.interface('laya.filters.IFilterAction'),
      i.interface('laya.runtime.ICPlatformClass'),
      i.interface('laya.resource.ICreateResource'),
      i.interface('laya.runtime.IConchRenderObject'),
      i.interface('laya.runtime.IPlatformClass', 'laya.runtime.IPlatform');
    var s = (function() {
        function e() {}
        return (
          a(e, 'laya.utils.RunDriver'),
          (e.FILTER_ACTIONS = []),
          (e.pixelRatio = -1),
          (e._charSizeTestDiv = null),
          (e.now = function() {
            return Date.now();
          }),
          (e.getWindow = function() {
            return t;
          }),
          (e.getPixelRatio = function() {
            if (e.pixelRatio < 0) {
              var t = O.context,
                i =
                  t.backingStorePixelRatio ||
                  t.webkitBackingStorePixelRatio ||
                  t.mozBackingStorePixelRatio ||
                  t.msBackingStorePixelRatio ||
                  t.oBackingStorePixelRatio ||
                  t.backingStorePixelRatio ||
                  1;
              (e.pixelRatio = (O.window.devicePixelRatio || 1) / i) < 1 &&
                (e.pixelRatio = 1);
            }
            return e.pixelRatio;
          }),
          (e.getIncludeStr = function(t) {
            return null;
          }),
          (e.createShaderCondition = function(t) {
            var e = '(function() {return ' + t + ';})';
            return i._runScript(e);
          }),
          (e.fontMap = []),
          (e.measureText = function(t, i) {
            var n = e.hanzi.test(t);
            if (n && e.fontMap[i]) return e.fontMap[i];
            var a = O.context;
            a.font = i;
            var r = a.measureText(t);
            return n && (e.fontMap[i] = r), r;
          }),
          (e.getWebGLContext = function(t) {}),
          (e.beginFlush = function() {}),
          (e.endFinish = function() {}),
          (e.addToAtlas = null),
          (e.flashFlushImage = function(t) {}),
          (e.drawToCanvas = function(t, e, i, n, a, r) {
            var s = bt.create('2D'),
              o = new R(i, n, s);
            return B.renders[e]._fun(t, o, a, r), s;
          }),
          (e.createParticleTemplate2D = null),
          (e.createGLTextur = null),
          (e.createWebGLContext2D = null),
          (e.changeWebGLSize = function(t, e) {}),
          (e.createRenderSprite = function(t, e) {
            return new B(t, e);
          }),
          (e.createFilterAction = function(t) {
            return new w();
          }),
          (e.createGraphics = function() {
            return new f();
          }),
          (e.clear = function(t) {
            N._context.ctx.clear();
          }),
          (e.cancelLoadByUrl = function(t) {}),
          (e.clearAtlas = function(t) {}),
          (e.isAtlas = function(t) {
            return !1;
          }),
          (e.addTextureToAtlas = function(t) {}),
          (e.getTexturePixels = function(t, e, i, n, a) {
            return null;
          }),
          (e.skinAniSprite = function() {
            return null;
          }),
          (e.update3DLoop = function() {}),
          n(e, [
            'hanzi',
            function() {
              return (this.hanzi = new RegExp('^[一-龥]$'));
            }
          ]),
          e
        );
      })(),
      o =
        (r(1, i, 'alertGlobalError', null, function(t) {
          var e = 0;
          O.window.onerror = t
            ? function(t, i, n, a, r) {
                e++ < 5 &&
                  r &&
                  alert(
                    '出错啦，请把此信息截图给研发商\n' + t + '\n' + r.stack || r
                  );
              }
            : null;
        }),
        (i.init = function(t, e, n) {
          for (var a = [], r = 2, s = arguments.length; r < s; r++)
            a.push(arguments[r]);
          if (!i._isinit) {
            ArrayBuffer.prototype.slice ||
              (ArrayBuffer.prototype.slice = i._arrayBufferSlice),
              (i._isinit = !0),
              O.__init__(),
              k.__init__(),
              f.__init__(),
              (i.timer = new q()),
              (i.scaleTimer = new q()),
              (i.loader = new ot()),
              Z.__init__();
            for (var r = 0, o = a.length; r < o; r++)
              a[r].enable && a[r].enable();
            return (
              _.__init__(),
              u.__init__(),
              P.__init__(),
              V.beginCheck(),
              (i._currentStage = i.stage = new yt()),
              i.stage.conchModel && i.stage.conchModel.setRootNode(),
              i.getUrlPath(),
              (i.render = new N(0, 0)),
              i.stage.size(t, e),
              B.__init__(),
              g.__init__(),
              y.instance.__init__(i.stage, N.canvas),
              xt.__init__(),
              (E.autoStopMusic = !0),
              L.__init__(),
              N.canvas
            );
          }
        }),
        (i.getUrlPath = function() {
          var t = O.window.location,
            e = t.pathname;
          (e = ':' == e.charAt(2) ? e.substring(1) : e),
            (A.rootPath = A.basePath = A.getPath(
              'file:' == t.protocol
                ? e
                : t.protocol + '//' + t.host + t.pathname
            ));
        }),
        (i._arrayBufferSlice = function(t, e) {
          var i = new Uint8Array(this, t, e - t),
            n = new Uint8Array(i.length);
          return n.set(i), n.buffer;
        }),
        (i._runScript = function(t) {
          return O.window['e' + String.fromCharCode(118) + 'al'](t);
        }),
        (i.stage = null),
        (i.timer = null),
        (i.scaleTimer = null),
        (i.loader = null),
        (i.version = '1.7.19.1beta'),
        (i.render = null),
        (i._currentStage = null),
        (i._isinit = !1),
        (i.MiniAdpter = {
          init: function() {
            t.navigator &&
              t.navigator.userAgent &&
              t.navigator.userAgent.indexOf('MiniGame') > -1 &&
              console.error(
                '请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0'
              );
          }
        }),
        n(i, [
          'conchMarket',
          function() {
            return (this.conchMarket = t.conch ? conchMarket : null);
          },
          'PlatformClass',
          function() {
            return (this.PlatformClass = t.PlatformClass);
          }
        ]),
        (function() {
          function t() {}
          return (
            a(t, 'Config'),
            (t.WebGLTextCacheCount = 500),
            (t.atlasEnable = !1),
            (t.showCanvasMark = !1),
            (t.animationInterval = 50),
            (t.isAntialias = !1),
            (t.isAlpha = !1),
            (t.premultipliedAlpha = !0),
            (t.isStencil = !0),
            (t.preserveDrawingBuffer = !1),
            t
          );
        })()),
      l = (function() {
        function t() {
          this._events = null;
        }
        var e;
        a(t, 'laya.events.EventDispatcher');
        var i = t.prototype;
        return (
          (i.hasListener = function(t) {
            return !!(this._events && this._events[t]);
          }),
          (i.event = function(t, e) {
            if (!this._events || !this._events[t]) return !1;
            var i = this._events[t];
            if (i.run)
              i.once && delete this._events[t],
                null != e ? i.runWith(e) : i.run();
            else {
              for (var n = 0, a = i.length; n < a; n++) {
                var r = i[n];
                r && (null != e ? r.runWith(e) : r.run()),
                  (r && !r.once) || (i.splice(n, 1), n--, a--);
              }
              0 === i.length && this._events && delete this._events[t];
            }
            return !0;
          }),
          (i.on = function(t, e, i, n) {
            return this._createListener(t, e, i, n, !1);
          }),
          (i.once = function(t, e, i, n) {
            return this._createListener(t, e, i, n, !0);
          }),
          (i._createListener = function(t, i, n, a, r, s) {
            void 0 === s && (s = !0), s && this.off(t, i, n, r);
            var o = e.create(i || this, n, a, r);
            this._events || (this._events = {});
            var l = this._events;
            return (
              l[t]
                ? l[t].run
                  ? (l[t] = [l[t], o])
                  : l[t].push(o)
                : (l[t] = o),
              this
            );
          }),
          (i.off = function(t, e, i, n) {
            if ((void 0 === n && (n = !1), !this._events || !this._events[t]))
              return this;
            var a = this._events[t];
            if (null != i)
              if (a.run)
                (e && a.caller !== e) ||
                  a.method !== i ||
                  (n && !a.once) ||
                  (delete this._events[t], a.recover());
              else {
                for (var r = 0, s = 0, o = a.length; s < o; s++) {
                  var l = a[s];
                  l
                    ? !l ||
                      (e && l.caller !== e) ||
                      l.method !== i ||
                      (n && !l.once) ||
                      (r++, (a[s] = null), l.recover())
                    : r++;
                }
                r === o && delete this._events[t];
              }
            return this;
          }),
          (i.offAll = function(t) {
            var e = this._events;
            if (!e) return this;
            if (t) this._recoverHandlers(e[t]), delete e[t];
            else {
              for (var i in e) this._recoverHandlers(e[i]);
              this._events = null;
            }
            return this;
          }),
          (i._recoverHandlers = function(t) {
            if (t)
              if (t.run) t.recover();
              else
                for (var e = t.length - 1; e > -1; e--)
                  t[e] && (t[e].recover(), (t[e] = null));
          }),
          (i.isMouseEvent = function(e) {
            return t.MOUSE_EVENTS[e];
          }),
          (t.MOUSE_EVENTS = {
            rightmousedown: !0,
            rightmouseup: !0,
            rightclick: !0,
            mousedown: !0,
            mouseup: !0,
            mousemove: !0,
            mouseover: !0,
            mouseout: !0,
            click: !0,
            doubleclick: !0
          }),
          (t.__init$ = function() {
            Object.defineProperty(
              laya.events.EventDispatcher.prototype,
              '_events',
              { enumerable: !1, writable: !0 }
            ),
              (e = (function(t) {
                function e(t, i, n, a) {
                  e.__super.call(this, t, i, n, a);
                }
                a(e, '', h);
                return (
                  (e.prototype.recover = function() {
                    this._id > 0 &&
                      ((this._id = 0), e._pool.push(this.clear()));
                  }),
                  (e.create = function(t, i, n, a) {
                    return (
                      void 0 === a && (a = !0),
                      e._pool.length
                        ? e._pool.pop().setTo(t, i, n, a)
                        : new e(t, i, n, a)
                    );
                  }),
                  (e._pool = []),
                  e
                );
              })());
          }),
          t
        );
      })(),
      h = (function() {
        function t(t, e, i, n) {
          (this.once = !1),
            (this._id = 0),
            void 0 === n && (n = !1),
            this.setTo(t, e, i, n);
        }
        a(t, 'laya.utils.Handler');
        var e = t.prototype;
        return (
          (e.setTo = function(e, i, n, a) {
            return (
              (this._id = t._gid++),
              (this.caller = e),
              (this.method = i),
              (this.args = n),
              (this.once = a),
              this
            );
          }),
          (e.run = function() {
            if (null == this.method) return null;
            var t = this._id,
              e = this.method.apply(this.caller, this.args);
            return this._id === t && this.once && this.recover(), e;
          }),
          (e.runWith = function(t) {
            if (null == this.method) return null;
            var e = this._id;
            if (null == t) var i = this.method.apply(this.caller, this.args);
            else
              i =
                this.args || t.unshift
                  ? this.args
                    ? this.method.apply(this.caller, this.args.concat(t))
                    : this.method.apply(this.caller, t)
                  : this.method.call(this.caller, t);
            return this._id === e && this.once && this.recover(), i;
          }),
          (e.clear = function() {
            return (
              (this.caller = null),
              (this.method = null),
              (this.args = null),
              this
            );
          }),
          (e.recover = function() {
            this._id > 0 && ((this._id = 0), t._pool.push(this.clear()));
          }),
          (t.create = function(e, i, n, a) {
            return (
              void 0 === a && (a = !0),
              t._pool.length
                ? t._pool.pop().setTo(e, i, n, a)
                : new t(e, i, n, a)
            );
          }),
          (t._pool = []),
          (t._gid = 1),
          t
        );
      })(),
      c = (function() {
        function t() {
          (this._texture = null),
            (this._fontCharDic = {}),
            (this._fontWidthMap = {}),
            (this._complete = null),
            (this._path = null),
            (this._maxWidth = 0),
            (this._spaceWidth = 10),
            (this._padding = null),
            (this.fontSize = 12),
            (this.autoScaleSize = !1),
            (this.letterSpacing = 0);
        }
        a(t, 'laya.display.BitmapFont');
        var e = t.prototype;
        return (
          (e.loadFont = function(t, e) {
            (this._path = t),
              (this._complete = e),
              i.loader.load(
                [
                  { url: this._path, type: 'xml' },
                  { url: this._path.replace('.fnt', '.png'), type: 'image' }
                ],
                h.create(this, this.onLoaded)
              );
          }),
          (e.onLoaded = function() {
            this.parseFont(
              st.getRes(this._path),
              st.getRes(this._path.replace('.fnt', '.png'))
            ),
              this._complete &&
                this._complete.runWith(this._texture ? this : null);
          }),
          (e.parseFont = function(t, e) {
            if (null != t && null != e) {
              this._texture = e;
              var i = t.getElementsByTagName('info');
              if (!i[0].getAttributeNode) return this.parseFont2(t, e);
              this.fontSize = parseInt(i[0].getAttributeNode('size').nodeValue);
              var n = i[0].getAttributeNode('padding').nodeValue.split(',');
              this._padding = [
                parseInt(n[0]),
                parseInt(n[1]),
                parseInt(n[2]),
                parseInt(n[3])
              ];
              var a;
              a = t.getElementsByTagName('char');
              var r = 0;
              for (r = 0; r < a.length; r++) {
                var s = a[r],
                  o = parseInt(s.getAttributeNode('id').nodeValue),
                  l = parseInt(s.getAttributeNode('xoffset').nodeValue) / 1,
                  h = parseInt(s.getAttributeNode('yoffset').nodeValue) / 1,
                  c = parseInt(s.getAttributeNode('xadvance').nodeValue) / 1,
                  u = new M();
                (u.x = parseInt(s.getAttributeNode('x').nodeValue)),
                  (u.y = parseInt(s.getAttributeNode('y').nodeValue)),
                  (u.width = parseInt(s.getAttributeNode('width').nodeValue)),
                  (u.height = parseInt(s.getAttributeNode('height').nodeValue));
                var _ = ct.create(e, u.x, u.y, u.width, u.height, l, h);
                (this._maxWidth = Math.max(
                  this._maxWidth,
                  c + this.letterSpacing
                )),
                  (this._fontCharDic[o] = _),
                  (this._fontWidthMap[o] = c);
              }
            }
          }),
          (e.parseFont2 = function(t, e) {
            if (null != t && null != e) {
              this._texture = e;
              var i = t.getElementsByTagName('info');
              this.fontSize = parseInt(i[0].attributes.size.nodeValue);
              var n = i[0].attributes.padding.nodeValue.split(',');
              this._padding = [
                parseInt(n[0]),
                parseInt(n[1]),
                parseInt(n[2]),
                parseInt(n[3])
              ];
              var a = t.getElementsByTagName('char'),
                r = 0;
              for (r = 0; r < a.length; r++) {
                var s = a[r].attributes,
                  o = parseInt(s.id.nodeValue),
                  l = parseInt(s.xoffset.nodeValue) / 1,
                  h = parseInt(s.yoffset.nodeValue) / 1,
                  c = parseInt(s.xadvance.nodeValue) / 1,
                  u = new M();
                (u.x = parseInt(s.x.nodeValue)),
                  (u.y = parseInt(s.y.nodeValue)),
                  (u.width = parseInt(s.width.nodeValue)),
                  (u.height = parseInt(s.height.nodeValue));
                var _ = ct.create(e, u.x, u.y, u.width, u.height, l, h);
                (this._maxWidth = Math.max(
                  this._maxWidth,
                  c + this.letterSpacing
                )),
                  (this._fontCharDic[o] = _),
                  (this._fontWidthMap[o] = c);
              }
            }
          }),
          (e.getCharTexture = function(t) {
            return this._fontCharDic[t.charCodeAt(0)];
          }),
          (e.destroy = function() {
            if (this._texture) {
              for (var t in this._fontCharDic) {
                var e = this._fontCharDic[t];
                e && e.destroy();
              }
              this._texture.destroy(),
                (this._fontCharDic = null),
                (this._fontWidthMap = null),
                (this._texture = null);
            }
          }),
          (e.setSpaceWidth = function(t) {
            this._spaceWidth = t;
          }),
          (e.getCharWidth = function(t) {
            var e = t.charCodeAt(0);
            return this._fontWidthMap[e]
              ? this._fontWidthMap[e] + this.letterSpacing
              : ' ' == t
              ? this._spaceWidth + this.letterSpacing
              : 0;
          }),
          (e.getTextWidth = function(t) {
            for (var e = 0, i = 0, n = t.length; i < n; i++)
              e += this.getCharWidth(t.charAt(i));
            return e;
          }),
          (e.getMaxWidth = function() {
            return this._maxWidth;
          }),
          (e.getMaxHeight = function() {
            return this.fontSize;
          }),
          (e.drawText = function(t, e, i, n, a, r) {
            var s,
              o = this.getTextWidth(t),
              l = 0;
            'center' === a && (l = (r - o) / 2), 'right' === a && (l = r - o);
            for (var h = 0, c = 0, u = t.length; c < u; c++)
              (s = this.getCharTexture(t.charAt(c))) &&
                (e.graphics.drawTexture(s, i + h + l, n),
                (h += this.getCharWidth(t.charAt(c))));
          }),
          t
        );
      })(),
      u = (function() {
        function t() {
          (this.alpha = 1),
            (this.visible = !0),
            (this.scrollRect = null),
            (this.blendMode = null),
            (this._type = 0),
            (this._tf = t._TF_EMPTY);
        }
        a(t, 'laya.display.css.Style');
        var e = t.prototype;
        return (
          (e.getTransform = function() {
            return this._tf;
          }),
          (e.setTransform = function(e) {
            this._tf = 'none' !== e && e ? e : t._TF_EMPTY;
          }),
          (e.setTranslateX = function(e) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.translateX = e);
          }),
          (e.setTranslateY = function(e) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.translateY = e);
          }),
          (e.setScaleX = function(e) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.scaleX = e);
          }),
          (e.setScale = function(e, i) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.scaleX = e),
              (this._tf.scaleY = i);
          }),
          (e.setScaleY = function(e) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.scaleY = e);
          }),
          (e.setRotate = function(e) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.rotate = e);
          }),
          (e.setSkewX = function(e) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.skewX = e);
          }),
          (e.setSkewY = function(e) {
            this._tf === t._TF_EMPTY && (this._tf = new d()),
              (this._tf.skewY = e);
          }),
          (e.destroy = function() {
            this.scrollRect = null;
          }),
          (e.render = function(t, e, i, n) {}),
          (e.getCSSStyle = function() {
            return tt.EMPTY;
          }),
          (e._enableLayout = function() {
            return !1;
          }),
          r(
            0,
            e,
            'scaleX',
            function() {
              return this._tf.scaleX;
            },
            function(t) {
              this.setScaleX(t);
            }
          ),
          r(
            0,
            e,
            'transform',
            function() {
              return this.getTransform();
            },
            function(t) {
              this.setTransform(t);
            }
          ),
          r(
            0,
            e,
            'translateX',
            function() {
              return this._tf.translateX;
            },
            function(t) {
              this.setTranslateX(t);
            }
          ),
          r(
            0,
            e,
            'translateY',
            function() {
              return this._tf.translateY;
            },
            function(t) {
              this.setTranslateY(t);
            }
          ),
          r(
            0,
            e,
            'scaleY',
            function() {
              return this._tf.scaleY;
            },
            function(t) {
              this.setScaleY(t);
            }
          ),
          r(0, e, 'block', function() {
            return 0 != (1 & this._type);
          }),
          r(
            0,
            e,
            'skewY',
            function() {
              return this._tf.skewY;
            },
            function(t) {
              this.setSkewY(t);
            }
          ),
          r(
            0,
            e,
            'rotate',
            function() {
              return this._tf.rotate;
            },
            function(t) {
              this.setRotate(t);
            }
          ),
          r(
            0,
            e,
            'skewX',
            function() {
              return this._tf.skewX;
            },
            function(t) {
              this.setSkewX(t);
            }
          ),
          r(0, e, 'paddingLeft', function() {
            return 0;
          }),
          r(0, e, 'paddingTop', function() {
            return 0;
          }),
          r(0, e, 'absolute', function() {
            return !0;
          }),
          (t.__init__ = function() {
            (t._TF_EMPTY = new d()), (t.EMPTY = new t());
          }),
          (t.EMPTY = null),
          (t._TF_EMPTY = null),
          t
        );
      })(),
      _ = (function() {
        function t(e) {
          (this._type = 0),
            (this._weight = 0),
            (this._decoration = null),
            (this._text = null),
            (this.indent = 0),
            (this._color = H.create(t.defaultColor)),
            (this.family = t.defaultFamily),
            (this.stroke = t._STROKE),
            (this.size = t.defaultSize),
            e && e !== t.EMPTY && e.copyTo(this);
        }
        a(t, 'laya.display.css.Font');
        var e = t.prototype;
        return (
          (e.set = function(t) {
            this._text = null;
            for (var e = t.split(' '), i = 0, n = e.length; i < n; i++) {
              var a = e[i];
              switch (a) {
                case 'italic':
                  this.italic = !0;
                  continue;
                case 'bold':
                  this.bold = !0;
                  continue;
              }
              a.indexOf('px') > 0 &&
                ((this.size = parseInt(a)), (this.family = e[i + 1]), i++);
            }
          }),
          (e.toString = function() {
            return (
              (this._text = ''),
              this.italic && (this._text += 'italic '),
              this.bold && (this._text += 'bold '),
              (this._text += this.size + 'px ' + this.family)
            );
          }),
          (e.copyTo = function(e) {
            (e._type = this._type),
              (e._text = this._text),
              (e._weight = this._weight),
              (e._color = this._color),
              (e.family = this.family),
              (e.stroke =
                this.stroke != t._STROKE ? this.stroke.slice() : t._STROKE),
              (e.indent = this.indent),
              (e.size = this.size);
          }),
          r(
            0,
            e,
            'password',
            function() {
              return 0 != (1024 & this._type);
            },
            function(t) {
              t ? (this._type |= 1024) : (this._type &= -1025);
            }
          ),
          r(
            0,
            e,
            'color',
            function() {
              return this._color.strColor;
            },
            function(t) {
              this._color = H.create(t);
            }
          ),
          r(
            0,
            e,
            'italic',
            function() {
              return 0 != (512 & this._type);
            },
            function(t) {
              t ? (this._type |= 512) : (this._type &= -513);
            }
          ),
          r(
            0,
            e,
            'bold',
            function() {
              return 0 != (2048 & this._type);
            },
            function(t) {
              t ? (this._type |= 2048) : (this._type &= -2049);
            }
          ),
          r(
            0,
            e,
            'weight',
            function() {
              return '' + this._weight;
            },
            function(t) {
              var e = 0;
              switch (t) {
                case 'normal':
                  break;
                case 'bold':
                  (this.bold = !0), (e = 700);
                  break;
                case 'bolder':
                  e = 800;
                  break;
                case 'lighter':
                  e = 100;
                  break;
                default:
                  e = parseInt(t);
              }
              (this._weight = e), (this._text = null);
            }
          ),
          r(
            0,
            e,
            'decoration',
            function() {
              return this._decoration ? this._decoration.value : 'none';
            },
            function(t) {
              var e = t.split(' ');
              switch ((this._decoration || (this._decoration = {}), e[0])) {
                case '_':
                  this._decoration.type = 'underline';
                  break;
                case '-':
                  this._decoration.type = 'line-through';
                  break;
                case 'overline':
                  this._decoration.type = 'overline';
                  break;
                default:
                  this._decoration.type = e[0];
              }
              e[1] && (this._decoration.color = H.create(e)),
                (this._decoration.value = t);
            }
          ),
          (t.__init__ = function() {
            t.EMPTY = new t(null);
          }),
          (t.EMPTY = null),
          (t.defaultColor = '#000000'),
          (t.defaultSize = 12),
          (t.defaultFamily = 'Arial'),
          (t.defaultFont = '12px Arial'),
          (t._STROKE = [0, '#000000']),
          (t._ITALIC = 512),
          (t._PASSWORD = 1024),
          (t._BOLD = 2048),
          t
        );
      })(),
      d = (function() {
        function t() {
          (this.translateX = 0),
            (this.translateY = 0),
            (this.scaleX = 1),
            (this.scaleY = 1),
            (this.rotate = 0),
            (this.skewX = 0),
            (this.skewY = 0);
        }
        return a(t, 'laya.display.css.TransformInfo'), t;
      })(),
      f = (function() {
        function e() {
          if (
            ((this._one = null),
            (this._cmds = null),
            (this._render = this._renderEmpty),
            N.isConchNode)
          ) {
            (this._nativeObj = new t._conchGraphics()),
              (this.id = this._nativeObj.conchID);
          }
        }
        a(e, 'laya.display.Graphics');
        var n = e.prototype;
        return (
          (n.destroy = function() {
            this.clear(),
              this._graphicBounds && this._graphicBounds.destroy(),
              (this._graphicBounds = null),
              (this._vectorgraphArray = null),
              this._sp && (this._sp._renderType = 0),
              (this._sp = null);
          }),
          (n.clear = function(t) {
            void 0 === t && (t = !1);
            var i = 0,
              n = 0;
            if (t) {
              var a = this._one;
              if (this._cmds) {
                for (n = this._cmds.length, i = 0; i < n; i++)
                  !(a = this._cmds[i]) ||
                    (a.callee !== N._context._drawTexture &&
                      a.callee !== N._context._drawTextureWithTransform) ||
                    ((a[0] = null), e._cache.push(a));
                this._cmds.length = 0;
              } else
                a &&
                  (!a ||
                    (a.callee !== N._context._drawTexture &&
                      a.callee !== N._context._drawTextureWithTransform) ||
                    ((a[0] = null), e._cache.push(a)));
            } else this._cmds = null;
            if (
              ((this._one = null),
              (this._render = this._renderEmpty),
              this._sp && (this._sp._renderType &= -514),
              this._repaint(),
              this._vectorgraphArray)
            ) {
              for (i = 0, n = this._vectorgraphArray.length; i < n; i++)
                K.getInstance().deleteShape(this._vectorgraphArray[i]);
              this._vectorgraphArray.length = 0;
            }
          }),
          (n._clearBoundsCache = function() {
            this._graphicBounds && this._graphicBounds.reset();
          }),
          (n._initGraphicBounds = function() {
            this._graphicBounds ||
              ((this._graphicBounds = new p()),
              (this._graphicBounds._graphics = this));
          }),
          (n._repaint = function() {
            this._clearBoundsCache(), this._sp && this._sp.repaint();
          }),
          (n._isOnlyOne = function() {
            return !this._cmds || 0 === this._cmds.length;
          }),
          (n.getBounds = function(t) {
            return (
              void 0 === t && (t = !1),
              this._initGraphicBounds(),
              this._graphicBounds.getBounds(t)
            );
          }),
          (n.getBoundPoints = function(t) {
            return (
              void 0 === t && (t = !1),
              this._initGraphicBounds(),
              this._graphicBounds.getBoundPoints(t)
            );
          }),
          (n._addCmd = function(t) {
            (this._cmds = this._cmds || []),
              (t.callee = t.shift()),
              this._cmds.push(t);
          }),
          (n.setFilters = function(t) {
            this._saveToCmd(N._context._setFilters, t);
          }),
          (n.drawTexture = function(t, i, n, a, r, s, o) {
            if (
              (void 0 === i && (i = 0),
              void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              void 0 === r && (r = 0),
              void 0 === o && (o = 1),
              !t || o < 0.01)
            )
              return null;
            a || (a = t.sourceWidth),
              r || (r = t.sourceHeight),
              (o = o < 0 ? 0 : o > 1 ? 1 : o);
            var l =
                !N.isWebGL && (O.onFirefox || O.onEdge || O.onIE || O.onSafari)
                  ? 0.5
                  : 0,
              h = a / t.sourceWidth,
              c = r / t.sourceHeight;
            if (
              ((a = t.width * h),
              (r = t.height * c),
              t.loaded && (a <= 0 || r <= 0))
            )
              return null;
            (i += t.offsetX * h),
              (n += t.offsetY * c),
              this._sp && (this._sp._renderType |= 512);
            var u;
            return (
              (i -= l),
              (n -= l),
              (a += 2 * l),
              (r += 2 * l),
              e._cache.length
                ? (((u = e._cache.pop())[0] = t),
                  (u[1] = i),
                  (u[2] = n),
                  (u[3] = a),
                  (u[4] = r),
                  (u[5] = s),
                  (u[6] = o))
                : (u = [t, i, n, a, r, s, o]),
              (u.callee =
                s || 1 != o
                  ? N._context._drawTextureWithTransform
                  : N._context._drawTexture),
              null != this._one || s || 1 != o
                ? this._saveToCmd(u.callee, u)
                : ((this._one = u), (this._render = this._renderOneImg)),
              t.loaded || t.once('loaded', this, this._textureLoaded, [t, u]),
              this._repaint(),
              u
            );
          }),
          (n.cleanByTexture = function(t, e, i, n, a) {
            if ((void 0 === n && (n = 0), void 0 === a && (a = 0), !t))
              return this.clear();
            if (this._one && this._render === this._renderOneImg) {
              n || (n = t.sourceWidth), a || (a = t.sourceHeight);
              var r = n / t.sourceWidth,
                s = a / t.sourceHeight;
              (n = t.width * r),
                (a = t.height * s),
                (e += t.offsetX * r),
                (i += t.offsetY * s),
                (this._one[0] = t),
                (this._one[1] = e),
                (this._one[2] = i),
                (this._one[3] = n),
                (this._one[4] = a),
                this._repaint();
            } else this.clear(), t && this.drawTexture(t, e, i, n, a);
          }),
          (n.drawTextures = function(t, e) {
            t && this._saveToCmd(N._context._drawTextures, [t, e]);
          }),
          (n.fillTexture = function(t, e, i, n, a, r, s) {
            if (
              (void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              void 0 === r && (r = 'repeat'),
              t)
            ) {
              var o = [t, e, i, n, a, r, s || T.EMPTY, {}];
              t.loaded || t.once('loaded', this, this._textureLoaded, [t, o]),
                this._saveToCmd(N._context._fillTexture, o);
            }
          }),
          (n._textureLoaded = function(t, e) {
            (e[3] = e[3] || t.width),
              (e[4] = e[4] || t.height),
              this._repaint();
          }),
          (n.fillCircle = function(t, e, i, n, a, r, s) {
            i.bitmap.enableMerageInAtlas = !1;
            var o = new Float32Array(2 * (s + 1)),
              l = new Float32Array(2 * (s + 1)),
              h = new Uint16Array(3 * s),
              c = (2 * Math.PI) / s,
              u = 0;
            (o[0] = n), (o[1] = a), (l[0] = n / i.width), (l[1] = a / i.height);
            for (var _ = 2, d = 0; d < s; d++) {
              var f = r * Math.cos(u) + n,
                p = r * Math.sin(u) + a;
              (o[_] = f),
                (o[_ + 1] = p),
                (l[_] = f / i.width),
                (l[_ + 1] = p / i.height),
                (u += c),
                (_ += 2);
            }
            for (_ = 0, d = 0; d < s; d++)
              (h[_++] = 0),
                (h[_++] = d + 1),
                (h[_++] = d + 2 >= s + 1 ? 1 : d + 2);
            this.drawTriangles(i, t, e, o, l, h);
          }),
          (n.drawTriangles = function(t, e, i, n, a, r, s, o, l, h) {
            void 0 === o && (o = 1),
              this._saveToCmd(N._context.drawTriangles, [
                t,
                e,
                i,
                n,
                a,
                r,
                s,
                o,
                l,
                h
              ]);
          }),
          (n._saveToCmd = function(t, e) {
            return (
              this._sp && (this._sp._renderType |= 512),
              null == this._one
                ? ((this._one = e), (this._render = this._renderOne))
                : (this._sp && (this._sp._renderType &= -2),
                  (this._render = this._renderAll),
                  0 === (this._cmds || (this._cmds = [])).length &&
                    this._cmds.push(this._one),
                  this._cmds.push(e)),
              (e.callee = t),
              this._repaint(),
              e
            );
          }),
          (n.clipRect = function(t, e, i, n) {
            this._saveToCmd(N._context._clipRect, [t, e, i, n]);
          }),
          (n.fillText = function(t, e, i, n, a, r, s) {
            void 0 === s && (s = 0),
              this._saveToCmd(N._context._fillText, [
                t,
                e,
                i,
                n || _.defaultFont,
                a,
                r
              ]);
          }),
          (n.fillBorderText = function(t, e, i, n, a, r, s, o) {
            this._saveToCmd(N._context._fillBorderText, [
              t,
              e,
              i,
              n || _.defaultFont,
              a,
              r,
              s,
              o
            ]);
          }),
          (n.strokeText = function(t, e, i, n, a, r, s) {
            this._saveToCmd(N._context._strokeText, [
              t,
              e,
              i,
              n || _.defaultFont,
              a,
              r,
              s
            ]);
          }),
          (n.alpha = function(t) {
            (t = t < 0 ? 0 : t > 1 ? 1 : t),
              this._saveToCmd(N._context._alpha, [t]);
          }),
          (n.setAlpha = function(t) {
            (t = t < 0 ? 0 : t > 1 ? 1 : t),
              this._saveToCmd(N._context._setAlpha, [t]);
          }),
          (n.transform = function(t, e, i) {
            void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              this._saveToCmd(N._context._transform, [t, e, i]);
          }),
          (n.rotate = function(t, e, i) {
            void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              this._saveToCmd(N._context._rotate, [t, e, i]);
          }),
          (n.scale = function(t, e, i, n) {
            void 0 === i && (i = 0),
              void 0 === n && (n = 0),
              this._saveToCmd(N._context._scale, [t, e, i, n]);
          }),
          (n.translate = function(t, e) {
            this._saveToCmd(N._context._translate, [t, e]);
          }),
          (n.save = function() {
            this._saveToCmd(N._context._save, []);
          }),
          (n.restore = function() {
            this._saveToCmd(N._context._restore, []);
          }),
          (n.replaceText = function(t) {
            this._repaint();
            var e = this._cmds;
            if (e) {
              for (var i = e.length - 1; i > -1; i--)
                if (this._isTextCmd(e[i].callee))
                  return (
                    e[i][0].toUpperCase ? (e[i][0] = t) : e[i][0].setText(t), !0
                  );
            } else if (this._one && this._isTextCmd(this._one.callee))
              return (
                this._one[0].toUpperCase
                  ? (this._one[0] = t)
                  : this._one[0].setText(t),
                !0
              );
            return !1;
          }),
          (n._isTextCmd = function(t) {
            return (
              t === N._context._fillText ||
              t === N._context._fillBorderText ||
              t === N._context._strokeText
            );
          }),
          (n.replaceTextColor = function(t) {
            this._repaint();
            var e = this._cmds;
            if (e)
              for (var i = e.length - 1; i > -1; i--)
                this._isTextCmd(e[i].callee) &&
                  ((e[i][4] = t),
                  e[i][0].toUpperCase || (e[i][0].changed = !0));
            else
              this._one &&
                this._isTextCmd(this._one.callee) &&
                ((this._one[4] = t),
                this._one[0].toUpperCase || (this._one[0].changed = !0));
          }),
          (n.loadImage = function(t, e, n, a, r, s) {
            function o(t) {
              t &&
                (l.drawTexture(t, e, n, a, r), null != s && s.call(l._sp, t));
            }
            var l = this;
            void 0 === e && (e = 0),
              void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              void 0 === r && (r = 0);
            var c = st.getRes(t);
            c ? o(c) : i.loader.load(t, h.create(null, o), null, 'image');
          }),
          (n._renderEmpty = function(t, e, i, n) {}),
          (n._renderAll = function(t, e, i, n) {
            for (var a, r = this._cmds, s = 0, o = r.length; s < o; s++)
              (a = r[s]).callee.call(e, i, n, a);
          }),
          (n._renderOne = function(t, e, i, n) {
            this._one.callee.call(e, i, n, this._one);
          }),
          (n._renderOneImg = function(t, e, i, n) {
            this._one.callee.call(e, i, n, this._one),
              2305 !== t._renderType && (t._renderType |= 1);
          }),
          (n.drawLine = function(t, e, i, n, a, r) {
            void 0 === r && (r = 1);
            var s = 0;
            N.isWebGL &&
              ((s = K.getInstance().getId()),
              null == this._vectorgraphArray && (this._vectorgraphArray = []),
              this._vectorgraphArray.push(s));
            var o = r % 2 == 0 ? 0 : 0.5,
              l = [t + o, e + o, i + o, n + o, a, r, s];
            this._saveToCmd(N._context._drawLine, l);
          }),
          (n.drawLines = function(t, e, i, n, a) {
            void 0 === a && (a = 1);
            var r = 0;
            if (i && !(i.length < 4)) {
              N.isWebGL &&
                ((r = K.getInstance().getId()),
                null == this._vectorgraphArray && (this._vectorgraphArray = []),
                this._vectorgraphArray.push(r));
              var s = a % 2 == 0 ? 0 : 0.5,
                o = [t + s, e + s, i, n, a, r];
              this._saveToCmd(N._context._drawLines, o);
            }
          }),
          (n.drawCurves = function(t, e, i, n, a) {
            void 0 === a && (a = 1);
            var r = [t, e, i, n, a];
            this._saveToCmd(N._context._drawCurves, r);
          }),
          (n.drawRect = function(t, e, i, n, a, r, s) {
            void 0 === s && (s = 1);
            var o = r ? s / 2 : 0,
              l = r ? s : 0,
              h = [t + o, e + o, i - l, n - l, a, r, s];
            this._saveToCmd(N._context._drawRect, h);
          }),
          (n.drawCircle = function(t, e, i, n, a, r) {
            void 0 === r && (r = 1);
            var s = a ? r / 2 : 0,
              o = 0;
            N.isWebGL &&
              ((o = K.getInstance().getId()),
              null == this._vectorgraphArray && (this._vectorgraphArray = []),
              this._vectorgraphArray.push(o));
            var l = [t, e, i - s, n, a, r, o];
            this._saveToCmd(N._context._drawCircle, l);
          }),
          (n.drawPie = function(t, e, i, n, a, r, s, o) {
            void 0 === o && (o = 1);
            var l = s ? o / 2 : 0,
              h = s ? o : 0,
              c = 0;
            N.isWebGL &&
              ((c = K.getInstance().getId()),
              null == this._vectorgraphArray && (this._vectorgraphArray = []),
              this._vectorgraphArray.push(c));
            var u = [t + l, e + l, i - h, n, a, r, s, o, c];
            (u[3] = J.toRadian(n)),
              (u[4] = J.toRadian(a)),
              this._saveToCmd(N._context._drawPie, u);
          }),
          (n.drawPoly = function(t, e, i, n, a, r) {
            void 0 === r && (r = 1);
            var s = 0,
              o = !1;
            N.isWebGL &&
              ((s = K.getInstance().getId()),
              null == this._vectorgraphArray && (this._vectorgraphArray = []),
              this._vectorgraphArray.push(s),
              (o = !(i.length > 6)));
            var l = a ? (r % 2 == 0 ? 0 : 0.5) : 0,
              h = [t + l, e + l, i, n, a, r, s, o];
            this._saveToCmd(N._context._drawPoly, h);
          }),
          (n.drawPath = function(t, e, i, n, a) {
            var r = [t, e, i, n, a];
            this._saveToCmd(N._context._drawPath, r);
          }),
          r(
            0,
            n,
            'cmds',
            function() {
              return this._cmds;
            },
            function(t) {
              this._sp && (this._sp._renderType |= 512),
                (this._cmds = t),
                (this._render = this._renderAll),
                this._repaint();
            }
          ),
          (e.__init__ = function() {
            if (N.isConchNode) {
              for (
                var t = laya.display.Graphics.prototype,
                  e = O.window.ConchGraphics.prototype,
                  i = [
                    'clear',
                    'destroy',
                    'alpha',
                    'rotate',
                    'transform',
                    'scale',
                    'translate',
                    'save',
                    'restore',
                    'clipRect',
                    'blendMode',
                    'fillText',
                    'fillBorderText',
                    '_fands',
                    'drawRect',
                    'drawCircle',
                    'drawPie',
                    'drawPoly',
                    'drawPath',
                    'drawImageM',
                    'drawLine',
                    'drawLines',
                    '_drawPs',
                    'drawCurves',
                    'replaceText',
                    'replaceTextColor',
                    '_fillImage',
                    'fillTexture',
                    'setSkinMesh',
                    'drawParticle',
                    'drawImageS'
                  ],
                  n = 0,
                  a = i.length;
                n <= a;
                n++
              ) {
                var r = i[n];
                t[r] = e[r];
              }
              (t._saveToCmd = null),
                e.drawImageS &&
                  (t.drawTextures = function(t, e) {
                    if (t && t.loaded && t.bitmap && t.source) {
                      var i = t.uv,
                        n = t.bitmap.width,
                        a = t.bitmap.height;
                      this.drawImageS(
                        t.bitmap.source,
                        i[0] * n,
                        i[1] * a,
                        (i[2] - i[0]) * n,
                        (i[5] - i[3]) * a,
                        t.offsetX,
                        t.offsetY,
                        t.width,
                        t.height,
                        e
                      );
                    }
                  }),
                (t.drawTexture = function(t, e, i, n, a, r, s) {
                  if (
                    (void 0 === e && (e = 0),
                    void 0 === i && (i = 0),
                    void 0 === n && (n = 0),
                    void 0 === a && (a = 0),
                    void 0 === s && (s = 1),
                    t)
                  )
                    if (t.loaded) {
                      if (
                        t.loaded &&
                        t.bitmap &&
                        t.source &&
                        (n || (n = t.sourceWidth),
                        a || (a = t.sourceHeight),
                        (s = s < 0 ? 0 : s > 1 ? 1 : s),
                        (n = n - t.sourceWidth + t.width),
                        (a = a - t.sourceHeight + t.height),
                        !(n <= 0 || a <= 0))
                      ) {
                        (e += t.offsetX), (i += t.offsetY);
                        var o = t.uv,
                          l = t.bitmap.width,
                          h = t.bitmap.height;
                        this.drawImageM(
                          t.bitmap.source,
                          o[0] * l,
                          o[1] * h,
                          (o[2] - o[0]) * l,
                          (o[5] - o[3]) * h,
                          e,
                          i,
                          n,
                          a,
                          r,
                          s
                        ),
                          this._repaint();
                      }
                    } else
                      t.once('loaded', this, function() {
                        this.drawTexture(t, e, i, n, a, r);
                      });
                }),
                (t.fillTexture = function(t, e, i, n, a, r, s) {
                  if (
                    (void 0 === n && (n = 0),
                    void 0 === a && (a = 0),
                    void 0 === r && (r = 'repeat'),
                    t && t.loaded)
                  ) {
                    var o,
                      l = N._context.ctx,
                      h = t.bitmap.width,
                      c = t.bitmap.height,
                      u = t.uv;
                    o =
                      t.uv != ct.DEF_UV
                        ? l.createPattern(
                            t.bitmap.source,
                            r,
                            u[0] * h,
                            u[1] * c,
                            (u[2] - u[0]) * h,
                            (u[5] - u[3]) * c
                          )
                        : l.createPattern(t.bitmap.source, r);
                    var _ = 0,
                      d = 0;
                    s &&
                      ((e += s.x % t.width),
                      (i += s.y % t.height),
                      (_ -= s.x % t.width),
                      (d -= s.y % t.height)),
                      this._fillImage(o, e, i, _, d, n, a);
                  }
                });
            }
          }),
          (e._cache = []),
          e
        );
      })(),
      p = (function() {
        function t() {
          this._cacheBoundsType = !1;
        }
        a(t, 'laya.display.GraphicsBounds');
        var e = t.prototype;
        return (
          (e.destroy = function() {
            (this._graphics = null),
              (this._temp = null),
              (this._rstBoundPoints = null),
              (this._bounds = null);
          }),
          (e.reset = function() {
            this._temp && (this._temp.length = 0);
          }),
          (e.getBounds = function(t) {
            return (
              void 0 === t && (t = !1),
              (!this._bounds ||
                !this._temp ||
                this._temp.length < 1 ||
                t != this._cacheBoundsType) &&
                (this._bounds = M._getWrapRec(
                  this.getBoundPoints(t),
                  this._bounds
                )),
              (this._cacheBoundsType = t),
              this._bounds
            );
          }),
          (e.getBoundPoints = function(t) {
            return (
              void 0 === t && (t = !1),
              (!this._temp ||
                this._temp.length < 1 ||
                t != this._cacheBoundsType) &&
                (this._temp = this._getCmdPoints(t)),
              (this._cacheBoundsType = t),
              (this._rstBoundPoints = J.copyArray(
                this._rstBoundPoints,
                this._temp
              ))
            );
          }),
          (e._getCmdPoints = function(e) {
            void 0 === e && (e = !1);
            var i,
              n = N._context,
              a = this._graphics.cmds;
            if (
              ((i = this._temp || (this._temp = [])),
              (i.length = 0),
              a ||
                null == this._graphics._one ||
                ((t._tempCmds.length = 0),
                t._tempCmds.push(this._graphics._one),
                (a = t._tempCmds)),
              !a)
            )
              return i;
            var r;
            (r = t._tempMatrixArrays).length = 0;
            var s = t._initMatrix;
            s.identity();
            for (
              var o,
                l,
                h = t._tempMatrix,
                c = NaN,
                u = NaN,
                _ = NaN,
                d = NaN,
                f = NaN,
                p = NaN,
                m = 0,
                g = a.length;
              m < g;
              m++
            )
              if ((o = a[m]).callee)
                switch (o.callee) {
                  case n._save:
                  case 7:
                    r.push(s), (s = s.clone());
                    break;
                  case n._restore:
                  case 8:
                    s = r.pop();
                    break;
                  case n._scale:
                  case 5:
                    h.identity(),
                      h.translate(-o[2], -o[3]),
                      h.scale(o[0], o[1]),
                      h.translate(o[2], o[3]),
                      this._switchMatrix(s, h);
                    break;
                  case n._rotate:
                  case 3:
                    h.identity(),
                      h.translate(-o[1], -o[2]),
                      h.rotate(o[0]),
                      h.translate(o[1], o[2]),
                      this._switchMatrix(s, h);
                    break;
                  case n._translate:
                  case 6:
                    h.identity(),
                      h.translate(o[0], o[1]),
                      this._switchMatrix(s, h);
                    break;
                  case n._transform:
                  case 4:
                    h.identity(),
                      h.translate(-o[1], -o[2]),
                      h.concat(o[0]),
                      h.translate(o[1], o[2]),
                      this._switchMatrix(s, h);
                    break;
                  case 16:
                  case 24:
                    t._addPointArrToRst(
                      i,
                      M._getBoundPointS(o[0], o[1], o[2], o[3]),
                      s
                    );
                    break;
                  case 17:
                    s.copyTo(h),
                      h.concat(o[4]),
                      t._addPointArrToRst(
                        i,
                        M._getBoundPointS(o[0], o[1], o[2], o[3]),
                        h
                      );
                    break;
                  case n._drawTexture:
                    (l = o[0]),
                      e
                        ? o[3] && o[4]
                          ? t._addPointArrToRst(
                              i,
                              M._getBoundPointS(o[1], o[2], o[3], o[4]),
                              s
                            )
                          : ((l = o[0]),
                            t._addPointArrToRst(
                              i,
                              M._getBoundPointS(o[1], o[2], l.width, l.height),
                              s
                            ))
                        : ((c = (o[3] || l.sourceWidth) / l.width),
                          (u = (o[4] || l.sourceHeight) / l.height),
                          (_ = c * l.sourceWidth),
                          (d = u * l.sourceHeight),
                          (f = l.offsetX > 0 ? l.offsetX : 0),
                          (p = l.offsetY > 0 ? l.offsetY : 0),
                          (f *= c),
                          (p *= u),
                          t._addPointArrToRst(
                            i,
                            M._getBoundPointS(o[1] - f, o[2] - p, _, d),
                            s
                          ));
                    break;
                  case n._fillTexture:
                    o[3] && o[4]
                      ? t._addPointArrToRst(
                          i,
                          M._getBoundPointS(o[1], o[2], o[3], o[4]),
                          s
                        )
                      : ((l = o[0]),
                        t._addPointArrToRst(
                          i,
                          M._getBoundPointS(o[1], o[2], l.width, l.height),
                          s
                        ));
                    break;
                  case n._drawTextureWithTransform:
                    var y;
                    o[5] ? (s.copyTo(h), h.concat(o[5]), (y = h)) : (y = s),
                      e
                        ? o[3] && o[4]
                          ? t._addPointArrToRst(
                              i,
                              M._getBoundPointS(o[1], o[2], o[3], o[4]),
                              y
                            )
                          : ((l = o[0]),
                            t._addPointArrToRst(
                              i,
                              M._getBoundPointS(o[1], o[2], l.width, l.height),
                              y
                            ))
                        : ((l = o[0]),
                          (c = (o[3] || l.sourceWidth) / l.width),
                          (u = (o[4] || l.sourceHeight) / l.height),
                          (_ = c * l.sourceWidth),
                          (d = u * l.sourceHeight),
                          (f = l.offsetX > 0 ? l.offsetX : 0),
                          (p = l.offsetY > 0 ? l.offsetY : 0),
                          (f *= c),
                          (p *= u),
                          t._addPointArrToRst(
                            i,
                            M._getBoundPointS(o[1] - f, o[2] - p, _, d),
                            y
                          ));
                    break;
                  case n._drawRect:
                  case 13:
                    t._addPointArrToRst(
                      i,
                      M._getBoundPointS(o[0], o[1], o[2], o[3]),
                      s
                    );
                    break;
                  case n._drawCircle:
                  case n._fillCircle:
                  case 14:
                    t._addPointArrToRst(
                      i,
                      M._getBoundPointS(
                        o[0] - o[2],
                        o[1] - o[2],
                        o[2] + o[2],
                        o[2] + o[2]
                      ),
                      s
                    );
                    break;
                  case n._drawLine:
                  case 20:
                    t._tempPoints.length = 0;
                    var v = NaN;
                    (v = 0.5 * o[5]),
                      o[0] == o[2]
                        ? t._tempPoints.push(
                            o[0] + v,
                            o[1],
                            o[2] + v,
                            o[3],
                            o[0] - v,
                            o[1],
                            o[2] - v,
                            o[3]
                          )
                        : o[1] == o[3]
                        ? t._tempPoints.push(
                            o[0],
                            o[1] + v,
                            o[2],
                            o[3] + v,
                            o[0],
                            o[1] - v,
                            o[2],
                            o[3] - v
                          )
                        : t._tempPoints.push(o[0], o[1], o[2], o[3]),
                      t._addPointArrToRst(i, t._tempPoints, s);
                    break;
                  case n._drawCurves:
                  case 22:
                    t._addPointArrToRst(
                      i,
                      x.I.getBezierPoints(o[2]),
                      s,
                      o[0],
                      o[1]
                    );
                    break;
                  case n._drawPoly:
                  case n._drawLines:
                  case 18:
                    t._addPointArrToRst(i, o[2], s, o[0], o[1]);
                    break;
                  case n._drawPath:
                  case 19:
                    t._addPointArrToRst(
                      i,
                      this._getPathPoints(o[2]),
                      s,
                      o[0],
                      o[1]
                    );
                    break;
                  case n._drawPie:
                  case 15:
                    t._addPointArrToRst(
                      i,
                      this._getPiePoints(o[0], o[1], o[2], o[3], o[4]),
                      s
                    );
                }
            return (
              i.length > 200
                ? (i = J.copyArray(i, M._getWrapRec(i)._getBoundPoints()))
                : i.length > 8 && (i = I.scanPList(i)),
              i
            );
          }),
          (e._switchMatrix = function(t, e) {
            e.concat(t), e.copyTo(t);
          }),
          (e._getPiePoints = function(e, i, n, a, r) {
            var s = t._tempPoints;
            (t._tempPoints.length = 0), s.push(e, i);
            var o = ((r - a) % (2 * Math.PI)) / 10,
              l = NaN,
              h = a;
            for (l = 0; l <= 10; l++)
              s.push(e + n * Math.cos(h), i + n * Math.sin(h)), (h += o);
            return s;
          }),
          (e._getPathPoints = function(e) {
            var i = 0,
              n = 0,
              a = t._tempPoints;
            (a.length = 0), (n = e.length);
            var r;
            for (i = 0; i < n; i++)
              (r = e[i]).length > 1 &&
                (a.push(r[1], r[2]), r.length > 3 && a.push(r[3], r[4]));
            return a;
          }),
          (t._addPointArrToRst = function(e, i, n, a, r) {
            void 0 === a && (a = 0), void 0 === r && (r = 0);
            var s = 0,
              o = 0;
            for (o = i.length, s = 0; s < o; s += 2)
              t._addPointToRst(e, i[s] + a, i[s + 1] + r, n);
          }),
          (t._addPointToRst = function(t, e, i, n) {
            var a = T.TEMP;
            a.setTo(e || 0, i || 0), n.transformPoint(a), t.push(a.x, a.y);
          }),
          (t._tempPoints = []),
          (t._tempMatrixArrays = []),
          (t._tempCmds = []),
          n(t, [
            '_tempMatrix',
            function() {
              return (this._tempMatrix = new S());
            },
            '_initMatrix',
            function() {
              return (this._initMatrix = new S());
            }
          ]),
          t
        );
      })(),
      m = (function() {
        function t() {}
        a(t, 'laya.events.Event');
        var e = t.prototype;
        return (
          (e.setTo = function(t, e, i) {
            return (
              (this.type = t), (this.currentTarget = e), (this.target = i), this
            );
          }),
          (e.stopPropagation = function() {
            this._stoped = !0;
          }),
          r(0, e, 'stageY', function() {
            return i.stage.mouseY;
          }),
          r(0, e, 'charCode', function() {
            return this.nativeEvent.charCode;
          }),
          r(0, e, 'touches', function() {
            var t = this.nativeEvent.touches;
            if (t)
              for (var e = i.stage, n = 0, a = t.length; n < a; n++) {
                var r = t[n],
                  s = T.TEMP;
                s.setTo(r.clientX, r.clientY),
                  e._canvasTransform.invertTransformPoint(s),
                  e.transform.invertTransformPoint(s),
                  (r.stageX = s.x),
                  (r.stageY = s.y);
              }
            return t;
          }),
          r(0, e, 'keyLocation', function() {
            return this.nativeEvent.keyLocation;
          }),
          r(0, e, 'ctrlKey', function() {
            return this.nativeEvent.ctrlKey;
          }),
          r(0, e, 'altKey', function() {
            return this.nativeEvent.altKey;
          }),
          r(0, e, 'shiftKey', function() {
            return this.nativeEvent.shiftKey;
          }),
          r(0, e, 'stageX', function() {
            return i.stage.mouseX;
          }),
          (t.EMPTY = new t()),
          (t.MOUSE_DOWN = 'mousedown'),
          (t.MOUSE_UP = 'mouseup'),
          (t.CLICK = 'click'),
          (t.RIGHT_MOUSE_DOWN = 'rightmousedown'),
          (t.RIGHT_MOUSE_UP = 'rightmouseup'),
          (t.RIGHT_CLICK = 'rightclick'),
          (t.MOUSE_MOVE = 'mousemove'),
          (t.MOUSE_OVER = 'mouseover'),
          (t.MOUSE_OUT = 'mouseout'),
          (t.MOUSE_WHEEL = 'mousewheel'),
          (t.ROLL_OVER = 'mouseover'),
          (t.ROLL_OUT = 'mouseout'),
          (t.DOUBLE_CLICK = 'doubleclick'),
          (t.CHANGE = 'change'),
          (t.CHANGED = 'changed'),
          (t.RESIZE = 'resize'),
          (t.ADDED = 'added'),
          (t.REMOVED = 'removed'),
          (t.DISPLAY = 'display'),
          (t.UNDISPLAY = 'undisplay'),
          (t.ERROR = 'error'),
          (t.COMPLETE = 'complete'),
          (t.LOADED = 'loaded'),
          (t.PROGRESS = 'progress'),
          (t.INPUT = 'input'),
          (t.RENDER = 'render'),
          (t.OPEN = 'open'),
          (t.MESSAGE = 'message'),
          (t.CLOSE = 'close'),
          (t.KEY_DOWN = 'keydown'),
          (t.KEY_PRESS = 'keypress'),
          (t.KEY_UP = 'keyup'),
          (t.FRAME = 'enterframe'),
          (t.DRAG_START = 'dragstart'),
          (t.DRAG_MOVE = 'dragmove'),
          (t.DRAG_END = 'dragend'),
          (t.ENTER = 'enter'),
          (t.SELECT = 'select'),
          (t.BLUR = 'blur'),
          (t.FOCUS = 'focus'),
          (t.VISIBILITY_CHANGE = 'visibilitychange'),
          (t.FOCUS_CHANGE = 'focuschange'),
          (t.PLAYED = 'played'),
          (t.PAUSED = 'paused'),
          (t.STOPPED = 'stopped'),
          (t.START = 'start'),
          (t.END = 'end'),
          (t.ENABLE_CHANGED = 'enablechanged'),
          (t.ACTIVE_IN_HIERARCHY_CHANGED = 'activeinhierarchychanged'),
          (t.COMPONENT_ADDED = 'componentadded'),
          (t.COMPONENT_REMOVED = 'componentremoved'),
          (t.LAYER_CHANGED = 'layerchanged'),
          (t.HIERARCHY_LOADED = 'hierarchyloaded'),
          (t.RECOVERED = 'recovered'),
          (t.RELEASED = 'released'),
          (t.LINK = 'link'),
          (t.LABEL = 'label'),
          (t.FULL_SCREEN_CHANGE = 'fullscreenchange'),
          (t.DEVICE_LOST = 'devicelost'),
          (t.MESH_CHANGED = 'meshchanged'),
          (t.MATERIAL_CHANGED = 'materialchanged'),
          (t.WORLDMATRIX_NEEDCHANGE = 'worldmatrixneedchanged'),
          (t.ANIMATION_CHANGED = 'animationchanged'),
          (t.TRIGGER_ENTER = 'triggerenter'),
          (t.TRIGGER_STAY = 'triggerstay'),
          (t.TRIGGER_EXIT = 'triggerexit'),
          (t.TRAIL_FILTER_CHANGE = 'trailfilterchange'),
          (t.DOMINO_FILTER_CHANGE = 'dominofilterchange'),
          t
        );
      })(),
      g =
        ((function() {
          function t() {}
          a(t, 'laya.events.Keyboard'),
            (t.NUMBER_0 = 48),
            (t.NUMBER_1 = 49),
            (t.NUMBER_2 = 50),
            (t.NUMBER_3 = 51),
            (t.NUMBER_4 = 52),
            (t.NUMBER_5 = 53),
            (t.NUMBER_6 = 54),
            (t.NUMBER_7 = 55),
            (t.NUMBER_8 = 56),
            (t.NUMBER_9 = 57),
            (t.A = 65),
            (t.B = 66),
            (t.C = 67),
            (t.D = 68),
            (t.E = 69),
            (t.F = 70),
            (t.G = 71),
            (t.H = 72),
            (t.I = 73),
            (t.J = 74),
            (t.K = 75),
            (t.L = 76),
            (t.M = 77),
            (t.N = 78),
            (t.O = 79),
            (t.P = 80),
            (t.Q = 81),
            (t.R = 82),
            (t.S = 83),
            (t.T = 84),
            (t.U = 85),
            (t.V = 86),
            (t.W = 87),
            (t.X = 88),
            (t.Y = 89),
            (t.Z = 90),
            (t.F1 = 112),
            (t.F2 = 113),
            (t.F3 = 114),
            (t.F4 = 115),
            (t.F5 = 116),
            (t.F6 = 117),
            (t.F7 = 118),
            (t.F8 = 119),
            (t.F9 = 120),
            (t.F10 = 121),
            (t.F11 = 122),
            (t.F12 = 123),
            (t.F13 = 124),
            (t.F14 = 125),
            (t.F15 = 126),
            (t.NUMPAD = 21),
            (t.NUMPAD_0 = 96),
            (t.NUMPAD_1 = 97),
            (t.NUMPAD_2 = 98),
            (t.NUMPAD_3 = 99),
            (t.NUMPAD_4 = 100),
            (t.NUMPAD_5 = 101),
            (t.NUMPAD_6 = 102),
            (t.NUMPAD_7 = 103),
            (t.NUMPAD_8 = 104),
            (t.NUMPAD_9 = 105),
            (t.NUMPAD_ADD = 107),
            (t.NUMPAD_DECIMAL = 110),
            (t.NUMPAD_DIVIDE = 111),
            (t.NUMPAD_ENTER = 108),
            (t.NUMPAD_MULTIPLY = 106),
            (t.NUMPAD_SUBTRACT = 109),
            (t.SEMICOLON = 186),
            (t.EQUAL = 187),
            (t.COMMA = 188),
            (t.MINUS = 189),
            (t.PERIOD = 190),
            (t.SLASH = 191),
            (t.BACKQUOTE = 192),
            (t.LEFTBRACKET = 219),
            (t.BACKSLASH = 220),
            (t.RIGHTBRACKET = 221),
            (t.QUOTE = 222),
            (t.ALTERNATE = 18),
            (t.BACKSPACE = 8),
            (t.CAPS_LOCK = 20),
            (t.COMMAND = 15),
            (t.CONTROL = 17),
            (t.DELETE = 46),
            (t.ENTER = 13),
            (t.ESCAPE = 27),
            (t.PAGE_UP = 33),
            (t.PAGE_DOWN = 34),
            (t.END = 35),
            (t.HOME = 36),
            (t.LEFT = 37),
            (t.UP = 38),
            (t.RIGHT = 39),
            (t.DOWN = 40),
            (t.SHIFT = 16),
            (t.SPACE = 32),
            (t.TAB = 9),
            (t.INSERT = 45);
        })(),
        (function() {
          function t() {}
          return (
            a(t, 'laya.events.KeyBoardManager'),
            (t.__init__ = function() {
              t._addEvent('keydown'),
                t._addEvent('keypress'),
                t._addEvent('keyup');
            }),
            (t._addEvent = function(t) {
              O.document.addEventListener(
                t,
                function(e) {
                  laya.events.KeyBoardManager._dispatch(e, t);
                },
                !0
              );
            }),
            (t._dispatch = function(e, n) {
              if (t.enabled) {
                (t._event._stoped = !1),
                  (t._event.nativeEvent = e),
                  (t._event.keyCode = e.keyCode || e.which || e.charCode),
                  'keydown' === n
                    ? (t._pressKeys[t._event.keyCode] = !0)
                    : 'keyup' === n && (t._pressKeys[t._event.keyCode] = null);
                for (
                  var a =
                      i.stage.focus &&
                      null != i.stage.focus.event &&
                      i.stage.focus.displayedInStage
                        ? i.stage.focus
                        : i.stage,
                    r = a;
                  r;

                )
                  r.event(n, t._event.setTo(n, r, a)), (r = r.parent);
              }
            }),
            (t.hasKeyDown = function(e) {
              return t._pressKeys[e];
            }),
            (t._pressKeys = {}),
            (t.enabled = !0),
            n(t, [
              '_event',
              function() {
                return (this._event = new m());
              }
            ]),
            t
          );
        })()),
      y =
        ((function() {
          function t() {}
          a(t, 'laya.events.KeyLocation'),
            (t.STANDARD = 0),
            (t.LEFT = 1),
            (t.RIGHT = 2),
            (t.NUM_PAD = 3);
        })(),
        (function() {
          function t() {
            (this.mouseX = 0),
              (this.mouseY = 0),
              (this.disableMouseEvent = !1),
              (this.mouseDownTime = 0),
              (this.mouseMoveAccuracy = 2),
              (this._stage = null),
              (this._target = null),
              (this._lastMoveTimer = 0),
              (this._isLeftMouse = !1),
              (this._eventList = []),
              (this._touchIDs = {}),
              (this._id = 1),
              (this._tTouchID = 0),
              (this._event = new m()),
              (this._matrix = new S()),
              (this._point = new T()),
              (this._rect = new M()),
              (this._prePoint = new T()),
              (this._curTouchID = NaN);
          }
          a(t, 'laya.events.MouseManager');
          var e = t.prototype;
          return (
            (e.__init__ = function(e, i) {
              var n = this;
              this._stage = e;
              var a = this,
                r = this._eventList;
              (i.oncontextmenu = function(e) {
                if (t.enabled) return !1;
              }),
                i.addEventListener('mousedown', function(e) {
                  t.enabled &&
                    (O.onIE || e.preventDefault(),
                    r.push(e),
                    (a.mouseDownTime = O.now()));
                }),
                i.addEventListener(
                  'mouseup',
                  function(e) {
                    t.enabled &&
                      (e.preventDefault(),
                      r.push(e),
                      (a.mouseDownTime = -O.now()));
                  },
                  !0
                ),
                i.addEventListener(
                  'mousemove',
                  function(e) {
                    if (t.enabled) {
                      e.preventDefault();
                      var i = O.now();
                      if (i - a._lastMoveTimer < 10) return;
                      (a._lastMoveTimer = i), r.push(e);
                    }
                  },
                  !0
                ),
                i.addEventListener('mouseout', function(e) {
                  t.enabled && r.push(e);
                }),
                i.addEventListener('mouseover', function(e) {
                  t.enabled && r.push(e);
                }),
                i.addEventListener('touchstart', function(e) {
                  t.enabled &&
                    (r.push(e),
                    t._isFirstTouch || xt.isInputting || e.preventDefault(),
                    (a.mouseDownTime = O.now()));
                }),
                i.addEventListener(
                  'touchend',
                  function(e) {
                    t.enabled
                      ? (t._isFirstTouch ||
                          xt.isInputting ||
                          e.preventDefault(),
                        (t._isFirstTouch = !1),
                        r.push(e),
                        (a.mouseDownTime = -O.now()))
                      : (n._curTouchID = NaN);
                  },
                  !0
                ),
                i.addEventListener(
                  'touchmove',
                  function(e) {
                    t.enabled && (e.preventDefault(), r.push(e));
                  },
                  !0
                ),
                i.addEventListener(
                  'touchcancel',
                  function(e) {
                    t.enabled
                      ? (e.preventDefault(), r.push(e))
                      : (n._curTouchID = NaN);
                  },
                  !0
                ),
                i.addEventListener('mousewheel', function(e) {
                  t.enabled && r.push(e);
                }),
                i.addEventListener('DOMMouseScroll', function(e) {
                  t.enabled && r.push(e);
                });
            }),
            (e.initEvent = function(t, e) {
              (this._event._stoped = !1),
                (this._event.nativeEvent = e || t),
                (this._target = null),
                this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY),
                this._stage._canvasTransform.invertTransformPoint(this._point),
                (this.mouseX = this._point.x),
                (this.mouseY = this._point.y),
                (this._event.touchId = t.identifier || 0),
                (this._tTouchID = this._event.touchId);
              var i;
              ((i = v.I._event)._stoped = !1),
                (i.nativeEvent = this._event.nativeEvent),
                (i.touchId = this._event.touchId);
            }),
            (e.checkMouseWheel = function(t) {
              this._event.delta = t.wheelDelta
                ? 0.025 * t.wheelDelta
                : -t.detail;
              for (
                var e = v.I.getLastOvers(), i = 0, n = e.length;
                i < n;
                i++
              ) {
                var a = e[i];
                a.event(
                  'mousewheel',
                  this._event.setTo('mousewheel', a, this._target)
                );
              }
            }),
            (e.onMouseMove = function(t) {
              v.I.onMouseMove(t, this._tTouchID);
            }),
            (e.onMouseDown = function(t) {
              if (
                xt.isInputting &&
                i.stage.focus &&
                i.stage.focus.focus &&
                !i.stage.focus.contains(this._target)
              ) {
                var e = i.stage.focus._tf || i.stage.focus,
                  n = t._tf || t;
                n instanceof laya.display.Input && n.multiline == e.multiline
                  ? e._focusOut()
                  : (e.focus = !1);
              }
              v.I.onMouseDown(t, this._tTouchID, this._isLeftMouse);
            }),
            (e.onMouseUp = function(t) {
              v.I.onMouseUp(t, this._tTouchID, this._isLeftMouse);
            }),
            (e.check = function(t, e, i, n) {
              this._point.setTo(e, i),
                t.fromParentPoint(this._point),
                (e = this._point.x),
                (i = this._point.y);
              var a = t.scrollRect;
              if (
                a &&
                (this._rect.setTo(a.x, a.y, a.width, a.height),
                !this._rect.contains(e, i))
              )
                return !1;
              if (!this.disableMouseEvent) {
                if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i))
                  return !1;
                for (var r = t._childs.length - 1; r > -1; r--) {
                  var s = t._childs[r];
                  if (
                    !s.destroyed &&
                    s.mouseEnabled &&
                    s.visible &&
                    this.check(s, e, i, n)
                  )
                    return !0;
                }
              }
              var o =
                !(
                  !t.hitTestPrior ||
                  t.mouseThrough ||
                  this.disableMouseEvent
                ) || this.hitTest(t, e, i);
              return (
                o
                  ? ((this._target = t), n.call(this, t))
                  : n === this.onMouseUp &&
                    t === this._stage &&
                    ((this._target = this._stage), n.call(this, this._target)),
                o
              );
            }),
            (e.hitTest = function(t, e, i) {
              var n = !1;
              if (
                (t.scrollRect && ((e -= t.scrollRect.x), (i -= t.scrollRect.y)),
                t.hitArea instanceof laya.utils.HitArea)
              )
                return t.hitArea.isHit(e, i);
              if ((t.width > 0 && t.height > 0) || t.mouseThrough || t.hitArea)
                if (t.mouseThrough) n = t.getGraphicBounds().contains(e, i);
                else {
                  var a = this._rect;
                  t.hitArea
                    ? (a = t.hitArea)
                    : a.setTo(0, 0, t.width, t.height),
                    (n = a.contains(e, i));
                }
              return n;
            }),
            (e.runEvent = function() {
              var e = this._eventList.length;
              if (e) {
                for (var i, n = 0, a = 0, r = 0; n < e; ) {
                  var s = this._eventList[n];
                  switch (
                    ('mousemove' !== s.type &&
                      (this._prePoint.x = this._prePoint.y = -1e6),
                    s.type)
                  ) {
                    case 'mousedown':
                      (this._touchIDs[0] = this._id++),
                        t._isTouchRespond
                          ? (t._isTouchRespond = !1)
                          : ((this._isLeftMouse = 0 === s.button),
                            this.initEvent(s),
                            this.check(
                              this._stage,
                              this.mouseX,
                              this.mouseY,
                              this.onMouseDown
                            ));
                      break;
                    case 'mouseup':
                      (this._isLeftMouse = 0 === s.button),
                        this.initEvent(s),
                        this.check(
                          this._stage,
                          this.mouseX,
                          this.mouseY,
                          this.onMouseUp
                        );
                      break;
                    case 'mousemove':
                      Math.abs(this._prePoint.x - s.clientX) +
                        Math.abs(this._prePoint.y - s.clientY) >=
                        this.mouseMoveAccuracy &&
                        ((this._prePoint.x = s.clientX),
                        (this._prePoint.y = s.clientY),
                        this.initEvent(s),
                        this.check(
                          this._stage,
                          this.mouseX,
                          this.mouseY,
                          this.onMouseMove
                        ));
                      break;
                    case 'touchstart':
                      (t._isTouchRespond = !0), (this._isLeftMouse = !0);
                      var o = s.changedTouches;
                      for (a = 0, r = o.length; a < r; a++)
                        (i = o[a]),
                          (t.multiTouchEnabled || isNaN(this._curTouchID)) &&
                            ((this._curTouchID = i.identifier),
                            this._id % 200 == 0 && (this._touchIDs = {}),
                            (this._touchIDs[i.identifier] = this._id++),
                            this.initEvent(i, s),
                            this.check(
                              this._stage,
                              this.mouseX,
                              this.mouseY,
                              this.onMouseDown
                            ));
                      break;
                    case 'touchend':
                    case 'touchcancel':
                      (t._isTouchRespond = !0), (this._isLeftMouse = !0);
                      var l = s.changedTouches;
                      for (a = 0, r = l.length; a < r; a++)
                        if (
                          ((i = l[a]),
                          t.multiTouchEnabled ||
                            i.identifier == this._curTouchID)
                        ) {
                          (this._curTouchID = NaN), this.initEvent(i, s);
                          this.check(
                            this._stage,
                            this.mouseX,
                            this.mouseY,
                            this.onMouseUp
                          ) || this.onMouseUp(null);
                        }
                      break;
                    case 'touchmove':
                      var h = s.changedTouches;
                      for (a = 0, r = h.length; a < r; a++)
                        (i = h[a]),
                          (t.multiTouchEnabled ||
                            i.identifier == this._curTouchID) &&
                            (this.initEvent(i, s),
                            this.check(
                              this._stage,
                              this.mouseX,
                              this.mouseY,
                              this.onMouseMove
                            ));
                      break;
                    case 'wheel':
                    case 'mousewheel':
                    case 'DOMMouseScroll':
                      this.checkMouseWheel(s);
                      break;
                    case 'mouseout':
                      v.I.stageMouseOut();
                      break;
                    case 'mouseover':
                      this._stage.event(
                        'mouseover',
                        this._event.setTo('mouseover', this._stage, this._stage)
                      );
                  }
                  n++;
                }
                this._eventList.length = 0;
              }
            }),
            (t.enabled = !0),
            (t.multiTouchEnabled = !0),
            (t._isTouchRespond = !1),
            (t._isFirstTouch = !0),
            n(t, [
              'instance',
              function() {
                return (this.instance = new t());
              }
            ]),
            t
          );
        })()),
      v = (function() {
        function t() {
          (this.preOvers = []),
            (this.preDowns = []),
            (this.preRightDowns = []),
            (this.enable = !0),
            (this._lastClickTime = 0),
            (this._event = new m());
        }
        a(t, 'laya.events.TouchManager');
        var e = t.prototype;
        return (
          (e._clearTempArrs = function() {
            (t._oldArr.length = 0),
              (t._newArr.length = 0),
              (t._tEleArr.length = 0);
          }),
          (e.getTouchFromArr = function(t, e) {
            var i = 0,
              n = 0;
            n = e.length;
            var a;
            for (i = 0; i < n; i++) if ((a = e[i]).id == t) return a;
            return null;
          }),
          (e.removeTouchFromArr = function(t, e) {
            var i = 0;
            for (i = e.length - 1; i >= 0; i--) e[i].id == t && e.splice(i, 1);
          }),
          (e.createTouchO = function(t, e) {
            var i;
            return (
              (i = W.getItem('TouchData') || {}), (i.id = e), (i.tar = t), i
            );
          }),
          (e.onMouseDown = function(e, i, n) {
            if ((void 0 === n && (n = !1), this.enable)) {
              var a, r, s;
              (a = this.getTouchFromArr(i, this.preOvers)),
                (s = this.getEles(e, null, t._tEleArr)),
                a
                  ? (a.tar = e)
                  : ((r = this.createTouchO(e, i)), this.preOvers.push(r)),
                O.onMobile && this.sendEvents(s, 'mouseover', i);
              var o;
              (o = n ? this.preDowns : this.preRightDowns),
                (a = this.getTouchFromArr(i, o))
                  ? (a.tar = e)
                  : ((r = this.createTouchO(e, i)), o.push(r)),
                this.sendEvents(s, n ? 'mousedown' : 'rightmousedown', i),
                this._clearTempArrs();
            }
          }),
          (e.sendEvents = function(t, e, i) {
            void 0 === i && (i = 0);
            var n = 0,
              a = 0;
            (a = t.length), (this._event._stoped = !1);
            var r;
            r = t[0];
            var s;
            for (n = 0; n < a; n++) {
              if ((s = t[n]).destroyed) return;
              if ((s.event(e, this._event.setTo(e, s, r)), this._event._stoped))
                break;
            }
          }),
          (e.getEles = function(t, e, i) {
            for (i ? (i.length = 0) : (i = []); t && t != e; )
              i.push(t), (t = t.parent);
            return i;
          }),
          (e.checkMouseOutAndOverOfMove = function(e, i, n) {
            if ((void 0 === n && (n = 0), i != e)) {
              var a,
                r,
                s = 0,
                o = 0;
              if (i.contains(e))
                (r = this.getEles(e, i, t._tEleArr)),
                  this.sendEvents(r, 'mouseover', n);
              else if (e.contains(i))
                (r = this.getEles(i, e, t._tEleArr)),
                  this.sendEvents(r, 'mouseout', n);
              else {
                (r = t._tEleArr).length = 0;
                var l;
                l = this.getEles(i, null, t._oldArr);
                var h;
                (h = this.getEles(e, null, t._newArr)), (o = l.length);
                var c = 0;
                for (s = 0; s < o; s++) {
                  if (((a = l[s]), (c = h.indexOf(a)) >= 0)) {
                    h.splice(c, h.length - c);
                    break;
                  }
                  r.push(a);
                }
                r.length > 0 && this.sendEvents(r, 'mouseout', n),
                  h.length > 0 && this.sendEvents(h, 'mouseover', n);
              }
            }
          }),
          (e.onMouseMove = function(e, i) {
            if (this.enable) {
              var n, a;
              (n = this.getTouchFromArr(i, this.preOvers))
                ? (this.checkMouseOutAndOverOfMove(e, n.tar),
                  (n.tar = e),
                  (a = this.getEles(e, null, t._tEleArr)))
                : ((a = this.getEles(e, null, t._tEleArr)),
                  this.sendEvents(a, 'mouseover', i),
                  this.preOvers.push(this.createTouchO(e, i))),
                this.sendEvents(a, 'mousemove', i),
                this._clearTempArrs();
            }
          }),
          (e.getLastOvers = function() {
            return (
              (t._tEleArr.length = 0),
              this.preOvers.length > 0 && this.preOvers[0].tar
                ? this.getEles(this.preOvers[0].tar, null, t._tEleArr)
                : (t._tEleArr.push(i.stage), t._tEleArr)
            );
          }),
          (e.stageMouseOut = function() {
            var t;
            (t = this.getLastOvers()),
              (this.preOvers.length = 0),
              this.sendEvents(t, 'mouseout', 0);
          }),
          (e.onMouseUp = function(e, i, n) {
            if ((void 0 === n && (n = !1), this.enable)) {
              var a,
                r,
                s,
                o,
                l,
                h = 0,
                c = 0,
                u = O.onMobile;
              (r = this.getEles(e, null, t._tEleArr)),
                this.sendEvents(r, n ? 'mouseup' : 'rightmouseup', i);
              var _;
              if (
                ((_ = n ? this.preDowns : this.preRightDowns),
                (a = this.getTouchFromArr(i, _)))
              ) {
                var d = !1,
                  f = O.now();
                if (
                  ((d = f - this._lastClickTime < 300),
                  (this._lastClickTime = f),
                  e == a.tar)
                )
                  l = r;
                else
                  for (
                    s = this.getEles(a.tar, null, t._oldArr),
                      (l = t._newArr).length = 0,
                      c = s.length,
                      h = 0;
                    h < c;
                    h++
                  )
                    (o = s[h]), r.indexOf(o) >= 0 && l.push(o);
                l.length > 0 &&
                  this.sendEvents(l, n ? 'click' : 'rightclick', i),
                  n && d && this.sendEvents(l, 'doubleclick', i),
                  this.removeTouchFromArr(i, _),
                  (a.tar = null),
                  W.recover('TouchData', a);
              } else;
              (a = this.getTouchFromArr(i, this.preOvers)) &&
                u &&
                ((l = this.getEles(a.tar, null, l)) &&
                  l.length > 0 &&
                  this.sendEvents(l, 'mouseout', i),
                this.removeTouchFromArr(i, this.preOvers),
                (a.tar = null),
                W.recover('TouchData', a)),
                this._clearTempArrs();
            }
          }),
          (t._oldArr = []),
          (t._newArr = []),
          (t._tEleArr = []),
          n(t, [
            'I',
            function() {
              return (this.I = new t());
            }
          ]),
          t
        );
      })(),
      b = (function() {
        function t() {
          this._action = null;
        }
        a(t, 'laya.filters.Filter');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.filters.IFilter': !0 }),
          (e.callNative = function(t) {}),
          r(0, e, 'type', function() {
            return -1;
          }),
          r(0, e, 'action', function() {
            return this._action;
          }),
          (t.BLUR = 16),
          (t.COLOR = 32),
          (t.GLOW = 8),
          (t._filterStart = null),
          (t._filterEnd = null),
          (t._EndTarget = null),
          (t._recycleScope = null),
          (t._filter = null),
          (t._useSrc = null),
          (t._endSrc = null),
          (t._useOut = null),
          (t._endOut = null),
          t
        );
      })(),
      w = (function() {
        function t() {
          this.data = null;
        }
        a(t, 'laya.filters.ColorFilterAction');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.filters.IFilterAction': !0 }),
          (e.apply = function(t) {
            var e = t.ctx.ctx,
              i = t.ctx.ctx.canvas;
            if (0 == i.width || 0 == i.height) return i;
            for (
              var n,
                a = e.getImageData(0, 0, i.width, i.height),
                r = a.data,
                s = 0,
                o = r.length;
              s < o;
              s += 4
            )
              (n = this.getColor(r[s], r[s + 1], r[s + 2], r[s + 3])),
                0 != r[s + 3] &&
                  ((r[s] = n[0]),
                  (r[s + 1] = n[1]),
                  (r[s + 2] = n[2]),
                  (r[s + 3] = n[3]));
            return e.putImageData(a, 0, 0), t;
          }),
          (e.getColor = function(t, e, i, n) {
            var a = [];
            if (this.data._mat && this.data._alpha) {
              var r = this.data._mat,
                s = this.data._alpha;
              (a[0] = r[0] * t + r[1] * e + r[2] * i + r[3] * n + s[0]),
                (a[1] = r[4] * t + r[5] * e + r[6] * i + r[7] * n + s[1]),
                (a[2] = r[8] * t + r[9] * e + r[10] * i + r[11] * n + s[2]),
                (a[3] = r[12] * t + r[13] * e + r[14] * i + r[15] * n + s[3]);
            }
            return a;
          }),
          t
        );
      })(),
      x =
        ((function() {
          function t() {}
          a(t, 'laya.maths.Arith'),
            (t.formatR = function(t) {
              return (
                t > Math.PI && (t -= 2 * Math.PI),
                t < -Math.PI && (t += 2 * Math.PI),
                t
              );
            }),
            (t.isPOT = function(t, e) {
              return t > 0 && 0 == (t & (t - 1)) && e > 0 && 0 == (e & (e - 1));
            }),
            (t.setMatToArray = function(t, e) {
              t.a,
                t.b,
                t.c,
                t.d,
                t.tx,
                t.ty,
                (e[0] = t.a),
                (e[1] = t.b),
                (e[4] = t.c),
                (e[5] = t.d),
                (e[12] = t.tx),
                (e[13] = t.ty);
            });
        })(),
        (function() {
          function t() {
            (this._controlPoints = [new T(), new T(), new T()]),
              (this._calFun = this.getPoint2);
          }
          a(t, 'laya.maths.Bezier');
          var e = t.prototype;
          return (
            (e._switchPoint = function(t, e) {
              var i = this._controlPoints.shift();
              i.setTo(t, e), this._controlPoints.push(i);
            }),
            (e.getPoint2 = function(t, e) {
              var i = this._controlPoints[0],
                n = this._controlPoints[1],
                a = this._controlPoints[2],
                r =
                  Math.pow(1 - t, 2) * i.x +
                  2 * t * (1 - t) * n.x +
                  Math.pow(t, 2) * a.x,
                s =
                  Math.pow(1 - t, 2) * i.y +
                  2 * t * (1 - t) * n.y +
                  Math.pow(t, 2) * a.y;
              e.push(r, s);
            }),
            (e.getPoint3 = function(t, e) {
              var i = this._controlPoints[0],
                n = this._controlPoints[1],
                a = this._controlPoints[2],
                r = this._controlPoints[3],
                s =
                  Math.pow(1 - t, 3) * i.x +
                  3 * n.x * t * (1 - t) * (1 - t) +
                  3 * a.x * t * t * (1 - t) +
                  r.x * Math.pow(t, 3),
                o =
                  Math.pow(1 - t, 3) * i.y +
                  3 * n.y * t * (1 - t) * (1 - t) +
                  3 * a.y * t * t * (1 - t) +
                  r.y * Math.pow(t, 3);
              e.push(s, o);
            }),
            (e.insertPoints = function(t, e) {
              var i = NaN,
                n = NaN;
              for (n = 1 / (t = t > 0 ? t : 5), i = 0; i <= 1; i += n)
                this._calFun(i, e);
            }),
            (e.getBezierPoints = function(t, e, i) {
              void 0 === e && (e = 5), void 0 === i && (i = 2);
              var n = 0,
                a = 0;
              if ((a = t.length) < 2 * (i + 1)) return [];
              var r;
              switch (((r = []), i)) {
                case 2:
                  this._calFun = this.getPoint2;
                  break;
                case 3:
                  this._calFun = this.getPoint3;
                  break;
                default:
                  return [];
              }
              for (; this._controlPoints.length <= i; )
                this._controlPoints.push(new T());
              for (n = 0; n < 2 * i; n += 2) this._switchPoint(t[n], t[n + 1]);
              for (n = 2 * i; n < a; n += 2)
                this._switchPoint(t[n], t[n + 1]),
                  (n / 2) % i == 0 && this.insertPoints(e, r);
              return r;
            }),
            n(t, [
              'I',
              function() {
                return (this.I = new t());
              }
            ]),
            t
          );
        })()),
      I = (function() {
        function t() {}
        return (
          a(t, 'laya.maths.GrahamScan'),
          (t.multiply = function(t, e, i) {
            return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y);
          }),
          (t.dis = function(t, e) {
            return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y);
          }),
          (t._getPoints = function(e, i, n) {
            for (
              void 0 === i && (i = !1), t._mPointList || (t._mPointList = []);
              t._mPointList.length < e;

            )
              t._mPointList.push(new T());
            return (
              n || (n = []),
              (n.length = 0),
              i
                ? t.getFrom(n, t._mPointList, e)
                : t.getFromR(n, t._mPointList, e),
              n
            );
          }),
          (t.getFrom = function(t, e, i) {
            var n = 0;
            for (n = 0; n < i; n++) t.push(e[n]);
            return t;
          }),
          (t.getFromR = function(t, e, i) {
            var n = 0;
            for (n = 0; n < i; n++) t.push(e.pop());
            return t;
          }),
          (t.pListToPointList = function(e, i) {
            void 0 === i && (i = !1);
            var n = 0,
              a = e.length / 2,
              r = t._getPoints(a, i, t._tempPointList);
            for (n = 0; n < a; n++) r[n].setTo(e[n + n], e[n + n + 1]);
            return r;
          }),
          (t.pointListToPlist = function(e) {
            var i,
              n = 0,
              a = e.length,
              r = t._temPList;
            for (r.length = 0, n = 0; n < a; n++) (i = e[n]), r.push(i.x, i.y);
            return r;
          }),
          (t.scanPList = function(e) {
            return J.copyArray(
              e,
              t.pointListToPlist(t.scan(t.pListToPointList(e, !0)))
            );
          }),
          (t.scan = function(e) {
            var i,
              n,
              a,
              r = 0,
              s = 0,
              o = 0,
              l = e.length,
              h = {};
            for (
              (n = t._temArr).length = 0, r = (l = e.length) - 1;
              r >= 0;
              r--
            )
              (a = (i = e[r]).x + '_' + i.y),
                h.hasOwnProperty(a) || ((h[a] = !0), n.push(i));
            for (l = n.length, J.copyArray(e, n), r = 1; r < l; r++)
              (e[r].y < e[o].y || (e[r].y == e[o].y && e[r].x < e[o].x)) &&
                (o = r);
            for (i = e[0], e[0] = e[o], e[o] = i, r = 1; r < l - 1; r++) {
              for (o = r, s = r + 1; s < l; s++)
                (t.multiply(e[s], e[o], e[0]) > 0 ||
                  (0 == t.multiply(e[s], e[o], e[0]) &&
                    t.dis(e[0], e[s]) < t.dis(e[0], e[o]))) &&
                  (o = s);
              (i = e[r]), (e[r] = e[o]), (e[o] = i);
            }
            if (((n = t._temArr), (n.length = 0), e.length < 3))
              return J.copyArray(n, e);
            for (n.push(e[0], e[1], e[2]), r = 3; r < l; r++) {
              for (
                ;
                n.length >= 2 &&
                t.multiply(e[r], n[n.length - 1], n[n.length - 2]) >= 0;

              )
                n.pop();
              e[r] && n.push(e[r]);
            }
            return n;
          }),
          (t._mPointList = null),
          (t._tempPointList = []),
          (t._temPList = []),
          (t._temArr = []),
          t
        );
      })(),
      C = (function() {
        function t() {}
        return (
          a(t, 'laya.maths.MathUtil'),
          (t.subtractVector3 = function(t, e, i) {
            (i[0] = t[0] - e[0]), (i[1] = t[1] - e[1]), (i[2] = t[2] - e[2]);
          }),
          (t.lerp = function(t, e, i) {
            return t * (1 - i) + e * i;
          }),
          (t.scaleVector3 = function(t, e, i) {
            (i[0] = t[0] * e), (i[1] = t[1] * e), (i[2] = t[2] * e);
          }),
          (t.lerpVector3 = function(t, e, i, n) {
            var a = t[0],
              r = t[1],
              s = t[2];
            (n[0] = a + i * (e[0] - a)),
              (n[1] = r + i * (e[1] - r)),
              (n[2] = s + i * (e[2] - s));
          }),
          (t.lerpVector4 = function(t, e, i, n) {
            var a = t[0],
              r = t[1],
              s = t[2],
              o = t[3];
            (n[0] = a + i * (e[0] - a)),
              (n[1] = r + i * (e[1] - r)),
              (n[2] = s + i * (e[2] - s)),
              (n[3] = o + i * (e[3] - o));
          }),
          (t.slerpQuaternionArray = function(t, e, i, n, a, r, s) {
            var o,
              l,
              h,
              c,
              u,
              _ = t[e + 0],
              d = t[e + 1],
              f = t[e + 2],
              p = t[e + 3],
              m = i[n + 0],
              g = i[n + 1],
              y = i[n + 2],
              v = i[n + 3];
            return (
              (l = _ * m + d * g + f * y + p * v) < 0 &&
                ((l = -l), (m = -m), (g = -g), (y = -y), (v = -v)),
              1 - l > 1e-6
                ? ((o = Math.acos(l)),
                  (h = Math.sin(o)),
                  (c = Math.sin((1 - a) * o) / h),
                  (u = Math.sin(a * o) / h))
                : ((c = 1 - a), (u = a)),
              (r[s + 0] = c * _ + u * m),
              (r[s + 1] = c * d + u * g),
              (r[s + 2] = c * f + u * y),
              (r[s + 3] = c * p + u * v),
              r
            );
          }),
          (t.getRotation = function(t, e, i, n) {
            return (Math.atan2(n - e, i - t) / Math.PI) * 180;
          }),
          (t.sortBigFirst = function(t, e) {
            return t == e ? 0 : e > t ? 1 : -1;
          }),
          (t.sortSmallFirst = function(t, e) {
            return t == e ? 0 : e > t ? -1 : 1;
          }),
          (t.sortNumBigFirst = function(t, e) {
            return parseFloat(e) - parseFloat(t);
          }),
          (t.sortNumSmallFirst = function(t, e) {
            return parseFloat(t) - parseFloat(e);
          }),
          (t.sortByKey = function(e, i, n) {
            void 0 === i && (i = !1), void 0 === n && (n = !0);
            var a;
            return (
              (a = i
                ? n
                  ? t.sortNumBigFirst
                  : t.sortBigFirst
                : n
                ? t.sortNumSmallFirst
                : t.sortSmallFirst),
              function(t, i) {
                return a(t[e], i[e]);
              }
            );
          }),
          t
        );
      })(),
      S = (function() {
        function t(t, e, i, n, a, r) {
          (this.inPool = !1),
            (this.bTransform = !1),
            void 0 === t && (t = 1),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 1),
            void 0 === a && (a = 0),
            void 0 === r && (r = 0),
            (this.a = t),
            (this.b = e),
            (this.c = i),
            (this.d = n),
            (this.tx = a),
            (this.ty = r),
            this._checkTransform();
        }
        a(t, 'laya.maths.Matrix');
        var e = t.prototype;
        return (
          (e.identity = function() {
            return (
              (this.a = this.d = 1),
              (this.b = this.tx = this.ty = this.c = 0),
              (this.bTransform = !1),
              this
            );
          }),
          (e._checkTransform = function() {
            return (this.bTransform =
              1 !== this.a || 0 !== this.b || 0 !== this.c || 1 !== this.d);
          }),
          (e.setTranslate = function(t, e) {
            return (this.tx = t), (this.ty = e), this;
          }),
          (e.translate = function(t, e) {
            return (this.tx += t), (this.ty += e), this;
          }),
          (e.scale = function(t, e) {
            (this.a *= t),
              (this.d *= e),
              (this.c *= t),
              (this.b *= e),
              (this.tx *= t),
              (this.ty *= e),
              (this.bTransform = !0);
          }),
          (e.rotate = function(t) {
            var e = Math.cos(t),
              i = Math.sin(t),
              n = this.a,
              a = this.c,
              r = this.tx;
            (this.a = n * e - this.b * i),
              (this.b = n * i + this.b * e),
              (this.c = a * e - this.d * i),
              (this.d = a * i + this.d * e),
              (this.tx = r * e - this.ty * i),
              (this.ty = r * i + this.ty * e),
              (this.bTransform = !0);
          }),
          (e.skew = function(t, e) {
            var i = Math.tan(t),
              n = Math.tan(e),
              a = this.a,
              r = this.b;
            return (
              (this.a += n * this.c),
              (this.b += n * this.d),
              (this.c += i * a),
              (this.d += i * r),
              this
            );
          }),
          (e.invertTransformPoint = function(t) {
            var e = this.a,
              i = this.b,
              n = this.c,
              a = this.d,
              r = this.tx,
              s = e * a - i * n,
              o = a / s,
              l = -i / s,
              h = -n / s,
              c = e / s,
              u = (n * this.ty - a * r) / s,
              _ = -(e * this.ty - i * r) / s;
            return t.setTo(o * t.x + h * t.y + u, l * t.x + c * t.y + _);
          }),
          (e.transformPoint = function(t) {
            return t.setTo(
              this.a * t.x + this.c * t.y + this.tx,
              this.b * t.x + this.d * t.y + this.ty
            );
          }),
          (e.transformPointN = function(t) {
            return t.setTo(
              this.a * t.x + this.c * t.y,
              this.b * t.x + this.d * t.y
            );
          }),
          (e.transformPointArray = function(t, e) {
            for (var i = t.length, n = 0; n < i; n += 2) {
              var a = t[n],
                r = t[n + 1];
              (e[n] = this.a * a + this.c * r + this.tx),
                (e[n + 1] = this.b * a + this.d * r + this.ty);
            }
            return e;
          }),
          (e.transformPointArrayScale = function(t, e) {
            for (var i = t.length, n = 0; n < i; n += 2) {
              var a = t[n],
                r = t[n + 1];
              (e[n] = this.a * a + this.c * r),
                (e[n + 1] = this.b * a + this.d * r);
            }
            return e;
          }),
          (e.getScaleX = function() {
            return 0 === this.b
              ? this.a
              : Math.sqrt(this.a * this.a + this.b * this.b);
          }),
          (e.getScaleY = function() {
            return 0 === this.c
              ? this.d
              : Math.sqrt(this.c * this.c + this.d * this.d);
          }),
          (e.invert = function() {
            var t = this.a,
              e = this.b,
              i = this.c,
              n = this.d,
              a = this.tx,
              r = t * n - e * i;
            return (
              (this.a = n / r),
              (this.b = -e / r),
              (this.c = -i / r),
              (this.d = t / r),
              (this.tx = (i * this.ty - n * a) / r),
              (this.ty = -(t * this.ty - e * a) / r),
              this
            );
          }),
          (e.setTo = function(t, e, i, n, a, r) {
            return (
              (this.a = t),
              (this.b = e),
              (this.c = i),
              (this.d = n),
              (this.tx = a),
              (this.ty = r),
              this
            );
          }),
          (e.concat = function(t) {
            var e = this.a,
              i = this.c,
              n = this.tx;
            return (
              (this.a = e * t.a + this.b * t.c),
              (this.b = e * t.b + this.b * t.d),
              (this.c = i * t.a + this.d * t.c),
              (this.d = i * t.b + this.d * t.d),
              (this.tx = n * t.a + this.ty * t.c + t.tx),
              (this.ty = n * t.b + this.ty * t.d + t.ty),
              this
            );
          }),
          (e.scaleEx = function(t, e) {
            var i = this.a,
              n = this.b,
              a = this.c,
              r = this.d;
            0 !== n || 0 !== a
              ? ((this.a = t * i),
                (this.b = t * n),
                (this.c = e * a),
                (this.d = e * r))
              : ((this.a = t * i),
                (this.b = 0 * r),
                (this.c = 0 * i),
                (this.d = e * r)),
              (this.bTransform = !0);
          }),
          (e.rotateEx = function(t) {
            var e = Math.cos(t),
              i = Math.sin(t),
              n = this.a,
              a = this.b,
              r = this.c,
              s = this.d;
            0 !== a || 0 !== r
              ? ((this.a = e * n + i * r),
                (this.b = e * a + i * s),
                (this.c = -i * n + e * r),
                (this.d = -i * a + e * s))
              : ((this.a = e * n),
                (this.b = i * s),
                (this.c = -i * n),
                (this.d = e * s)),
              (this.bTransform = !0);
          }),
          (e.clone = function() {
            var e = t.create();
            return (
              (e.a = this.a),
              (e.b = this.b),
              (e.c = this.c),
              (e.d = this.d),
              (e.tx = this.tx),
              (e.ty = this.ty),
              (e.bTransform = this.bTransform),
              e
            );
          }),
          (e.copyTo = function(t) {
            return (
              (t.a = this.a),
              (t.b = this.b),
              (t.c = this.c),
              (t.d = this.d),
              (t.tx = this.tx),
              (t.ty = this.ty),
              (t.bTransform = this.bTransform),
              t
            );
          }),
          (e.toString = function() {
            return (
              this.a +
              ',' +
              this.b +
              ',' +
              this.c +
              ',' +
              this.d +
              ',' +
              this.tx +
              ',' +
              this.ty
            );
          }),
          (e.destroy = function() {
            if (!this.inPool) {
              var e = t._cache;
              (this.inPool = !0),
                e._length || (e._length = 0),
                (e[e._length++] = this),
                (this.a = this.d = 1),
                (this.b = this.c = this.tx = this.ty = 0),
                (this.bTransform = !1);
            }
          }),
          (t.mul = function(t, e, i) {
            var n = t.a,
              a = t.b,
              r = t.c,
              s = t.d,
              o = t.tx,
              l = t.ty,
              h = e.a,
              c = e.b,
              u = e.c,
              _ = e.d,
              d = e.tx,
              f = e.ty;
            return (
              0 !== c || 0 !== u
                ? ((i.a = n * h + a * u),
                  (i.b = n * c + a * _),
                  (i.c = r * h + s * u),
                  (i.d = r * c + s * _),
                  (i.tx = h * o + u * l + d),
                  (i.ty = c * o + _ * l + f))
                : ((i.a = n * h),
                  (i.b = a * _),
                  (i.c = r * h),
                  (i.d = s * _),
                  (i.tx = h * o + d),
                  (i.ty = _ * l + f)),
              i
            );
          }),
          (t.mul16 = function(t, e, i) {
            var n = t.a,
              a = t.b,
              r = t.c,
              s = t.d,
              o = t.tx,
              l = t.ty,
              h = e.a,
              c = e.b,
              u = e.c,
              _ = e.d,
              d = e.tx,
              f = e.ty;
            return (
              0 !== c || 0 !== u
                ? ((i[0] = n * h + a * u),
                  (i[1] = n * c + a * _),
                  (i[4] = r * h + s * u),
                  (i[5] = r * c + s * _),
                  (i[12] = h * o + u * l + d),
                  (i[13] = c * o + _ * l + f))
                : ((i[0] = n * h),
                  (i[1] = a * _),
                  (i[4] = r * h),
                  (i[5] = s * _),
                  (i[12] = h * o + d),
                  (i[13] = _ * l + f)),
              i
            );
          }),
          (t.mulPre = function(t, e, i, n, a, r, s, o) {
            var l = t.a,
              h = t.b,
              c = t.c,
              u = t.d,
              _ = t.tx,
              d = t.ty;
            return (
              0 !== i || 0 !== n
                ? ((o.a = l * e + h * n),
                  (o.b = l * i + h * a),
                  (o.c = c * e + u * n),
                  (o.d = c * i + u * a),
                  (o.tx = e * _ + n * d + r),
                  (o.ty = i * _ + a * d + s))
                : ((o.a = l * e),
                  (o.b = h * a),
                  (o.c = c * e),
                  (o.d = u * a),
                  (o.tx = e * _ + r),
                  (o.ty = a * d + s)),
              o
            );
          }),
          (t.mulPos = function(t, e, i, n, a, r, s, o) {
            var l = t.a,
              h = t.b,
              c = t.c,
              u = t.d,
              _ = t.tx,
              d = t.ty;
            return (
              0 !== h || 0 !== c
                ? ((o.a = e * l + i * c),
                  (o.b = e * h + i * u),
                  (o.c = n * l + a * c),
                  (o.d = n * h + a * u),
                  (o.tx = l * r + c * s + _),
                  (o.ty = h * r + u * s + d))
                : ((o.a = e * l),
                  (o.b = i * u),
                  (o.c = n * l),
                  (o.d = a * u),
                  (o.tx = l * r + _),
                  (o.ty = u * s + d)),
              o
            );
          }),
          (t.preMul = function(t, e, i) {
            var n = t.a,
              a = t.b,
              r = t.c,
              s = t.d,
              o = e.a,
              l = e.b,
              h = e.c,
              c = e.d,
              u = e.tx,
              _ = e.ty;
            return (
              (i.a = o * n),
              (i.b = i.c = 0),
              (i.d = c * s),
              (i.tx = u * n + t.tx),
              (i.ty = _ * s + t.ty),
              (0 === l && 0 === h && 0 === a && 0 === r) ||
                ((i.a += l * r),
                (i.d += h * a),
                (i.b += o * a + l * s),
                (i.c += h * n + c * r),
                (i.tx += _ * r),
                (i.ty += u * a)),
              i
            );
          }),
          (t.preMulXY = function(t, e, i, n) {
            var a = t.a,
              r = t.b,
              s = t.c,
              o = t.d;
            return (
              (n.a = a),
              (n.b = r),
              (n.c = s),
              (n.d = o),
              (n.tx = e * a + t.tx + i * s),
              (n.ty = i * o + t.ty + e * r),
              n
            );
          }),
          (t.create = function() {
            var e = t._cache,
              i = e._length ? e[--e._length] : new t();
            return (i.inPool = !1), i;
          }),
          (t.EMPTY = new t()),
          (t.TEMP = new t()),
          (t._cache = []),
          t
        );
      })(),
      T = (function() {
        function t(t, e) {
          void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            (this.x = t),
            (this.y = e);
        }
        a(t, 'laya.maths.Point');
        var e = t.prototype;
        return (
          (e.setTo = function(t, e) {
            return (this.x = t), (this.y = e), this;
          }),
          (e.distance = function(t, e) {
            return Math.sqrt(
              (this.x - t) * (this.x - t) + (this.y - e) * (this.y - e)
            );
          }),
          (e.toString = function() {
            return this.x + ',' + this.y;
          }),
          (e.normalize = function() {
            var t = Math.sqrt(this.x * this.x + this.y * this.y);
            if (t > 0) {
              var e = 1 / t;
              (this.x *= e), (this.y *= e);
            }
          }),
          (t.TEMP = new t()),
          (t.EMPTY = new t()),
          t
        );
      })(),
      M = (function() {
        function t(t, e, i, n) {
          void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            (this.x = t),
            (this.y = e),
            (this.width = i),
            (this.height = n);
        }
        a(t, 'laya.maths.Rectangle');
        var e = t.prototype;
        return (
          (e.setTo = function(t, e, i, n) {
            return (
              (this.x = t),
              (this.y = e),
              (this.width = i),
              (this.height = n),
              this
            );
          }),
          (e.copyFrom = function(t) {
            return (
              (this.x = t.x),
              (this.y = t.y),
              (this.width = t.width),
              (this.height = t.height),
              this
            );
          }),
          (e.contains = function(t, e) {
            return (
              !(this.width <= 0 || this.height <= 0) &&
              (t >= this.x && t < this.right && e >= this.y && e < this.bottom)
            );
          }),
          (e.intersects = function(t) {
            return !(
              t.x > this.x + this.width ||
              t.x + t.width < this.x ||
              t.y > this.y + this.height ||
              t.y + t.height < this.y
            );
          }),
          (e.intersection = function(e, i) {
            return this.intersects(e)
              ? (i || (i = new t()),
                (i.x = Math.max(this.x, e.x)),
                (i.y = Math.max(this.y, e.y)),
                (i.width = Math.min(this.right, e.right) - i.x),
                (i.height = Math.min(this.bottom, e.bottom) - i.y),
                i)
              : null;
          }),
          (e.union = function(e, i) {
            return (
              i || (i = new t()),
              this.clone(i),
              e.width <= 0 || e.height <= 0
                ? i
                : (i.addPoint(e.x, e.y), i.addPoint(e.right, e.bottom), this)
            );
          }),
          (e.clone = function(e) {
            return (
              e || (e = new t()),
              (e.x = this.x),
              (e.y = this.y),
              (e.width = this.width),
              (e.height = this.height),
              e
            );
          }),
          (e.toString = function() {
            return this.x + ',' + this.y + ',' + this.width + ',' + this.height;
          }),
          (e.equals = function(t) {
            return !(
              !t ||
              t.x !== this.x ||
              t.y !== this.y ||
              t.width !== this.width ||
              t.height !== this.height
            );
          }),
          (e.addPoint = function(t, e) {
            return (
              this.x > t && ((this.width += this.x - t), (this.x = t)),
              this.y > e && ((this.height += this.y - e), (this.y = e)),
              this.width < t - this.x && (this.width = t - this.x),
              this.height < e - this.y && (this.height = e - this.y),
              this
            );
          }),
          (e._getBoundPoints = function() {
            var e = t._temB;
            return (
              (e.length = 0),
              0 == this.width || 0 == this.height
                ? e
                : (e.push(
                    this.x,
                    this.y,
                    this.x + this.width,
                    this.y,
                    this.x,
                    this.y + this.height,
                    this.x + this.width,
                    this.y + this.height
                  ),
                  e)
            );
          }),
          (e.isEmpty = function() {
            return this.width <= 0 || this.height <= 0;
          }),
          r(0, e, 'right', function() {
            return this.x + this.width;
          }),
          r(0, e, 'bottom', function() {
            return this.y + this.height;
          }),
          (t._getBoundPointS = function(e, i, n, a) {
            var r = t._temA;
            return (
              (r.length = 0),
              0 == n || 0 == a
                ? r
                : (r.push(e, i, e + n, i, e, i + a, e + n, i + a), r)
            );
          }),
          (t._getWrapRec = function(e, i) {
            if (!e || e.length < 1)
              return i ? i.setTo(0, 0, 0, 0) : t.TEMP.setTo(0, 0, 0, 0);
            i = i || new t();
            var n,
              a,
              r,
              s,
              o,
              l = e.length,
              h = T.TEMP;
            for (r = o = -(a = s = 99999), n = 0; n < l; n += 2)
              (h.x = e[n]),
                (h.y = e[n + 1]),
                (a = a < h.x ? a : h.x),
                (s = s < h.y ? s : h.y),
                (r = r > h.x ? r : h.x),
                (o = o > h.y ? o : h.y);
            return i.setTo(a, s, r - a, o - s);
          }),
          (t.EMPTY = new t()),
          (t.TEMP = new t()),
          (t._temB = []),
          (t._temA = []),
          t
        );
      })(),
      E = (function() {
        function t() {}
        return (
          a(t, 'laya.media.SoundManager'),
          r(
            1,
            t,
            'useAudioMusic',
            function() {
              return t._useAudioMusic;
            },
            function(e) {
              (t._useAudioMusic = e), (t._musicClass = e ? et : null);
            }
          ),
          r(
            1,
            t,
            'autoStopMusic',
            function() {
              return t._autoStopMusic;
            },
            function(e) {
              i.stage.off('blur', null, t._stageOnBlur),
                i.stage.off('focus', null, t._stageOnFocus),
                i.stage.off('visibilitychange', null, t._visibilityChange),
                (t._autoStopMusic = e),
                e &&
                  (i.stage.on('blur', null, t._stageOnBlur),
                  i.stage.on('focus', null, t._stageOnFocus),
                  i.stage.on('visibilitychange', null, t._visibilityChange));
            }
          ),
          r(
            1,
            t,
            'muted',
            function() {
              return t._muted;
            },
            function(e) {
              e != t._muted &&
                (e && t.stopAllSound(), (t.musicMuted = e), (t._muted = e));
            }
          ),
          r(
            1,
            t,
            'musicMuted',
            function() {
              return t._musicMuted;
            },
            function(e) {
              e != t._musicMuted &&
                (e
                  ? (t._tMusic && t._musicChannel && !t._musicChannel.isStopped
                      ? t._musicChannel.pause()
                      : (t._musicChannel = null),
                    (t._musicMuted = e))
                  : ((t._musicMuted = e),
                    t._tMusic && t._musicChannel && t._musicChannel.resume()));
            }
          ),
          r(
            1,
            t,
            'soundMuted',
            function() {
              return t._soundMuted;
            },
            function(e) {
              t._soundMuted = e;
            }
          ),
          (t.addChannel = function(e) {
            t._channels.indexOf(e) >= 0 || t._channels.push(e);
          }),
          (t.removeChannel = function(e) {
            var i = 0;
            for (i = t._channels.length - 1; i >= 0; i--)
              t._channels[i] == e && t._channels.splice(i, 1);
          }),
          (t.disposeSoundIfNotUsed = function(e) {
            var i = 0;
            for (i = t._channels.length - 1; i >= 0; i--)
              if (t._channels[i].url == e) return;
            t.destroySound(e);
          }),
          (t._visibilityChange = function() {
            i.stage.isVisibility ? t._stageOnFocus() : t._stageOnBlur();
          }),
          (t._stageOnBlur = function() {
            (t._isActive = !1),
              t._musicChannel &&
                (t._musicChannel.isStopped ||
                  ((t._blurPaused = !0), t._musicChannel.pause())),
              t.stopAllSound(),
              i.stage.once('mousedown', null, t._stageOnFocus);
          }),
          (t._recoverWebAudio = function() {
            at.ctx && 'running' != at.ctx.state && at.ctx.resume();
          }),
          (t._stageOnFocus = function() {
            (t._isActive = !0),
              t._recoverWebAudio(),
              i.stage.off('mousedown', null, t._stageOnFocus),
              t._blurPaused &&
                t._musicChannel &&
                t._musicChannel.isStopped &&
                ((t._blurPaused = !1), t._musicChannel.resume());
          }),
          (t.playSound = function(e, n, a, r, s) {
            if (
              (void 0 === n && (n = 1),
              void 0 === s && (s = 0),
              !t._isActive || !e)
            )
              return null;
            if (t._muted) return null;
            if ((t._recoverWebAudio(), (e = A.formatURL(e)) == t._tMusic)) {
              if (t._musicMuted) return null;
            } else {
              if (N.isConchApp) {
                var o = J.getFileExtension(e);
                if ('wav' != o && 'ogg' != o)
                  return (
                    alert(
                      'The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document.'
                    ),
                    null
                  );
              }
              if (t._soundMuted) return null;
            }
            var l;
            O.onMiniGame || (l = i.loader.getRes(e)),
              r || (r = t._soundClass),
              l || ((l = new r()).load(e), st.cacheRes(e, l));
            var h;
            return (h = l.play(s, n))
              ? ((h.url = e),
                (h.volume = e == t._tMusic ? t.musicVolume : t.soundVolume),
                (h.completeHandler = a),
                h)
              : null;
          }),
          (t.destroySound = function(t) {
            var e = i.loader.getRes(t);
            e && (st.clearRes(t), e.dispose());
          }),
          (t.playMusic = function(e, i, n, a) {
            return (
              void 0 === i && (i = 0),
              void 0 === a && (a = 0),
              (e = A.formatURL(e)),
              (t._tMusic = e),
              t._musicChannel && t._musicChannel.stop(),
              (t._musicChannel = t.playSound(e, i, n, t._musicClass, a))
            );
          }),
          (t.stopSound = function(e) {
            e = A.formatURL(e);
            var i,
              n = 0;
            for (n = t._channels.length - 1; n >= 0; n--)
              (i = t._channels[n]).url == e && i.stop();
          }),
          (t.stopAll = function() {
            t._tMusic = null;
            var e = 0;
            for (e = t._channels.length - 1; e >= 0; e--) t._channels[e].stop();
          }),
          (t.stopAllSound = function() {
            var e,
              i = 0;
            for (i = t._channels.length - 1; i >= 0; i--)
              (e = t._channels[i]).url != t._tMusic && e.stop();
          }),
          (t.stopMusic = function() {
            t._musicChannel && t._musicChannel.stop(), (t._tMusic = null);
          }),
          (t.setSoundVolume = function(e, i) {
            if (i) (i = A.formatURL(i)), t._setVolume(i, e);
            else {
              t.soundVolume = e;
              var n,
                a = 0;
              for (a = t._channels.length - 1; a >= 0; a--)
                (n = t._channels[a]).url != t._tMusic && (n.volume = e);
            }
          }),
          (t.setMusicVolume = function(e) {
            (t.musicVolume = e), t._setVolume(t._tMusic, e);
          }),
          (t._setVolume = function(e, i) {
            e = A.formatURL(e);
            var n,
              a = 0;
            for (a = t._channels.length - 1; a >= 0; a--)
              (n = t._channels[a]).url == e && (n.volume = i);
          }),
          (t.musicVolume = 1),
          (t.soundVolume = 1),
          (t.playbackRate = 1),
          (t._useAudioMusic = !0),
          (t._muted = !1),
          (t._soundMuted = !1),
          (t._musicMuted = !1),
          (t._tMusic = null),
          (t._musicChannel = null),
          (t._channels = []),
          (t._autoStopMusic = !1),
          (t._blurPaused = !1),
          (t._isActive = !0),
          (t._soundClass = null),
          (t._musicClass = null),
          (t.autoReleaseSound = !0),
          t
        );
      })(),
      L = (function() {
        function e() {}
        var i;
        return (
          a(e, 'laya.net.LocalStorage'),
          (e.__init__ = function() {
            e._baseClass || ((e._baseClass = i), i.init()),
              (e.items = e._baseClass.items),
              (e.support = e._baseClass.support);
          }),
          (e.setItem = function(t, i) {
            e._baseClass.setItem(t, i);
          }),
          (e.getItem = function(t) {
            return e._baseClass.getItem(t);
          }),
          (e.setJSON = function(t, i) {
            e._baseClass.setJSON(t, i);
          }),
          (e.getJSON = function(t) {
            return e._baseClass.getJSON(t);
          }),
          (e.removeItem = function(t) {
            e._baseClass.removeItem(t);
          }),
          (e.clear = function() {
            e._baseClass.clear();
          }),
          (e._baseClass = null),
          (e.items = null),
          (e.support = !1),
          (e.__init$ = function() {
            i = (function() {
              function e() {}
              return (
                a(e, ''),
                (e.init = function() {
                  try {
                    (e.items = t.localStorage),
                      e.setItem('laya', '1'),
                      e.removeItem('laya'),
                      (e.support = !0);
                  } catch (t) {}
                  e.support ||
                    console.log(
                      'LocalStorage is not supprot or browser is private mode.'
                    );
                }),
                (e.setItem = function(t, i) {
                  try {
                    e.support && e.items.setItem(t, i);
                  } catch (t) {
                    console.warn('set localStorage failed', t);
                  }
                }),
                (e.getItem = function(t) {
                  return e.support ? e.items.getItem(t) : null;
                }),
                (e.setJSON = function(t, i) {
                  try {
                    e.support && e.items.setItem(t, JSON.stringify(i));
                  } catch (t) {
                    console.warn('set localStorage failed', t);
                  }
                }),
                (e.getJSON = function(t) {
                  return JSON.parse(e.support ? e.items.getItem(t) : null);
                }),
                (e.removeItem = function(t) {
                  e.support && e.items.removeItem(t);
                }),
                (e.clear = function() {
                  e.support && e.items.clear();
                }),
                (e.items = null),
                (e.support = !1),
                e
              );
            })();
          }),
          e
        );
      })(),
      D =
        ((function() {
          function t() {}
          a(t, 'laya.net.ResourceVersion'),
            (t.enable = function(e, n, a) {
              void 0 === a && (a = 2),
                (laya.net.ResourceVersion.type = a),
                i.loader.load(
                  e,
                  h.create(null, t.onManifestLoaded, [n]),
                  null,
                  'json'
                ),
                (A.customFormat = t.addVersionPrefix);
            }),
            (t.onManifestLoaded = function(e, i) {
              (t.manifest = i),
                e.run(),
                i ||
                  console.warn(
                    '资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。'
                  );
            }),
            (t.addVersionPrefix = function(e) {
              return t.manifest && t.manifest[e]
                ? 2 == t.type
                  ? t.manifest[e]
                  : t.manifest[e] + '/' + e
                : e;
            }),
            (t.FOLDER_VERSION = 1),
            (t.FILENAME_VERSION = 2),
            (t.manifest = null),
            (t.type = 1);
        })(),
        (function() {
          function t() {
            (this.fontName = null),
              (this.complete = null),
              (this.err = null),
              (this._fontTxt = null),
              (this._url = null),
              (this._div = null),
              (this._txtWidth = NaN),
              (this._http = null);
          }
          a(t, 'laya.net.TTFLoader');
          var e = t.prototype;
          return (
            (e.load = function(t) {
              this._url = t;
              var e = t.split('.ttf')[0].split('/');
              (this.fontName = e[e.length - 1]),
                O.window.conch
                  ? this._loadConch()
                  : O.window.FontFace
                  ? this._loadWithFontFace()
                  : this._loadWithCSS();
            }),
            (e._loadConch = function() {
              (this._http = new rt()),
                this._http.on('error', this, this._onErr),
                this._http.on('complete', this, this._onHttpLoaded),
                this._http.send(this._url, null, 'get', 'arraybuffer');
            }),
            (e._onHttpLoaded = function(t) {
              O.window.conch.setFontFaceFromBuffer(this.fontName, t),
                this._clearHttp(),
                this._complete();
            }),
            (e._clearHttp = function() {
              this._http &&
                (this._http.off('error', this, this._onErr),
                this._http.off('complete', this, this._onHttpLoaded),
                (this._http = null));
            }),
            (e._onErr = function() {
              this._clearHttp(),
                this.err &&
                  (this.err.runWith('fail:' + this._url), (this.err = null));
            }),
            (e._complete = function() {
              i.timer.clear(this, this._complete),
                i.timer.clear(this, this._checkComplete),
                this._div &&
                  this._div.parentNode &&
                  (this._div.parentNode.removeChild(this._div),
                  (this._div = null)),
                this.complete &&
                  (this.complete.runWith(this), (this.complete = null));
            }),
            (e._checkComplete = function() {
              s.measureText('LayaTTFFont', this._fontTxt).width !=
                this._txtWidth && this._complete();
            }),
            (e._loadWithFontFace = function() {
              var t = new O.window.FontFace(
                this.fontName,
                "url('" + this._url + "')"
              );
              O.window.document.fonts.add(t);
              var e = this;
              t.loaded.then(function() {
                e._complete();
              }),
                t.load();
            }),
            (e._createDiv = function() {
              (this._div = O.createElement('div')),
                (this._div.innerHTML = 'laya');
              var t = this._div.style;
              (t.fontFamily = this.fontName),
                (t.position = 'absolute'),
                (t.left = '-100px'),
                (t.top = '-100px'),
                O.document.body.appendChild(this._div);
            }),
            (e._loadWithCSS = function() {
              var t = this,
                e = O.createElement('style');
              (e.type = 'text/css'),
                O.document.body.appendChild(e),
                (e.textContent =
                  "@font-face { font-family:'" +
                  this.fontName +
                  "'; src:url('" +
                  this._url +
                  "');}"),
                (this._fontTxt = '40px ' + this.fontName),
                (this._txtWidth = s.measureText(
                  'LayaTTFFont',
                  this._fontTxt
                ).width);
              var n = this;
              (e.onload = function() {
                i.timer.once(1e4, n, t._complete);
              }),
                i.timer.loop(20, this, this._checkComplete),
                this._createDiv();
            }),
            (t._testString = 'LayaTTFFont'),
            t
          );
        })()),
      A = (function() {
        function t(e) {
          (this._url = null),
            (this._path = null),
            (this._url = t.formatURL(e)),
            (this._path = t.getPath(e));
        }
        a(t, 'laya.net.URL');
        var e = t.prototype;
        return (
          r(0, e, 'path', function() {
            return this._path;
          }),
          r(0, e, 'url', function() {
            return this._url;
          }),
          (t.formatURL = function(e, i) {
            if (!e) return 'null path';
            if (e.indexOf(':') > 0) return e;
            null != t.customFormat && (e = t.customFormat(e, i));
            var n = e.charAt(0);
            if ('.' === n) return t.formatRelativePath((i || t.basePath) + e);
            if ('~' === n) return t.rootPath + e.substring(1);
            if ('d' === n) {
              if (0 === e.indexOf('data:image')) return e;
            } else if ('/' === n) return e;
            return (i || t.basePath) + e;
          }),
          (t.formatRelativePath = function(t) {
            for (var e = t.split('/'), i = 0, n = e.length; i < n; i++)
              '..' == e[i] && (e.splice(i - 1, 2), (i -= 2));
            return e.join('/');
          }),
          (t.isAbsolute = function(t) {
            return t.indexOf(':') > 0 || '/' == t.charAt(0);
          }),
          (t.getPath = function(t) {
            var e = t.lastIndexOf('/');
            return e > 0 ? t.substr(0, e + 1) : '';
          }),
          (t.getPathcaps = function(t) {
            var e = t.indexOf('/');
            if (e > 0) {
              var i = t.substr(0, e);
              return 'v' == i[0] &&
                i.indexOf('.') > 0 &&
                ('a' == i[i.length - 1] || 'w' == i[i.length - 1])
                ? this.getPath(t.substr(e + 1))
                : this.getPath(t);
            }
            return this.getPath(t);
          }),
          (t.getFileName = function(t) {
            var e = t.lastIndexOf('/');
            return e > 0 ? t.substr(e + 1) : t;
          }),
          (t.version = {}),
          (t.basePath = ''),
          (t.rootPath = ''),
          (t.customFormat = function(e) {
            var i = t.version[e];
            return !N.isConchApp && i && (e += '?v=' + i), e;
          }),
          t
        );
      })(),
      N = (function() {
        function e(t, n) {
          function a() {
            i.stage._loop(), O.window.requestAnimationFrame(a);
          }
          this._timeId = 0;
          var r = e._mainCanvas.source.style;
          (r.position = 'absolute'),
            (r.top = r.left = '0px'),
            (r.background = '#000000'),
            (e._mainCanvas.source.id = 'layaCanvas');
          var s = laya.renders.Render.isWebGL;
          (e._mainCanvas.source.width = t),
            (e._mainCanvas.source.height = n),
            s && e.WebGL.init(e._mainCanvas, t, n),
            O.container.appendChild(e._mainCanvas.source),
            (e._context = new R(
              t,
              n,
              s ? null : e._mainCanvas
            )).ctx.setIsMainContext(),
            O.window.requestAnimationFrame(a),
            i.stage.on('visibilitychange', this, this._onVisibilitychange);
        }
        a(e, 'laya.renders.Render');
        var n = e.prototype;
        return (
          (n._onVisibilitychange = function() {
            i.stage.isVisibility
              ? 0 != this._timeId && O.window.clearInterval(this._timeId)
              : (this._timeId = O.window.setInterval(this._enterFrame, 1e3));
          }),
          (n._enterFrame = function(t) {
            i.stage._loop();
          }),
          r(1, e, 'context', function() {
            return e._context;
          }),
          r(1, e, 'canvas', function() {
            return e._mainCanvas.source;
          }),
          (e._context = null),
          (e._mainCanvas = null),
          (e.WebGL = null),
          (e.isConchNode = !1),
          (e.isConchApp = !1),
          (e.isConchWebGL = !1),
          (e.isWebGL = !1),
          (e.is3DMode = !1),
          (e.optimizeTextureMemory = function(t, e) {
            return !0;
          }),
          (e.__init$ = function() {
            (t.ConchRenderType = t.ConchRenderType || 1),
              (t.ConchRenderType |= t.conch ? 4 : 0),
              (e.isConchNode = 5 == (5 & t.ConchRenderType)),
              (e.isConchApp = 4 == (4 & t.ConchRenderType)),
              (e.isConchWebGL = 6 == t.ConchRenderType);
          }),
          e
        );
      })(),
      R = (function() {
        function t(e, i, n) {
          (this.x = 0),
            (this.y = 0),
            (this._drawTexture = function(t, e, i) {
              i[0].loaded &&
                this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e);
            }),
            (this._fillTexture = function(t, e, i) {
              i[0].loaded &&
                this.ctx.fillTexture(
                  i[0],
                  i[1] + t,
                  i[2] + e,
                  i[3],
                  i[4],
                  i[5],
                  i[6],
                  i[7]
                );
            }),
            (this._drawTextureWithTransform = function(t, e, i) {
              i[0].loaded &&
                this.ctx.drawTextureWithTransform(
                  i[0],
                  i[1],
                  i[2],
                  i[3],
                  i[4],
                  i[5],
                  t,
                  e,
                  i[6]
                );
            }),
            (this._fillQuadrangle = function(t, e, i) {
              this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4]);
            }),
            (this._drawRect = function(t, e, i) {
              var n = this.ctx;
              null != i[4] &&
                ((n.fillStyle = i[4]),
                n.fillRect(t + i[0], e + i[1], i[2], i[3], null)),
                null != i[5] &&
                  ((n.strokeStyle = i[5]),
                  (n.lineWidth = i[6]),
                  n.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]));
            }),
            (this._drawPie = function(t, e, i) {
              var n = this.ctx;
              N.isWebGL && n.setPathId(i[8]),
                n.beginPath(),
                N.isWebGL
                  ? (n.movePath(i[0] + t, i[1] + e), n.moveTo(0, 0))
                  : n.moveTo(t + i[0], e + i[1]),
                n.arc(t + i[0], e + i[1], i[2], i[3], i[4]),
                n.closePath(),
                this._fillAndStroke(i[5], i[6], i[7], !0);
            }),
            (this._clipRect = function(t, e, i) {
              this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3]);
            }),
            (this._fillRect = function(t, e, i) {
              this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4]);
            }),
            (this._drawCircle = function(e, i, n) {
              var a = this.ctx;
              N.isWebGL && a.setPathId(n[6]),
                X.drawCall++,
                a.beginPath(),
                N.isWebGL && a.movePath(n[0] + e, n[1] + i),
                a.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2),
                a.closePath(),
                this._fillAndStroke(n[3], n[4], n[5], !0);
            }),
            (this._fillCircle = function(e, i, n) {
              X.drawCall++;
              var a = this.ctx;
              a.beginPath(),
                (a.fillStyle = n[3]),
                a.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2),
                a.fill();
            }),
            (this._setShader = function(t, e, i) {
              this.ctx.setShader(i[0]);
            }),
            (this._drawLine = function(t, e, i) {
              var n = this.ctx;
              N.isWebGL && n.setPathId(i[6]),
                n.beginPath(),
                (n.strokeStyle = i[4]),
                (n.lineWidth = i[5]),
                N.isWebGL
                  ? (n.movePath(t, e),
                    n.moveTo(i[0], i[1]),
                    n.lineTo(i[2], i[3]))
                  : (n.moveTo(t + i[0], e + i[1]),
                    n.lineTo(t + i[2], e + i[3])),
                n.stroke();
            }),
            (this._drawLines = function(t, e, i) {
              var n = this.ctx;
              N.isWebGL && n.setPathId(i[5]),
                n.beginPath(),
                (t += i[0]),
                (e += i[1]),
                N.isWebGL && n.movePath(t, e),
                (n.strokeStyle = i[3]),
                (n.lineWidth = i[4]);
              var a = i[2],
                r = 2,
                s = a.length;
              if (N.isWebGL)
                for (n.moveTo(a[0], a[1]); r < s; ) n.lineTo(a[r++], a[r++]);
              else
                for (n.moveTo(t + a[0], e + a[1]); r < s; )
                  n.lineTo(t + a[r++], e + a[r++]);
              n.stroke();
            }),
            (this._drawLinesWebGL = function(t, e, i) {
              this.ctx.drawLines(
                t + this.x + i[0],
                e + this.y + i[1],
                i[2],
                i[3],
                i[4]
              );
            }),
            (this._drawCurves = function(t, e, i) {
              this.ctx.drawCurves(t, e, i);
            }),
            (this._draw = function(t, e, i) {
              i[0].call(null, this, t, e);
            }),
            (this._transformByMatrix = function(t, e, i) {
              this.ctx.transformByMatrix(i[0]);
            }),
            (this._setTransform = function(t, e, i) {
              this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]);
            }),
            (this._setTransformByMatrix = function(t, e, i) {
              this.ctx.setTransformByMatrix(i[0]);
            }),
            (this._save = function(t, e, i) {
              this.ctx.save();
            }),
            (this._restore = function(t, e, i) {
              this.ctx.restore();
            }),
            (this._translate = function(t, e, i) {
              this.ctx.translate(i[0], i[1]);
            }),
            (this._transform = function(t, e, i) {
              this.ctx.translate(i[1] + t, i[2] + e);
              var n = i[0];
              this.ctx.transform(n.a, n.b, n.c, n.d, n.tx, n.ty),
                this.ctx.translate(-t - i[1], -e - i[2]);
            }),
            (this._rotate = function(t, e, i) {
              this.ctx.translate(i[1] + t, i[2] + e),
                this.ctx.rotate(i[0]),
                this.ctx.translate(-t - i[1], -e - i[2]);
            }),
            (this._scale = function(t, e, i) {
              this.ctx.translate(i[2] + t, i[3] + e),
                this.ctx.scale(i[0], i[1]),
                this.ctx.translate(-t - i[2], -e - i[3]);
            }),
            (this._alpha = function(t, e, i) {
              this.ctx.globalAlpha *= i[0];
            }),
            (this._setAlpha = function(t, e, i) {
              this.ctx.globalAlpha = i[0];
            }),
            (this._fillText = function(t, e, i) {
              this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5]);
            }),
            (this._strokeText = function(t, e, i) {
              this.ctx.strokeText(
                i[0],
                i[1] + t,
                i[2] + e,
                i[3],
                i[4],
                i[5],
                i[6]
              );
            }),
            (this._fillBorderText = function(t, e, i) {
              this.ctx.fillBorderText(
                i[0],
                i[1] + t,
                i[2] + e,
                i[3],
                i[4],
                i[5],
                i[6],
                i[7]
              );
            }),
            (this._blendMode = function(t, e, i) {
              this.ctx.globalCompositeOperation = i[0];
            }),
            (this._beginClip = function(t, e, i) {
              this.ctx.beginClip &&
                this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3]);
            }),
            (this._setIBVB = function(t, e, i) {
              this.ctx.setIBVB(
                i[0] + t,
                i[1] + e,
                i[2],
                i[3],
                i[4],
                i[5],
                i[6],
                i[7]
              );
            }),
            (this._fillTrangles = function(t, e, i) {
              this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4]);
            }),
            (this._drawPath = function(t, e, i) {
              var n = this.ctx;
              N.isWebGL && n.setPathId(-1),
                n.beginPath(),
                (t += i[0]),
                (e += i[1]),
                N.isWebGL && n.movePath(t, e);
              for (var a = i[2], r = 0, s = a.length; r < s; r++) {
                var o = a[r];
                switch (o[0]) {
                  case 'moveTo':
                    N.isWebGL
                      ? n.moveTo(o[1], o[2])
                      : n.moveTo(t + o[1], e + o[2]);
                    break;
                  case 'lineTo':
                    N.isWebGL
                      ? n.lineTo(o[1], o[2])
                      : n.lineTo(t + o[1], e + o[2]);
                    break;
                  case 'arcTo':
                    N.isWebGL
                      ? n.arcTo(o[1], o[2], o[3], o[4], o[5])
                      : n.arcTo(t + o[1], e + o[2], t + o[3], e + o[4], o[5]);
                    break;
                  case 'closePath':
                    n.closePath();
                }
              }
              var l = i[3];
              null != l && ((n.fillStyle = l.fillStyle), n.fill());
              var h = i[4];
              null != h &&
                ((n.strokeStyle = h.strokeStyle),
                (n.lineWidth = h.lineWidth || 1),
                (n.lineJoin = h.lineJoin),
                (n.lineCap = h.lineCap),
                (n.miterLimit = h.miterLimit),
                n.stroke());
            }),
            (this.drawPoly = function(t, e, i) {
              this.ctx.drawPoly(
                t + this.x + i[0],
                e + this.y + i[1],
                i[2],
                i[3],
                i[4],
                i[5],
                i[6]
              );
            }),
            (this._drawPoly = function(t, e, i) {
              var n = this.ctx,
                a = i[2],
                r = 2,
                s = a.length;
              if (N.isWebGL)
                for (
                  n.setPathId(i[6]),
                    n.beginPath(),
                    t += i[0],
                    e += i[1],
                    n.movePath(t, e),
                    n.moveTo(a[0], a[1]);
                  r < s;

                )
                  n.lineTo(a[r++], a[r++]);
              else
                for (
                  n.beginPath(),
                    t += i[0],
                    e += i[1],
                    n.moveTo(t + a[0], e + a[1]);
                  r < s;

                )
                  n.lineTo(t + a[r++], e + a[r++]);
              n.closePath(), this._fillAndStroke(i[3], i[4], i[5], i[7]);
            }),
            (this._drawSkin = function(t, e, i) {
              var n = i[0];
              if (n) {
                var a = this.ctx;
                n.render(a, t, e);
              }
            }),
            (this._drawParticle = function(t, e, i) {
              this.ctx.drawParticle(t + this.x, e + this.y, i[0]);
            }),
            (this._setFilters = function(t, e, i) {
              this.ctx.setFilters(i);
            }),
            n
              ? (this.ctx = n.getContext('2d'))
              : ((n = bt.create('3D')),
                (this.ctx = s.createWebGLContext2D(n)),
                n._setContext(this.ctx)),
            n.size(e, i),
            (this.canvas = n);
        }
        a(t, 'laya.renders.RenderContext');
        var e = t.prototype;
        return (
          (e.destroy = function() {
            this.canvas &&
              (this.canvas.destroy(), (this.canvas = null), (this.ctx = null)),
              this.ctx && (this.ctx.destroy(), (this.ctx = null));
          }),
          (e.drawTexture = function(t, e, i, n, a) {
            t.loaded && this.ctx.drawTexture(t, e, i, n, a, this.x, this.y);
          }),
          (e._drawTextures = function(t, e, i) {
            i[0].loaded &&
              this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y);
          }),
          (e.drawTextureWithTransform = function(t, e, i, n, a, r, s) {
            t.loaded &&
              this.ctx.drawTextureWithTransform(
                t,
                e,
                i,
                n,
                a,
                r,
                this.x,
                this.y,
                s
              );
          }),
          (e.fillQuadrangle = function(t, e, i, n, a) {
            this.ctx.fillQuadrangle(t, e, i, n, a);
          }),
          (e.drawCanvas = function(t, e, i, n, a) {
            this.ctx.drawCanvas(t, e + this.x, i + this.y, n, a);
          }),
          (e.drawRect = function(t, e, i, n, a, r) {
            void 0 === r && (r = 1);
            var s = this.ctx;
            (s.strokeStyle = a),
              (s.lineWidth = r),
              s.strokeRect(t + this.x, e + this.y, i, n, r);
          }),
          (e._fillAndStroke = function(t, e, i, n) {
            void 0 === n && (n = !1);
            var a = this.ctx;
            null != t && ((a.fillStyle = t), N.isWebGL ? a.fill(n) : a.fill()),
              null != e &&
                i > 0 &&
                ((a.strokeStyle = e), (a.lineWidth = i), a.stroke());
          }),
          (e.clipRect = function(t, e, i, n) {
            this.ctx.clipRect(t + this.x, e + this.y, i, n);
          }),
          (e.fillRect = function(t, e, i, n, a) {
            this.ctx.fillRect(t + this.x, e + this.y, i, n, a);
          }),
          (e.drawCircle = function(e, i, n, a, r) {
            void 0 === r && (r = 1), X.drawCall++;
            var s = this.ctx;
            s.beginPath(),
              (s.strokeStyle = a),
              (s.lineWidth = r),
              s.arc(e + this.x, i + this.y, n, 0, t.PI2),
              s.stroke();
          }),
          (e.drawTriangles = function(t, e, i) {
            if (N.isWebGL)
              this.ctx.drawTriangles(
                i[0],
                t + i[1],
                e + i[2],
                i[3],
                i[4],
                i[5],
                i[6],
                i[7],
                i[8],
                i[9]
              );
            else {
              var n = i[5],
                a = 0,
                r = n.length,
                s = this.ctx;
              for (a = 0; a < r; a += 3) {
                var o = 2 * n[a],
                  l = 2 * n[a + 1],
                  h = 2 * n[a + 2];
                s.drawTriangle(i[0], i[3], i[4], o, l, h, i[6], !0);
              }
            }
          }),
          (e.fillCircle = function(e, i, n, a) {
            X.drawCall++;
            var r = this.ctx;
            r.beginPath(),
              (r.fillStyle = a),
              r.arc(e + this.x, i + this.y, n, 0, t.PI2),
              r.fill();
          }),
          (e.setShader = function(t) {
            this.ctx.setShader(t);
          }),
          (e.drawLine = function(t, e, i, n, a, r) {
            void 0 === r && (r = 1);
            var s = this.ctx;
            s.beginPath(),
              (s.strokeStyle = a),
              (s.lineWidth = r),
              s.moveTo(this.x + t, this.y + e),
              s.lineTo(this.x + i, this.y + n),
              s.stroke();
          }),
          (e.clear = function() {
            this.ctx.clear();
          }),
          (e.transformByMatrix = function(t) {
            this.ctx.transformByMatrix(t);
          }),
          (e.setTransform = function(t, e, i, n, a, r) {
            this.ctx.setTransform(t, e, i, n, a, r);
          }),
          (e.setTransformByMatrix = function(t) {
            this.ctx.setTransformByMatrix(t);
          }),
          (e.save = function() {
            this.ctx.save();
          }),
          (e.restore = function() {
            this.ctx.restore();
          }),
          (e.translate = function(t, e) {
            this.ctx.translate(t, e);
          }),
          (e.transform = function(t, e, i, n, a, r) {
            this.ctx.transform(t, e, i, n, a, r);
          }),
          (e.rotate = function(t) {
            this.ctx.rotate(t);
          }),
          (e.scale = function(t, e) {
            this.ctx.scale(t, e);
          }),
          (e.alpha = function(t) {
            this.ctx.globalAlpha *= t;
          }),
          (e.setAlpha = function(t) {
            this.ctx.globalAlpha = t;
          }),
          (e.fillWords = function(t, e, i, n, a, r) {
            void 0 === r && (r = 0), this.ctx.fillWords(t, e, i, n, a, r);
          }),
          (e.fillBorderWords = function(t, e, i, n, a, r, s) {
            this.ctx.fillBorderWords(t, e, i, n, a, r, s);
          }),
          (e.fillText = function(t, e, i, n, a, r) {
            this.ctx.fillText(t, e + this.x, i + this.y, n, a, r);
          }),
          (e.strokeText = function(t, e, i, n, a, r, s) {
            this.ctx.strokeText(t, e + this.x, i + this.y, n, a, r, s);
          }),
          (e.blendMode = function(t) {
            this.ctx.globalCompositeOperation = t;
          }),
          (e.flush = function() {
            this.ctx.flush && this.ctx.flush();
          }),
          (e.addRenderObject = function(t) {
            this.ctx.addRenderObject(t);
          }),
          (e.beginClip = function(t, e, i, n) {
            this.ctx.beginClip && this.ctx.beginClip(t, e, i, n);
          }),
          (e.endClip = function() {
            this.ctx.endClip && this.ctx.endClip();
          }),
          (e.fillTrangles = function(t, e, i) {
            this.ctx.fillTrangles(
              i[0],
              i[1],
              i[2],
              i[3],
              i.length > 4 ? i[4] : null
            );
          }),
          (t.PI2 = 2 * Math.PI),
          t
        );
      })(),
      B = (function() {
        function t(e, i) {
          switch (((this._next = i || t.NORENDER), e)) {
            case 0:
              return void (this._fun = this._no);
            case 1:
              return void (this._fun = this._image);
            case 2:
              return void (this._fun = this._alpha);
            case 4:
              return void (this._fun = this._transform);
            case 8:
              return void (this._fun = this._blend);
            case 16:
              return void (this._fun = this._canvas);
            case 64:
              return void (this._fun = this._mask);
            case 128:
              return void (this._fun = this._clip);
            case 256:
              return void (this._fun = this._style);
            case 512:
              return void (this._fun = this._graphics);
            case 2048:
              return void (this._fun = this._childs);
            case 1024:
              return void (this._fun = this._custom);
            case 513:
            case 517:
              return void (this._fun = this._image2);
            case 32:
              return void (this._fun = b._filter);
            case 69905:
              return void (this._fun = t._initRenderFun);
          }
          this.onCreate(e);
        }
        a(t, 'laya.renders.RenderSprite');
        var e = t.prototype;
        return (
          (e.onCreate = function(t) {}),
          (e._style = function(t, e, i, n) {
            t._style.render(t, e, i, n);
            var a = this._next;
            a._fun.call(a, t, e, i, n);
          }),
          (e._no = function(t, e, i, n) {}),
          (e._custom = function(t, e, i, n) {
            t.customRender(e, i, n);
            var a = t._style._tf;
            this._next._fun.call(
              this._next,
              t,
              e,
              i - a.translateX,
              n - a.translateY
            );
          }),
          (e._clip = function(e, i, n, a) {
            var r = this._next;
            if (r != t.NORENDER) {
              var s = e._style.scrollRect;
              i.ctx.save(),
                i.ctx.clipRect(n, a, s.width, s.height),
                r._fun.call(r, e, i, n - s.x, a - s.y),
                i.ctx.restore();
            }
          }),
          (e._blend = function(t, e, i, n) {
            var a = t._style;
            a.blendMode && (e.ctx.globalCompositeOperation = a.blendMode);
            var r = this._next;
            r._fun.call(r, t, e, i, n),
              (e.ctx.globalCompositeOperation = 'source-over');
          }),
          (e._mask = function(t, e, i, n) {
            var a = this._next;
            a._fun.call(a, t, e, i, n);
            var r = t.mask;
            r &&
              ((e.ctx.globalCompositeOperation = 'destination-in'),
              (r.numChildren > 0 || !r.graphics._isOnlyOne()) &&
                (r.cacheAsBitmap = !0),
              r.render(e, i - t.pivotX, n - t.pivotY)),
              (e.ctx.globalCompositeOperation = 'source-over');
          }),
          (e._graphics = function(t, e, i, n) {
            var a = t._style._tf;
            t._graphics &&
              t._graphics._render(t, e, i - a.translateX, n - a.translateY);
            var r = this._next;
            r._fun.call(r, t, e, i, n);
          }),
          (e._image = function(t, e, i, n) {
            var a = t._style;
            e.ctx.drawTexture2(
              i,
              n,
              a._tf.translateX,
              a._tf.translateY,
              t.transform,
              a.alpha,
              a.blendMode,
              t._graphics._one
            );
          }),
          (e._image2 = function(t, e, i, n) {
            var a = t._style._tf;
            e.ctx.drawTexture2(
              i,
              n,
              a.translateX,
              a.translateY,
              t.transform,
              1,
              null,
              t._graphics._one
            );
          }),
          (e._alpha = function(t, e, i, n) {
            var a;
            if ((a = t._style.alpha) > 0.01 || t._needRepaint()) {
              var r = e.ctx.globalAlpha;
              e.ctx.globalAlpha *= a;
              var s = this._next;
              s._fun.call(s, t, e, i, n), (e.ctx.globalAlpha = r);
            }
          }),
          (e._transform = function(e, i, n, a) {
            var r = e.transform,
              s = this._next;
            r && s != t.NORENDER
              ? (i.save(),
                i.transform(r.a, r.b, r.c, r.d, r.tx + n, r.ty + a),
                s._fun.call(s, e, i, 0, 0),
                i.restore())
              : s._fun.call(s, e, i, n, a);
          }),
          (e._childs = function(t, e, i, n) {
            var a = t._style,
              r = a._tf;
            if (
              ((i = i - r.translateX + a.paddingLeft),
              (n = n - r.translateY + a.paddingTop),
              a._calculation)
            ) {
              var s = t._getWords();
              if (s) {
                var o = a;
                o &&
                  (o.stroke
                    ? e.fillBorderWords(
                        s,
                        i,
                        n,
                        o.font,
                        o.color,
                        o.strokeColor,
                        o.stroke
                      )
                    : e.fillWords(
                        s,
                        i,
                        n,
                        o.font,
                        o.color,
                        'none' != o.textDecoration && o.underLine ? 1 : 0
                      ));
              }
            }
            var l,
              h = t._childs,
              c = h.length;
            if (t.viewport || (t.optimizeScrollRect && t._style.scrollRect)) {
              var u = t.viewport || t._style.scrollRect,
                _ = u.x,
                d = u.y,
                f = u.right,
                p = u.bottom,
                m = NaN,
                g = NaN;
              for (y = 0; y < c; ++y)
                (l = h[y]).visible &&
                  (m = l._x) < f &&
                  m + l.width > _ &&
                  (g = l._y) < p &&
                  g + l.height > d &&
                  l.render(e, i, n);
            } else
              for (var y = 0; y < c; ++y)
                (l = h[y])._style.visible && l.render(e, i, n);
          }),
          (e._canvas = function(t, e, i, n) {
            var a = t._$P.cacheCanvas;
            if (a) {
              'bitmap' === a.type ? X.canvasBitmap++ : X.canvasNormal++;
              var r = a.ctx;
              if (t._needRepaint() || !r) this._canvas_repaint(t, e, i, n);
              else {
                var s = a._cacheRec;
                e.drawCanvas(r.canvas, i + s.x, n + s.y, s.width, s.height);
              }
            } else this._next._fun.call(this._next, t, e, i, n);
          }),
          (e._canvas_repaint = function(t, e, n, a) {
            var r = t._$P.cacheCanvas,
              s = this._next;
            if (r) {
              var o,
                l,
                h,
                c,
                u = r.ctx,
                _ = t._needRepaint() || !u,
                d = r.type;
              if (('bitmap' === d ? X.canvasBitmap++ : X.canvasNormal++, _)) {
                r._cacheRec || (r._cacheRec = new M());
                var f, p;
                N.isWebGL && 'bitmap' !== d
                  ? r._cacheRec.setTo(-t.pivotX, -t.pivotY, 1, 1)
                  : (((c = t.getSelfBounds()).x = c.x - t.pivotX),
                    (c.y = c.y - t.pivotY),
                    (c.x = c.x - 16),
                    (c.y = c.y - 16),
                    (c.width = c.width + 32),
                    (c.height = c.height + 32),
                    (c.x = Math.floor(c.x + n) - n),
                    (c.y = Math.floor(c.y + a) - a),
                    (c.width = Math.floor(c.width)),
                    (c.height = Math.floor(c.height)),
                    r._cacheRec.copyFrom(c)),
                  (c = r._cacheRec);
                var m = N.isWebGL ? 1 : O.pixelRatio * i.stage.clientScaleX,
                  g = N.isWebGL ? 1 : O.pixelRatio * i.stage.clientScaleY;
                if (!N.isWebGL) {
                  var y,
                    v = 1,
                    b = 1;
                  for (y = t; y && y != i.stage; )
                    (v *= y.scaleX), (b *= y.scaleY), (y = y.parent);
                  N.isWebGL
                    ? (v < 1 && (m *= v), b < 1 && (g *= b))
                    : (v > 1 && (m *= v), b > 1 && (g *= b));
                }
                if (t.scrollRect) {
                  var w = t.scrollRect;
                  (c.x -= w.x), (c.y -= w.y);
                }
                if (
                  ((f = c.width * m),
                  (p = c.height * g),
                  (l = c.x),
                  (h = c.y),
                  N.isWebGL && 'bitmap' === d && (f > 2048 || p > 2048))
                )
                  return (
                    console.warn(
                      'cache bitmap size larger than 2048,cache ignored'
                    ),
                    r.ctx &&
                      (W.recover('RenderContext', r.ctx),
                      r.ctx.canvas.size(0, 0),
                      (r.ctx = null)),
                    void s._fun.call(s, t, e, n, a)
                  );
                u ||
                  (u = r.ctx =
                    W.getItem('RenderContext') ||
                    new R(f, p, bt.create('AUTO'))),
                  (u.ctx.sprite = t),
                  (o = u.canvas).clear(),
                  (o.width != f || o.height != p) && o.size(f, p),
                  'bitmap' === d
                    ? (o.context.asBitmap = !0)
                    : 'normal' === d && (o.context.asBitmap = !1);
                var x;
                if (1 != m || 1 != g) {
                  var I = u.ctx;
                  I.save(),
                    I.scale(m, g),
                    !N.isConchWebGL &&
                      N.isConchApp &&
                      (x = t._$P.cf) &&
                      I.setFilterMatrix &&
                      I.setFilterMatrix(x._mat, x._alpha),
                    s._fun.call(s, t, u, -l, -h),
                    I.restore(),
                    (N.isConchApp && !N.isConchWebGL) || t._applyFilters();
                } else
                  (I = u.ctx),
                    !N.isConchWebGL &&
                      N.isConchApp &&
                      (x = t._$P.cf) &&
                      I.setFilterMatrix &&
                      I.setFilterMatrix(x._mat, x._alpha),
                    s._fun.call(s, t, u, -l, -h),
                    (N.isConchApp && !N.isConchWebGL) || t._applyFilters();
                t._$P.staticCache && (r.reCache = !1), X.canvasReCache++;
              } else (l = (c = r._cacheRec).x), (h = c.y), (o = u.canvas);
              e.drawCanvas(o, n + l, a + h, c.width, c.height);
            } else s._fun.call(s, t, u, n, a);
          }),
          (t.__init__ = function() {
            var e,
              i = 0,
              n = 0;
            for (
              e = s.createRenderSprite(69905, null),
                n = t.renders.length = 4096,
                i = 0;
              i < n;
              i++
            )
              t.renders[i] = e;
            (t.renders[0] = s.createRenderSprite(0, null)),
              (function(e, i) {
                for (var n = 0, a = 0; a < e.length; a++)
                  (n |= e[a]), (t.renders[n] = i);
              })([1, 512, 4, 2], new t(1, null)),
              (t.renders[513] = s.createRenderSprite(513, null)),
              (t.renders[517] = new t(517, null));
          }),
          (t._initRenderFun = function(e, i, n, a) {
            var r = e._renderType;
            (t.renders[r] = t._getTypeRender(r))._fun(e, i, n, a);
          }),
          (t._getTypeRender = function(t) {
            for (var e = null, i = 2048; i > 1; )
              i & t && (e = s.createRenderSprite(i, e)), (i >>= 1);
            return e;
          }),
          (t.IMAGE = 1),
          (t.ALPHA = 2),
          (t.TRANSFORM = 4),
          (t.BLEND = 8),
          (t.CANVAS = 16),
          (t.FILTERS = 32),
          (t.MASK = 64),
          (t.CLIP = 128),
          (t.STYLE = 256),
          (t.GRAPHICS = 512),
          (t.CUSTOM = 1024),
          (t.CHILDS = 2048),
          (t.INIT = 69905),
          (t.renders = []),
          (t.NORENDER = new t(0, null)),
          t
        );
      })(),
      k = (function() {
        function t() {
          this._repaint = !1;
        }
        a(t, 'laya.resource.Context');
        var e = t.prototype;
        return (
          (e.replaceReset = function() {
            var e = 0,
              i = 0;
            i = t.replaceKeys.length;
            var n;
            for (e = 0; e < i; e++)
              (n = t.replaceKeys[e]), (this[t.newKeys[e]] = this[n]);
          }),
          (e.replaceResotre = function() {
            this.__restore(), this.__reset();
          }),
          (e.setIsMainContext = function() {}),
          (e.drawTextures = function(t, e, i, n) {
            X.drawCall += e.length / 2;
            for (
              var a = t.width, r = t.height, s = 0, o = e.length;
              s < o;
              s += 2
            )
              this.drawTexture(t, e[s], e[s + 1], a, r, i, n);
          }),
          (e.drawCanvas = function(t, e, i, n, a) {
            X.drawCall++, this.drawImage(t.source, e, i, n, a);
          }),
          (e.fillRect = function(t, e, i, n, a) {
            X.drawCall++,
              a && (this.fillStyle = a),
              this.__fillRect(t, e, i, n);
          }),
          (e.fillText = function(t, e, i, n, a, r) {
            X.drawCall++,
              arguments.length > 3 &&
                null != n &&
                ((this.font = n),
                (this.fillStyle = a),
                (this.textAlign = r),
                (this.textBaseline = 'top')),
              this.__fillText(t, e, i);
          }),
          (e.fillBorderText = function(t, e, i, n, a, r, s, o) {
            X.drawCall++,
              (this.font = n),
              (this.fillStyle = a),
              (this.textBaseline = 'top'),
              (this.strokeStyle = r),
              (this.lineWidth = s),
              (this.textAlign = o),
              this.__strokeText(t, e, i),
              this.__fillText(t, e, i);
          }),
          (e.strokeText = function(t, e, i, n, a, r, s) {
            X.drawCall++,
              arguments.length > 3 &&
                null != n &&
                ((this.font = n),
                (this.strokeStyle = a),
                (this.lineWidth = r),
                (this.textAlign = s),
                (this.textBaseline = 'top')),
              this.__strokeText(t, e, i);
          }),
          (e.transformByMatrix = function(t) {
            this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty);
          }),
          (e.setTransformByMatrix = function(t) {
            this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty);
          }),
          (e.clipRect = function(t, e, i, n) {
            X.drawCall++, this.beginPath(), this.rect(t, e, i, n), this.clip();
          }),
          (e.drawTexture = function(t, e, i, n, a, r, s) {
            X.drawCall++;
            var o = t.uv,
              l = t.bitmap.width,
              h = t.bitmap.height;
            this.drawImage(
              t.source,
              o[0] * l,
              o[1] * h,
              (o[2] - o[0]) * l,
              (o[5] - o[3]) * h,
              e + r,
              i + s,
              n,
              a
            );
          }),
          (e.drawTextureWithTransform = function(t, e, i, n, a, r, s, o, l) {
            X.drawCall++;
            var h = t.uv,
              c = t.bitmap.width,
              u = t.bitmap.height;
            this.save(),
              1 != l && (this.globalAlpha *= l),
              r
                ? (this.transform(r.a, r.b, r.c, r.d, r.tx + s, r.ty + o),
                  this.drawImage(
                    t.source,
                    h[0] * c,
                    h[1] * u,
                    (h[2] - h[0]) * c,
                    (h[5] - h[3]) * u,
                    e,
                    i,
                    n,
                    a
                  ))
                : this.drawImage(
                    t.source,
                    h[0] * c,
                    h[1] * u,
                    (h[2] - h[0]) * c,
                    (h[5] - h[3]) * u,
                    e + s,
                    i + o,
                    n,
                    a
                  ),
              this.restore();
          }),
          (e.drawTexture2 = function(t, e, i, n, a, r, s, o) {
            var l = o[0];
            if (l.loaded && l.bitmap && l.source) {
              X.drawCall++;
              var h = 1 !== r;
              if (h) {
                var c = this.globalAlpha;
                this.globalAlpha *= r;
              }
              var u = l.uv,
                _ = l.bitmap.width,
                d = l.bitmap.height;
              a
                ? (this.save(),
                  this.transform(a.a, a.b, a.c, a.d, a.tx + t, a.ty + e),
                  this.drawImage(
                    l.source,
                    u[0] * _,
                    u[1] * d,
                    (u[2] - u[0]) * _,
                    (u[5] - u[3]) * d,
                    o[1] - i,
                    o[2] - n,
                    o[3],
                    o[4]
                  ),
                  this.restore())
                : this.drawImage(
                    l.source,
                    u[0] * _,
                    u[1] * d,
                    (u[2] - u[0]) * _,
                    (u[5] - u[3]) * d,
                    o[1] - i + t,
                    o[2] - n + e,
                    o[3],
                    o[4]
                  ),
                h && (this.globalAlpha = c);
            }
          }),
          (e.fillTexture = function(t, e, i, n, a, r, s, o) {
            if (!o.pat) {
              if (t.uv != ct.DEF_UV) {
                var l = new bt('2D');
                l.getContext('2d'),
                  l.size(t.width, t.height),
                  l.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0),
                  (t = new ct(l));
              }
              o.pat = this.createPattern(t.bitmap.source, r);
            }
            var h = e,
              c = i,
              u = 0,
              _ = 0;
            s &&
              ((h += s.x % t.width),
              (c += s.y % t.height),
              (u -= s.x % t.width),
              (_ -= s.y % t.height)),
              this.translate(h, c),
              this.fillRect(u, _, n, a, o.pat),
              this.translate(-h, -c);
          }),
          (e.drawTriangle = function(t, e, i, n, a, r, s, o) {
            var l = t.bitmap,
              h = l.source,
              c = t.width,
              u = t.height,
              _ = l.width,
              d = l.height,
              f = i[n] * _,
              p = i[a] * _,
              m = i[r] * _,
              g = i[n + 1] * d,
              y = i[a + 1] * d,
              v = i[r + 1] * d,
              b = e[n],
              w = e[a],
              x = e[r],
              I = e[n + 1],
              C = e[a + 1],
              S = e[r + 1];
            if (o) {
              var T = (b + w + x) / 3,
                M = (I + C + S) / 3,
                E = b - T,
                L = I - M,
                D = Math.sqrt(E * E + L * L);
              (b = T + (E / D) * (D + 1)),
                (I = M + (L / D) * (D + 1)),
                (L = C - M),
                (w =
                  T + ((E = w - T) / (D = Math.sqrt(E * E + L * L))) * (D + 1)),
                (C = M + (L / D) * (D + 1)),
                (L = S - M),
                (x =
                  T + ((E = x - T) / (D = Math.sqrt(E * E + L * L))) * (D + 1)),
                (S = M + (L / D) * (D + 1));
            }
            this.save(),
              s && this.transform(s.a, s.b, s.c, s.d, s.tx, s.ty),
              this.beginPath(),
              this.moveTo(b, I),
              this.lineTo(w, C),
              this.lineTo(x, S),
              this.closePath(),
              this.clip();
            var A = 1 / (f * y + g * m + p * v - y * m - g * p - f * v),
              N = b * y + g * x + w * v - y * x - g * w - b * v,
              R = f * w + b * m + p * x - w * m - b * p - f * x,
              B =
                f * y * x +
                g * w * m +
                b * p * v -
                b * y * m -
                g * p * x -
                f * w * v,
              k = I * y + g * S + C * v - y * S - g * C - I * v,
              P = f * C + I * m + p * S - C * m - I * p - f * S,
              O =
                f * y * S +
                g * C * m +
                I * p * v -
                I * y * m -
                g * p * S -
                f * C * v;
            this.transform(N * A, k * A, R * A, P * A, B * A, O * A),
              this.drawImage(
                h,
                t.uv[0] * _,
                t.uv[1] * d,
                c,
                u,
                t.uv[0] * _,
                t.uv[1] * d,
                c,
                u
              ),
              this.restore();
          }),
          (e.flush = function() {
            return 0;
          }),
          (e.fillWords = function(t, e, i, n, a, r) {
            n && (this.font = n), a && (this.fillStyle = a);
            (this.textBaseline = 'top'), (this.textAlign = 'left');
            for (var s = 0, o = t.length; s < o; s++) {
              var l = t[s];
              if ((this.__fillText(l.char, l.x + e, l.y + i), 1 === r)) {
                var h = l.height,
                  c = 0.5 * l.style.letterSpacing;
                c || (c = 0),
                  this.beginPath(),
                  (this.strokeStyle = a),
                  (this.lineWidth = 1),
                  this.moveTo(e + l.x - c + 0.5, i + l.y + h + 0.5),
                  this.lineTo(e + l.x + l.width + c + 0.5, i + l.y + h + 0.5),
                  this.stroke();
              }
            }
          }),
          (e.fillBorderWords = function(t, e, i, n, a, r, s) {
            n && (this.font = n),
              a && (this.fillStyle = a),
              (this.textBaseline = 'top'),
              (this.lineWidth = s),
              (this.textAlign = 'left'),
              (this.strokeStyle = r);
            for (var o = 0, l = t.length; o < l; o++) {
              var h = t[o];
              this.__strokeText(h.char, h.x + e, h.y + i),
                this.__fillText(h.char, h.x + e, h.y + i);
            }
          }),
          (e.destroy = function() {
            this.canvas.width = this.canvas.height = 0;
          }),
          (e.clear = function() {
            this.clearRect(0, 0, this._canvas.width, this._canvas.height),
              (this._repaint = !1);
          }),
          (e.drawCurves = function(t, e, i) {
            this.beginPath(),
              (this.strokeStyle = i[3]),
              (this.lineWidth = i[4]);
            var n = i[2];
            (t += i[0]), (e += i[1]), this.moveTo(t + n[0], e + n[1]);
            for (var a = 2, r = n.length; a < r; )
              this.quadraticCurveTo(
                t + n[a++],
                e + n[a++],
                t + n[a++],
                e + n[a++]
              );
            this.stroke();
          }),
          (t.__init__ = function(t) {
            var e = laya.resource.Context.prototype;
            if (!(t = t || CanvasRenderingContext2D.prototype).inited) {
              (t.inited = !0),
                (t.__fillText = t.fillText),
                (t.__fillRect = t.fillRect),
                (t.__strokeText = t.strokeText);
              [
                'drawTextures',
                'drawTriangle',
                'fillWords',
                'fillBorderWords',
                'setIsMainContext',
                'fillRect',
                'strokeText',
                'fillTexture',
                'fillText',
                'transformByMatrix',
                'setTransformByMatrix',
                'clipRect',
                'drawTexture',
                'drawTexture2',
                'drawTextureWithTransform',
                'flush',
                'clear',
                'destroy',
                'drawCanvas',
                'fillBorderText',
                'drawCurves'
              ].forEach(function(i) {
                t[i] = e[i];
              });
            }
          }),
          (t.replaceCanvasGetSet = function(t, e) {
            var i = Object.getOwnPropertyDescriptor(t, e);
            if (!i || !i.configurable) return !1;
            var n,
              a = {};
            for (n in i) 'set' != n && (a[n] = i[n]);
            var r = i.set;
            return (
              (a.set = function(t) {
                r.call(this, t);
                var e = this.getContext('2d');
                e && '__reset' in e && e.__reset();
              }),
              Object.defineProperty(t, e, a),
              !0
            );
          }),
          (t.replaceGetSet = function(e, i) {
            var n = Object.getOwnPropertyDescriptor(e, i);
            if (!n || !n.configurable) return !1;
            var a,
              r = {};
            for (a in n) 'set' != a && (r[a] = n[a]);
            var s = n.set,
              o = '___' + i + '__';
            return (
              t.newKeys.push(o),
              (r.set = function(t) {
                t != this[o] && ((this[o] = t), s.call(this, t));
              }),
              Object.defineProperty(e, i, r),
              !0
            );
          }),
          (t._default = new t()),
          (t.newKeys = []),
          n(t, [
            'replaceKeys',
            function() {
              return (this.replaceKeys = ['font', 'fillStyle', 'textBaseline']);
            }
          ]),
          t
        );
      })(),
      P = (function() {
        function t(e) {
          (this._id = 0),
            (this._name = null),
            (this._resources = null),
            (this._memorySize = 0),
            (this._garbageCollectionRate = NaN),
            (this._isOverflow = !1),
            (this.autoRelease = !1),
            (this.autoReleaseMaxSize = 0),
            (this._id = ++t._uniqueIDCounter),
            (this._name = e || 'Content Manager'),
            (t._isResourceManagersSorted = !1),
            (this._memorySize = 0),
            (this._isOverflow = !1),
            (this.autoRelease = !1),
            (this.autoReleaseMaxSize = 536870912),
            (this._garbageCollectionRate = 0.2),
            t._resourceManagers.push(this),
            (this._resources = []);
        }
        a(t, 'laya.resource.ResourceManager');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.resource.IDispose': !0 }),
          (e.getResourceByIndex = function(t) {
            return this._resources[t];
          }),
          (e.getResourcesLength = function() {
            return this._resources.length;
          }),
          (e.addResource = function(t) {
            t.resourceManager && t.resourceManager.removeResource(t);
            return (
              -1 === this._resources.indexOf(t) &&
              ((t._resourceManager = this),
              this._resources.push(t),
              this.addSize(t.memorySize),
              !0)
            );
          }),
          (e.removeResource = function(t) {
            var e = this._resources.indexOf(t);
            return (
              -1 !== e &&
              (this._resources.splice(e, 1),
              (t._resourceManager = null),
              (this._memorySize -= t.memorySize),
              !0)
            );
          }),
          (e.unload = function() {
            for (
              var t = this._resources.slice(0, this._resources.length), e = 0;
              e < t.length;
              e++
            ) {
              t[e].destroy();
            }
            t.length = 0;
          }),
          (e.dispose = function() {
            if (this === t._systemResourceManager)
              throw new Error('systemResourceManager不能被释放！');
            t._resourceManagers.splice(t._resourceManagers.indexOf(this), 1),
              (t._isResourceManagersSorted = !1);
            for (
              var e = this._resources.slice(0, this._resources.length), i = 0;
              i < e.length;
              i++
            ) {
              var n = e[i];
              n.resourceManager.removeResource(n), n.destroy();
            }
            e.length = 0;
          }),
          (e.addSize = function(t) {
            t &&
              (this.autoRelease &&
                t > 0 &&
                this._memorySize + t > this.autoReleaseMaxSize &&
                this.garbageCollection(
                  (1 - this._garbageCollectionRate) * this.autoReleaseMaxSize
                ),
              (this._memorySize += t));
          }),
          (e.garbageCollection = function(t) {
            var e = this._resources;
            (e = e.slice()).sort(function(t, e) {
              if (!t || !e) throw new Error('a或b不能为空！');
              return t.released && e.released
                ? 0
                : t.released
                ? 1
                : e.released
                ? -1
                : t._lastUseFrameCount - e._lastUseFrameCount;
            });
            for (var i = X.loopCount, n = 0, a = e.length; n < a; n++) {
              var r = e[n];
              if (!(i - r._lastUseFrameCount > 1))
                return void (this._memorySize >= t && (this._isOverflow = !0));
              if ((r.releaseResource(), this._memorySize < t))
                return void (this._isOverflow = !1);
            }
          }),
          r(0, e, 'id', function() {
            return this._id;
          }),
          r(
            0,
            e,
            'name',
            function() {
              return this._name;
            },
            function(e) {
              (!e && '' === e) ||
                this._name === e ||
                ((this._name = e), (t._isResourceManagersSorted = !1));
            }
          ),
          r(0, e, 'memorySize', function() {
            return this._memorySize;
          }),
          r(1, t, 'systemResourceManager', function() {
            return t._systemResourceManager;
          }),
          (t.__init__ = function() {
            t.currentResourceManager = t.systemResourceManager;
          }),
          (t.getLoadedResourceManagerByIndex = function(e) {
            return t._resourceManagers[e];
          }),
          (t.getLoadedResourceManagersCount = function() {
            return t._resourceManagers.length;
          }),
          (t.recreateContentManagers = function(e) {
            void 0 === e && (e = !1);
            for (
              var i = t.currentResourceManager, n = 0;
              n < t._resourceManagers.length;
              n++
            ) {
              t.currentResourceManager = t._resourceManagers[n];
              for (
                var a = 0;
                a < t.currentResourceManager._resources.length;
                a++
              )
                t.currentResourceManager._resources[a].releaseResource(e),
                  t.currentResourceManager._resources[a].activeResource(e);
            }
            t.currentResourceManager = i;
          }),
          (t.releaseContentManagers = function(e) {
            void 0 === e && (e = !1);
            for (
              var i = t.currentResourceManager, n = 0;
              n < t._resourceManagers.length;
              n++
            ) {
              t.currentResourceManager = t._resourceManagers[n];
              for (
                var a = 0;
                a < t.currentResourceManager._resources.length;
                a++
              ) {
                var r = t.currentResourceManager._resources[a];
                !r.released && r.releaseResource(e);
              }
            }
            t.currentResourceManager = i;
          }),
          (t._uniqueIDCounter = 0),
          (t._isResourceManagersSorted = !1),
          (t._resourceManagers = []),
          n(t, [
            '_systemResourceManager',
            function() {
              return (this._systemResourceManager = new t(
                'System Resource Manager'
              ));
            },
            'currentResourceManager',
            function() {
              return (this.currentResourceManager = t._systemResourceManager);
            }
          ]),
          t
        );
      })(),
      O =
        ((function() {
          function t() {}
          a(t, 'laya.system.System'),
            (t.changeDefinition = function(t, e) {
              i[t] = e;
              var n = t + '=classObj';
              i._runScript(n);
            }),
            (t.__init__ = function() {
              N.isConchApp &&
                (conch.disableConchResManager(),
                conch.disableConchAutoRestoreLostedDevice());
            });
        })(),
        (function() {
          function n() {}
          return (
            a(n, 'laya.utils.Browser'),
            r(1, n, 'pixelRatio', function() {
              return (
                n.__init__(),
                n.userAgent.indexOf(
                  'Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)'
                ) > -1
                  ? 2
                  : s.getPixelRatio()
              );
            }),
            r(1, n, 'height', function() {
              return (
                n.__init__(),
                (i.stage && i.stage.canvasRotation
                  ? n.clientWidth
                  : n.clientHeight) * n.pixelRatio
              );
            }),
            r(1, n, 'clientWidth', function() {
              return (
                n.__init__(), n.window.innerWidth || n.document.body.clientWidth
              );
            }),
            r(1, n, 'window', function() {
              return n.__init__(), n._window;
            }),
            r(1, n, 'clientHeight', function() {
              return (
                n.__init__(),
                n.window.innerHeight ||
                  n.document.body.clientHeight ||
                  n.document.documentElement.clientHeight
              );
            }),
            r(1, n, 'width', function() {
              return (
                n.__init__(),
                (i.stage && i.stage.canvasRotation
                  ? n.clientHeight
                  : n.clientWidth) * n.pixelRatio
              );
            }),
            r(
              1,
              n,
              'container',
              function() {
                return (
                  n.__init__(),
                  n._container ||
                    (((n._container = n.createElement('div')).id =
                      'layaContainer'),
                    n.document.body.appendChild(n._container)),
                  n._container
                );
              },
              function(t) {
                n._container = t;
              }
            ),
            r(1, n, 'document', function() {
              return n.__init__(), n._document;
            }),
            (n.__init__ = function() {
              if (!n._window) {
                (n._window = s.getWindow()),
                  (n._document = n.window.document),
                  n._window.addEventListener(
                    'message',
                    function(t) {
                      laya.utils.Browser._onMessage(t);
                    },
                    !1
                  ),
                  (n.document.__createElement = n.document.createElement),
                  (t.requestAnimationFrame =
                    t.requestAnimationFrame ||
                    t.webkitRequestAnimationFrame ||
                    t.mozRequestAnimationFrame ||
                    t.oRequestAnimationFrame ||
                    t.msRequestAnimationFrame ||
                    function(e) {
                      return t.setTimeout(e, 1e3 / 60);
                    });
                var i = t.document.body.style;
                (i['-webkit-user-select'] = 'none'),
                  (i['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)'),
                  (n.userAgent = n.window.navigator.userAgent),
                  (n.onIOS = !!(n.u = n.userAgent).match(
                    /\(i[^;]+;(U;)? CPU.+Mac OS X/
                  )),
                  (n.onMobile = n.u.indexOf('Mobile') > -1),
                  (n.onIPhone = n.u.indexOf('iPhone') > -1),
                  (n.onMac = n.u.indexOf('Mac OS X') > -1),
                  (n.onIPad = n.u.indexOf('iPad') > -1),
                  (n.onAndroid =
                    n.u.indexOf('Android') > -1 || n.u.indexOf('Adr') > -1),
                  (n.onWP = n.u.indexOf('Windows Phone') > -1),
                  (n.onQQBrowser = n.u.indexOf('QQBrowser') > -1),
                  (n.onMQQBrowser =
                    n.u.indexOf('MQQBrowser') > -1 ||
                    (n.u.indexOf('Mobile') > -1 && n.u.indexOf('QQ') > -1)),
                  (n.onIE =
                    !!n.window.ActiveXObject || 'ActiveXObject' in n.window),
                  (n.onWeiXin = n.u.indexOf('MicroMessenger') > -1),
                  (n.onPC = !n.onMobile),
                  (n.onSafari = n.u.indexOf('Safari') > -1),
                  (n.onFirefox = n.u.indexOf('Firefox') > -1),
                  (n.onEdge = n.u.indexOf('Edge') > -1),
                  (n.onMiniGame = n.u.indexOf('MiniGame') > -1),
                  (n.onLimixiu = n.u.indexOf('limixiu') > -1),
                  (n.httpProtocol = 'http:' == n.window.location.protocol),
                  n.onMiniGame &&
                    null == n.window.focus &&
                    console.error(
                      '请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0'
                    ),
                  (n.webAudioEnabled = !!(
                    n.window.AudioContext ||
                    n.window.webkitAudioContext ||
                    n.window.mozAudioContext
                  )),
                  (n.soundType = n.webAudioEnabled
                    ? 'WEBAUDIOSOUND'
                    : 'AUDIOSOUND'),
                  (nt = n.webAudioEnabled ? at : et),
                  n.webAudioEnabled && at.initWebAudio(),
                  et._initMusicAudio(),
                  (n.enableTouch =
                    'ontouchstart' in t ||
                    (t.DocumentTouch && e instanceof DocumentTouch)),
                  t.focus(),
                  (E._soundClass = nt),
                  (E._musicClass = et),
                  (N._mainCanvas = N._mainCanvas || bt.create('2D')),
                  n.canvas ||
                    ((n.canvas = bt.create('2D')),
                    (n.context = n.canvas.getContext('2d')));
              }
            }),
            (n._onMessage = function(t) {
              if (t.data && 'size' == t.data.name) {
                if (
                  ((n.window.innerWidth = t.data.width),
                  (n.window.innerHeight = t.data.height),
                  (n.window.__innerHeight = t.data.clientHeight),
                  !n.document.createEvent)
                )
                  return void console.warn('no document.createEvent');
                var e = n.document.createEvent('HTMLEvents');
                return (
                  e.initEvent('resize', !1, !1), void n.window.dispatchEvent(e)
                );
              }
            }),
            (n.createElement = function(t) {
              return n.__init__(), n.document.__createElement(t);
            }),
            (n.getElementById = function(t) {
              return n.__init__(), n.document.getElementById(t);
            }),
            (n.removeElement = function(t) {
              t && t.parentNode && t.parentNode.removeChild(t);
            }),
            (n.now = function() {
              return s.now();
            }),
            (n._window = null),
            (n._document = null),
            (n._container = null),
            (n.userAgent = null),
            (n.u = null),
            (n.onIOS = !1),
            (n.onMac = !1),
            (n.onMobile = !1),
            (n.onIPhone = !1),
            (n.onIPad = !1),
            (n.onAndroid = !1),
            (n.onWP = !1),
            (n.onQQBrowser = !1),
            (n.onMQQBrowser = !1),
            (n.onSafari = !1),
            (n.onFirefox = !1),
            (n.onEdge = !1),
            (n.onIE = !1),
            (n.onWeiXin = !1),
            (n.onMiniGame = !1),
            (n.onLimixiu = !1),
            (n.onPC = !1),
            (n.httpProtocol = !1),
            (n.webAudioEnabled = !1),
            (n.soundType = null),
            (n.enableTouch = !1),
            (n.canvas = null),
            (n.context = null),
            (n.__init$ = function() {}),
            n
          );
        })()),
      U = (function() {
        function t(t) {
          (this._xd_ = !0),
            (this._allocated_ = 8),
            (this._pos_ = 0),
            (this._length = 0),
            t
              ? ((this._u8d_ = new Uint8Array(t)),
                (this._d_ = new DataView(this._u8d_.buffer)),
                (this._length = this._d_.byteLength))
              : this.___resizeBuffer(this._allocated_);
        }
        a(t, 'laya.utils.Byte');
        var e = t.prototype;
        return (
          (e.___resizeBuffer = function(t) {
            try {
              var e = new Uint8Array(t);
              null != this._u8d_ &&
                (this._u8d_.length <= t
                  ? e.set(this._u8d_)
                  : e.set(this._u8d_.subarray(0, t))),
                (this._u8d_ = e),
                (this._d_ = new DataView(e.buffer));
            } catch (e) {
              throw '___resizeBuffer err:' + t;
            }
          }),
          (e.getString = function() {
            return this.rUTF(this.getUint16());
          }),
          (e.getFloat32Array = function(t, e) {
            var i = t + e;
            i = i > this._length ? this._length : i;
            var n = new Float32Array(this._d_.buffer.slice(t, i));
            return (this._pos_ = i), n;
          }),
          (e.getUint8Array = function(t, e) {
            var i = t + e;
            i = i > this._length ? this._length : i;
            var n = new Uint8Array(this._d_.buffer.slice(t, i));
            return (this._pos_ = i), n;
          }),
          (e.getInt16Array = function(t, e) {
            var i = t + e;
            i = i > this._length ? this._length : i;
            var n = new Int16Array(this._d_.buffer.slice(t, i));
            return (this._pos_ = i), n;
          }),
          (e.getFloat32 = function() {
            if (this._pos_ + 4 > this._length)
              throw 'getFloat32 error - Out of bounds';
            var t = this._d_.getFloat32(this._pos_, this._xd_);
            return (this._pos_ += 4), t;
          }),
          (e.getFloat64 = function() {
            if (this._pos_ + 8 > this._length)
              throw 'getFloat64 error - Out of bounds';
            var t = this._d_.getFloat64(this._pos_, this._xd_);
            return (this._pos_ += 8), t;
          }),
          (e.writeFloat32 = function(t) {
            this.ensureWrite(this._pos_ + 4),
              this._d_.setFloat32(this._pos_, t, this._xd_),
              (this._pos_ += 4);
          }),
          (e.writeFloat64 = function(t) {
            this.ensureWrite(this._pos_ + 8),
              this._d_.setFloat64(this._pos_, t, this._xd_),
              (this._pos_ += 8);
          }),
          (e.getInt32 = function() {
            if (this._pos_ + 4 > this._length)
              throw 'getInt32 error - Out of bounds';
            var t = this._d_.getInt32(this._pos_, this._xd_);
            return (this._pos_ += 4), t;
          }),
          (e.getUint32 = function() {
            if (this._pos_ + 4 > this._length)
              throw 'getUint32 error - Out of bounds';
            var t = this._d_.getUint32(this._pos_, this._xd_);
            return (this._pos_ += 4), t;
          }),
          (e.writeInt32 = function(t) {
            this.ensureWrite(this._pos_ + 4),
              this._d_.setInt32(this._pos_, t, this._xd_),
              (this._pos_ += 4);
          }),
          (e.writeUint32 = function(t) {
            this.ensureWrite(this._pos_ + 4),
              this._d_.setUint32(this._pos_, t, this._xd_),
              (this._pos_ += 4);
          }),
          (e.getInt16 = function() {
            if (this._pos_ + 2 > this._length)
              throw 'getInt16 error - Out of bounds';
            var t = this._d_.getInt16(this._pos_, this._xd_);
            return (this._pos_ += 2), t;
          }),
          (e.getUint16 = function() {
            if (this._pos_ + 2 > this._length)
              throw 'getUint16 error - Out of bounds';
            var t = this._d_.getUint16(this._pos_, this._xd_);
            return (this._pos_ += 2), t;
          }),
          (e.writeUint16 = function(t) {
            this.ensureWrite(this._pos_ + 2),
              this._d_.setUint16(this._pos_, t, this._xd_),
              (this._pos_ += 2);
          }),
          (e.writeInt16 = function(t) {
            this.ensureWrite(this._pos_ + 2),
              this._d_.setInt16(this._pos_, t, this._xd_),
              (this._pos_ += 2);
          }),
          (e.getUint8 = function() {
            if (this._pos_ + 1 > this._length)
              throw 'getUint8 error - Out of bounds';
            return this._d_.getUint8(this._pos_++);
          }),
          (e.writeUint8 = function(t) {
            this.ensureWrite(this._pos_ + 1),
              this._d_.setUint8(this._pos_, t),
              this._pos_++;
          }),
          (e._getUInt8 = function(t) {
            return this._d_.getUint8(t);
          }),
          (e._getUint16 = function(t) {
            return this._d_.getUint16(t, this._xd_);
          }),
          (e._getMatrix = function() {
            return new S(
              this.getFloat32(),
              this.getFloat32(),
              this.getFloat32(),
              this.getFloat32(),
              this.getFloat32(),
              this.getFloat32()
            );
          }),
          (e.rUTF = function(t) {
            for (
              var e = '',
                i = this._pos_ + t,
                n = 0,
                a = String.fromCharCode,
                r = this._u8d_;
              this._pos_ < i;

            )
              (n = r[this._pos_++]) < 128
                ? 0 != n && (e += a(n))
                : (e += a(
                    n < 224
                      ? ((63 & n) << 6) | (127 & r[this._pos_++])
                      : n < 240
                      ? ((31 & n) << 12) |
                        ((127 & r[this._pos_++]) << 6) |
                        (127 & r[this._pos_++])
                      : ((15 & n) << 18) |
                        ((127 & r[this._pos_++]) << 12) |
                        ((r[this._pos_++] << 6) & 127) |
                        (127 & r[this._pos_++])
                  )),
                0;
            return e;
          }),
          (e.getCustomString = function(t) {
            for (
              var e = '', i = 0, n = 0, a = String.fromCharCode, r = this._u8d_;
              t > 0;

            )
              if ((n = r[this._pos_]) < 128) (e += a(n)), this._pos_++, t--;
              else
                for (i = n - 128, this._pos_++, t -= i; i > 0; )
                  (n = r[this._pos_++]),
                    (e += a((r[this._pos_++] << 8) | n)),
                    i--;
            return e;
          }),
          (e.clear = function() {
            (this._pos_ = 0), (this.length = 0);
          }),
          (e.__getBuffer = function() {
            return this._d_.buffer;
          }),
          (e.writeUTFBytes = function(t) {
            for (var e = 0, i = (t += '').length; e < i; e++) {
              var n = t.charCodeAt(e);
              n <= 127
                ? this.writeByte(n)
                : n <= 2047
                ? (this.ensureWrite(this._pos_ + 2),
                  this._u8d_.set([192 | (n >> 6), 128 | (63 & n)], this._pos_),
                  (this._pos_ += 2))
                : n <= 65535
                ? (this.ensureWrite(this._pos_ + 3),
                  this._u8d_.set(
                    [224 | (n >> 12), 128 | ((n >> 6) & 63), 128 | (63 & n)],
                    this._pos_
                  ),
                  (this._pos_ += 3))
                : (this.ensureWrite(this._pos_ + 4),
                  this._u8d_.set(
                    [
                      240 | (n >> 18),
                      128 | ((n >> 12) & 63),
                      128 | ((n >> 6) & 63),
                      128 | (63 & n)
                    ],
                    this._pos_
                  ),
                  (this._pos_ += 4));
            }
          }),
          (e.writeUTFString = function(t) {
            var e = this.pos;
            this.writeUint16(1), this.writeUTFBytes(t);
            var i = this.pos - e - 2;
            if (i >= 65536) throw 'writeUTFString byte len more than 65536';
            this._d_.setUint16(e, i, this._xd_);
          }),
          (e.readUTFString = function() {
            return this.readUTFBytes(this.getUint16());
          }),
          (e.getUTFString = function() {
            return this.readUTFString();
          }),
          (e.readUTFBytes = function(t) {
            if ((void 0 === t && (t = -1), 0 == t)) return '';
            var e = this.bytesAvailable;
            if (t > e) throw 'readUTFBytes error - Out of bounds';
            return (t = t > 0 ? t : e), this.rUTF(t);
          }),
          (e.getUTFBytes = function(t) {
            return void 0 === t && (t = -1), this.readUTFBytes(t);
          }),
          (e.writeByte = function(t) {
            this.ensureWrite(this._pos_ + 1),
              this._d_.setInt8(this._pos_, t),
              (this._pos_ += 1);
          }),
          (e.readByte = function() {
            if (this._pos_ + 1 > this._length)
              throw 'readByte error - Out of bounds';
            return this._d_.getInt8(this._pos_++);
          }),
          (e.getByte = function() {
            return this.readByte();
          }),
          (e.ensureWrite = function(t) {
            this._length < t && (this._length = t),
              this._allocated_ < t && (this.length = t);
          }),
          (e.writeArrayBuffer = function(t, e, i) {
            if (
              (void 0 === e && (e = 0), void 0 === i && (i = 0), e < 0 || i < 0)
            )
              throw 'writeArrayBuffer error - Out of bounds';
            0 == i && (i = t.byteLength - e), this.ensureWrite(this._pos_ + i);
            var n = new Uint8Array(t);
            this._u8d_.set(n.subarray(e, e + i), this._pos_), (this._pos_ += i);
          }),
          r(0, e, 'buffer', function() {
            var t = this._d_.buffer;
            return t.byteLength == this.length ? t : t.slice(0, this.length);
          }),
          r(
            0,
            e,
            'endian',
            function() {
              return this._xd_ ? 'littleEndian' : 'bigEndian';
            },
            function(t) {
              this._xd_ = 'littleEndian' == t;
            }
          ),
          r(
            0,
            e,
            'length',
            function() {
              return this._length;
            },
            function(t) {
              this._allocated_ < t
                ? this.___resizeBuffer(
                    (this._allocated_ = Math.floor(
                      Math.max(t, 2 * this._allocated_)
                    ))
                  )
                : this._allocated_ > t &&
                  this.___resizeBuffer((this._allocated_ = t)),
                (this._length = t);
            }
          ),
          r(
            0,
            e,
            'pos',
            function() {
              return this._pos_;
            },
            function(t) {
              this._pos_ = t;
            }
          ),
          r(0, e, 'bytesAvailable', function() {
            return this._length - this._pos_;
          }),
          (t.getSystemEndian = function() {
            if (!t._sysEndian) {
              var e = new ArrayBuffer(2);
              new DataView(e).setInt16(0, 256, !0),
                (t._sysEndian =
                  256 === new Int16Array(e)[0] ? 'littleEndian' : 'bigEndian');
            }
            return t._sysEndian;
          }),
          (t.BIG_ENDIAN = 'bigEndian'),
          (t.LITTLE_ENDIAN = 'littleEndian'),
          (t._sysEndian = null),
          t
        );
      })(),
      V = (function() {
        function t() {}
        return (
          a(t, 'laya.utils.CacheManager'),
          (t.regCacheByFunction = function(e, i) {
            t.unRegCacheByFunction(e, i);
            var n;
            (n = { tryDispose: e, getCacheList: i }), t._cacheList.push(n);
          }),
          (t.unRegCacheByFunction = function(e, i) {
            var n = 0,
              a = 0;
            for (a = t._cacheList.length, n = 0; n < a; n++)
              if (
                t._cacheList[n].tryDispose == e &&
                t._cacheList[n].getCacheList == i
              )
                return void t._cacheList.splice(n, 1);
          }),
          (t.forceDispose = function() {
            var e = 0,
              i = t._cacheList.length;
            for (e = 0; e < i; e++) t._cacheList[e].tryDispose(!0);
          }),
          (t.beginCheck = function(e) {
            void 0 === e && (e = 15e3), i.timer.loop(e, null, t._checkLoop);
          }),
          (t.stopCheck = function() {
            i.timer.clear(null, t._checkLoop);
          }),
          (t._checkLoop = function() {
            var e = t._cacheList;
            if (!(e.length < 1)) {
              var i = O.now(),
                n = 0,
                a = 0;
              for (
                a = n = e.length;
                n > 0 &&
                (t._index++,
                (t._index = t._index % a),
                e[t._index].tryDispose(!1),
                !(O.now() - i > t.loopTimeLimit));

              )
                n--;
            }
          }),
          (t.loopTimeLimit = 2),
          (t._cacheList = []),
          (t._index = 0),
          t
        );
      })(),
      F = (function() {
        function t() {}
        return (
          a(t, 'laya.utils.ClassUtils'),
          (t.regClass = function(e, i) {
            t._classMap[e] = i;
          }),
          (t.getRegClass = function(e) {
            return t._classMap[e];
          }),
          (t.getInstance = function(e) {
            var i = t.getClass(e);
            return i
              ? new i()
              : (console.warn('[error] Undefined class:', e), null);
          }),
          (t.createByJson = function(e, i, n, a, r) {
            'string' == typeof e && (e = JSON.parse(e));
            var s = e.props;
            if (
              !i &&
              !(i = r ? r.runWith(e) : t.getInstance(s.runtime || e.type))
            )
              return null;
            var o = e.child;
            if (o)
              for (var l = 0, h = o.length; l < h; l++) {
                var c = o[l];
                if (
                  ('render' !== c.props.name &&
                    'render' !== c.props.renderType) ||
                  !i._$set_itemRender
                )
                  if ('Graphic' == c.type) t.addGraphicsToSprite(c, i);
                  else if (t.isDrawType(c.type)) t.addGraphicToSprite(c, i, !0);
                  else {
                    var u = t.createByJson(c, null, n, a, r);
                    'Script' == c.type
                      ? u.hasOwnProperty('owner')
                        ? (u.owner = i)
                        : u.hasOwnProperty('target') && (u.target = i)
                      : 'mask' == c.props.renderType
                      ? (i.mask = u)
                      : i.addChild(u);
                  }
                else i.itemRender = c;
              }
            if (s)
              for (var _ in s) {
                var d = s[_];
                'var' === _ && n
                  ? (n[d] = i)
                  : d instanceof Array && 'function' == typeof i[_]
                  ? i[_].apply(i, d)
                  : (i[_] = d);
              }
            return (
              a && e.customProps && a.runWith([i, e]),
              i.created && i.created(),
              i
            );
          }),
          (t.addGraphicsToSprite = function(e, i) {
            var n;
            if ((n = e.child) && !(n.length < 1)) {
              var a;
              a = t._getGraphicsFromSprite(e, i);
              var r = 0,
                s = 0;
              e.props &&
                ((r = t._getObjVar(e.props, 'x', 0)),
                (s = t._getObjVar(e.props, 'y', 0))),
                0 != r && 0 != s && a.translate(r, s);
              var o = 0,
                l = 0;
              for (l = n.length, o = 0; o < l; o++)
                t._addGraphicToGraphics(n[o], a);
              0 != r && 0 != s && a.translate(-r, -s);
            }
          }),
          (t.addGraphicToSprite = function(e, i, n) {
            void 0 === n && (n = !1);
            var a;
            (a = n ? t._getGraphicsFromSprite(e, i) : i.graphics),
              t._addGraphicToGraphics(e, a);
          }),
          (t._getGraphicsFromSprite = function(t, e) {
            var i;
            if (!t || !t.props) return e.graphics;
            var n;
            switch ((n = t.props.renderType)) {
              case 'hit':
              case 'unHit':
                var a;
                e.hitArea || (e.hitArea = new j()),
                  (a = e.hitArea)[n] || (a[n] = new f()),
                  (i = a[n]);
            }
            return i || (i = e.graphics), i;
          }),
          (t._getTransformData = function(e) {
            var i;
            (e.hasOwnProperty('pivotX') || e.hasOwnProperty('pivotY')) &&
              (i = i || new S()).translate(
                -t._getObjVar(e, 'pivotX', 0),
                -t._getObjVar(e, 'pivotY', 0)
              );
            var n = t._getObjVar(e, 'scaleX', 1),
              a = t._getObjVar(e, 'scaleY', 1),
              r = t._getObjVar(e, 'rotation', 0);
            t._getObjVar(e, 'skewX', 0), t._getObjVar(e, 'skewY', 0);
            return (
              (1 == n && 1 == a && 0 == r) ||
                ((i = i || new S()).scale(n, a),
                i.rotate(0.0174532922222222 * r)),
              i
            );
          }),
          (t._addGraphicToGraphics = function(e, i) {
            var n;
            if ((n = e.props)) {
              var a;
              if ((a = t.DrawTypeDic[e.type])) {
                var r;
                r = i;
                var s,
                  o = t._getParams(n, a[1], a[2], a[3]);
                ((s = t._tM) || 1 != t._alpha) &&
                  (r.save(),
                  s && r.transform(s),
                  1 != t._alpha && r.alpha(t._alpha)),
                  r[a[0]].apply(r, o),
                  (s || 1 != t._alpha) && r.restore();
              }
            }
          }),
          (t._adptLineData = function(t) {
            return (
              (t[2] = parseFloat(t[0]) + parseFloat(t[2])),
              (t[3] = parseFloat(t[1]) + parseFloat(t[3])),
              t
            );
          }),
          (t._adptTextureData = function(t) {
            return (t[0] = st.getRes(t[0])), t;
          }),
          (t._adptLinesData = function(e) {
            return (e[2] = t._getPointListByStr(e[2])), e;
          }),
          (t.isDrawType = function(e) {
            return 'Image' != e && t.DrawTypeDic.hasOwnProperty(e);
          }),
          (t._getParams = function(e, i, n, a) {
            void 0 === n && (n = 0);
            var r;
            (r = t._temParam).length = i.length;
            var s = 0,
              o = 0;
            for (o = i.length, s = 0; s < o; s++)
              r[s] = t._getObjVar(e, i[s][0], i[s][1]);
            t._alpha = t._getObjVar(e, 'alpha', 1);
            var l;
            return (
              (l = t._getTransformData(e))
                ? (n || (n = 0),
                  l.translate(r[n], r[n + 1]),
                  (r[n] = r[n + 1] = 0),
                  (t._tM = l))
                : (t._tM = null),
              a && t[a] && (r = t[a](r)),
              r
            );
          }),
          (t._getPointListByStr = function(t) {
            var e,
              i = 0,
              n = 0;
            for (n = (e = t.split(',')).length, i = 0; i < n; i++)
              e[i] = parseFloat(e[i]);
            return e;
          }),
          (t._getObjVar = function(t, e, i) {
            return t.hasOwnProperty(e) ? t[e] : i;
          }),
          (t._temParam = []),
          (t._classMap = {
            Sprite: 'laya.display.Sprite',
            Text: 'laya.display.Text',
            Animation: 'laya.display.Animation',
            Skeleton: 'laya.ani.bone.Skeleton',
            Particle2D: 'laya.particle.Particle2D',
            div: 'laya.html.dom.HTMLDivElement',
            p: 'laya.html.dom.HTMLElement',
            img: 'laya.html.dom.HTMLImageElement',
            span: 'laya.html.dom.HTMLElement',
            br: 'laya.html.dom.HTMLBrElement',
            style: 'laya.html.dom.HTMLStyleElement',
            font: 'laya.html.dom.HTMLElement',
            a: 'laya.html.dom.HTMLElement',
            '#text': 'laya.html.dom.HTMLElement'
          }),
          (t.getClass = function(e) {
            var n = t._classMap[e] || e;
            return 'string' == typeof n ? i.__classmap[n] : n;
          }),
          (t._tM = null),
          (t._alpha = NaN),
          n(t, [
            'DrawTypeDic',
            function() {
              return (this.DrawTypeDic = {
                Rect: [
                  'drawRect',
                  [
                    ['x', 0],
                    ['y', 0],
                    ['width', 0],
                    ['height', 0],
                    ['fillColor', null],
                    ['lineColor', null],
                    ['lineWidth', 1]
                  ]
                ],
                Circle: [
                  'drawCircle',
                  [
                    ['x', 0],
                    ['y', 0],
                    ['radius', 0],
                    ['fillColor', null],
                    ['lineColor', null],
                    ['lineWidth', 1]
                  ]
                ],
                Pie: [
                  'drawPie',
                  [
                    ['x', 0],
                    ['y', 0],
                    ['radius', 0],
                    ['startAngle', 0],
                    ['endAngle', 0],
                    ['fillColor', null],
                    ['lineColor', null],
                    ['lineWidth', 1]
                  ]
                ],
                Image: [
                  'drawTexture',
                  [['x', 0], ['y', 0], ['width', 0], ['height', 0]]
                ],
                Texture: [
                  'drawTexture',
                  [
                    ['skin', null],
                    ['x', 0],
                    ['y', 0],
                    ['width', 0],
                    ['height', 0]
                  ],
                  1,
                  '_adptTextureData'
                ],
                FillTexture: [
                  'fillTexture',
                  [
                    ['skin', null],
                    ['x', 0],
                    ['y', 0],
                    ['width', 0],
                    ['height', 0],
                    ['repeat', null]
                  ],
                  1,
                  '_adptTextureData'
                ],
                FillText: [
                  'fillText',
                  [
                    ['text', ''],
                    ['x', 0],
                    ['y', 0],
                    ['font', null],
                    ['color', null],
                    ['textAlign', null]
                  ],
                  1
                ],
                Line: [
                  'drawLine',
                  [
                    ['x', 0],
                    ['y', 0],
                    ['toX', 0],
                    ['toY', 0],
                    ['lineColor', null],
                    ['lineWidth', 0]
                  ],
                  0,
                  '_adptLineData'
                ],
                Lines: [
                  'drawLines',
                  [
                    ['x', 0],
                    ['y', 0],
                    ['points', ''],
                    ['lineColor', null],
                    ['lineWidth', 0]
                  ],
                  0,
                  '_adptLinesData'
                ],
                Curves: [
                  'drawCurves',
                  [
                    ['x', 0],
                    ['y', 0],
                    ['points', ''],
                    ['lineColor', null],
                    ['lineWidth', 0]
                  ],
                  0,
                  '_adptLinesData'
                ],
                Poly: [
                  'drawPoly',
                  [
                    ['x', 0],
                    ['y', 0],
                    ['points', ''],
                    ['fillColor', null],
                    ['lineColor', null],
                    ['lineWidth', 1]
                  ],
                  0,
                  '_adptLinesData'
                ]
              });
            }
          ]),
          t
        );
      })(),
      H = (function() {
        function t(e) {
          if (((this._color = []), 'string' == typeof e)) {
            (this.strColor = e),
              null === e && (e = '#000000'),
              '#' == e.charAt(0) && (e = e.substr(1));
            var i = e.length;
            if (3 == i || 4 == i) {
              for (var n = '', a = 0; a < i; a++) n += e[a] + e[a];
              e = n;
            }
            var r = (this.numColor = parseInt(e, 16));
            if (8 == e.length)
              return void (this._color = [
                parseInt(e.substr(0, 2), 16) / 255,
                ((16711680 & r) >> 16) / 255,
                ((65280 & r) >> 8) / 255,
                (255 & r) / 255
              ]);
          } else (r = this.numColor = e), (this.strColor = J.toHexColor(r));
          (this._color = [
            ((16711680 & r) >> 16) / 255,
            ((65280 & r) >> 8) / 255,
            (255 & r) / 255,
            1
          ]),
            (this._color.__id = ++t._COLODID);
        }
        return (
          a(t, 'laya.utils.Color'),
          (t._initDefault = function() {
            t._DEFAULT = {};
            for (var e in t._COLOR_MAP)
              t._SAVE[e] = t._DEFAULT[e] = new t(t._COLOR_MAP[e]);
            return t._DEFAULT;
          }),
          (t._initSaveMap = function() {
            (t._SAVE_SIZE = 0), (t._SAVE = {});
            for (var e in t._DEFAULT) t._SAVE[e] = t._DEFAULT[e];
          }),
          (t.create = function(e) {
            var i = t._SAVE[e + ''];
            return null != i
              ? i
              : (t._SAVE_SIZE < 1e3 || t._initSaveMap(),
                (t._SAVE[e + ''] = new t(e)));
          }),
          (t._SAVE = {}),
          (t._SAVE_SIZE = 0),
          (t._COLOR_MAP = {
            white: '#FFFFFF',
            red: '#FF0000',
            green: '#00FF00',
            blue: '#0000FF',
            black: '#000000',
            yellow: '#FFFF00',
            gray: '#AAAAAA'
          }),
          (t._DEFAULT = t._initDefault()),
          (t._COLODID = 1),
          t
        );
      })(),
      G =
        ((function() {
          function t() {
            (this._values = []), (this._keys = []);
          }
          a(t, 'laya.utils.Dictionary');
          var e = t.prototype;
          (e.set = function(t, e) {
            var i = this.indexOf(t);
            i >= 0
              ? (this._values[i] = e)
              : (this._keys.push(t), this._values.push(e));
          }),
            (e.indexOf = function(t) {
              var e = this._keys.indexOf(t);
              return e >= 0
                ? e
                : ((t =
                    'string' == typeof t
                      ? Number(t)
                      : 'number' == typeof t
                      ? t.toString()
                      : t),
                  this._keys.indexOf(t));
            }),
            (e.get = function(t) {
              var e = this.indexOf(t);
              return e < 0 ? null : this._values[e];
            }),
            (e.remove = function(t) {
              var e = this.indexOf(t);
              return (
                e >= 0 &&
                (this._keys.splice(e, 1), this._values.splice(e, 1), !0)
              );
            }),
            (e.clear = function() {
              (this._values.length = 0), (this._keys.length = 0);
            }),
            r(0, e, 'values', function() {
              return this._values;
            }),
            r(0, e, 'keys', function() {
              return this._keys;
            });
        })(),
        (function() {
          function t() {
            (this.ratio = 0.92),
              (this.maxOffset = 60),
              (this._dragging = !1),
              (this._clickOnly = !0);
          }
          a(t, 'laya.utils.Dragging');
          var e = t.prototype;
          return (
            (e.start = function(t, e, n, a, r, s, o, l) {
              void 0 === l && (l = 0.92),
                this.clearTimer(),
                (this.target = t),
                (this.area = e),
                (this.hasInertia = n),
                (this.elasticDistance = e ? a : 0),
                (this.elasticBackTime = r),
                (this.data = s),
                (this._disableMouseEvent = o),
                (this.ratio = l),
                1 != t.globalScaleX || 1 != t.globalScaleY
                  ? (this._parent = t.parent)
                  : (this._parent = i.stage),
                (this._clickOnly = !0),
                (this._dragging = !0),
                (this._elasticRateX = this._elasticRateY = 1),
                (this._lastX = this._parent.mouseX),
                (this._lastY = this._parent.mouseY),
                i.stage.on('mouseup', this, this.onStageMouseUp),
                i.stage.on('mouseout', this, this.onStageMouseUp),
                i.timer.frameLoop(1, this, this.loop);
            }),
            (e.clearTimer = function() {
              i.timer.clear(this, this.loop),
                i.timer.clear(this, this.tweenMove),
                this._tween && (this._tween.recover(), (this._tween = null));
            }),
            (e.stop = function() {
              this._dragging &&
                ((y.instance.disableMouseEvent = !1),
                i.stage.off('mouseup', this, this.onStageMouseUp),
                i.stage.off('mouseout', this, this.onStageMouseUp),
                (this._dragging = !1),
                this.target && this.area && this.backToArea(),
                this.clear());
            }),
            (e.loop = function() {
              var t = this._parent.getMousePoint(),
                e = t.x,
                n = t.y,
                a = e - this._lastX,
                r = n - this._lastY;
              if (this._clickOnly) {
                if (
                  !(
                    Math.abs(a * i.stage._canvasTransform.getScaleX()) > 1 ||
                    Math.abs(r * i.stage._canvasTransform.getScaleY()) > 1
                  )
                )
                  return;
                (this._clickOnly = !1),
                  this._offsets || (this._offsets = []),
                  (this._offsets.length = 0),
                  this.target.event('dragstart', this.data),
                  (y.instance.disableMouseEvent = this._disableMouseEvent),
                  this.target._set$P('$_MOUSEDOWN', !1);
              } else this._offsets.push(a, r);
              (0 === a && 0 === r) ||
                ((this._lastX = e),
                (this._lastY = n),
                (this.target.x += a * this._elasticRateX),
                (this.target.y += r * this._elasticRateY),
                this.area && this.checkArea(),
                this.target.event('dragmove', this.data));
            }),
            (e.checkArea = function() {
              if (this.elasticDistance <= 0) this.backToArea();
              else {
                if (this.target.x < this.area.x)
                  var t = this.area.x - this.target.x;
                else
                  t =
                    this.target.x > this.area.x + this.area.width
                      ? this.target.x - this.area.x - this.area.width
                      : 0;
                if (
                  ((this._elasticRateX = Math.max(
                    0,
                    1 - t / this.elasticDistance
                  )),
                  this.target.y < this.area.y)
                )
                  var e = this.area.y - this.target.y;
                else
                  e =
                    this.target.y > this.area.y + this.area.height
                      ? this.target.y - this.area.y - this.area.height
                      : 0;
                this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance);
              }
            }),
            (e.backToArea = function() {
              (this.target.x = Math.min(
                Math.max(this.target.x, this.area.x),
                this.area.x + this.area.width
              )),
                (this.target.y = Math.min(
                  Math.max(this.target.y, this.area.y),
                  this.area.y + this.area.height
                ));
            }),
            (e.onStageMouseUp = function(t) {
              if (
                ((y.instance.disableMouseEvent = !1),
                i.stage.off('mouseup', this, this.onStageMouseUp),
                i.stage.off('mouseout', this, this.onStageMouseUp),
                i.timer.clear(this, this.loop),
                !this._clickOnly && this.target)
              )
                if (this.hasInertia) {
                  this._offsets.length < 1 &&
                    this._offsets.push(
                      this._parent.mouseX - this._lastX,
                      this._parent.mouseY - this._lastY
                    ),
                    (this._offsetX = this._offsetY = 0);
                  for (
                    var e = this._offsets.length,
                      n = Math.min(e, 6),
                      a = this._offsets.length - n,
                      r = e - 1;
                    r > a;
                    r--
                  )
                    (this._offsetY += this._offsets[r--]),
                      (this._offsetX += this._offsets[r]);
                  (this._offsetX = (this._offsetX / n) * 2),
                    (this._offsetY = (this._offsetY / n) * 2),
                    Math.abs(this._offsetX) > this.maxOffset &&
                      (this._offsetX =
                        this._offsetX > 0 ? this.maxOffset : -this.maxOffset),
                    Math.abs(this._offsetY) > this.maxOffset &&
                      (this._offsetY =
                        this._offsetY > 0 ? this.maxOffset : -this.maxOffset),
                    i.timer.frameLoop(1, this, this.tweenMove);
                } else
                  this.elasticDistance > 0 ? this.checkElastic() : this.clear();
            }),
            (e.checkElastic = function() {
              var t = NaN,
                e = NaN;
              if (
                (this.target.x < this.area.x
                  ? (t = this.area.x)
                  : this.target.x > this.area.x + this.area.width &&
                    (t = this.area.x + this.area.width),
                this.target.y < this.area.y
                  ? (e = this.area.y)
                  : this.target.y > this.area.y + this.area.height &&
                    (e = this.area.y + this.area.height),
                isNaN(t) && isNaN(e))
              )
                this.clear();
              else {
                var i = {};
                isNaN(t) || (i.x = t),
                  isNaN(e) || (i.y = e),
                  (this._tween = Y.to(
                    this.target,
                    i,
                    this.elasticBackTime,
                    z.sineOut,
                    h.create(this, this.clear),
                    0,
                    !1,
                    !1
                  ));
              }
            }),
            (e.tweenMove = function() {
              (this._offsetX *= this.ratio * this._elasticRateX),
                (this._offsetY *= this.ratio * this._elasticRateY),
                (this.target.x += this._offsetX),
                (this.target.y += this._offsetY),
                this.area && this.checkArea(),
                this.target.event('dragmove', this.data),
                ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) ||
                  this._elasticRateX < 0.5 ||
                  this._elasticRateY < 0.5) &&
                  (i.timer.clear(this, this.tweenMove),
                  this.elasticDistance > 0
                    ? this.checkElastic()
                    : this.clear());
            }),
            (e.clear = function() {
              if (this.target) {
                this.clearTimer();
                var t = this.target;
                (this.target = null),
                  (this._parent = null),
                  t.event('dragend', this.data);
              }
            }),
            t
          );
        })()),
      z = (function() {
        function t() {}
        return (
          a(t, 'laya.utils.Ease'),
          (t.linearNone = function(t, e, i, n) {
            return (i * t) / n + e;
          }),
          (t.linearIn = function(t, e, i, n) {
            return (i * t) / n + e;
          }),
          (t.linearInOut = function(t, e, i, n) {
            return (i * t) / n + e;
          }),
          (t.linearOut = function(t, e, i, n) {
            return (i * t) / n + e;
          }),
          (t.bounceIn = function(e, i, n, a) {
            return n - t.bounceOut(a - e, 0, n, a) + i;
          }),
          (t.bounceInOut = function(e, i, n, a) {
            return e < 0.5 * a
              ? 0.5 * t.bounceIn(2 * e, 0, n, a) + i
              : 0.5 * t.bounceOut(2 * e - a, 0, n, a) + 0.5 * n + i;
          }),
          (t.bounceOut = function(t, e, i, n) {
            return (t /= n) < 1 / 2.75
              ? i * (7.5625 * t * t) + e
              : t < 2 / 2.75
              ? i * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + e
              : t < 2.5 / 2.75
              ? i * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + e
              : i * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + e;
          }),
          (t.backIn = function(t, e, i, n, a) {
            return (
              void 0 === a && (a = 1.70158),
              i * (t /= n) * t * ((a + 1) * t - a) + e
            );
          }),
          (t.backInOut = function(t, e, i, n, a) {
            return (
              void 0 === a && (a = 1.70158),
              (t /= 0.5 * n) < 1
                ? 0.5 * i * (t * t * ((1 + (a *= 1.525)) * t - a)) + e
                : (i / 2) * ((t -= 2) * t * ((1 + (a *= 1.525)) * t + a) + 2) +
                  e
            );
          }),
          (t.backOut = function(t, e, i, n, a) {
            return (
              void 0 === a && (a = 1.70158),
              i * ((t = t / n - 1) * t * ((a + 1) * t + a) + 1) + e
            );
          }),
          (t.elasticIn = function(e, i, n, a, r, s) {
            void 0 === r && (r = 0), void 0 === s && (s = 0);
            var o;
            return 0 == e
              ? i
              : 1 == (e /= a)
              ? i + n
              : (s || (s = 0.3 * a),
                !r || (n > 0 && r < n) || (n < 0 && r < -n)
                  ? ((r = n), (o = s / 4))
                  : (o = (s / t.PI2) * Math.asin(n / r)),
                -r *
                  Math.pow(2, 10 * (e -= 1)) *
                  Math.sin(((e * a - o) * t.PI2) / s) +
                  i);
          }),
          (t.elasticInOut = function(e, i, n, a, r, s) {
            void 0 === r && (r = 0), void 0 === s && (s = 0);
            var o;
            return 0 == e
              ? i
              : 2 == (e /= 0.5 * a)
              ? i + n
              : (s || (s = a * (0.3 * 1.5)),
                !r || (n > 0 && r < n) || (n < 0 && r < -n)
                  ? ((r = n), (o = s / 4))
                  : (o = (s / t.PI2) * Math.asin(n / r)),
                e < 1
                  ? r *
                      Math.pow(2, 10 * (e -= 1)) *
                      Math.sin(((e * a - o) * t.PI2) / s) *
                      -0.5 +
                    i
                  : r *
                      Math.pow(2, -10 * (e -= 1)) *
                      Math.sin(((e * a - o) * t.PI2) / s) *
                      0.5 +
                    n +
                    i);
          }),
          (t.elasticOut = function(e, i, n, a, r, s) {
            void 0 === r && (r = 0), void 0 === s && (s = 0);
            var o;
            return 0 == e
              ? i
              : 1 == (e /= a)
              ? i + n
              : (s || (s = 0.3 * a),
                !r || (n > 0 && r < n) || (n < 0 && r < -n)
                  ? ((r = n), (o = s / 4))
                  : (o = (s / t.PI2) * Math.asin(n / r)),
                r * Math.pow(2, -10 * e) * Math.sin(((e * a - o) * t.PI2) / s) +
                  n +
                  i);
          }),
          (t.strongIn = function(t, e, i, n) {
            return i * (t /= n) * t * t * t * t + e;
          }),
          (t.strongInOut = function(t, e, i, n) {
            return (t /= 0.5 * n) < 1
              ? 0.5 * i * t * t * t * t * t + e
              : 0.5 * i * ((t -= 2) * t * t * t * t + 2) + e;
          }),
          (t.strongOut = function(t, e, i, n) {
            return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
          }),
          (t.sineInOut = function(t, e, i, n) {
            return 0.5 * -i * (Math.cos((Math.PI * t) / n) - 1) + e;
          }),
          (t.sineIn = function(e, i, n, a) {
            return -n * Math.cos((e / a) * t.HALF_PI) + n + i;
          }),
          (t.sineOut = function(e, i, n, a) {
            return n * Math.sin((e / a) * t.HALF_PI) + i;
          }),
          (t.quintIn = function(t, e, i, n) {
            return i * (t /= n) * t * t * t * t + e;
          }),
          (t.quintInOut = function(t, e, i, n) {
            return (t /= 0.5 * n) < 1
              ? 0.5 * i * t * t * t * t * t + e
              : 0.5 * i * ((t -= 2) * t * t * t * t + 2) + e;
          }),
          (t.quintOut = function(t, e, i, n) {
            return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
          }),
          (t.quartIn = function(t, e, i, n) {
            return i * (t /= n) * t * t * t + e;
          }),
          (t.quartInOut = function(t, e, i, n) {
            return (t /= 0.5 * n) < 1
              ? 0.5 * i * t * t * t * t + e
              : 0.5 * -i * ((t -= 2) * t * t * t - 2) + e;
          }),
          (t.quartOut = function(t, e, i, n) {
            return -i * ((t = t / n - 1) * t * t * t - 1) + e;
          }),
          (t.cubicIn = function(t, e, i, n) {
            return i * (t /= n) * t * t + e;
          }),
          (t.cubicInOut = function(t, e, i, n) {
            return (t /= 0.5 * n) < 1
              ? 0.5 * i * t * t * t + e
              : 0.5 * i * ((t -= 2) * t * t + 2) + e;
          }),
          (t.cubicOut = function(t, e, i, n) {
            return i * ((t = t / n - 1) * t * t + 1) + e;
          }),
          (t.quadIn = function(t, e, i, n) {
            return i * (t /= n) * t + e;
          }),
          (t.quadInOut = function(t, e, i, n) {
            return (t /= 0.5 * n) < 1
              ? 0.5 * i * t * t + e
              : 0.5 * -i * (--t * (t - 2) - 1) + e;
          }),
          (t.quadOut = function(t, e, i, n) {
            return -i * (t /= n) * (t - 2) + e;
          }),
          (t.expoIn = function(t, e, i, n) {
            return 0 == t
              ? e
              : i * Math.pow(2, 10 * (t / n - 1)) + e - 0.001 * i;
          }),
          (t.expoInOut = function(t, e, i, n) {
            return 0 == t
              ? e
              : t == n
              ? e + i
              : (t /= 0.5 * n) < 1
              ? 0.5 * i * Math.pow(2, 10 * (t - 1)) + e
              : 0.5 * i * (2 - Math.pow(2, -10 * --t)) + e;
          }),
          (t.expoOut = function(t, e, i, n) {
            return t == n ? e + i : i * (1 - Math.pow(2, (-10 * t) / n)) + e;
          }),
          (t.circIn = function(t, e, i, n) {
            return -i * (Math.sqrt(1 - (t /= n) * t) - 1) + e;
          }),
          (t.circInOut = function(t, e, i, n) {
            return (t /= 0.5 * n) < 1
              ? 0.5 * -i * (Math.sqrt(1 - t * t) - 1) + e
              : 0.5 * i * (Math.sqrt(1 - (t -= 2) * t) + 1) + e;
          }),
          (t.circOut = function(t, e, i, n) {
            return i * Math.sqrt(1 - (t = t / n - 1) * t) + e;
          }),
          (t.HALF_PI = 0.5 * Math.PI),
          (t.PI2 = 2 * Math.PI),
          t
        );
      })(),
      j = (function() {
        function t() {
          (this._hit = null), (this._unHit = null);
        }
        a(t, 'laya.utils.HitArea');
        var e = t.prototype;
        return (
          (e.isHit = function(e, i) {
            return (
              !!t.isHitGraphic(e, i, this.hit) &&
              !t.isHitGraphic(e, i, this.unHit)
            );
          }),
          (e.contains = function(t, e) {
            return this.isHit(t, e);
          }),
          r(
            0,
            e,
            'hit',
            function() {
              return this._hit || (this._hit = new f()), this._hit;
            },
            function(t) {
              this._hit = t;
            }
          ),
          r(
            0,
            e,
            'unHit',
            function() {
              return this._unHit || (this._unHit = new f()), this._unHit;
            },
            function(t) {
              this._unHit = t;
            }
          ),
          (t.isHitGraphic = function(e, i, n) {
            if (!n) return !1;
            var a;
            if (
              (!(a = n.cmds) &&
                n._one &&
                (((a = t._cmds).length = 1), (a[0] = n._one)),
              !a)
            )
              return !1;
            var r = 0,
              s = 0;
            s = a.length;
            var o;
            for (r = 0; r < s; r++)
              if ((o = a[r])) {
                var l = N._context;
                switch (o.callee) {
                  case l._translate:
                  case 6:
                    (e -= o[0]), (i -= o[1]);
                }
                if (t.isHitCmd(e, i, o)) return !0;
              }
            return !1;
          }),
          (t.isHitCmd = function(e, i, n) {
            if (!n) return !1;
            var a = N._context,
              r = !1;
            switch (n.callee) {
              case a._drawRect:
              case 13:
                t._rec.setTo(n[0], n[1], n[2], n[3]),
                  (r = t._rec.contains(e, i));
                break;
              case a._drawCircle:
              case a._fillCircle:
              case 14:
                r = (e -= n[0]) * e + (i -= n[1]) * i < n[2] * n[2];
                break;
              case a._drawPoly:
              case 18:
                (e -= n[0]), (i -= n[1]), (r = t.ptInPolygon(e, i, n[2]));
            }
            return r;
          }),
          (t.ptInPolygon = function(e, i, n) {
            var a;
            (a = t._ptPoint).setTo(e, i);
            var r = 0,
              s = NaN,
              o = NaN,
              l = NaN,
              h = NaN,
              c = 0;
            c = n.length;
            for (var u = 0; u < c; u += 2)
              if (
                ((s = n[u]),
                (o = n[u + 1]),
                (l = n[(u + 2) % c]),
                (h = n[(u + 3) % c]),
                o != h && !(a.y < Math.min(o, h) || a.y >= Math.max(o, h)))
              ) {
                ((a.y - o) * (l - s)) / (h - o) + s > a.x && r++;
              }
            return r % 2 == 1;
          }),
          (t._cmds = []),
          n(t, [
            '_rec',
            function() {
              return (this._rec = new M());
            },
            '_ptPoint',
            function() {
              return (this._ptPoint = new T());
            }
          ]),
          t
        );
      })(),
      W =
        ((function() {
          function t(e, i, n, a) {
            (this.char = e),
              (this.charNum = e.charCodeAt(0)),
              (this._x = this._y = 0),
              (this.width = i),
              (this.height = n),
              (this.style = a),
              (this.isWord = !t._isWordRegExp.test(e));
          }
          a(t, 'laya.utils.HTMLChar');
          var e = t.prototype;
          i.imps(e, { 'laya.display.ILayout': !0 }),
            (e.setSprite = function(t) {
              this._sprite = t;
            }),
            (e.getSprite = function() {
              return this._sprite;
            }),
            (e._isChar = function() {
              return !0;
            }),
            (e._getCSSStyle = function() {
              return this.style;
            }),
            r(
              0,
              e,
              'width',
              function() {
                return this._w;
              },
              function(t) {
                this._w = t;
              }
            ),
            r(
              0,
              e,
              'x',
              function() {
                return this._x;
              },
              function(t) {
                this._sprite && (this._sprite.x = t), (this._x = t);
              }
            ),
            r(
              0,
              e,
              'y',
              function() {
                return this._y;
              },
              function(t) {
                this._sprite && (this._sprite.y = t), (this._y = t);
              }
            ),
            r(
              0,
              e,
              'height',
              function() {
                return this._h;
              },
              function(t) {
                this._h = t;
              }
            ),
            (t._isWordRegExp = new RegExp('[\\w.]', ''));
        })(),
        (function() {
          function t() {}
          a(t, 'laya.utils.Log'),
            (t.enable = function() {
              t._logdiv ||
                ((t._logdiv = O.window.document.createElement('div')),
                O.window.document.body.appendChild(t._logdiv),
                (t._logdiv.style.cssText =
                  'pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;'));
            }),
            (t.toggle = function() {
              var e = t._logdiv.style;
              '1px' == e.width
                ? (e.width = e.height = '50%')
                : (e.width = e.height = '1px');
            }),
            (t.print = function(e) {
              t._logdiv &&
                (t._count >= t.maxCount && t.clear(),
                t._count++,
                (t._logdiv.innerText += e + '\n'),
                (t._logdiv.scrollTop = t._logdiv.scrollHeight));
            }),
            (t.clear = function() {
              (t._logdiv.innerText = ''), (t._count = 0);
            }),
            (t._logdiv = null),
            (t._count = 0),
            (t.maxCount = 20);
        })(),
        (function() {
          function t() {}
          a(t, 'laya.utils.Mouse'),
            r(
              1,
              t,
              'cursor',
              function() {
                return t._style.cursor;
              },
              function(e) {
                t._style.cursor = e;
              }
            ),
            (t.hide = function() {
              'none' != t.cursor &&
                ((t._preCursor = t.cursor), (t.cursor = 'none'));
            }),
            (t.show = function() {
              'none' == t.cursor &&
                (t.cursor = t._preCursor ? t._preCursor : 'auto');
            }),
            (t._preCursor = null),
            n(t, [
              '_style',
              function() {
                return (this._style = O.document.body.style);
              }
            ]);
        })(),
        (function() {
          function t() {}
          return (
            a(t, 'laya.utils.Pool'),
            (t.getPoolBySign = function(e) {
              return t._poolDic[e] || (t._poolDic[e] = []);
            }),
            (t.clearBySign = function(e) {
              t._poolDic[e] && (t._poolDic[e].length = 0);
            }),
            (t.recover = function(e, i) {
              i.__InPool || ((i.__InPool = !0), t.getPoolBySign(e).push(i));
            }),
            (t.getItemByClass = function(e, i) {
              var n = t.getPoolBySign(e),
                a = n.length ? n.pop() : new i();
              return (a.__InPool = !1), a;
            }),
            (t.getItemByCreateFun = function(e, i) {
              var n = t.getPoolBySign(e),
                a = n.length ? n.pop() : i();
              return (a.__InPool = !1), a;
            }),
            (t.getItem = function(e) {
              var i = t.getPoolBySign(e),
                n = i.length ? i.pop() : null;
              return n && (n.__InPool = !1), n;
            }),
            (t._poolDic = {}),
            (t.InPoolSign = '__InPool'),
            t
          );
        })()),
      X =
        ((function() {
          function t() {
            (this.sign = null), (this.maxCount = 1e3);
          }
          a(t, 'laya.utils.PoolCache');
          var e = t.prototype;
          (e.getCacheList = function() {
            return W.getPoolBySign(this.sign);
          }),
            (e.tryDispose = function(t) {
              var e;
              (e = W.getPoolBySign(this.sign)).length > this.maxCount &&
                e.splice(this.maxCount, e.length - this.maxCount);
            }),
            (t.addPoolCacheManager = function(e, i) {
              void 0 === i && (i = 100);
              var n;
              ((n = new t()).sign = e),
                (n.maxCount = i),
                V.regCacheByFunction(
                  J.bind(n.tryDispose, n),
                  J.bind(n.getCacheList, n)
                );
            });
        })(),
        (function() {
          function t() {}
          return (
            a(t, 'laya.utils.Stat'),
            r(1, t, 'onclick', null, function(e) {
              t._sp && t._sp.on('click', t._sp, e),
                t._canvas &&
                  ((t._canvas.source.onclick = e),
                  (t._canvas.source.style.pointerEvents = ''));
            }),
            (t.show = function(e, i) {
              void 0 === e && (e = 0),
                void 0 === i && (i = 0),
                !N.isConchApp || N.isConchWebGL
                  ? (N.isConchWebGL ||
                      O.onMiniGame ||
                      O.onLimixiu ||
                      (t._useCanvas = !0),
                    (t._show = !0),
                    (t._fpsData.length = 60),
                    (t._view[0] = {
                      title: 'FPS(Canvas)',
                      value: '_fpsStr',
                      color: 'yellow',
                      units: 'int'
                    }),
                    (t._view[1] = {
                      title: 'Sprite',
                      value: '_spriteStr',
                      color: 'white',
                      units: 'int'
                    }),
                    (t._view[2] = {
                      title: 'DrawCall',
                      value: 'drawCall',
                      color: 'white',
                      units: 'int'
                    }),
                    (t._view[3] = {
                      title: 'CurMem',
                      value: 'currentMemorySize',
                      color: 'yellow',
                      units: 'M'
                    }),
                    N.isWebGL
                      ? ((t._view[4] = {
                          title: 'Shader',
                          value: 'shaderCall',
                          color: 'white',
                          units: 'int'
                        }),
                        N.is3DMode
                          ? ((t._view[0].title = 'FPS(3D)'),
                            (t._view[5] = {
                              title: 'TriFaces',
                              value: 'trianglesFaces',
                              color: 'white',
                              units: 'int'
                            }),
                            (t._view[6] = {
                              title: 'treeNodeColl',
                              value: 'treeNodeCollision',
                              color: 'white',
                              units: 'int'
                            }),
                            (t._view[7] = {
                              title: 'treeSpriteColl',
                              value: 'treeSpriteCollision',
                              color: 'white',
                              units: 'int'
                            }))
                          : ((t._view[0].title = 'FPS(WebGL)'),
                            (t._view[5] = {
                              title: 'Canvas',
                              value: '_canvasStr',
                              color: 'white',
                              units: 'int'
                            })))
                      : (t._view[4] = {
                          title: 'Canvas',
                          value: '_canvasStr',
                          color: 'white',
                          units: 'int'
                        }),
                    t._useCanvas ? t.createUIPre(e, i) : t.createUI(e, i),
                    t.enable())
                  : O.window.conch.showFPS && O.window.conch.showFPS(e, i);
            }),
            (t.createUIPre = function(e, i) {
              var n = O.pixelRatio;
              (t._width = 130 * n),
                (t._vx = 75 * n),
                (t._height = n * (12 * t._view.length + 3 * n) + 4),
                (t._fontSize = 12 * n);
              for (var a = 0; a < t._view.length; a++)
                (t._view[a].x = 4), (t._view[a].y = a * t._fontSize + 2 * n);
              t._canvas ||
                ((t._canvas = new bt('2D')).size(t._width, t._height),
                ((t._ctx = t._canvas.getContext('2d')).textBaseline = 'top'),
                (t._ctx.font = t._fontSize + 'px Sans-serif'),
                (t._canvas.source.style.cssText =
                  'pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:' +
                  e +
                  'px;top:' +
                  i +
                  'px;width:' +
                  t._width / n +
                  'px;height:' +
                  t._height / n +
                  'px;')),
                (t._first = !0),
                t.loop(),
                (t._first = !1),
                O.container.appendChild(t._canvas.source);
            }),
            (t.createUI = function(e, i) {
              var n = t._sp,
                a = O.pixelRatio;
              n ||
                ((n = new _t()),
                (t._leftText = new gt()).pos(5, 5),
                (t._leftText.color = '#ffffff'),
                n.addChild(t._leftText),
                (t._txt = new gt()).pos(80 * a, 5),
                (t._txt.color = '#ffffff'),
                n.addChild(t._txt),
                (t._sp = n)),
                n.pos(e, i);
              for (var r = '', s = 0; s < t._view.length; s++) {
                r += t._view[s].title + '\n';
              }
              t._leftText.text = r;
              var o = 138 * a,
                l = a * (12 * t._view.length + 3 * a) + 4;
              (t._txt.fontSize = t._fontSize * a),
                (t._leftText.fontSize = t._fontSize * a),
                n.size(o, l),
                n.graphics.clear(),
                n.graphics.setAlpha(0.5),
                n.graphics.drawRect(0, 0, o, l, '#999999'),
                n.graphics.setAlpha(1),
                t.loop();
            }),
            (t.enable = function() {
              i.timer.frameLoop(1, t, t.loop);
            }),
            (t.hide = function() {
              (t._show = !1),
                i.timer.clear(t, t.loop),
                t._canvas && O.removeElement(t._canvas.source);
            }),
            (t.clear = function() {
              t.trianglesFaces = t.drawCall = t.shaderCall = t.spriteCount = t.spriteRenderUseCacheCount = t.treeNodeCollision = t.treeSpriteCollision = t.canvasNormal = t.canvasBitmap = t.canvasReCache = 0;
            }),
            (t.loop = function() {
              t._count++;
              var e = O.now();
              if (!(e - t._timer < 1e3)) {
                var i = t._count;
                if (
                  ((t.FPS = Math.round((1e3 * i) / (e - t._timer))), t._show)
                ) {
                  (t.trianglesFaces = Math.round(t.trianglesFaces / i)),
                    t._useCanvas
                      ? ((t.drawCall = Math.round(t.drawCall / i) - 2),
                        (t.shaderCall = Math.round(t.shaderCall / i)),
                        (t.spriteCount = Math.round(t.spriteCount / i) - 1))
                      : ((t.drawCall = Math.round(t.drawCall / i) - 2),
                        (t.shaderCall = Math.round(t.shaderCall / i) - 4),
                        (t.spriteCount = Math.round(t.spriteCount / i) - 4)),
                    (t.spriteRenderUseCacheCount = Math.round(
                      t.spriteRenderUseCacheCount / i
                    )),
                    (t.canvasNormal = Math.round(t.canvasNormal / i)),
                    (t.canvasBitmap = Math.round(t.canvasBitmap / i)),
                    (t.canvasReCache = Math.ceil(t.canvasReCache / i)),
                    (t.treeNodeCollision = Math.round(t.treeNodeCollision / i)),
                    (t.treeSpriteCollision = Math.round(
                      t.treeSpriteCollision / i
                    ));
                  var n = t.FPS > 0 ? Math.floor(1e3 / t.FPS).toString() : ' ';
                  (t._fpsStr = t.FPS + (t.renderSlow ? ' slow' : '') + ' ' + n),
                    (t._spriteStr =
                      t.spriteCount +
                      (t.spriteRenderUseCacheCount
                        ? '/' + t.spriteRenderUseCacheCount
                        : '')),
                    (t._canvasStr =
                      t.canvasReCache +
                      '/' +
                      t.canvasNormal +
                      '/' +
                      t.canvasBitmap),
                    (t.currentMemorySize = P.systemResourceManager.memorySize),
                    t._useCanvas ? t.renderInfoPre() : t.renderInfo(),
                    t.clear();
                }
                (t._count = 0), (t._timer = e);
              }
            }),
            (t.renderInfoPre = function() {
              if (t._canvas) {
                var e = t._ctx;
                e.clearRect(t._first ? 0 : t._vx, 0, t._width, t._height);
                for (var i = 0; i < t._view.length; i++) {
                  var n = t._view[i];
                  t._first &&
                    ((e.fillStyle = 'white'),
                    e.fillText(n.title, n.x, n.y, null, null, null)),
                    (e.fillStyle = n.color);
                  var a = t[n.value];
                  'M' == n.units &&
                    (a = Math.floor((a / 1048576) * 100) / 100 + ' M'),
                    e.fillText(a + '', n.x + t._vx, n.y, null, null, null);
                }
              }
            }),
            (t.renderInfo = function() {
              for (var e = '', i = 0; i < t._view.length; i++) {
                var n = t._view[i],
                  a = t[n.value];
                'M' == n.units &&
                  (a = Math.floor((a / 1048576) * 100) / 100 + ' M'),
                  'K' == n.units &&
                    (a = Math.floor((a / 1024) * 100) / 100 + ' K'),
                  (e += a + '\n');
              }
              t._txt.text = e;
            }),
            (t.FPS = 0),
            (t.loopCount = 0),
            (t.shaderCall = 0),
            (t.drawCall = 0),
            (t.trianglesFaces = 0),
            (t.spriteCount = 0),
            (t.spriteRenderUseCacheCount = 0),
            (t.treeNodeCollision = 0),
            (t.treeSpriteCollision = 0),
            (t.canvasNormal = 0),
            (t.canvasBitmap = 0),
            (t.canvasReCache = 0),
            (t.renderSlow = !1),
            (t.currentMemorySize = 0),
            (t._fpsStr = null),
            (t._canvasStr = null),
            (t._spriteStr = null),
            (t._fpsData = []),
            (t._timer = 0),
            (t._count = 0),
            (t._view = []),
            (t._fontSize = 12),
            (t._txt = null),
            (t._leftText = null),
            (t._sp = null),
            (t._show = !1),
            (t._useCanvas = !1),
            (t._canvas = null),
            (t._ctx = null),
            (t._first = !1),
            (t._vx = NaN),
            (t._width = 0),
            (t._height = 100),
            t
          );
        })()),
      q =
        ((function() {
          function t() {
            (this._strsToID = {}), (this._idToStrs = []), (this._length = 0);
          }
          a(t, 'laya.utils.StringKey');
          var e = t.prototype;
          (e.add = function(t) {
            var e = this._strsToID[t];
            return null != e
              ? e
              : ((this._idToStrs[this._length] = t),
                (this._strsToID[t] = this._length++));
          }),
            (e.getID = function(t) {
              var e = this._strsToID[t];
              return null == e ? -1 : e;
            }),
            (e.getName = function(t) {
              var e = this._idToStrs[t];
              return null == e ? void 0 : e;
            });
        })(),
        (function() {
          function t() {
            (this._delta = 0),
              (this.scale = 1),
              (this.currFrame = 0),
              (this._mid = 1),
              (this._map = []),
              (this._laters = []),
              (this._handlers = []),
              (this._temp = []),
              (this._count = 0),
              (this.currTimer = this._now()),
              (this._lastTimer = this._now()),
              this._init();
          }
          var e;
          a(t, 'laya.utils.Timer');
          var n = t.prototype;
          return (
            (n._init = function() {
              i.timer && i.timer.frameLoop(1, this, this._update);
            }),
            (n._now = function() {
              return Date.now();
            }),
            (n._update = function() {
              if (this.scale <= 0) this._lastTimer = this._now();
              else {
                var t = (this.currFrame = this.currFrame + this.scale),
                  e = this._now();
                this._delta = (e - this._lastTimer) * this.scale;
                var i = (this.currTimer = this.currTimer + this._delta);
                this._lastTimer = e;
                var n = this._handlers;
                for (this._count = 0, s = 0, o = n.length; s < o; s++)
                  if (null !== (l = n[s]).method) {
                    var a = l.userFrame ? t : i;
                    if (a >= l.exeTime)
                      if (l.repeat)
                        if (l.jumpFrame)
                          for (; a >= l.exeTime; )
                            (l.exeTime += l.delay), l.run(!1);
                        else
                          (l.exeTime += l.delay),
                            l.run(!1),
                            a > l.exeTime &&
                              (l.exeTime +=
                                Math.ceil((a - l.exeTime) / l.delay) * l.delay);
                      else l.run(!0);
                  } else this._count++;
                (this._count > 30 || t % 200 == 0) && this._clearHandlers();
                for (
                  var r = this._laters, s = 0, o = r.length - 1;
                  s <= o;
                  s++
                ) {
                  var l = r[s];
                  null !== l.method && ((this._map[l.key] = null), l.run(!1)),
                    this._recoverHandler(l),
                    s === o && (o = r.length - 1);
                }
                r.length = 0;
              }
            }),
            (n._clearHandlers = function() {
              for (var t = this._handlers, e = 0, i = t.length; e < i; e++) {
                var n = t[e];
                null !== n.method
                  ? this._temp.push(n)
                  : this._recoverHandler(n);
              }
              (this._handlers = this._temp),
                (this._temp = t),
                (this._temp.length = 0);
            }),
            (n._recoverHandler = function(e) {
              this._map[e.key] == e && (this._map[e.key] = null),
                e.clear(),
                t._pool.push(e);
            }),
            (n._create = function(i, n, a, r, s, o, l) {
              if (!a) return s.apply(r, o), null;
              if (l) {
                var h = this._getHandler(r, s);
                if (h)
                  return (
                    (h.repeat = n),
                    (h.userFrame = i),
                    (h.delay = a),
                    (h.caller = r),
                    (h.method = s),
                    (h.args = o),
                    (h.exeTime =
                      a +
                      (i
                        ? this.currFrame
                        : this.currTimer + this._now() - this._lastTimer)),
                    h
                  );
              }
              return (
                (h = t._pool.length > 0 ? t._pool.pop() : new e()),
                (h.repeat = n),
                (h.userFrame = i),
                (h.delay = a),
                (h.caller = r),
                (h.method = s),
                (h.args = o),
                (h.exeTime =
                  a +
                  (i
                    ? this.currFrame
                    : this.currTimer + this._now() - this._lastTimer) +
                  1),
                this._indexHandler(h),
                this._handlers.push(h),
                h
              );
            }),
            (n._indexHandler = function(t) {
              var e = t.caller,
                i = t.method,
                n = e ? e.$_GID || (e.$_GID = J.getGID()) : 0,
                a = i.$_TID || (i.$_TID = 1e5 * this._mid++);
              (t.key = n + a), (this._map[t.key] = t);
            }),
            (n.once = function(t, e, i, n, a) {
              void 0 === a && (a = !0), this._create(!1, !1, t, e, i, n, a);
            }),
            (n.loop = function(t, e, i, n, a, r) {
              void 0 === a && (a = !0), void 0 === r && (r = !1);
              var s = this._create(!1, !0, t, e, i, n, a);
              s && (s.jumpFrame = r);
            }),
            (n.frameOnce = function(t, e, i, n, a) {
              void 0 === a && (a = !0), this._create(!0, !1, t, e, i, n, a);
            }),
            (n.frameLoop = function(t, e, i, n, a) {
              void 0 === a && (a = !0), this._create(!0, !0, t, e, i, n, a);
            }),
            (n.toString = function() {
              return (
                'callLater:' +
                this._laters.length +
                ' handlers:' +
                this._handlers.length +
                ' pool:' +
                t._pool.length
              );
            }),
            (n.clear = function(t, e) {
              var i = this._getHandler(t, e);
              i && ((this._map[i.key] = null), (i.key = 0), i.clear());
            }),
            (n.clearAll = function(t) {
              if (t)
                for (var e = 0, i = this._handlers.length; e < i; e++) {
                  var n = this._handlers[e];
                  n.caller === t &&
                    ((this._map[n.key] = null), (n.key = 0), n.clear());
                }
            }),
            (n._getHandler = function(t, e) {
              var i = t ? t.$_GID || (t.$_GID = J.getGID()) : 0,
                n = e.$_TID || (e.$_TID = 1e5 * this._mid++);
              return this._map[i + n];
            }),
            (n.callLater = function(i, n, a) {
              if (null == this._getHandler(i, n)) {
                if (t._pool.length) var r = t._pool.pop();
                else r = new e();
                (r.caller = i),
                  (r.method = n),
                  (r.args = a),
                  this._indexHandler(r),
                  this._laters.push(r);
              }
            }),
            (n.runCallLater = function(t, e) {
              var i = this._getHandler(t, e);
              i && null != i.method && ((this._map[i.key] = null), i.run(!0));
            }),
            (n.runTimer = function(t, e) {
              this.runCallLater(t, e);
            }),
            r(0, n, 'delta', function() {
              return this._delta;
            }),
            (t._pool = []),
            (t.__init$ = function() {
              e = (function() {
                function t() {
                  (this.key = 0),
                    (this.repeat = !1),
                    (this.delay = 0),
                    (this.userFrame = !1),
                    (this.exeTime = 0),
                    (this.caller = null),
                    (this.method = null),
                    (this.args = null),
                    (this.jumpFrame = !1);
                }
                a(t, '');
                var e = t.prototype;
                return (
                  (e.clear = function() {
                    (this.caller = null),
                      (this.method = null),
                      (this.args = null);
                  }),
                  (e.run = function(t) {
                    var e = this.caller;
                    if (e && e.destroyed) return this.clear();
                    var i = this.method,
                      n = this.args;
                    t && this.clear(),
                      null != i && (n ? i.apply(e, n) : i.call(e));
                  }),
                  t
                );
              })();
            }),
            t
          );
        })()),
      Y = (function() {
        function t() {
          this.gid = 0;
        }
        a(t, 'laya.utils.Tween');
        var e = t.prototype;
        return (
          (e.to = function(t, e, i, n, a, r, s) {
            return (
              void 0 === r && (r = 0),
              void 0 === s && (s = !1),
              this._create(t, e, i, n, a, r, s, !0, !1, !0)
            );
          }),
          (e.from = function(t, e, i, n, a, r, s) {
            return (
              void 0 === r && (r = 0),
              void 0 === s && (s = !1),
              this._create(t, e, i, n, a, r, s, !1, !1, !0)
            );
          }),
          (e._create = function(e, n, a, r, s, o, l, h, c, u) {
            if (!e) throw new Error('Tween:target is null');
            (this._target = e),
              (this._duration = a),
              (this._ease = r || n.ease || t.easeNone),
              (this._complete = s || n.complete),
              (this._delay = o),
              (this._props = []),
              (this._usedTimer = 0),
              (this._startTimer = O.now()),
              (this._usedPool = c),
              (this._delayParam = null),
              (this.update = n.update);
            var _ = e.$_GID || (e.$_GID = J.getGID());
            return (
              t.tweenMap[_]
                ? (l && t.clearTween(e), t.tweenMap[_].push(this))
                : (t.tweenMap[_] = [this]),
              u
                ? o <= 0
                  ? this.firstStart(e, n, h)
                  : ((this._delayParam = [e, n, h]),
                    i.scaleTimer.once(
                      o,
                      this,
                      this.firstStart,
                      this._delayParam
                    ))
                : this._initProps(e, n, h),
              this
            );
          }),
          (e.firstStart = function(t, e, i) {
            (this._delayParam = null),
              t.destroyed
                ? this.clear()
                : (this._initProps(t, e, i), this._beginLoop());
          }),
          (e._initProps = function(t, e, i) {
            for (var n in e)
              if ('number' == typeof t[n]) {
                var a = i ? t[n] : e[n],
                  r = i ? e[n] : t[n];
                this._props.push([n, a, r - a]), i || (t[n] = a);
              }
          }),
          (e._beginLoop = function() {
            i.scaleTimer.frameLoop(1, this, this._doEase);
          }),
          (e._doEase = function() {
            this._updateEase(O.now());
          }),
          (e._updateEase = function(e) {
            var i = this._target;
            if (i) {
              if (i.destroyed) return t.clearTween(i);
              var n = (this._usedTimer = e - this._startTimer - this._delay);
              if (!(n < 0)) {
                if (n >= this._duration) return this.complete();
                for (
                  var a = n > 0 ? this._ease(n, 0, 1, this._duration) : 0,
                    r = this._props,
                    s = 0,
                    o = r.length;
                  s < o;
                  s++
                ) {
                  var l = r[s];
                  i[l[0]] = l[1] + a * l[2];
                }
                this.update && this.update.run();
              }
            }
          }),
          (e.complete = function() {
            if (this._target) {
              i.scaleTimer.runTimer(this, this.firstStart);
              for (
                var t = this._target,
                  e = this._props,
                  n = this._complete,
                  a = 0,
                  r = e.length;
                a < r;
                a++
              ) {
                var s = e[a];
                t[s[0]] = s[1] + s[2];
              }
              this.update && this.update.run(), this.clear(), n && n.run();
            }
          }),
          (e.pause = function() {
            i.scaleTimer.clear(this, this._beginLoop),
              i.scaleTimer.clear(this, this._doEase),
              i.scaleTimer.clear(this, this.firstStart);
            var t = NaN;
            (t = O.now() - this._startTimer - this._delay) < 0 &&
              (this._usedTimer = t);
          }),
          (e.setStartTime = function(t) {
            this._startTimer = t;
          }),
          (e.clear = function() {
            this._target && (this._remove(), this._clear());
          }),
          (e._clear = function() {
            this.pause(),
              i.scaleTimer.clear(this, this.firstStart),
              (this._complete = null),
              (this._target = null),
              (this._ease = null),
              (this._props = null),
              (this._delayParam = null),
              this._usedPool &&
                ((this.update = null), W.recover('tween', this));
          }),
          (e.recover = function() {
            (this._usedPool = !0), this._clear();
          }),
          (e._remove = function() {
            var e = t.tweenMap[this._target.$_GID];
            if (e)
              for (var i = 0, n = e.length; i < n; i++)
                if (e[i] === this) {
                  e.splice(i, 1);
                  break;
                }
          }),
          (e.restart = function() {
            if (
              (this.pause(),
              (this._usedTimer = 0),
              (this._startTimer = O.now()),
              this._delayParam)
            )
              i.scaleTimer.once(
                this._delay,
                this,
                this.firstStart,
                this._delayParam
              );
            else {
              for (var t = this._props, e = 0, n = t.length; e < n; e++) {
                var a = t[e];
                this._target[a[0]] = a[1];
              }
              i.scaleTimer.once(this._delay, this, this._beginLoop);
            }
          }),
          (e.resume = function() {
            this._usedTimer >= this._duration ||
              ((this._startTimer = O.now() - this._usedTimer - this._delay),
              this._delayParam
                ? this._usedTimer < 0
                  ? i.scaleTimer.once(
                      -this._usedTimer,
                      this,
                      this.firstStart,
                      this._delayParam
                    )
                  : this.firstStart.apply(this, this._delayParam)
                : this._beginLoop());
          }),
          r(0, e, 'progress', null, function(t) {
            var e = t * this._duration;
            this._startTimer = O.now() - this._delay - e;
          }),
          (t.to = function(e, i, n, a, r, s, o, l) {
            return (
              void 0 === s && (s = 0),
              void 0 === o && (o = !1),
              void 0 === l && (l = !0),
              W.getItemByClass('tween', t)._create(
                e,
                i,
                n,
                a,
                r,
                s,
                o,
                !0,
                l,
                !0
              )
            );
          }),
          (t.from = function(e, i, n, a, r, s, o, l) {
            return (
              void 0 === s && (s = 0),
              void 0 === o && (o = !1),
              void 0 === l && (l = !0),
              W.getItemByClass('tween', t)._create(
                e,
                i,
                n,
                a,
                r,
                s,
                o,
                !1,
                l,
                !0
              )
            );
          }),
          (t.clearAll = function(e) {
            if (e && e.$_GID) {
              var i = t.tweenMap[e.$_GID];
              if (i) {
                for (var n = 0, a = i.length; n < a; n++) i[n]._clear();
                i.length = 0;
              }
            }
          }),
          (t.clear = function(t) {
            t.clear();
          }),
          (t.clearTween = function(e) {
            t.clearAll(e);
          }),
          (t.easeNone = function(t, e, i, n) {
            return (i * t) / n + e;
          }),
          (t.tweenMap = {}),
          t
        );
      })(),
      J = (function() {
        function t() {}
        return (
          a(t, 'laya.utils.Utils'),
          (t.toRadian = function(e) {
            return e * t._pi2;
          }),
          (t.toAngle = function(e) {
            return e * t._pi;
          }),
          (t.toHexColor = function(t) {
            if (t < 0 || isNaN(t)) return null;
            for (var e = t.toString(16); e.length < 6; ) e = '0' + e;
            return '#' + e;
          }),
          (t.getGID = function() {
            return t._gid++;
          }),
          (t.concatArray = function(t, e) {
            if (!e) return t;
            if (!t) return e;
            var i = 0,
              n = e.length;
            for (i = 0; i < n; i++) t.push(e[i]);
            return t;
          }),
          (t.clearArray = function(t) {
            return t ? ((t.length = 0), t) : t;
          }),
          (t.copyArray = function(t, e) {
            if ((t || (t = []), !e)) return t;
            t.length = e.length;
            var i = 0,
              n = e.length;
            for (i = 0; i < n; i++) t[i] = e[i];
            return t;
          }),
          (t.getGlobalRecByPoints = function(t, e, i, n, a) {
            var r;
            (r = new T(e, i)), (r = t.localToGlobal(r));
            var s;
            return (
              (s = new T(n, a)),
              (s = t.localToGlobal(s)),
              M._getWrapRec([r.x, r.y, s.x, s.y])
            );
          }),
          (t.getGlobalPosAndScale = function(e) {
            return t.getGlobalRecByPoints(e, 0, 0, 1, 1);
          }),
          (t.bind = function(t, e) {
            return t.bind(e);
          }),
          (t.measureText = function(t, e) {
            return s.measureText(t, e);
          }),
          (t.updateOrder = function(t) {
            if (!t || t.length < 2) return !1;
            for (var e, i = 1, n = 0, a = t.length, r = NaN; i < a; ) {
              for (
                e = t[(n = i)], r = t[n]._zOrder;
                --n > -1 && t[n]._zOrder > r;

              )
                t[n + 1] = t[n];
              (t[n + 1] = e), i++;
            }
            var s = e.parent.conchModel;
            if (s)
              if (null != s.updateZOrder) s.updateZOrder();
              else {
                for (i = 0; i < a; i++) s.removeChild(t[i].conchModel);
                for (i = 0; i < a; i++) s.addChildAt(t[i].conchModel, i);
              }
            return !0;
          }),
          (t.transPointList = function(t, e, i) {
            var n = 0,
              a = t.length;
            for (n = 0; n < a; n += 2) (t[n] += e), (t[n + 1] += i);
          }),
          (t.parseInt = function(t, e) {
            void 0 === e && (e = 0);
            var i = O.window.parseInt(t, e);
            return isNaN(i) ? 0 : i;
          }),
          (t.getFileExtension = function(e) {
            t._extReg.lastIndex = e.lastIndexOf('.');
            var i = t._extReg.exec(e);
            return i && i.length > 1 ? i[1].toLowerCase() : null;
          }),
          (t.getTransformRelativeToWindow = function(t, e, n) {
            var a = i.stage,
              r = laya.utils.Utils.getGlobalPosAndScale(t),
              s = a._canvasTransform.clone(),
              o = s.tx,
              l = s.ty;
            s.rotate((-Math.PI / 180) * i.stage.canvasDegree),
              s.scale(i.stage.clientScaleX, i.stage.clientScaleY);
            var h = i.stage.canvasDegree % 180 != 0,
              c = NaN,
              u = NaN;
            h
              ? ((c = n + r.y),
                (u = e + r.x),
                (c *= s.d),
                (u *= s.a),
                90 == i.stage.canvasDegree
                  ? ((c = o - c), (u += l))
                  : ((c += o), (u = l - u)))
              : ((c = e + r.x),
                (u = n + r.y),
                (c *= s.a),
                (u *= s.d),
                (c += o),
                (u += l));
            var _ = NaN,
              d = NaN;
            return (
              h
                ? ((_ = s.d * r.height), (d = s.a * r.width))
                : ((_ = s.a * r.width), (d = s.d * r.height)),
              { x: c, y: u, scaleX: _, scaleY: d }
            );
          }),
          (t.fitDOMElementInArea = function(e, n, a, r, s, o) {
            e._fitLayaAirInitialized ||
              ((e._fitLayaAirInitialized = !0),
              (e.style.transformOrigin = e.style.webKittransformOrigin =
                'left top'),
              (e.style.position = 'absolute'));
            var l = t.getTransformRelativeToWindow(n, a, r);
            (e.style.transform = e.style.webkitTransform =
              'scale(' +
              l.scaleX +
              ',' +
              l.scaleY +
              ') rotate(' +
              i.stage.canvasDegree +
              'deg)'),
              (e.style.width = s + 'px'),
              (e.style.height = o + 'px'),
              (e.style.left = l.x + 'px'),
              (e.style.top = l.y + 'px');
          }),
          (t.isOkTextureList = function(t) {
            if (!t) return !1;
            var e,
              i = 0,
              n = t.length;
            for (i = 0; i < n; i++) if (!(e = t[i]) || !e.source) return !1;
            return !0;
          }),
          (t.isOKCmdList = function(t) {
            if (!t) return !1;
            var e,
              i,
              n = 0,
              a = t.length,
              r = N._context;
            for (n = 0; n < a; n++)
              switch ((e = t[n]).callee) {
                case r._drawTexture:
                case r._fillTexture:
                case r._drawTextureWithTransform:
                  if (!(i = e[0]) || !i.source) return !1;
              }
            return !0;
          }),
          (t._gid = 1),
          (t._pi = 180 / Math.PI),
          (t._pi2 = Math.PI / 180),
          (t._extReg = /\.(\w+)\??/g),
          (t.parseXMLFromString = function(t) {
            var e;
            if (
              ((t = t.replace(/>\s+</g, '><')),
              (e = new DOMParser().parseFromString(
                t,
                'text/xml'
              )).firstChild.textContent.indexOf(
                'This page contains the following errors'
              ) > -1)
            )
              throw new Error(e.firstChild.firstChild.textContent);
            return e;
          }),
          t
        );
      })(),
      K = (function() {
        function t() {
          (this.useDic = {}),
            (this.shapeDic = {}),
            (this.shapeLineDic = {}),
            (this._id = 0),
            (this._checkKey = !1),
            (this._freeIdArray = []),
            N.isWebGL &&
              V.regCacheByFunction(
                J.bind(this.startDispose, this),
                J.bind(this.getCacheList, this)
              );
        }
        a(t, 'laya.utils.VectorGraphManager');
        var e = t.prototype;
        return (
          (e.getId = function() {
            return this._id++;
          }),
          (e.addShape = function(t, e) {
            (this.shapeDic[t] = e), this.useDic[t] || (this.useDic[t] = !0);
          }),
          (e.addLine = function(t, e) {
            (this.shapeLineDic[t] = e),
              this.shapeLineDic[t] || (this.shapeLineDic[t] = !0);
          }),
          (e.getShape = function(t) {
            this._checkKey && null != this.useDic[t] && (this.useDic[t] = !0);
          }),
          (e.deleteShape = function(t) {
            this.shapeDic[t] &&
              ((this.shapeDic[t] = null), delete this.shapeDic[t]),
              this.shapeLineDic[t] &&
                ((this.shapeLineDic[t] = null), delete this.shapeLineDic[t]),
              null != this.useDic[t] && delete this.useDic[t];
          }),
          (e.getCacheList = function() {
            var t,
              e = [];
            for (t in this.shapeDic) e.push(this.shapeDic[t]);
            for (t in this.shapeLineDic) e.push(this.shapeLineDic[t]);
            return e;
          }),
          (e.startDispose = function(t) {
            var e;
            for (e in this.useDic) this.useDic[e] = !1;
            this._checkKey = !0;
          }),
          (e.endDispose = function() {
            if (this._checkKey) {
              var t;
              for (t in this.useDic) this.useDic[t] || this.deleteShape(t);
              this._checkKey = !1;
            }
          }),
          (t.getInstance = function() {
            return (t.instance = t.instance || new t());
          }),
          (t.instance = null),
          t
        );
      })(),
      Z = (function() {
        function t() {
          (this._obj = null),
            (this._obj = t.supportWeakMap ? new O.window.WeakMap() : {}),
            t.supportWeakMap || t._maps.push(this);
        }
        a(t, 'laya.utils.WeakObject');
        var e = t.prototype;
        return (
          (e.set = function(e, i) {
            if (null != e)
              if (t.supportWeakMap) {
                var n = e;
                ('string' != typeof e && 'number' != typeof e) ||
                  (n = t._keys[e]) ||
                  (n = t._keys[e] = { k: e }),
                  this._obj.set(n, i);
              } else
                'string' == typeof e || 'number' == typeof e
                  ? (this._obj[e] = i)
                  : (e.$_GID || (e.$_GID = J.getGID()),
                    (this._obj[e.$_GID] = i));
          }),
          (e.get = function(e) {
            if (null == e) return null;
            if (t.supportWeakMap) {
              var i =
                'string' == typeof e || 'number' == typeof e ? t._keys[e] : e;
              return i ? this._obj.get(i) : null;
            }
            return 'string' == typeof e || 'number' == typeof e
              ? this._obj[e]
              : this._obj[e.$_GID];
          }),
          (e.del = function(e) {
            if (null != e)
              if (t.supportWeakMap) {
                var i =
                  'string' == typeof e || 'number' == typeof e ? t._keys[e] : e;
                if (!i) return;
                this._obj.delete(i);
              } else
                'string' == typeof e || 'number' == typeof e
                  ? delete this._obj[e]
                  : delete this._obj[this._obj.$_GID];
          }),
          (e.has = function(e) {
            if (null == e) return !1;
            if (t.supportWeakMap) {
              var i =
                'string' == typeof e || 'number' == typeof e ? t._keys[e] : e;
              return this._obj.has(i);
            }
            return 'string' == typeof e || 'number' == typeof e
              ? null != this._obj[e]
              : null != this._obj[this._obj.$_GID];
          }),
          (t.__init__ = function() {
            (t.supportWeakMap = null != O.window.WeakMap) ||
              i.timer.loop(t.delInterval, null, t.clearCache);
          }),
          (t.clearCache = function() {
            for (var e = 0, i = t._maps.length; e < i; e++) {
              t._maps[e]._obj = {};
            }
          }),
          (t.supportWeakMap = !1),
          (t.delInterval = 3e5),
          (t._keys = {}),
          (t._maps = []),
          n(t, [
            'I',
            function() {
              return (this.I = new t());
            }
          ]),
          t
        );
      })(),
      Q = (function() {
        function t() {
          (this.id = NaN),
            (this.save = []),
            (this.toUpperCase = null),
            (this.changed = !1),
            (this._text = null);
        }
        a(t, 'laya.utils.WordText');
        var e = t.prototype;
        return (
          (e.setText = function(t) {
            (this.changed = !0), (this._text = t);
          }),
          (e.toString = function() {
            return this._text;
          }),
          (e.charCodeAt = function(t) {
            return this._text ? this._text.charCodeAt(t) : NaN;
          }),
          (e.charAt = function(t) {
            return this._text ? this._text.charAt(t) : null;
          }),
          r(0, e, 'length', function() {
            return this._text ? this._text.length : 0;
          }),
          t
        );
      })(),
      $ = (function(t) {
        function e() {
          (this._bits = 0),
            (this._displayedInStage = !1),
            (this._parent = null),
            (this.conchModel = null),
            (this.name = ''),
            (this._destroyed = !1),
            e.__super.call(this),
            (this._childs = e.ARRAY_EMPTY),
            (this._$P = e.PROP_EMPTY),
            (this.timer = i.scaleTimer),
            (this.conchModel = N.isConchNode ? this.createConchModel() : null);
        }
        a(e, 'laya.display.Node', l);
        var n = e.prototype;
        return (
          (n._setBit = function(t, e) {
            if (1 == t) {
              this._getBit(t) != e && this._updateDisplayedInstage();
            }
            e ? (this._bits |= t) : (this._bits &= ~t);
          }),
          (n._getBit = function(t) {
            return 0 != (this._bits & t);
          }),
          (n._setUpNoticeChain = function() {
            this._getBit(1) && this._setUpNoticeType(1);
          }),
          (n._setUpNoticeType = function(t) {
            var e = this;
            for (e._setBit(t, !0), e = e.parent; e; ) {
              if (e._getBit(t)) return;
              e._setBit(t, !0), (e = e.parent);
            }
          }),
          (n.on = function(t, e, i, n) {
            return (
              ('display' !== t && 'undisplay' !== t) ||
                this._getBit(1) ||
                this._setUpNoticeType(1),
              this._createListener(t, e, i, n, !1)
            );
          }),
          (n.once = function(t, e, i, n) {
            return (
              ('display' !== t && 'undisplay' !== t) ||
                this._getBit(1) ||
                this._setUpNoticeType(1),
              this._createListener(t, e, i, n, !0)
            );
          }),
          (n.createConchModel = function() {
            return null;
          }),
          (n.destroy = function(t) {
            void 0 === t && (t = !0),
              (this._destroyed = !0),
              this._parent && this._parent.removeChild(this),
              this._childs &&
                (t ? this.destroyChildren() : this.removeChildren()),
              (this._childs = null),
              (this._$P = null),
              this.offAll(),
              this.timer.clearAll(this);
          }),
          (n.destroyChildren = function() {
            if (this._childs)
              for (var t = this._childs.length - 1; t > -1; t--)
                this._childs[t].destroy(!0);
          }),
          (n.addChild = function(t) {
            if (!t || this.destroyed || t === this) return t;
            if (
              (t.zOrder && this._set$P('hasZorder', !0), t._parent === this)
            ) {
              var i = this.getChildIndex(t);
              i !== this._childs.length - 1 &&
                (this._childs.splice(i, 1),
                this._childs.push(t),
                this.conchModel &&
                  (this.conchModel.removeChild(t.conchModel),
                  this.conchModel.addChildAt(
                    t.conchModel,
                    this._childs.length - 1
                  )),
                this._childChanged());
            } else
              t.parent && t.parent.removeChild(t),
                this._childs === e.ARRAY_EMPTY && (this._childs = []),
                this._childs.push(t),
                this.conchModel &&
                  this.conchModel.addChildAt(
                    t.conchModel,
                    this._childs.length - 1
                  ),
                (t.parent = this),
                this._childChanged();
            return t;
          }),
          (n.addChildren = function(t) {
            for (var e = arguments, i = 0, n = e.length; i < n; )
              this.addChild(e[i++]);
          }),
          (n.addChildAt = function(t, i) {
            if (!t || this.destroyed || t === this) return t;
            if (
              (t.zOrder && this._set$P('hasZorder', !0),
              i >= 0 && i <= this._childs.length)
            ) {
              if (t._parent === this) {
                var n = this.getChildIndex(t);
                this._childs.splice(n, 1),
                  this._childs.splice(i, 0, t),
                  this.conchModel &&
                    (this.conchModel.removeChild(t.conchModel),
                    this.conchModel.addChildAt(t.conchModel, i)),
                  this._childChanged();
              } else
                t.parent && t.parent.removeChild(t),
                  this._childs === e.ARRAY_EMPTY && (this._childs = []),
                  this._childs.splice(i, 0, t),
                  this.conchModel &&
                    this.conchModel.addChildAt(t.conchModel, i),
                  (t.parent = this);
              return t;
            }
            throw new Error('appendChildAt:The index is out of bounds');
          }),
          (n.getChildIndex = function(t) {
            return this._childs.indexOf(t);
          }),
          (n.getChildByName = function(t) {
            var e = this._childs;
            if (e)
              for (var i = 0, n = e.length; i < n; i++) {
                var a = e[i];
                if (a.name === t) return a;
              }
            return null;
          }),
          (n._get$P = function(t) {
            return this._$P[t];
          }),
          (n._set$P = function(t, i) {
            return (
              this.destroyed ||
                (this._$P === e.PROP_EMPTY && (this._$P = {}),
                (this._$P[t] = i)),
              i
            );
          }),
          (n.getChildAt = function(t) {
            return this._childs[t];
          }),
          (n.setChildIndex = function(t, e) {
            var i = this._childs;
            if (e < 0 || e >= i.length)
              throw new Error('setChildIndex:The index is out of bounds.');
            var n = this.getChildIndex(t);
            if (n < 0)
              throw new Error(
                'setChildIndex:node is must child of this object.'
              );
            return (
              i.splice(n, 1),
              i.splice(e, 0, t),
              this.conchModel &&
                (this.conchModel.removeChild(t.conchModel),
                this.conchModel.addChildAt(t.conchModel, e)),
              this._childChanged(),
              t
            );
          }),
          (n._childChanged = function(t) {}),
          (n.removeChild = function(t) {
            if (!this._childs) return t;
            var e = this._childs.indexOf(t);
            return this.removeChildAt(e);
          }),
          (n.removeSelf = function() {
            return this._parent && this._parent.removeChild(this), this;
          }),
          (n.removeChildByName = function(t) {
            var e = this.getChildByName(t);
            return e && this.removeChild(e), e;
          }),
          (n.removeChildAt = function(t) {
            var e = this.getChildAt(t);
            return (
              e &&
                (this._childs.splice(t, 1),
                this.conchModel && this.conchModel.removeChild(e.conchModel),
                (e.parent = null)),
              e
            );
          }),
          (n.removeChildren = function(t, i) {
            if (
              (void 0 === t && (t = 0),
              void 0 === i && (i = 2147483647),
              this._childs && this._childs.length > 0)
            ) {
              var n = this._childs;
              if (0 === t && i >= s) {
                var a = n;
                this._childs = e.ARRAY_EMPTY;
              } else a = n.splice(t, i - t);
              for (var r = 0, s = a.length; r < s; r++)
                (a[r].parent = null),
                  this.conchModel &&
                    this.conchModel.removeChild(a[r].conchModel);
            }
            return this;
          }),
          (n.replaceChild = function(t, e) {
            var i = this._childs.indexOf(e);
            return i > -1
              ? (this._childs.splice(i, 1, t),
                this.conchModel &&
                  (this.conchModel.removeChild(e.conchModel),
                  this.conchModel.addChildAt(t.conchModel, i)),
                (e.parent = null),
                (t.parent = this),
                t)
              : null;
          }),
          (n._updateDisplayedInstage = function() {
            var t;
            t = this;
            var e = i.stage;
            for (this._displayedInStage = !1; t; ) {
              if (t._getBit(1)) {
                this._displayedInStage = t._displayedInStage;
                break;
              }
              if (t == e || t._displayedInStage) {
                this._displayedInStage = !0;
                break;
              }
              t = t.parent;
            }
          }),
          (n._setDisplay = function(t) {
            this._displayedInStage !== t &&
              ((this._displayedInStage = t),
              t ? this.event('display') : this.event('undisplay'));
          }),
          (n._displayChild = function(t, e) {
            var i = t._childs;
            if (i)
              for (var n = 0, a = i.length; n < a; n++) {
                var r = i[n];
                r._getBit(1) &&
                  (r._childs.length > 0
                    ? this._displayChild(r, e)
                    : r._setDisplay(e));
              }
            t._setDisplay(e);
          }),
          (n.contains = function(t) {
            if (t === this) return !0;
            for (; t; ) {
              if (t.parent === this) return !0;
              t = t.parent;
            }
            return !1;
          }),
          (n.timerLoop = function(t, e, i, n, a, r) {
            void 0 === a && (a = !0),
              void 0 === r && (r = !1),
              this.timer.loop(t, e, i, n, a, r);
          }),
          (n.timerOnce = function(t, e, i, n, a) {
            void 0 === a && (a = !0), this.timer._create(!1, !1, t, e, i, n, a);
          }),
          (n.frameLoop = function(t, e, i, n, a) {
            void 0 === a && (a = !0), this.timer._create(!0, !0, t, e, i, n, a);
          }),
          (n.frameOnce = function(t, e, i, n, a) {
            void 0 === a && (a = !0), this.timer._create(!0, !1, t, e, i, n, a);
          }),
          (n.clearTimer = function(t, e) {
            this.timer.clear(t, e);
          }),
          r(0, n, 'numChildren', function() {
            return this._childs.length;
          }),
          r(0, n, 'destroyed', function() {
            return this._destroyed;
          }),
          r(
            0,
            n,
            'parent',
            function() {
              return this._parent;
            },
            function(t) {
              this._parent !== t &&
                (t
                  ? ((this._parent = t),
                    this.event('added'),
                    this._getBit(1) &&
                      (this._setUpNoticeChain(),
                      t.displayedInStage && this._displayChild(this, !0)),
                    t._childChanged(this))
                  : (this.event('removed'),
                    this._parent._childChanged(),
                    this._getBit(1) && this._displayChild(this, !1),
                    (this._parent = t)));
            }
          ),
          r(0, n, 'displayedInStage', function() {
            return this._getBit(1)
              ? this._displayedInStage
              : (this._setUpNoticeType(1), this._displayedInStage);
          }),
          (e.ARRAY_EMPTY = []),
          (e.PROP_EMPTY = {}),
          (e.NOTICE_DISPLAY = 1),
          (e.MOUSEENABLE = 2),
          e
        );
      })(),
      tt = (function(t) {
        function e(t) {
          (this._bgground = null),
            (this._border = null),
            (this._rect = null),
            (this.underLine = 0),
            (this.lineHeight = 0),
            e.__super.call(this),
            (this._padding = e._PADDING),
            (this._spacing = e._SPACING),
            (this._aligns = e._ALIGNS),
            (this._font = _.EMPTY),
            (this._ower = t);
        }
        a(e, 'laya.display.css.CSSStyle', t);
        var i = e.prototype;
        return (
          (i.destroy = function() {
            (this._ower = null), (this._font = null), (this._rect = null);
          }),
          (i.inherit = function(t) {
            (this._font = t._font),
              (this._spacing =
                t._spacing === e._SPACING ? e._SPACING : t._spacing.slice()),
              (this.lineHeight = t.lineHeight);
          }),
          (i._widthAuto = function() {
            return 0 != (262144 & this._type);
          }),
          (i.widthed = function(t) {
            return 0 != (8 & this._type);
          }),
          (i._calculation = function(t, e) {
            function i(t, e, i) {
              return t * i[0] + e * i[1] + i[2];
            }
            function n(t) {
              var e = r.width,
                n = a.width;
              s.width && (a.width = i(e, n, s.width)),
                s.height && (a.height = i(e, n, s.height)),
                s.left && (a.x = i(e, n, s.left)),
                s.top && (a.y = i(e, n, s.top));
            }
            if (e.indexOf('%') < 0) return !1;
            var a = this._ower,
              r = a.parent,
              s = this._rect;
            null === s &&
              ((r._getCSSStyle()._type |= 524288),
              r.on('resize', this, n),
              (this._rect = s = { input: {} }));
            var o = e.split(' ');
            return (
              (o[0] = parseFloat(o[0]) / 100),
              1 == o.length
                ? (o[1] = o[2] = 0)
                : ((o[1] = parseFloat(o[1]) / 100), (o[2] = parseFloat(o[2]))),
              (s[t] = o),
              (s.input[t] = e),
              n(),
              !0
            );
          }),
          (i.heighted = function(t) {
            return 0 != (8192 & this._type);
          }),
          (i.size = function(t, e) {
            var i = this._ower,
              n = !1;
            -1 !== t &&
              t != this._ower.width &&
              ((this._type |= 8), (this._ower.width = t), (n = !0)),
              -1 !== e &&
                e != this._ower.height &&
                ((this._type |= 8192), (this._ower.height = e), (n = !0)),
              n &&
                (i._layoutLater(),
                524288 & this._type && i.event('resize', this));
          }),
          (i._getAlign = function() {
            return this._aligns[0];
          }),
          (i._getValign = function() {
            return this._aligns[1];
          }),
          (i._getCssFloat = function() {
            return 0 != (32768 & this._type) ? 32768 : 0;
          }),
          (i._createFont = function() {
            return 4096 & this._type
              ? this._font
              : ((this._type |= 4096), (this._font = new _(this._font)));
          }),
          (i.render = function(t, e, i, n) {
            var a = t.width,
              r = t.height;
            (i -= t.pivotX),
              (n -= t.pivotY),
              this._bgground &&
                null != this._bgground.color &&
                e.ctx.fillRect(i, n, a, r, this._bgground.color),
              this._border &&
                this._border.color &&
                e.drawRect(
                  i,
                  n,
                  a,
                  r,
                  this._border.color.strColor,
                  this._border.size
                );
          }),
          (i.getCSSStyle = function() {
            return this;
          }),
          (i.cssText = function(t) {
            this.attrs(e.parseOneCSS(t, ';'));
          }),
          (i.attrs = function(t) {
            if (t)
              for (var e = 0, i = t.length; e < i; e++) {
                var n = t[e];
                this[n[0]] = n[1];
              }
          }),
          (i.setTransform = function(t) {
            'none' === t
              ? (this._tf = u._TF_EMPTY)
              : this.attrs(e.parseOneCSS(t, ','));
          }),
          (i.translate = function(t, e) {
            this._tf === u._TF_EMPTY && (this._tf = new d()),
              (this._tf.translateX = t),
              (this._tf.translateY = e);
          }),
          (i.scale = function(t, e) {
            this._tf === u._TF_EMPTY && (this._tf = new d()),
              (this._tf.scaleX = t),
              (this._tf.scaleY = e);
          }),
          (i._enableLayout = function() {
            return 0 == (2 & this._type) && 0 == (4 & this._type);
          }),
          r(0, i, 'block', t.prototype._$get_block, function(t) {
            t ? (this._type |= 1) : (this._type &= -2);
          }),
          r(
            0,
            i,
            'valign',
            function() {
              return e._valigndef[this._aligns[1]];
            },
            function(t) {
              this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]),
                (this._aligns[1] = e._valigndef[t]);
            }
          ),
          r(0, i, 'height', null, function(t) {
            if (((this._type |= 8192), 'string' == typeof t)) {
              if (this._calculation('height', t)) return;
              t = parseInt(t);
            }
            this.size(-1, t);
          }),
          r(0, i, 'width', null, function(t) {
            if (((this._type |= 8), 'string' == typeof t)) {
              var e = t.indexOf('auto');
              if (
                (e >= 0 && ((this._type |= 262144), (t = t.substr(0, e))),
                this._calculation('width', t))
              )
                return;
              t = parseInt(t);
            }
            this.size(t, -1);
          }),
          r(
            0,
            i,
            'fontWeight',
            function() {
              return this._font.weight;
            },
            function(t) {
              this._createFont().weight = t;
            }
          ),
          r(0, i, 'left', null, function(t) {
            var e = this._ower;
            if ('string' == typeof t) {
              if (
                ('center' === t
                  ? (t = '50% -50% 0')
                  : 'right' === t && (t = '100% -100% 0'),
                this._calculation('left', t))
              )
                return;
              t = parseInt(t);
            }
            e.x = t;
          }),
          r(0, i, '_translate', null, function(t) {
            this.translate(t[0], t[1]);
          }),
          r(0, i, 'absolute', function() {
            return 0 != (4 & this._type);
          }),
          r(0, i, 'top', null, function(t) {
            var e = this._ower;
            if ('string' == typeof t) {
              if (
                ('middle' === t
                  ? (t = '50% -50% 0')
                  : 'bottom' === t && (t = '100% -100% 0'),
                this._calculation('top', t))
              )
                return;
              t = parseInt(t);
            }
            e.y = t;
          }),
          r(
            0,
            i,
            'align',
            function() {
              return e._aligndef[this._aligns[0]];
            },
            function(t) {
              this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]),
                (this._aligns[0] = e._aligndef[t]);
            }
          ),
          r(
            0,
            i,
            'bold',
            function() {
              return this._font.bold;
            },
            function(t) {
              this._createFont().bold = t;
            }
          ),
          r(
            0,
            i,
            'padding',
            function() {
              return this._padding;
            },
            function(t) {
              this._padding = t;
            }
          ),
          r(
            0,
            i,
            'leading',
            function() {
              return this._spacing[1];
            },
            function(t) {
              'string' == typeof t && (t = parseInt(t + '')),
                this._spacing === e._SPACING && (this._spacing = [0, 0]),
                (this._spacing[1] = t);
            }
          ),
          r(
            0,
            i,
            'lineElement',
            function() {
              return 0 != (65536 & this._type);
            },
            function(t) {
              t ? (this._type |= 65536) : (this._type &= -65537);
            }
          ),
          r(
            0,
            i,
            'cssFloat',
            function() {
              return 0 != (32768 & this._type) ? 'right' : 'left';
            },
            function(t) {
              (this.lineElement = !1),
                'right' === t ? (this._type |= 32768) : (this._type &= -32769);
            }
          ),
          r(
            0,
            i,
            'textDecoration',
            function() {
              return this._font.decoration;
            },
            function(t) {
              this._createFont().decoration = t;
            }
          ),
          r(
            0,
            i,
            'whiteSpace',
            function() {
              return 131072 & this._type ? 'nowrap' : '';
            },
            function(t) {
              'nowrap' === t && (this._type |= 131072),
                'none' === t && (this._type &= -131073);
            }
          ),
          r(0, i, 'background', null, function(t) {
            t
              ? (this._bgground || (this._bgground = {}),
                (this._bgground.color = t),
                this._ower.conchModel && this._ower.conchModel.bgColor(t),
                (this._type |= 16384),
                (this._ower._renderType |= 256))
              : (this._bgground = null);
          }),
          r(
            0,
            i,
            'wordWrap',
            function() {
              return 0 == (131072 & this._type);
            },
            function(t) {
              t ? (this._type &= -131073) : (this._type |= 131072);
            }
          ),
          r(
            0,
            i,
            'color',
            function() {
              return this._font.color;
            },
            function(t) {
              this._createFont().color = t;
            }
          ),
          r(
            0,
            i,
            'password',
            function() {
              return this._font.password;
            },
            function(t) {
              this._createFont().password = t;
            }
          ),
          r(
            0,
            i,
            'backgroundColor',
            function() {
              return this._bgground ? this._bgground.color : null;
            },
            function(t) {
              'none' === t
                ? (this._bgground = null)
                : (this._bgground || (this._bgground = {}),
                  (this._bgground.color = t)),
                this._ower.conchModel && this._ower.conchModel.bgColor(t),
                (this._ower._renderType |= 256);
            }
          ),
          r(
            0,
            i,
            'font',
            function() {
              return this._font.toString();
            },
            function(t) {
              this._createFont().set(t);
            }
          ),
          r(0, i, 'weight', null, function(t) {
            this._createFont().weight = t;
          }),
          r(
            0,
            i,
            'letterSpacing',
            function() {
              return this._spacing[0];
            },
            function(t) {
              'string' == typeof t && (t = parseInt(t + '')),
                this._spacing === e._SPACING && (this._spacing = [0, 0]),
                (this._spacing[0] = t);
            }
          ),
          r(
            0,
            i,
            'fontSize',
            function() {
              return this._font.size;
            },
            function(t) {
              this._createFont().size = t;
            }
          ),
          r(
            0,
            i,
            'italic',
            function() {
              return this._font.italic;
            },
            function(t) {
              this._createFont().italic = t;
            }
          ),
          r(
            0,
            i,
            'fontFamily',
            function() {
              return this._font.family;
            },
            function(t) {
              this._createFont().family = t;
            }
          ),
          r(
            0,
            i,
            'stroke',
            function() {
              return this._font.stroke[0];
            },
            function(t) {
              this._createFont().stroke === _._STROKE &&
                (this._font.stroke = [0, '#000000']),
                (this._font.stroke[0] = t);
            }
          ),
          r(
            0,
            i,
            'strokeColor',
            function() {
              return this._font.stroke[1];
            },
            function(t) {
              this._createFont().stroke === _._STROKE &&
                (this._font.stroke = [0, '#000000']),
                (this._font.stroke[1] = t);
            }
          ),
          r(
            0,
            i,
            'border',
            function() {
              return this._border ? this._border.value : '';
            },
            function(t) {
              if ('none' != t) {
                this._border || (this._border = {}), (this._border.value = t);
                var e = t.split(' ');
                if (
                  ((this._border.color = H.create(e[e.length - 1])),
                  1 == e.length)
                )
                  return (
                    (this._border.size = 1), void (this._border.type = 'solid')
                  );
                var i = 0;
                e[0].indexOf('px') > 0
                  ? ((this._border.size = parseInt(e[0])), i++)
                  : (this._border.size = 1),
                  (this._border.type = e[i]),
                  (this._ower._renderType |= 256);
              } else this._border = null;
            }
          ),
          r(
            0,
            i,
            'borderColor',
            function() {
              return this._border && this._border.color
                ? this._border.color.strColor
                : null;
            },
            function(t) {
              t
                ? (this._border || (this._border = { size: 1, type: 'solid' }),
                  (this._border.color = null == t ? null : H.create(t)),
                  this._ower.conchModel &&
                    this._ower.conchModel.border(this._border.color.strColor),
                  (this._ower._renderType |= 256))
                : (this._border = null);
            }
          ),
          r(
            0,
            i,
            'position',
            function() {
              return 4 & this._type ? 'absolute' : '';
            },
            function(t) {
              'absolute' == t ? (this._type |= 4) : (this._type &= -5);
            }
          ),
          r(0, i, 'display', null, function(t) {
            switch (t) {
              case '':
                (this._type &= -3), (this.visible = !0);
                break;
              case 'none':
                (this._type |= 2),
                  (this.visible = !1),
                  this._ower._layoutLater();
            }
          }),
          r(0, i, 'paddingLeft', function() {
            return this.padding[3];
          }),
          r(0, i, 'paddingTop', function() {
            return this.padding[0];
          }),
          r(0, i, '_scale', null, function(t) {
            this._ower.scale(t[0], t[1]);
          }),
          r(0, i, '_rotate', null, function(t) {
            this._ower.rotation = t;
          }),
          (e.parseOneCSS = function(t, i) {
            for (
              var n, a = [], r = t.split(i), s = 0, o = r.length;
              s < o;
              s++
            ) {
              var l = r[s],
                h = l.indexOf(':'),
                c = l.substr(0, h).replace(/^\s+|\s+$/g, '');
              if (0 != c.length) {
                var u = l.substr(h + 1).replace(/^\s+|\s+$/g, ''),
                  _ = [c, u];
                switch (c) {
                  case 'italic':
                  case 'bold':
                    _[1] = 'true' == u;
                    break;
                  case 'line-height':
                    (_[0] = 'lineHeight'), (_[1] = parseInt(u));
                    break;
                  case 'font-size':
                    (_[0] = 'fontSize'), (_[1] = parseInt(u));
                    break;
                  case 'padding':
                    (n = u.split(' ')).length > 1 ||
                      (n[1] = n[2] = n[3] = n[0]),
                      (_[1] = [
                        parseInt(n[0]),
                        parseInt(n[1]),
                        parseInt(n[2]),
                        parseInt(n[3])
                      ]);
                    break;
                  case 'rotate':
                    (_[0] = '_rotate'), (_[1] = parseFloat(u));
                    break;
                  case 'scale':
                    (n = u.split(' ')),
                      (_[0] = '_scale'),
                      (_[1] = [parseFloat(n[0]), parseFloat(n[1])]);
                    break;
                  case 'translate':
                    (n = u.split(' ')),
                      (_[0] = '_translate'),
                      (_[1] = [parseInt(n[0]), parseInt(n[1])]);
                    break;
                  default:
                    (_[0] = e._CSSTOVALUE[c]) || (_[0] = c);
                }
                a.push(_);
              }
            }
            return a;
          }),
          (e.parseCSS = function(t, i) {
            for (var n; null != (n = e._parseCSSRegExp.exec(t)); )
              e.styleSheets[n[1]] = e.parseOneCSS(n[2], ';');
          }),
          (e.EMPTY = new e(null)),
          (e._CSSTOVALUE = {
            'letter-spacing': 'letterSpacing',
            'line-spacing': 'lineSpacing',
            'white-space': 'whiteSpace',
            'line-height': 'lineHeight',
            'scale-x': 'scaleX',
            'scale-y': 'scaleY',
            'translate-x': 'translateX',
            'translate-y': 'translateY',
            'font-family': 'fontFamily',
            'font-weight': 'fontWeight',
            'vertical-align': 'valign',
            'text-decoration': 'textDecoration',
            'background-color': 'backgroundColor',
            'border-color': 'borderColor',
            float: 'cssFloat'
          }),
          (e._parseCSSRegExp = new RegExp('([.#]\\w+)\\s*{([\\s\\S]*?)}', 'g')),
          (e._aligndef = {
            left: 0,
            center: 1,
            right: 2,
            0: 'left',
            1: 'center',
            2: 'right'
          }),
          (e._valigndef = {
            top: 0,
            middle: 1,
            bottom: 2,
            0: 'top',
            1: 'middle',
            2: 'bottom'
          }),
          (e.styleSheets = {}),
          (e.ALIGN_CENTER = 1),
          (e.ALIGN_RIGHT = 2),
          (e.VALIGN_MIDDLE = 1),
          (e.VALIGN_BOTTOM = 2),
          (e._CSS_BLOCK = 1),
          (e._DISPLAY_NONE = 2),
          (e._ABSOLUTE = 4),
          (e._WIDTH_SET = 8),
          (e._PADDING = [0, 0, 0, 0]),
          (e._RECT = [-1, -1, -1, -1]),
          (e._SPACING = [0, 0]),
          (e._ALIGNS = [0, 0, 0]),
          (e.ADDLAYOUTED = 512),
          (e._NEWFONT = 4096),
          (e._HEIGHT_SET = 8192),
          (e._BACKGROUND_SET = 16384),
          (e._FLOAT_RIGHT = 32768),
          (e._LINE_ELEMENT = 65536),
          (e._NOWARP = 131072),
          (e._WIDTHAUTO = 262144),
          (e._LISTERRESZIE = 524288),
          e
        );
      })(u),
      et = (function(t) {
        function e() {
          (this.url = null),
            (this.audio = null),
            (this.loaded = !1),
            e.__super.call(this);
        }
        a(e, 'laya.media.h5audio.AudioSound', l);
        var i = e.prototype;
        return (
          (i.dispose = function() {
            var t = e._audioCache[this.url];
            t && ((t.src = ''), delete e._audioCache[this.url]);
          }),
          (i.load = function(t) {
            function i() {
              a(), (s.loaded = !0), s.event('complete');
            }
            function n() {
              (r.load = null), a(), s.event('error');
            }
            function a() {
              r.removeEventListener('canplaythrough', i),
                r.removeEventListener('error', n);
            }
            (t = A.formatURL(t)), (this.url = t);
            var r;
            if (
              (t == E._tMusic
                ? (e._initMusicAudio(),
                  (r = e._musicAudio).src != t &&
                    ((e._audioCache[r.src] = null), (r = null)))
                : (r = e._audioCache[t]),
              r && r.readyState >= 2)
            )
              this.event('complete');
            else {
              r ||
                (t == E._tMusic
                  ? (e._initMusicAudio(), (r = e._musicAudio))
                  : (r = O.createElement('audio')),
                (e._audioCache[t] = r),
                (r.src = t)),
                r.addEventListener('canplaythrough', i),
                r.addEventListener('error', n);
              var s = this;
              (this.audio = r), r.load ? r.load() : n();
            }
          }),
          (i.play = function(t, i) {
            if ((void 0 === t && (t = 0), void 0 === i && (i = 0), !this.url))
              return null;
            var n;
            if (
              !(n =
                this.url == E._tMusic ? e._musicAudio : e._audioCache[this.url])
            )
              return null;
            var a;
            (a = W.getItem('audio:' + this.url)),
              N.isConchApp
                ? a || ((a = O.createElement('audio')).src = this.url)
                : this.url == E._tMusic
                ? (e._initMusicAudio(), ((a = e._musicAudio).src = this.url))
                : (a = a || n.cloneNode(!0));
            var r = new dt(a);
            return (
              (r.url = this.url),
              (r.loops = i),
              (r.startTime = t),
              r.play(),
              E.addChannel(r),
              r
            );
          }),
          r(0, i, 'duration', function() {
            var t;
            return (t = e._audioCache[this.url]) ? t.duration : 0;
          }),
          (e._initMusicAudio = function() {
            e._musicAudio ||
              (e._musicAudio || (e._musicAudio = O.createElement('audio')),
              N.isConchApp ||
                O.document.addEventListener('mousedown', e._makeMusicOK));
          }),
          (e._makeMusicOK = function() {
            O.document.removeEventListener('mousedown', e._makeMusicOK),
              e._musicAudio.src
                ? e._musicAudio.play()
                : ((e._musicAudio.src = ''), e._musicAudio.load());
          }),
          (e._audioCache = {}),
          (e._musicAudio = null),
          e
        );
      })(),
      it = (function(t) {
        function e() {
          (this.url = null),
            (this.loops = 0),
            (this.startTime = NaN),
            (this.isStopped = !1),
            (this.completeHandler = null),
            e.__super.call(this);
        }
        a(e, 'laya.media.SoundChannel', l);
        var i = e.prototype;
        return (
          (i.play = function() {}),
          (i.stop = function() {}),
          (i.pause = function() {}),
          (i.resume = function() {}),
          (i.__runComplete = function(t) {
            t && t.run();
          }),
          r(
            0,
            i,
            'volume',
            function() {
              return 1;
            },
            function(t) {}
          ),
          r(0, i, 'position', function() {
            return 0;
          }),
          r(0, i, 'duration', function() {
            return 0;
          }),
          e
        );
      })(),
      nt = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.media.Sound', l);
        var i = e.prototype;
        return (
          (i.load = function(t) {}),
          (i.play = function(t, e) {
            return void 0 === t && (t = 0), void 0 === e && (e = 0), null;
          }),
          (i.dispose = function() {}),
          r(0, i, 'duration', function() {
            return 0;
          }),
          e
        );
      })(),
      at = (function(t) {
        function e() {
          (this.url = null),
            (this.loaded = !1),
            (this.data = null),
            (this.audioBuffer = null),
            (this.__toPlays = null),
            (this._disposed = !1),
            e.__super.call(this);
        }
        a(e, 'laya.media.webaudio.WebAudioSound', l);
        var i = e.prototype;
        return (
          (i.load = function(t) {
            var i = this;
            if (
              ((t = A.formatURL(t)),
              (this.url = t),
              (this.audioBuffer = e._dataCache[t]),
              this.audioBuffer)
            )
              this._loaded(this.audioBuffer);
            else if (
              (e.e.on('loaded:' + t, this, this._loaded),
              e.e.on('err:' + t, this, this._err),
              !e.__loadingSound[t])
            ) {
              e.__loadingSound[t] = !0;
              var n = new O.window.XMLHttpRequest();
              n.open('GET', t, !0),
                (n.responseType = 'arraybuffer'),
                (n.onload = function() {
                  i._disposed
                    ? i._removeLoadEvents()
                    : ((i.data = n.response),
                      e.buffs.push({ buffer: i.data, url: i.url }),
                      e.decode());
                }),
                (n.onerror = function(t) {
                  i._err();
                }),
                n.send();
            }
          }),
          (i._err = function() {
            this._removeLoadEvents(),
              (e.__loadingSound[this.url] = !1),
              this.event('error');
          }),
          (i._loaded = function(t) {
            this._removeLoadEvents(),
              this._disposed ||
                ((this.audioBuffer = t),
                (e._dataCache[this.url] = this.audioBuffer),
                (this.loaded = !0),
                this.event('complete'));
          }),
          (i._removeLoadEvents = function() {
            e.e.off('loaded:' + this.url, this, this._loaded),
              e.e.off('err:' + this.url, this, this._err);
          }),
          (i.__playAfterLoaded = function() {
            if (this.__toPlays) {
              var t,
                e = 0,
                i = 0;
              i = (t = this.__toPlays).length;
              var n;
              for (e = 0; e < i; e++)
                (n = t[e])[2] && !n[2].isStopped && this.play(n[0], n[1], n[2]);
              this.__toPlays.length = 0;
            }
          }),
          (i.play = function(t, e, i) {
            return (
              void 0 === t && (t = 0),
              void 0 === e && (e = 0),
              (i = i || new ft()),
              this.audioBuffer ||
                (this.url &&
                  (this.__toPlays || (this.__toPlays = []),
                  this.__toPlays.push([t, e, i]),
                  this.once('complete', this, this.__playAfterLoaded),
                  this.load(this.url))),
              (i.url = this.url),
              (i.loops = e),
              (i.audioBuffer = this.audioBuffer),
              (i.startTime = t),
              i.play(),
              E.addChannel(i),
              i
            );
          }),
          (i.dispose = function() {
            (this._disposed = !0),
              delete e._dataCache[this.url],
              delete e.__loadingSound[this.url],
              (this.audioBuffer = null),
              (this.data = null),
              (this.__toPlays = []);
          }),
          r(0, i, 'duration', function() {
            return this.audioBuffer ? this.audioBuffer.duration : 0;
          }),
          (e.decode = function() {
            e.buffs.length <= 0 ||
              e.isDecoding ||
              ((e.isDecoding = !0),
              (e.tInfo = e.buffs.shift()),
              e.ctx.decodeAudioData(e.tInfo.buffer, e._done, e._fail));
          }),
          (e._done = function(t) {
            e.e.event('loaded:' + e.tInfo.url, t),
              (e.isDecoding = !1),
              e.decode();
          }),
          (e._fail = function() {
            e.e.event('err:' + e.tInfo.url, null),
              (e.isDecoding = !1),
              e.decode();
          }),
          (e._playEmptySound = function() {
            if (null != e.ctx) {
              var t = e.ctx.createBufferSource();
              (t.buffer = e._miniBuffer),
                t.connect(e.ctx.destination),
                t.start(0, 0, 0);
            }
          }),
          (e._unlock = function() {
            e._unlocked ||
              (e._playEmptySound(),
              'running' == e.ctx.state &&
                (O.document.removeEventListener('mousedown', e._unlock, !0),
                O.document.removeEventListener('touchend', e._unlock, !0),
                (e._unlocked = !0)));
          }),
          (e.initWebAudio = function() {
            'running' != e.ctx.state &&
              (e._unlock(),
              O.document.addEventListener('mousedown', e._unlock, !0),
              O.document.addEventListener('touchend', e._unlock, !0));
          }),
          (e._dataCache = {}),
          (e.buffs = []),
          (e.isDecoding = !1),
          (e._unlocked = !1),
          (e.tInfo = null),
          (e.__loadingSound = {}),
          n(e, [
            'window',
            function() {
              return (this.window = O.window);
            },
            'webAudioEnabled',
            function() {
              return (this.webAudioEnabled =
                e.window.AudioContext ||
                e.window.webkitAudioContext ||
                e.window.mozAudioContext);
            },
            'ctx',
            function() {
              return (this.ctx = e.webAudioEnabled
                ? new (e.window.AudioContext ||
                    e.window.webkitAudioContext ||
                    e.window.mozAudioContext)()
                : void 0);
            },
            '_miniBuffer',
            function() {
              return (this._miniBuffer = e.ctx.createBuffer(1, 1, 22050));
            },
            'e',
            function() {
              return (this.e = new l());
            }
          ]),
          e
        );
      })(),
      rt = (function(t) {
        function e() {
          (this._responseType = null),
            (this._data = null),
            e.__super.call(this),
            (this._http = new O.window.XMLHttpRequest());
        }
        a(e, 'laya.net.HttpRequest', l);
        var i = e.prototype;
        return (
          (i.send = function(t, e, i, n, a) {
            void 0 === i && (i = 'get'),
              void 0 === n && (n = 'text'),
              (this._responseType = n),
              (this._data = null);
            var r = this,
              s = this._http;
            if ((s.open(i, t, !0), a))
              for (var o = 0; o < a.length; o++)
                s.setRequestHeader(a[o++], a[o]);
            else
              N.isConchApp ||
                (e && 'string' != typeof e
                  ? s.setRequestHeader('Content-Type', 'application/json')
                  : s.setRequestHeader(
                      'Content-Type',
                      'application/x-www-form-urlencoded'
                    ));
            (s.responseType = 'arraybuffer' !== n ? 'text' : 'arraybuffer'),
              (s.onerror = function(t) {
                r._onError(t);
              }),
              (s.onabort = function(t) {
                r._onAbort(t);
              }),
              (s.onprogress = function(t) {
                r._onProgress(t);
              }),
              (s.onload = function(t) {
                r._onLoad(t);
              }),
              s.send(e);
          }),
          (i._onProgress = function(t) {
            t &&
              t.lengthComputable &&
              this.event('progress', t.loaded / t.total);
          }),
          (i._onAbort = function(t) {
            this.error('Request was aborted by user');
          }),
          (i._onError = function(t) {
            this.error(
              'Request failed Status:' +
                this._http.status +
                ' text:' +
                this._http.statusText
            );
          }),
          (i._onLoad = function(t) {
            var e = this._http,
              i = void 0 !== e.status ? e.status : 200;
            200 === i || 204 === i || 0 === i
              ? this.complete()
              : this.error(
                  '[' + e.status + ']' + e.statusText + ':' + e.responseURL
                );
          }),
          (i.error = function(t) {
            this.clear(), this.event('error', t);
          }),
          (i.complete = function() {
            this.clear();
            var t = !0;
            try {
              'json' === this._responseType
                ? (this._data = JSON.parse(this._http.responseText))
                : 'xml' === this._responseType
                ? (this._data = J.parseXMLFromString(this._http.responseText))
                : (this._data = this._http.response || this._http.responseText);
            } catch (e) {
              (t = !1), this.error(e.message);
            }
            t &&
              this.event(
                'complete',
                this._data instanceof Array ? [this._data] : this._data
              );
          }),
          (i.clear = function() {
            var t = this._http;
            t.onerror = t.onabort = t.onprogress = t.onload = null;
          }),
          r(0, i, 'url', function() {
            return this._http.responseURL;
          }),
          r(0, i, 'http', function() {
            return this._http;
          }),
          r(0, i, 'data', function() {
            return this._data;
          }),
          e
        );
      })(),
      st = (function(t) {
        function e() {
          (this._data = null),
            (this._class = null),
            (this._url = null),
            (this._type = null),
            (this._cache = !1),
            (this._http = null),
            (this._customParse = !1),
            e.__super.call(this);
        }
        a(e, 'laya.net.Loader', l);
        var n = e.prototype;
        return (
          (n.load = function(t, i, n, a, r) {
            if (
              (void 0 === n && (n = !0),
              void 0 === r && (r = !1),
              (this._url = t),
              0 === t.indexOf('data:image')
                ? (this._type = i = 'image')
                : ((this._type = i || (i = this.getTypeFromUrl(t))),
                  (t = A.formatURL(t))),
              (this._cache = n),
              (this._data = null),
              !r && e.loadedMap[t])
            )
              return (
                (this._data = e.loadedMap[t]),
                this.event('progress', 1),
                void this.event('complete', this._data)
              );
            if ((a && e.setGroup(t, a), null != e.parserMap[i]))
              return (
                (this._customParse = !0),
                void (e.parserMap[i] instanceof laya.utils.Handler
                  ? e.parserMap[i].runWith(this)
                  : e.parserMap[i].call(null, this))
              );
            if ('image' === i || 'htmlimage' === i || 'nativeimage' === i)
              return this._loadImage(t);
            if ('sound' === i) return this._loadSound(t);
            if ('ttf' === i) return this._loadTTF(t);
            var s;
            switch (i) {
              case 'atlas':
              case 'plf':
                s = 'json';
                break;
              case 'font':
                s = 'xml';
                break;
              case 'pkm':
                s = 'arraybuffer';
                break;
              default:
                s = i;
            }
            e.preLoadedMap[t]
              ? this.onLoaded(e.preLoadedMap[t])
              : (this._http ||
                  ((this._http = new rt()),
                  this._http.on('progress', this, this.onProgress),
                  this._http.on('error', this, this.onError),
                  this._http.on('complete', this, this.onLoaded)),
                this._http.send(t, null, 'get', s));
          }),
          (n.getTypeFromUrl = function(t) {
            var i = J.getFileExtension(t);
            return i
              ? e.typeMap[i]
              : (console.warn('Not recognize the resources suffix', t), 'text');
          }),
          (n._loadTTF = function(t) {
            t = A.formatURL(t);
            var e = new D();
            (e.complete = h.create(this, this.onLoaded)), e.load(t);
          }),
          (n._loadImage = function(t) {
            function i() {
              (n.onload = null), (n.onerror = null), delete e.imgCache[t];
            }
            t = A.formatURL(t);
            var n,
              a = this,
              r = function() {
                i(), a.onLoaded(n);
              },
              s = function() {
                i(), a.event('error', 'Load image failed');
              };
            'nativeimage' === this._type
              ? (((n = new O.window.Image()).crossOrigin = ''),
                (n.onload = r),
                (n.onerror = s),
                (n.src = t),
                (e.imgCache[t] = n))
              : new It.create(t, {
                  onload: r,
                  onerror: s,
                  onCreate: function(i) {
                    (n = i), (e.imgCache[t] = i);
                  }
                });
          }),
          (n._loadSound = function(t) {
            function e() {
              i.offAll();
            }
            var i = new E._soundClass(),
              n = this;
            i.on('complete', this, function() {
              e(), n.onLoaded(i);
            }),
              i.on('error', this, function() {
                e(), i.dispose(), n.event('error', 'Load sound failed');
              }),
              i.load(t);
          }),
          (n.onProgress = function(t) {
            'atlas' === this._type
              ? this.event('progress', 0.3 * t)
              : this.event('progress', t);
          }),
          (n.onError = function(t) {
            this.event('error', t);
          }),
          (n.onLoaded = function(t) {
            var i = this._type;
            if ('plf' == i) this.parsePLFData(t), this.complete(t);
            else if ('image' === i) {
              var n = new ct(t);
              (n.url = this._url), this.complete(n);
            } else if (
              'sound' === i ||
              'htmlimage' === i ||
              'nativeimage' === i
            )
              this.complete(t);
            else if ('atlas' === i) {
              if (!t.src && !t._setContext) {
                if (!this._data) {
                  if (((this._data = t), t.meta && t.meta.image))
                    for (
                      var a = t.meta.image.split(','),
                        r = this._url.indexOf('/') >= 0 ? '/' : '\\',
                        s = this._url.lastIndexOf(r),
                        o = s >= 0 ? this._url.substr(0, s + 1) : '',
                        l = 0,
                        h = a.length;
                      l < h;
                      l++
                    )
                      a[l] = o + a[l];
                  else a = [this._url.replace('.json', '.png')];
                  a.reverse(), (t.toLoads = a), (t.pics = []);
                }
                return (
                  this.event('progress', 0.3 + (1 / a.length) * 0.6),
                  this._loadImage(a.pop())
                );
              }
              if ((this._data.pics.push(t), this._data.toLoads.length > 0))
                return (
                  this.event(
                    'progress',
                    0.3 + (1 / this._data.toLoads.length) * 0.6
                  ),
                  this._loadImage(this._data.toLoads.pop())
                );
              var u = this._data.frames,
                _ = this._url.split('?')[0],
                d =
                  this._data.meta && this._data.meta.prefix
                    ? this._data.meta.prefix
                    : _.substring(0, _.lastIndexOf('.')) + '/',
                f = this._data.pics,
                p = A.formatURL(this._url),
                m = e.atlasMap[p] || (e.atlasMap[p] = []);
              m.dir = d;
              var g = 1;
              if (
                this._data.meta &&
                this._data.meta.scale &&
                1 != this._data.meta.scale
              ) {
                g = parseFloat(this._data.meta.scale);
                for (var y in u) {
                  var v = u[y],
                    b = f[v.frame.idx ? v.frame.idx : 0],
                    w = A.formatURL(d + y);
                  (b.scaleRate = g),
                    e.cacheRes(
                      w,
                      ct.create(
                        b,
                        v.frame.x,
                        v.frame.y,
                        v.frame.w,
                        v.frame.h,
                        v.spriteSourceSize.x,
                        v.spriteSourceSize.y,
                        v.sourceSize.w,
                        v.sourceSize.h
                      )
                    ),
                    (e.loadedMap[w].url = w),
                    m.push(w);
                }
              } else
                for (y in u)
                  (b = f[(v = u[y]).frame.idx ? v.frame.idx : 0]),
                    (w = A.formatURL(d + y)),
                    e.cacheRes(
                      w,
                      ct.create(
                        b,
                        v.frame.x,
                        v.frame.y,
                        v.frame.w,
                        v.frame.h,
                        v.spriteSourceSize.x,
                        v.spriteSourceSize.y,
                        v.sourceSize.w,
                        v.sourceSize.h
                      )
                    ),
                    (e.loadedMap[w].url = w),
                    m.push(w);
              delete this._data.pics, this.complete(this._data);
            } else if ('font' == i) {
              if (!t.src)
                return (
                  (this._data = t),
                  this.event('progress', 0.5),
                  this._loadImage(this._url.replace('.fnt', '.png'))
                );
              var x = new c();
              x.parseFont(this._data, t);
              var I = this._url.split('.fnt')[0].split('/'),
                C = I[I.length - 1];
              gt.registerBitmapFont(C, x),
                (this._data = x),
                this.complete(this._data);
            } else if ('pkm' == i) {
              var S = It.create(t, this._url),
                T = new ct(S);
              (T.url = this._url), this.complete(T);
            } else this.complete(t);
          }),
          (n.parsePLFData = function(t) {
            var i, n, a;
            for (i in t)
              switch (((a = t[i]), i)) {
                case 'json':
                case 'text':
                  for (n in a) e.preLoadedMap[A.formatURL(n)] = a[n];
                  break;
                default:
                  for (n in a) e.preLoadedMap[A.formatURL(n)] = a[n];
              }
          }),
          (n.complete = function(t) {
            (this._data = t),
              this._customParse
                ? this.event('loaded', t instanceof Array ? [t] : t)
                : (e._loaders.push(this), e._isWorking || e.checkNext());
          }),
          (n.endLoad = function(t) {
            t && (this._data = t),
              this._cache && e.cacheRes(this._url, this._data),
              this.event('progress', 1),
              this.event(
                'complete',
                this.data instanceof Array ? [this.data] : this.data
              );
          }),
          r(0, n, 'url', function() {
            return this._url;
          }),
          r(0, n, 'data', function() {
            return this._data;
          }),
          r(0, n, 'cache', function() {
            return this._cache;
          }),
          r(0, n, 'type', function() {
            return this._type;
          }),
          (e.checkNext = function() {
            e._isWorking = !0;
            for (var t = O.now(); e._startIndex < e._loaders.length; )
              if (
                (O.now(),
                e._loaders[e._startIndex].endLoad(),
                e._startIndex++,
                O.now() - t > e.maxTimeOut)
              )
                return (
                  console.warn(
                    'loader callback cost a long time:' +
                      (O.now() - t) +
                      ' url=' +
                      e._loaders[e._startIndex - 1].url
                  ),
                  void i.timer.frameOnce(1, null, e.checkNext)
                );
            (e._loaders.length = 0), (e._startIndex = 0), (e._isWorking = !1);
          }),
          (e.clearRes = function(t, i) {
            void 0 === i && (i = !1), (t = A.formatURL(t));
            var n = e.getAtlas(t);
            if (n) {
              for (var a = 0, r = n.length; a < r; a++) {
                var s = n[a],
                  o = e.getRes(s);
                delete e.loadedMap[s], o && o.destroy(i);
              }
              (n.length = 0), delete e.atlasMap[t], delete e.loadedMap[t];
            } else {
              var l = e.loadedMap[t];
              l &&
                (delete e.loadedMap[t],
                l instanceof laya.resource.Texture && l.bitmap && l.destroy(i));
            }
          }),
          (e.clearTextureRes = function(t) {
            t = A.formatURL(t);
            var e = laya.net.Loader.getAtlas(t);
            if (e && e.length > 0)
              for (var i = 0; i < e.length; i++) {
                (n = laya.net.Loader.getRes(e[i])) &&
                  n.bitmap &&
                  (N.isConchApp && !N.isConchWebGL
                    ? n.bitmap.source.releaseTexture &&
                      n.bitmap.source.releaseTexture()
                    : null == n.bitmap._atlaser &&
                      n.bitmap.releaseResource(!0));
              }
            else {
              var n = laya.net.Loader.getRes(t);
              n &&
                n.bitmap &&
                (N.isConchApp && !N.isConchWebGL
                  ? n.bitmap.source.releaseTexture &&
                    n.bitmap.source.releaseTexture()
                  : null == n.bitmap._atlaser && n.bitmap.releaseResource(!0));
            }
          }),
          (e.getRes = function(t) {
            return e.loadedMap[A.formatURL(t)];
          }),
          (e.getAtlas = function(t) {
            return e.atlasMap[A.formatURL(t)];
          }),
          (e.cacheRes = function(t, i) {
            (t = A.formatURL(t)),
              null != e.loadedMap[t]
                ? console.warn(
                    'Resources already exist,is repeated loading:',
                    t
                  )
                : (e.loadedMap[t] = i);
          }),
          (e.setGroup = function(t, i) {
            e.groupMap[i] || (e.groupMap[i] = []), e.groupMap[i].push(t);
          }),
          (e.clearResByGroup = function(t) {
            if (e.groupMap[t]) {
              var i = e.groupMap[t],
                n = 0,
                a = i.length;
              for (n = 0; n < a; n++) e.clearRes(i[n]);
              i.length = 0;
            }
          }),
          (e.TEXT = 'text'),
          (e.JSON = 'json'),
          (e.XML = 'xml'),
          (e.BUFFER = 'arraybuffer'),
          (e.IMAGE = 'image'),
          (e.SOUND = 'sound'),
          (e.ATLAS = 'atlas'),
          (e.FONT = 'font'),
          (e.TTF = 'ttf'),
          (e.PLF = 'plf'),
          (e.PKM = 'pkm'),
          (e.typeMap = {
            png: 'image',
            jpg: 'image',
            jpeg: 'image',
            txt: 'text',
            json: 'json',
            xml: 'xml',
            als: 'atlas',
            atlas: 'atlas',
            mp3: 'sound',
            ogg: 'sound',
            wav: 'sound',
            part: 'json',
            fnt: 'font',
            pkm: 'pkm',
            ttf: 'ttf',
            plf: 'plf'
          }),
          (e.parserMap = {}),
          (e.groupMap = {}),
          (e.maxTimeOut = 100),
          (e.loadedMap = {}),
          (e.preLoadedMap = {}),
          (e.atlasMap = {}),
          (e._loaders = []),
          (e._isWorking = !1),
          (e._startIndex = 0),
          (e.imgCache = {}),
          e
        );
      })(),
      ot = (function(t) {
        function e() {
          (this.retryNum = 1),
            (this.retryDelay = 0),
            (this.maxLoader = 5),
            (this._loaders = []),
            (this._loaderCount = 0),
            (this._resInfos = []),
            (this._infoPool = []),
            (this._maxPriority = 5),
            (this._failRes = {}),
            e.__super.call(this);
          for (var t = 0; t < this._maxPriority; t++) this._resInfos[t] = [];
        }
        var r;
        a(e, 'laya.net.LoaderManager', l);
        var s = e.prototype;
        return (
          (s.create = function(t, e, i, n, a, r, s, o) {
            if (
              (void 0 === r && (r = 1),
              void 0 === s && (s = !0),
              t instanceof Array)
            ) {
              var l = t,
                c = l.length,
                u = 0;
              if (i) var _ = h.create(i.caller, i.method, i.args, !1);
              for (var d = 0; d < c; d++) {
                var f = l[d];
                'string' == typeof f && (f = l[d] = { url: f }),
                  (f.progress = 0);
              }
              for (d = 0; d < c; d++) {
                f = l[d];
                var p = i
                    ? h.create(
                        null,
                        function(t, e) {
                          t.progress = e;
                          for (var i = 0, n = 0; n < c; n++) i += l[n].progress;
                          var a = i / c;
                          _.runWith(a);
                        },
                        [f],
                        !1
                      )
                    : null,
                  m =
                    i || e
                      ? h.create(
                          null,
                          function(t, i) {
                            u++, (t.progress = 1), u === c && e && e.run();
                          },
                          [f]
                        )
                      : null;
                this._create(
                  f.url,
                  m,
                  p,
                  f.clas || n,
                  f.params || a,
                  f.priority || r,
                  s,
                  f.group || o
                );
              }
              return !0;
            }
            return this._create(t, e, i, n, a, r, s, o);
          }),
          (s._create = function(t, n, a, r, s, o, l, c) {
            void 0 === o && (o = 1), void 0 === l && (l = !0);
            var u = A.formatURL(t),
              _ = this.getRes(u);
            if (_)
              !_.hasOwnProperty('loaded') || _.loaded
                ? (a && a.runWith(1), n && n.run())
                : n &&
                  i.loader._createListener(
                    t,
                    n.caller,
                    n.method,
                    n.args,
                    !0,
                    !1
                  );
            else {
              var d = J.getFileExtension(t),
                f = e.createMap[d];
              if (!f)
                throw new Error(
                  'LoaderManager:unknown file(' +
                    t +
                    ') extension with: ' +
                    d +
                    '.'
                );
              r || (r = f[0]);
              var p = f[1];
              'atlas' == d
                ? this.load(t, n, a, p, o, l)
                : (r === ct && (p = 'htmlimage'),
                  (_ = r ? new r() : null).hasOwnProperty('_loaded') &&
                    (_._loaded = !1),
                  _._setUrl(t),
                  c && _._setGroup(c),
                  this._createLoad(
                    _,
                    t,
                    h.create(null, function(e) {
                      _ && !_.destroyed && e && _.onAsynLoaded.call(_, t, e, s),
                        n && n.run(),
                        i.loader.event(t);
                    }),
                    a,
                    p,
                    o,
                    !1,
                    c,
                    !0
                  ),
                  l && this.cacheRes(u, _));
            }
            return _;
          }),
          (s.load = function(t, n, a, s, o, l, h, c) {
            var u = this;
            if (
              (void 0 === o && (o = 1),
              void 0 === l && (l = !0),
              void 0 === c && (c = !1),
              t instanceof Array)
            )
              return this._loadAssets(t, n, a, s, o, l, h);
            var _ = st.getRes(t);
            if (null != _)
              i.timer.frameOnce(1, null, function() {
                a && a.runWith(1),
                  n && n.runWith(_),
                  u._loaderCount || u.event('complete');
              });
            else {
              var d = e._resMap[t];
              d
                ? (n &&
                    d._createListener(
                      'complete',
                      n.caller,
                      n.method,
                      n.args,
                      !1,
                      !1
                    ),
                  a &&
                    d._createListener(
                      'progress',
                      a.caller,
                      a.method,
                      a.args,
                      !1,
                      !1
                    ))
                : (((d = this._infoPool.length
                    ? this._infoPool.pop()
                    : new r()).url = t),
                  (d.type = s),
                  (d.cache = l),
                  (d.group = h),
                  (d.ignoreCache = c),
                  n && d.on('complete', n.caller, n.method, n.args),
                  a && d.on('progress', a.caller, a.method, a.args),
                  (e._resMap[t] = d),
                  (o = o < this._maxPriority ? o : this._maxPriority - 1),
                  this._resInfos[o].push(d),
                  this._next());
            }
            return this;
          }),
          (s._createLoad = function(t, n, a, s, o, l, h, c, u) {
            var _ = this;
            if (
              (void 0 === l && (l = 1),
              void 0 === h && (h = !0),
              void 0 === u && (u = !1),
              n instanceof Array)
            )
              return this._loadAssets(n, a, s, o, l, h, c);
            var d = st.getRes(n);
            if (null != d)
              i.timer.frameOnce(1, null, function() {
                s && s.runWith(1),
                  a && a.runWith(d),
                  _._loaderCount || _.event('complete');
              });
            else {
              var f = e._resMap[n];
              f
                ? (a &&
                    f._createListener(
                      'complete',
                      a.caller,
                      a.method,
                      a.args,
                      !1,
                      !1
                    ),
                  s &&
                    f._createListener(
                      'progress',
                      s.caller,
                      s.method,
                      s.args,
                      !1,
                      !1
                    ))
                : (((f = this._infoPool.length
                    ? this._infoPool.pop()
                    : new r()).url = n),
                  (f.clas = t),
                  (f.type = o),
                  (f.cache = h),
                  (f.group = c),
                  (f.ignoreCache = u),
                  a && f.on('complete', a.caller, a.method, a.args),
                  s && f.on('progress', s.caller, s.method, s.args),
                  (e._resMap[n] = f),
                  (l = l < this._maxPriority ? l : this._maxPriority - 1),
                  this._resInfos[l].push(f),
                  this._next());
            }
            return this;
          }),
          (s._next = function() {
            if (!(this._loaderCount >= this.maxLoader)) {
              for (var t = 0; t < this._maxPriority; t++)
                for (var e = this._resInfos[t]; e.length > 0; ) {
                  var i = e.shift();
                  if (i) return this._doLoad(i);
                }
              this._loaderCount || this.event('complete');
            }
          }),
          (s._doLoad = function(t) {
            function e(e) {
              i.offAll(),
                (i._data = null),
                (i._customParse = !1),
                n._loaders.push(i),
                n._endLoad(t, e instanceof Array ? [e] : e),
                n._loaderCount--,
                n._next();
            }
            this._loaderCount++;
            var i = this._loaders.length ? this._loaders.pop() : new st();
            i.on('complete', null, e),
              i.on('progress', null, function(e) {
                t.event('progress', e);
              }),
              i.on('error', null, function(t) {
                e(null);
              });
            var n = this;
            (i._class = t.clas),
              i.load(t.url, t.type, t.cache, t.group, t.ignoreCache);
          }),
          (s._endLoad = function(t, n) {
            var a = t.url;
            if (null == n) {
              var r = this._failRes[a] || 0;
              if (r < this.retryNum)
                return (
                  console.warn('[warn]Retry to load:', a),
                  (this._failRes[a] = r + 1),
                  void i.timer.once(
                    this.retryDelay,
                    this,
                    this._addReTry,
                    [t],
                    !1
                  )
                );
              console.warn('[error]Failed to load:', a), this.event('error', a);
            }
            this._failRes[a] && (this._failRes[a] = 0),
              delete e._resMap[a],
              t.event('complete', n),
              t.offAll(),
              this._infoPool.push(t);
          }),
          (s._addReTry = function(t) {
            this._resInfos[this._maxPriority - 1].push(t), this._next();
          }),
          (s.clearRes = function(t, e) {
            void 0 === e && (e = !1), st.clearRes(t, e);
          }),
          (s.getRes = function(t) {
            return st.getRes(t);
          }),
          (s.cacheRes = function(t, e) {
            st.cacheRes(t, e);
          }),
          (s.clearTextureRes = function(t) {
            st.clearTextureRes(t);
          }),
          (s.setGroup = function(t, e) {
            st.setGroup(t, e);
          }),
          (s.clearResByGroup = function(t) {
            st.clearResByGroup(t);
          }),
          (s.clearUnLoaded = function() {
            for (var t = 0; t < this._maxPriority; t++) {
              for (var i = this._resInfos[t], n = i.length - 1; n > -1; n--) {
                var a = i[n];
                a && (a.offAll(), this._infoPool.push(a));
              }
              i.length = 0;
            }
            (this._loaderCount = 0), (e._resMap = {});
          }),
          (s.cancelLoadByUrls = function(t) {
            if (t)
              for (var e = 0, i = t.length; e < i; e++)
                this.cancelLoadByUrl(t[e]);
          }),
          (s.cancelLoadByUrl = function(t) {
            for (var i = 0; i < this._maxPriority; i++)
              for (var n = this._resInfos[i], a = n.length - 1; a > -1; a--) {
                var r = n[a];
                r &&
                  r.url === t &&
                  ((n[a] = null), r.offAll(), this._infoPool.push(r));
              }
            e._resMap[t] && delete e._resMap[t];
          }),
          (s._loadAssets = function(t, e, i, n, a, r, s) {
            void 0 === a && (a = 1), void 0 === r && (r = !0);
            for (
              var o = t.length, l = 0, c = 0, u = [], _ = !0, d = 0;
              d < o;
              d++
            ) {
              var f = t[d];
              'string' == typeof f &&
                (f = { url: f, type: n, size: 1, priority: a }),
                f.size || (f.size = 1),
                (f.progress = 0),
                (c += f.size),
                u.push(f);
              var p = i
                  ? h.create(
                      null,
                      function(t, e) {
                        if (null != i) {
                          t.progress = e;
                          for (var n = 0, a = 0; a < u.length; a++) {
                            var r = u[a];
                            n += r.size * r.progress;
                          }
                          var s = n / c;
                          i.runWith(s);
                        }
                      },
                      [f],
                      !1
                    )
                  : null,
                m =
                  e || i
                    ? h.create(
                        null,
                        function(t, i) {
                          l++,
                            (t.progress = 1),
                            i || (_ = !1),
                            l === o && e && e.runWith(_);
                        },
                        [f]
                      )
                    : null;
              this.load(f.url, m, p, f.type, f.priority || 1, r, f.group || s);
            }
            return this;
          }),
          (e.cacheRes = function(t, e) {
            st.cacheRes(t, e);
          }),
          (e._resMap = {}),
          n(e, [
            'createMap',
            function() {
              return (this.createMap = { atlas: [null, 'atlas'] });
            }
          ]),
          (e.__init$ = function() {
            r = (function(t) {
              function e() {
                (this.url = null),
                  (this.type = null),
                  (this.cache = !1),
                  (this.group = null),
                  (this.ignoreCache = !1),
                  (this.clas = null),
                  e.__super.call(this);
              }
              return a(e, '', l), e;
            })();
          }),
          e
        );
      })(),
      lt = (function(t) {
        function e(t) {
          e.__super.call(this),
            t ||
              (t = [
                0.3,
                0.59,
                0.11,
                0,
                0,
                0.3,
                0.59,
                0.11,
                0,
                0,
                0.3,
                0.59,
                0.11,
                0,
                0,
                0,
                0,
                0,
                1,
                0
              ]),
            (this._mat = new Float32Array(16)),
            (this._alpha = new Float32Array(4));
          for (var i = 0, n = 0, a = 0; a < 20; a++)
            a % 5 != 4 ? (this._mat[i++] = t[a]) : (this._alpha[n++] = t[a]);
          (this._action = s.createFilterAction(32)), (this._action.data = this);
        }
        a(e, 'laya.filters.ColorFilter', b);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.filters.IFilter': !0 }),
          (n.callNative = function(t) {
            t._$P.cf = this;
            t.conchModel &&
              t.conchModel.setFilterMatrix &&
              t.conchModel.setFilterMatrix(this._mat, this._alpha);
          }),
          r(0, n, 'type', function() {
            return 32;
          }),
          r(0, n, 'action', function() {
            return this._action;
          }),
          e
        );
      })(),
      ht =
        ((function(t) {
          function e(t, i, n) {
            (this._endian = null),
              (this._stamp = NaN),
              (this._socket = null),
              (this._connected = !1),
              (this._addInputPosition = 0),
              (this._input = null),
              (this._output = null),
              (this.timeout = 0),
              (this.objectEncoding = 0),
              (this.disableInput = !1),
              (this._byteClass = null),
              (this.protocols = []),
              void 0 === i && (i = 0),
              e.__super.call(this),
              (this._byteClass = n || U),
              (this.endian = 'bigEndian'),
              (this.timeout = 2e4),
              (this._addInputPosition = 0),
              t && i > 0 && i < 65535 && this.connect(t, i);
          }
          a(e, 'laya.net.Socket', l);
          var i = e.prototype;
          (i.connect = function(t, e) {
            var i = 'ws://' + t + ':' + e;
            (i =
              'https:' == O.window.location.protocol
                ? 'wss://' + t + ':' + e
                : 'ws://' + t + ':' + e),
              this.connectByUrl(i);
          }),
            (i.connectByUrl = function(t) {
              var e = this;
              null != this._socket && this.close(),
                this._socket && this.cleanSocket(),
                this.protocols && 0 != this.protocols.length
                  ? (this._socket = new O.window.WebSocket(t, this.protocols))
                  : (this._socket = new O.window.WebSocket(t)),
                (this._socket.binaryType = 'arraybuffer'),
                (this._output = new this._byteClass()),
                (this._output.endian = this.endian),
                (this._input = new this._byteClass()),
                (this._input.endian = this.endian),
                (this._addInputPosition = 0),
                (this._socket.onopen = function(t) {
                  e._onOpen(t);
                }),
                (this._socket.onmessage = function(t) {
                  e._onMessage(t);
                }),
                (this._socket.onclose = function(t) {
                  e._onClose(t);
                }),
                (this._socket.onerror = function(t) {
                  e._onError(t);
                });
            }),
            (i.cleanSocket = function() {
              try {
                this._socket.close();
              } catch (t) {}
              (this._connected = !1),
                (this._socket.onopen = null),
                (this._socket.onmessage = null),
                (this._socket.onclose = null),
                (this._socket.onerror = null),
                (this._socket = null);
            }),
            (i.close = function() {
              if (null != this._socket)
                try {
                  this._socket.close();
                } catch (t) {}
            }),
            (i._onOpen = function(t) {
              (this._connected = !0), this.event('open', t);
            }),
            (i._onMessage = function(t) {
              if (t && t.data) {
                var e = t.data;
                if (this.disableInput && e) this.event('message', e);
                else {
                  this._input.length > 0 &&
                    this._input.bytesAvailable < 1 &&
                    (this._input.clear(), (this._addInputPosition = 0));
                  var i = this._input.pos;
                  !this._addInputPosition && (this._addInputPosition = 0),
                    (this._input.pos = this._addInputPosition),
                    e &&
                      ('string' == typeof e
                        ? this._input.writeUTFBytes(e)
                        : this._input.writeArrayBuffer(e),
                      (this._addInputPosition = this._input.pos),
                      (this._input.pos = i)),
                    this.event('message', e);
                }
              }
            }),
            (i._onClose = function(t) {
              (this._connected = !1), this.event('close', t);
            }),
            (i._onError = function(t) {
              this.event('error', t);
            }),
            (i.send = function(t) {
              this._socket.send(t);
            }),
            (i.flush = function() {
              if (this._output && this._output.length > 0) {
                var t;
                try {
                  this._socket &&
                    this._socket.send(
                      this._output.__getBuffer().slice(0, this._output.length)
                    );
                } catch (e) {
                  t = e;
                }
                (this._output.endian = this.endian),
                  this._output.clear(),
                  t && this.event('error', t);
              }
            }),
            r(0, i, 'input', function() {
              return this._input;
            }),
            r(0, i, 'output', function() {
              return this._output;
            }),
            r(0, i, 'connected', function() {
              return this._connected;
            }),
            r(
              0,
              i,
              'endian',
              function() {
                return this._endian;
              },
              function(t) {
                (this._endian = t),
                  null != this._input && (this._input.endian = t),
                  null != this._output && (this._output.endian = t);
              }
            ),
            (e.LITTLE_ENDIAN = 'littleEndian'),
            (e.BIG_ENDIAN = 'bigEndian');
        })(),
        (function(t) {
          function e() {
            (this.worker = null), e.__super.call(this);
            var t = this;
            (this.worker = new O.window.Worker(e.workerPath)),
              (this.worker.onmessage = function(e) {
                t.workerMessage(e.data);
              });
          }
          a(e, 'laya.net.WorkerLoader', l);
          var i = e.prototype;
          (i.workerMessage = function(t) {
            if (t)
              switch (t.type) {
                case 'Image':
                  this.imageLoaded(t);
                  break;
                case 'Msg':
                  this.event('image_msg', t.msg);
              }
          }),
            (i.imageLoaded = function(t) {
              if (t && t.buffer && t.buffer.length < 10)
                return (
                  (e._enable = !1),
                  this._myTrace(
                    'buffer lost when postmessage ,disable workerloader'
                  ),
                  this.event(t.url, null),
                  void this.event('image_err', t.url + '\n' + t.msg)
                );
              if (!t.dataType)
                return (
                  this.event(t.url, null),
                  void this.event('image_err', t.url + '\n' + t.msg)
                );
              var i, n, a;
              switch (t.dataType) {
                case 'buffer':
                  (a = (n = (i = new bt('2D')).source.getContext(
                    '2d'
                  )).createImageData(t.width, t.height)).data.set(t.buffer),
                    i.size(a.width, a.height),
                    n.putImageData(a, 0, 0),
                    (i.memorySize = 0);
                  break;
                case 'imagedata':
                  (n = (i = new bt('2D')).source.getContext('2d')),
                    (a = t.imagedata),
                    i.size(a.width, a.height),
                    n.putImageData(a, 0, 0),
                    (a = t.imagedata),
                    (i.memorySize = 0);
                  break;
                case 'imageBitmap':
                  (a = t.imageBitmap),
                    N.isWebGL
                      ? (i = a)
                      : ((n = (i = new bt('2D')).source.getContext('2d')),
                        i.size(a.width, a.height),
                        n.drawImage(a, 0, 0),
                        (i.src = t.url));
              }
              N.isWebGL && (i = new laya.webgl.resource.WebGLImage(i, t.url)),
                this.event(t.url, i);
            }),
            (i._myTrace = function(t) {
              var e = arguments,
                i = [],
                n = 0,
                a = e.length;
              for (n = 0; n < a; n++) i.push(e[n]);
              this.event('image_msg', i.join(' '));
            }),
            (i.loadImage = function(t) {
              var e;
              ((e = {}).type = 'load'), (e.url = t), this.worker.postMessage(e);
            }),
            (i._loadImage = function(t) {
              var i = this;
              if (!e._enable || t.toLowerCase().indexOf('.png') < 0)
                e._preLoadFun.call(i, t);
              else {
                t = A.formatURL(t);
                var n = function(a) {
                  laya.net.WorkerLoader.I.off(t, i, n),
                    a ? i.onLoaded(a) : e._preLoadFun.call(i, t);
                };
                laya.net.WorkerLoader.I.on(t, i, n),
                  laya.net.WorkerLoader.I.loadImage(t);
              }
            }),
            r(
              1,
              e,
              'enable',
              function() {
                return e._enable;
              },
              function(t) {
                (e.disableJSDecode && !O.window.createImageBitmap) ||
                  ((e._enable = t) &&
                    null == e._preLoadFun &&
                    (e._enable = e.__init__()));
              }
            ),
            (e.__init__ = function() {
              return (
                null == e._preLoadFun &&
                (!!O.window.Worker &&
                  ((e._preLoadFun = st.prototype._loadImage),
                  (st.prototype._loadImage = e.prototype._loadImage),
                  e.I || (e.I = new e()),
                  !0))
              );
            }),
            (e.workerSupported = function() {
              return !!O.window.Worker;
            }),
            (e.IMAGE_LOADED = 'image_loaded'),
            (e.IMAGE_ERR = 'image_err'),
            (e.IMAGE_MSG = 'image_msg'),
            (e.I = null),
            (e._preLoadFun = null),
            (e._enable = !1),
            (e.workerPath = 'libs/worker.js'),
            (e.disableJSDecode = !0);
        })(),
        (function(t) {
          function e() {
            e.__super.call(this),
              (this._$1__id = ++e._uniqueIDCounter),
              (this.__loaded = !0),
              (this._destroyed = !1),
              (this._referenceCount = 0),
              (e._idResourcesMap[this.id] = this),
              (this._released = !0),
              (this.lock = !1),
              (this._memorySize = 0),
              (this._lastUseFrameCount = -1),
              P.currentResourceManager &&
                P.currentResourceManager.addResource(this);
          }
          a(e, 'laya.resource.Resource', l);
          var n = e.prototype;
          return (
            i.imps(n, {
              'laya.resource.ICreateResource': !0,
              'laya.resource.IDispose': !0
            }),
            (n._setUrl = function(t) {
              if (this._url !== t) {
                var i;
                this._url &&
                  ((i = e._urlResourcesMap[this._url]).splice(
                    i.indexOf(this),
                    1
                  ),
                  0 === i.length && delete e._urlResourcesMap[this._url]),
                  t &&
                    ((i = e._urlResourcesMap[t]) ||
                      (e._urlResourcesMap[t] = i = []),
                    i.push(this)),
                  (this._url = t);
              }
            }),
            (n._getGroup = function() {
              return this._group;
            }),
            (n._setGroup = function(t) {
              if (this._group !== t) {
                var i;
                this._group &&
                  ((i = e._groupResourcesMap[this._group]).splice(
                    i.indexOf(this),
                    1
                  ),
                  0 === i.length && delete e._groupResourcesMap[this._group]),
                  t &&
                    ((i = e._groupResourcesMap[t]) ||
                      (e._groupResourcesMap[t] = i = []),
                    i.push(this)),
                  (this._group = t);
              }
            }),
            (n._addReference = function() {
              this._referenceCount++;
            }),
            (n._removeReference = function() {
              this._referenceCount--;
            }),
            (n._clearReference = function() {
              this._referenceCount = 0;
            }),
            (n._endLoaded = function() {
              (this.__loaded = !0), this.event('loaded', this);
            }),
            (n.recreateResource = function() {
              this.completeCreate();
            }),
            (n.disposeResource = function() {}),
            (n.activeResource = function(t) {
              void 0 === t && (t = !1),
                (this._lastUseFrameCount = X.loopCount),
                !this._destroyed &&
                  this.__loaded &&
                  (this._released || t) &&
                  this.recreateResource();
            }),
            (n.releaseResource = function(t) {
              return (
                void 0 === t && (t = !1),
                !(!t && this.lock) &&
                  (!(this._released && !t) &&
                    (this.disposeResource(),
                    (this._released = !0),
                    (this._lastUseFrameCount = -1),
                    this.event('released', this),
                    !0))
              );
            }),
            (n.onAsynLoaded = function(t, e, i) {
              throw new Error('Resource: must override this function!');
            }),
            (n.destroy = function() {
              if (!this._destroyed) {
                null !== this._resourceManager &&
                  this._resourceManager.removeResource(this),
                  (this._destroyed = !0),
                  (this.lock = !1),
                  this.releaseResource(),
                  delete e._idResourcesMap[this.id];
                var t;
                this._url &&
                  ((t = e._urlResourcesMap[this._url]) &&
                    (t.splice(t.indexOf(this), 1),
                    0 === t.length && delete e._urlResourcesMap[this.url]),
                  st.clearRes(this._url),
                  this.__loaded || s.cancelLoadByUrl(this._url)),
                  this._group &&
                    ((t = e._groupResourcesMap[this._group]).splice(
                      t.indexOf(this),
                      1
                    ),
                    0 === t.length && delete e._groupResourcesMap[this.url]);
              }
            }),
            (n.completeCreate = function() {
              (this._released = !1), this.event('recovered', this);
            }),
            (n.dispose = function() {
              this.destroy();
            }),
            r(
              0,
              n,
              'memorySize',
              function() {
                return this._memorySize;
              },
              function(t) {
                var e = t - this._memorySize;
                (this._memorySize = t),
                  this.resourceManager && this.resourceManager.addSize(e);
              }
            ),
            r(0, n, '_loaded', null, function(t) {
              this.__loaded = t;
            }),
            r(0, n, 'loaded', function() {
              return this.__loaded;
            }),
            r(0, n, 'id', function() {
              return this._$1__id;
            }),
            r(0, n, 'destroyed', function() {
              return this._destroyed;
            }),
            r(
              0,
              n,
              'group',
              function() {
                return this._getGroup();
              },
              function(t) {
                this._setGroup(t);
              }
            ),
            r(0, n, 'resourceManager', function() {
              return this._resourceManager;
            }),
            r(0, n, 'url', function() {
              return this._url;
            }),
            r(0, n, 'released', function() {
              return this._released;
            }),
            r(0, n, 'referenceCount', function() {
              return this._referenceCount;
            }),
            (e.getResourceByID = function(t) {
              return e._idResourcesMap[t];
            }),
            (e.getResourceByURL = function(t, i) {
              return void 0 === i && (i = 0), e._urlResourcesMap[t][i];
            }),
            (e.getResourceCountByURL = function(t) {
              return e._urlResourcesMap[t].length;
            }),
            (e.destroyUnusedResources = function(t) {
              var i;
              if (t) {
                var n = e._groupResourcesMap[t];
                if (n)
                  for (var a = n.slice(), r = 0, s = a.length; r < s; r++)
                    (i = a[r]).lock || 0 !== i._referenceCount || i.destroy();
              } else
                for (var o in e._idResourcesMap)
                  (i = e._idResourcesMap[o]).lock ||
                    0 !== i._referenceCount ||
                    i.destroy();
            }),
            (e._uniqueIDCounter = 0),
            (e._idResourcesMap = {}),
            (e._urlResourcesMap = {}),
            (e._groupResourcesMap = {}),
            e
          );
        })()),
      ct = (function(e) {
        function n(t, e) {
          (this.offsetX = 0),
            (this.offsetY = 0),
            (this.sourceWidth = 0),
            (this.sourceHeight = 0),
            (this._w = 0),
            (this._h = 0),
            (this._uvID = 0),
            (this._atlasID = -1),
            (this.scaleRate = 1),
            n.__super.call(this),
            t && null != t._addReference && t._addReference(),
            this.setTo(t, e);
        }
        a(n, 'laya.resource.Texture', l);
        var o = n.prototype;
        return (
          (o._setUrl = function(t) {
            this.url = t;
          }),
          (o.setTo = function(e, i) {
            if (e instanceof t.HTMLElement) {
              var a = bt.create('2D', e);
              this.bitmap = a;
            } else this.bitmap = e;
            if (((this.uv = i || n.DEF_UV), e)) {
              (this._w = e.width),
                (this._h = e.height),
                (this.sourceWidth = this.sourceWidth || this._w),
                (this.sourceHeight = this.sourceHeight || this._h),
                (this._loaded = this._w > 0);
              var r = this;
              if (this._loaded) s.addToAtlas && s.addToAtlas(r);
              else {
                var o = e;
                o instanceof laya.resource.HTMLImage &&
                  o.image &&
                  o.image.addEventListener(
                    'load',
                    function(t) {
                      s.addToAtlas && s.addToAtlas(r);
                    },
                    !1
                  );
              }
            }
          }),
          (o.active = function() {
            this.bitmap && this.bitmap.activeResource();
          }),
          (o.destroy = function(t) {
            if (
              (void 0 === t && (t = !1),
              this.bitmap && this.bitmap.referenceCount > 0)
            ) {
              var e = this.bitmap;
              t
                ? (N.isConchApp &&
                    e.source &&
                    e.source.conchDestroy &&
                    this.bitmap.source.conchDestroy(),
                  (this.bitmap = null),
                  e.dispose(),
                  e._clearReference())
                : (e._removeReference(),
                  0 == e.referenceCount &&
                    (N.isConchApp &&
                      e.source &&
                      e.source.conchDestroy &&
                      this.bitmap.source.conchDestroy(),
                    (this.bitmap = null),
                    e.dispose())),
                this.url &&
                  this === i.loader.getRes(this.url) &&
                  i.loader.clearRes(this.url, t),
                (this._loaded = !1);
            }
          }),
          (o.load = function(t) {
            var e = this;
            (this._loaded = !1), (t = A.customFormat(t));
            var i = this.bitmap || (this.bitmap = It.create(t));
            i && i._addReference();
            var n = this;
            i.onload = function() {
              (i.onload = null),
                (n._loaded = !0),
                (e.sourceWidth = e._w = i.width),
                (e.sourceHeight = e._h = i.height),
                n.event('loaded', this),
                s.addToAtlas && s.addToAtlas(n);
            };
          }),
          (o.addTextureToAtlas = function(t) {
            s.addTextureToAtlas(this);
          }),
          (o.getPixels = function(t, e, i, n) {
            if (N.isConchApp) {
              var a = this.bitmap;
              if (a.source && a.source.getImageData) {
                var r = a.source.getImageData(t, e, i, n),
                  o = new Uint8Array(r);
                return Array.from(o);
              }
              return null;
            }
            if (N.isWebGL) return s.getTexturePixels(this, t, e, i, n);
            O.canvas.size(i, n),
              O.canvas.clear(),
              O.context.drawTexture(
                this,
                -t,
                -e,
                this.width,
                this.height,
                0,
                0
              );
            return O.context.getImageData(0, 0, i, n).data;
          }),
          (o.onAsynLoaded = function(t, e) {
            e && e._addReference(), this.setTo(e, this.uv);
          }),
          r(0, o, 'source', function() {
            return this.bitmap
              ? (this.bitmap.activeResource(), this.bitmap.source)
              : null;
          }),
          r(0, o, 'loaded', function() {
            return this._loaded;
          }),
          r(0, o, 'released', function() {
            return !this.bitmap || this.bitmap.released;
          }),
          r(
            0,
            o,
            'width',
            function() {
              return this._w
                ? this._w
                : this.uv && this.uv !== n.DEF_UV
                ? (this.uv[2] - this.uv[0]) * this.bitmap.width
                : this.bitmap.width;
            },
            function(t) {
              (this._w = t), this.sourceWidth || (this.sourceWidth = t);
            }
          ),
          r(
            0,
            o,
            'repeat',
            function() {
              return !N.isWebGL || !this.bitmap || this.bitmap.repeat;
            },
            function(t) {
              t &&
                N.isWebGL &&
                this.bitmap &&
                ((this.bitmap.repeat = t),
                t && (this.bitmap.enableMerageInAtlas = !1));
            }
          ),
          r(
            0,
            o,
            'height',
            function() {
              return this._h
                ? this._h
                : this.uv && this.uv !== n.DEF_UV
                ? (this.uv[5] - this.uv[1]) * this.bitmap.height
                : this.bitmap.height;
            },
            function(t) {
              (this._h = t), this.sourceHeight || (this.sourceHeight = t);
            }
          ),
          r(
            0,
            o,
            'isLinearSampling',
            function() {
              return !N.isWebGL || 9728 != this.bitmap.minFifter;
            },
            function(t) {
              !t &&
                N.isWebGL &&
                (t ||
                  -1 != this.bitmap.minFifter ||
                  -1 != this.bitmap.magFifter ||
                  ((this.bitmap.minFifter = 9728),
                  (this.bitmap.magFifter = 9728),
                  (this.bitmap.enableMerageInAtlas = !1)));
            }
          ),
          (n.moveUV = function(t, e, i) {
            for (var n = 0; n < 8; n += 2) (i[n] += t), (i[n + 1] += e);
            return i;
          }),
          (n.create = function(t, e, i, a, r, o, l, h, c) {
            void 0 === o && (o = 0),
              void 0 === l && (l = 0),
              void 0 === h && (h = 0),
              void 0 === c && (c = 0);
            var u = t instanceof laya.resource.Texture,
              _ = u ? t.uv : n.DEF_UV,
              d = u ? t.bitmap : t,
              f = s.isAtlas(d);
            if (f) {
              var p = d._atlaser,
                m = t._atlasID;
              if (-1 == m) throw new Error('create texture error');
              (d = p._inAtlasTextureBitmapValue[m]),
                (_ = p._inAtlasTextureOriUVValue[m]);
            }
            var g = new n(d, null);
            d.width && e + a > d.width && (a = d.width - e),
              d.height && i + r > d.height && (r = d.height - i),
              (g.width = a),
              (g.height = r),
              (g.offsetX = o),
              (g.offsetY = l),
              (g.sourceWidth = h || a),
              (g.sourceHeight = c || r);
            var y = 1 / d.width,
              v = 1 / d.height;
            (e *= y), (i *= v), (a *= y), (r *= v);
            var b = g.uv[0],
              w = g.uv[1],
              x = g.uv[4],
              I = g.uv[5],
              C = x - b,
              S = I - w,
              T = n.moveUV(_[0], _[1], [
                e,
                i,
                e + a,
                i,
                e + a,
                i + r,
                e,
                i + r
              ]);
            (g.uv = [
              b + T[0] * C,
              w + T[1] * S,
              x - (1 - T[2]) * C,
              w + T[3] * S,
              x - (1 - T[4]) * C,
              I - (1 - T[5]) * S,
              b + T[6] * C,
              I - (1 - T[7]) * S
            ]),
              f && g.addTextureToAtlas();
            var M = d.scaleRate;
            return (
              M && 1 != M
                ? ((g.sourceWidth /= M),
                  (g.sourceHeight /= M),
                  (g.width /= M),
                  (g.height /= M),
                  (g.scaleRate = M),
                  (g.offsetX /= M),
                  (g.offsetY /= M))
                : (g.scaleRate = 1),
              g
            );
          }),
          (n.createFromTexture = function(t, e, i, a, r) {
            var s = t.scaleRate;
            1 != s && ((e *= s), (i *= s), (a *= s), (r *= s));
            var o = M.TEMP.setTo(e - t.offsetX, i - t.offsetY, a, r),
              l = o.intersection(
                n._rect1.setTo(0, 0, t.width, t.height),
                n._rect2
              );
            if (!l) return null;
            var h = n.create(
              t,
              l.x,
              l.y,
              l.width,
              l.height,
              l.x - o.x,
              l.y - o.y,
              a,
              r
            );
            return h.bitmap._removeReference(), h;
          }),
          (n.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1]),
          (n.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0]),
          (n._rect1 = new M()),
          (n._rect2 = new M()),
          n
        );
      })(),
      ut = (function(t) {
        function e() {
          (this._labelDic = null),
            (this._tweenDic = {}),
            (this._tweenDataList = []),
            (this._endTweenDataList = null),
            (this._currTime = 0),
            (this._lastTime = 0),
            (this._startTime = 0),
            (this._index = 0),
            (this._gidIndex = 0),
            (this._firstTweenDic = {}),
            (this._startTimeSort = !1),
            (this._endTimeSort = !1),
            (this._loopKey = !1),
            (this.scale = 1),
            (this._frameRate = 60),
            (this._frameIndex = 0),
            (this._total = 0),
            e.__super.call(this);
        }
        var n;
        a(e, 'laya.utils.TimeLine', l);
        var s = e.prototype;
        return (
          (s.to = function(t, e, i, n, a) {
            return void 0 === a && (a = 0), this._create(t, e, i, n, a, !0);
          }),
          (s.from = function(t, e, i, n, a) {
            return void 0 === a && (a = 0), this._create(t, e, i, n, a, !1);
          }),
          (s._create = function(t, e, i, a, r, s) {
            var o = W.getItemByClass('tweenData', n);
            return (
              (o.isTo = s),
              (o.type = 0),
              (o.target = t),
              (o.duration = i),
              (o.data = e),
              (o.startTime = this._startTime + r),
              (o.endTime = o.startTime + o.duration),
              (o.ease = a),
              (this._startTime = Math.max(o.endTime, this._startTime)),
              this._tweenDataList.push(o),
              (this._startTimeSort = !0),
              (this._endTimeSort = !0),
              this
            );
          }),
          (s.addLabel = function(t, e) {
            var i = W.getItemByClass('tweenData', n);
            return (
              (i.type = 1),
              (i.data = t),
              (i.endTime = i.startTime = this._startTime + e),
              this._labelDic || (this._labelDic = {}),
              (this._labelDic[t] = i),
              this._tweenDataList.push(i),
              this
            );
          }),
          (s.removeLabel = function(t) {
            if (this._labelDic && this._labelDic[t]) {
              var e = this._labelDic[t];
              if (e) {
                var i = this._tweenDataList.indexOf(e);
                i > -1 && this._tweenDataList.splice(i, 1);
              }
              delete this._labelDic[t];
            }
          }),
          (s.gotoTime = function(t) {
            if (
              null != this._tweenDataList &&
              0 != this._tweenDataList.length
            ) {
              var e, i;
              for (var n in this._firstTweenDic)
                if ((i = this._firstTweenDic[n]))
                  for (var a in i)
                    i.diyTarget.hasOwnProperty(a) && (i.diyTarget[a] = i[a]);
              for (n in this._tweenDic)
                (e = this._tweenDic[n]).clear(), delete this._tweenDic[n];
              (this._index = 0),
                (this._gidIndex = 0),
                (this._currTime = t),
                (this._lastTime = O.now());
              var r;
              null == this._endTweenDataList || this._endTimeSort
                ? ((this._endTimeSort = !1),
                  (this._endTweenDataList = r = this._tweenDataList.concat()),
                  r.sort(function(t, e) {
                    return t.endTime > e.endTime
                      ? 1
                      : t.endTime < e.endTime
                      ? -1
                      : 0;
                  }))
                : (r = this._endTweenDataList);
              for (var s, o = 0, l = r.length; o < l; o++)
                if (0 == (s = r[o]).type) {
                  if (!(t >= s.endTime)) break;
                  this._index = Math.max(this._index, o + 1);
                  var c = s.data;
                  if (s.isTo) for (var u in c) s.target[u] = c[u];
                }
              for (o = 0, l = this._tweenDataList.length; o < l; o++)
                0 == (s = this._tweenDataList[o]).type &&
                  t >= s.startTime &&
                  t < s.endTime &&
                  ((this._index = Math.max(this._index, o + 1)),
                  this._gidIndex++,
                  (e = W.getItemByClass('tween', Y))._create(
                    s.target,
                    s.data,
                    s.duration,
                    s.ease,
                    h.create(this, this._animComplete, [this._gidIndex]),
                    0,
                    !1,
                    s.isTo,
                    !0,
                    !1
                  ),
                  e.setStartTime(this._currTime - (t - s.startTime)),
                  e._updateEase(this._currTime),
                  (e.gid = this._gidIndex),
                  (this._tweenDic[this._gidIndex] = e));
            }
          }),
          (s.gotoLabel = function(t) {
            if (null != this._labelDic) {
              var e = this._labelDic[t];
              e && this.gotoTime(e.startTime);
            }
          }),
          (s.pause = function() {
            i.timer.clear(this, this._update);
          }),
          (s.resume = function() {
            this.play(this._currTime, this._loopKey);
          }),
          (s.play = function(t, e) {
            if (
              (void 0 === t && (t = 0),
              void 0 === e && (e = !1),
              this._tweenDataList)
            ) {
              if (this._startTimeSort) {
                (this._startTimeSort = !1),
                  this._tweenDataList.sort(function(t, e) {
                    return t.startTime > e.startTime
                      ? 1
                      : t.startTime < e.startTime
                      ? -1
                      : 0;
                  });
                for (var n = 0, a = this._tweenDataList.length; n < a; n++) {
                  var r = this._tweenDataList[n];
                  if (null != r && 0 == r.type) {
                    var s = r.target,
                      o = s.$_GID || (s.$_GID = J.getGID()),
                      l = null;
                    null == this._firstTweenDic[o]
                      ? (((l = {}).diyTarget = s), (this._firstTweenDic[o] = l))
                      : (l = this._firstTweenDic[o]);
                    for (var h in r.data) null == l[h] && (l[h] = s[h]);
                  }
                }
              }
              'string' == typeof t ? this.gotoLabel(t) : this.gotoTime(t),
                (this._loopKey = e),
                (this._lastTime = O.now()),
                i.timer.frameLoop(1, this, this._update);
            }
          }),
          (s._update = function() {
            if (this._currTime >= this._startTime) {
              if (!this._loopKey) {
                for (var t in this._tweenDic)
                  (a = this._tweenDic[t]).complete();
                return this._complete(), void this.pause();
              }
              if ((this._complete(), !this._tweenDataList)) return;
              this.gotoTime(0);
            }
            var e = O.now(),
              i = e - this._lastTime,
              n = (this._currTime += i * this.scale);
            this._lastTime = e;
            for (t in this._tweenDic) (a = this._tweenDic[t])._updateEase(n);
            var a;
            if (
              0 != this._tweenDataList.length &&
              this._index < this._tweenDataList.length
            ) {
              var r = this._tweenDataList[this._index];
              n >= r.startTime &&
                (this._index++,
                0 == r.type
                  ? (this._gidIndex++,
                    (a = W.getItemByClass('tween', Y))._create(
                      r.target,
                      r.data,
                      r.duration,
                      r.ease,
                      h.create(this, this._animComplete, [this._gidIndex]),
                      0,
                      !1,
                      r.isTo,
                      !0,
                      !1
                    ),
                    a.setStartTime(n),
                    (a.gid = this._gidIndex),
                    (this._tweenDic[this._gidIndex] = a),
                    a._updateEase(n))
                  : this.event('label', r.data));
            }
          }),
          (s._animComplete = function(t) {
            this._tweenDic[t] && delete this._tweenDic[t];
          }),
          (s._complete = function() {
            this.event('complete');
          }),
          (s.reset = function() {
            var t;
            if (this._labelDic)
              for (t in this._labelDic) delete this._labelDic[t];
            for (t in this._tweenDic)
              this._tweenDic[t].clear(), delete this._tweenDic[t];
            for (t in this._firstTweenDic) delete this._firstTweenDic[t];
            if (
              ((this._endTweenDataList = null),
              this._tweenDataList && this._tweenDataList.length)
            ) {
              var e = 0,
                n = 0;
              for (n = this._tweenDataList.length, e = 0; e < n; e++)
                this._tweenDataList[e] && this._tweenDataList[e].destroy();
            }
            (this._tweenDataList.length = 0),
              (this._currTime = 0),
              (this._lastTime = 0),
              (this._startTime = 0),
              (this._index = 0),
              (this._gidIndex = 0),
              (this.scale = 1),
              i.timer.clear(this, this._update);
          }),
          (s.destroy = function() {
            this.reset(),
              (this._labelDic = null),
              (this._tweenDic = null),
              (this._tweenDataList = null),
              (this._firstTweenDic = null);
          }),
          r(
            0,
            s,
            'index',
            function() {
              return this._frameIndex;
            },
            function(t) {
              (this._frameIndex = t),
                this.gotoTime((this._frameIndex / this._frameRate) * 1e3);
            }
          ),
          r(0, s, 'total', function() {
            return (
              (this._total = Math.floor(
                (this._startTime / 1e3) * this._frameRate
              )),
              this._total
            );
          }),
          (e.to = function(t, i, n, a, r) {
            return void 0 === r && (r = 0), new e().to(t, i, n, a, r);
          }),
          (e.from = function(t, i, n, a, r) {
            return void 0 === r && (r = 0), new e().from(t, i, n, a, r);
          }),
          (e.__init$ = function() {
            n = (function() {
              function t() {
                (this.type = 0),
                  (this.isTo = !0),
                  (this.startTime = NaN),
                  (this.endTime = NaN),
                  (this.target = null),
                  (this.duration = NaN),
                  (this.ease = null),
                  (this.data = null);
              }
              a(t, '');
              return (
                (t.prototype.destroy = function() {
                  (this.target = null),
                    (this.ease = null),
                    (this.data = null),
                    (this.isTo = !0),
                    (this.type = 0),
                    W.recover('tweenData', this);
                }),
                t
              );
            })();
          }),
          e
        );
      })(),
      _t = (function(e) {
        function o() {
          (this._transform = null),
            (this._tfChanged = !1),
            (this._x = 0),
            (this._y = 0),
            (this._width = 0),
            (this._height = 0),
            (this._repaint = 1),
            (this._mouseEnableState = 0),
            (this._zOrder = 0),
            (this._graphics = null),
            (this._renderType = 0),
            (this._optimizeScrollRect = !1),
            (this._texture = null),
            (this.mouseThrough = !1),
            (this.autoSize = !1),
            (this.hitTestPrior = !1),
            (this.viewport = null),
            o.__super.call(this),
            (this._style = u.EMPTY);
        }
        a(o, 'laya.display.Sprite', e);
        var l = o.prototype;
        return (
          i.imps(l, { 'laya.display.ILayout': !0 }),
          (l.createConchModel = function() {
            return new ConchNode();
          }),
          (l.destroy = function(t) {
            void 0 === t && (t = !0),
              this._releaseMem(),
              e.prototype.destroy.call(this, t),
              this._style && this._style.destroy(),
              this._transform && this._transform.destroy(),
              (this._transform = null),
              (this._style = null),
              (this._graphics = null);
          }),
          (l.updateZOrder = function() {
            J.updateOrder(this._childs) && this.repaint();
          }),
          (l.reCache = function() {
            this._$P.cacheCanvas && (this._$P.cacheCanvas.reCache = !0),
              (this._repaint = 1);
          }),
          (l.setBounds = function(t) {
            this._set$P('uBounds', t);
          }),
          (l.getBounds = function() {
            return (
              this._$P.mBounds || this._set$P('mBounds', new M()),
              M._getWrapRec(this._boundPointsToParent(), this._$P.mBounds)
            );
          }),
          (l.getSelfBounds = function() {
            return this._$P.uBounds
              ? this._$P.uBounds
              : (this._$P.mBounds || this._set$P('mBounds', new M()),
                M._getWrapRec(this._getBoundPointsM(!1), this._$P.mBounds));
          }),
          (l._boundPointsToParent = function(t) {
            void 0 === t && (t = !1);
            var e = 0,
              i = 0;
            this._style &&
              ((e = this._style._tf.translateX),
              (i = this._style._tf.translateY),
              (t = t || 0 !== this._style._tf.rotate),
              this._style.scrollRect &&
                ((e += this._style.scrollRect.x),
                (i += this._style.scrollRect.y)));
            var n = this._getBoundPointsM(t);
            if (!n || n.length < 1) return n;
            if (
              (8 != n.length &&
                (n = t
                  ? I.scanPList(n)
                  : M._getWrapRec(n, M.TEMP)._getBoundPoints()),
              !this.transform)
            )
              return J.transPointList(n, this._x - e, this._y - i), n;
            var a = T.TEMP,
              r = 0,
              s = n.length;
            for (r = 0; r < s; r += 2)
              (a.x = n[r]),
                (a.y = n[r + 1]),
                this.toParentPoint(a),
                (n[r] = a.x),
                (n[r + 1] = a.y);
            return n;
          }),
          (l.getGraphicBounds = function(t) {
            return (
              void 0 === t && (t = !1),
              this._graphics
                ? this._graphics.getBounds(t)
                : M.TEMP.setTo(0, 0, 0, 0)
            );
          }),
          (l._getBoundPointsM = function(t) {
            if ((void 0 === t && (t = !1), this._$P.uBounds))
              return this._$P.uBounds._getBoundPoints();
            if ((this._$P.temBM || this._set$P('temBM', []), this.scrollRect)) {
              var e = J.clearArray(this._$P.temBM),
                i = M.TEMP;
              return (
                i.copyFrom(this.scrollRect),
                J.concatArray(e, i._getBoundPoints()),
                e
              );
            }
            for (
              var n,
                a,
                r,
                s = this._graphics
                  ? this._graphics.getBoundPoints()
                  : J.clearArray(this._$P.temBM),
                o = 0,
                l = (r = this._childs).length;
              o < l;
              o++
            )
              (n = r[o]) instanceof laya.display.Sprite &&
                1 == n.visible &&
                (a = n._boundPointsToParent(t)) &&
                (s = s ? J.concatArray(s, a) : a);
            return s;
          }),
          (l.getStyle = function() {
            return (
              this._style === u.EMPTY && (this._style = new u()), this._style
            );
          }),
          (l.setStyle = function(t) {
            this._style = t;
          }),
          (l._adjustTransform = function() {
            this._tfChanged = !1;
            var t,
              e = this._style._tf,
              i = e.scaleX,
              n = e.scaleY;
            if (e.rotate || 1 !== i || 1 !== n || e.skewX || e.skewY) {
              (t =
                this._transform ||
                (this._transform = S.create())).bTransform = !0;
              var a = 0.0174532922222222 * (e.rotate - e.skewX),
                r = 0.0174532922222222 * (e.rotate + e.skewY),
                s = Math.cos(r),
                o = Math.sin(r),
                l = Math.sin(a),
                h = Math.cos(a);
              return (
                (t.a = i * s),
                (t.b = i * o),
                (t.c = -n * l),
                (t.d = n * h),
                (t.tx = t.ty = 0),
                t
              );
            }
            return (
              this._transform && this._transform.destroy(),
              (this._transform = null),
              (this._renderType &= -5),
              t
            );
          }),
          (l.pos = function(t, e, i) {
            if ((void 0 === i && (i = !1), this._x !== t || this._y !== e)) {
              if (this.destroyed) return this;
              if (i) {
                (this._x = t),
                  (this._y = e),
                  this.conchModel && this.conchModel.pos(this._x, this._y);
                var n = this._parent;
                n && 0 === n._repaint && ((n._repaint = 1), n.parentRepaint()),
                  this._$P.maskParent &&
                    0 === this._$P.maskParent._repaint &&
                    ((this._$P.maskParent._repaint = 1),
                    this._$P.maskParent.parentRepaint());
              } else (this.x = t), (this.y = e);
            }
            return this;
          }),
          (l.pivot = function(t, e) {
            return (this.pivotX = t), (this.pivotY = e), this;
          }),
          (l.size = function(t, e) {
            return (this.width = t), (this.height = e), this;
          }),
          (l.scale = function(t, e, i) {
            void 0 === i && (i = !1);
            var n = this.getStyle(),
              a = n._tf;
            if (a.scaleX != t || a.scaleY != e) {
              if (this.destroyed) return this;
              if (i) {
                n.setScale(t, e),
                  (this._tfChanged = !0),
                  this.conchModel && this.conchModel.scale(t, e),
                  (this._renderType |= 4);
                var r = this._parent;
                r && 0 === r._repaint && ((r._repaint = 1), r.parentRepaint());
              } else (this.scaleX = t), (this.scaleY = e);
            }
            return this;
          }),
          (l.skew = function(t, e) {
            return (this.skewX = t), (this.skewY = e), this;
          }),
          (l.render = function(t, e, i) {
            X.spriteCount++,
              B.renders[this._renderType]._fun(
                this,
                t,
                e + this._x,
                i + this._y
              ),
              (this._repaint = 0);
          }),
          (l.drawToCanvas = function(t, e, i, n) {
            if (N.isConchNode) {
              var a = bt.create('2D');
              return (
                new R(t, e, a).ctx.setCanvasType(1),
                this.conchModel.drawToCanvas(a.source, i, n),
                a
              );
            }
            return s.drawToCanvas(this, this._renderType, t, e, i, n);
          }),
          (l.customRender = function(t, e, i) {
            this._renderType |= 1024;
          }),
          (l._applyFilters = function() {
            if (!N.isWebGL) {
              var t;
              if ((t = this._$P.filters) && !(t.length < 1))
                for (var e = 0, i = t.length; e < i; e++)
                  t[e].action.apply(this._$P.cacheCanvas);
            }
          }),
          (l._isHaveGlowFilter = function() {
            var t = 0,
              e = 0;
            if (this.filters)
              for (t = 0; t < this.filters.length; t++)
                if (8 == this.filters[t].type) return !0;
            for (t = 0, e = this._childs.length; t < e; t++)
              if (this._childs[t]._isHaveGlowFilter()) return !0;
            return !1;
          }),
          (l.localToGlobal = function(t, e) {
            void 0 === e && (e = !1), !0 === e && (t = new T(t.x, t.y));
            for (var n = this; n && n != i.stage; )
              (t = n.toParentPoint(t)), (n = n.parent);
            return t;
          }),
          (l.globalToLocal = function(t, e) {
            void 0 === e && (e = !1), e && (t = new T(t.x, t.y));
            for (var n = this, a = []; n && n != i.stage; )
              a.push(n), (n = n.parent);
            for (var r = a.length - 1; r >= 0; )
              (t = (n = a[r]).fromParentPoint(t)), r--;
            return t;
          }),
          (l.toParentPoint = function(t) {
            if (!t) return t;
            (t.x -= this.pivotX),
              (t.y -= this.pivotY),
              this.transform && this._transform.transformPoint(t),
              (t.x += this._x),
              (t.y += this._y);
            var e = this._style.scrollRect;
            return e && ((t.x -= e.x), (t.y -= e.y)), t;
          }),
          (l.fromParentPoint = function(t) {
            if (!t) return t;
            (t.x -= this._x), (t.y -= this._y);
            var e = this._style.scrollRect;
            return (
              e && ((t.x += e.x), (t.y += e.y)),
              this.transform && this._transform.invertTransformPoint(t),
              (t.x += this.pivotX),
              (t.y += this.pivotY),
              t
            );
          }),
          (l.on = function(t, i, n, a) {
            return 1 !== this._mouseEnableState && this.isMouseEvent(t)
              ? ((this.mouseEnabled = !0),
                this._setBit(2, !0),
                this._parent && this._$2__onDisplay(),
                this._createListener(t, i, n, a, !1))
              : e.prototype.on.call(this, t, i, n, a);
          }),
          (l.once = function(t, i, n, a) {
            return 1 !== this._mouseEnableState && this.isMouseEvent(t)
              ? ((this.mouseEnabled = !0),
                this._setBit(2, !0),
                this._parent && this._$2__onDisplay(),
                this._createListener(t, i, n, a, !0))
              : e.prototype.once.call(this, t, i, n, a);
          }),
          (l._$2__onDisplay = function() {
            if (1 !== this._mouseEnableState) {
              var t = this;
              for (
                t = t.parent;
                t && 1 !== t._mouseEnableState && !t._getBit(2);

              )
                (t.mouseEnabled = !0), t._setBit(2, !0), (t = t.parent);
            }
          }),
          (l.loadImage = function(t, e, i, n, a, r) {
            var s = this;
            return (
              void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              this.graphics.loadImage(t, e, i, n, a, function(t) {
                s.destroyed ||
                  (s.size(e + (n || t.width), i + (a || t.height)),
                  s.repaint(),
                  r && r.runWith(t));
              }),
              this
            );
          }),
          (l.repaint = function() {
            this.conchModel &&
              this.conchModel.repaint &&
              this.conchModel.repaint(),
              0 === this._repaint &&
                ((this._repaint = 1), this.parentRepaint()),
              this._$P && this._$P.maskParent && this._$P.maskParent.repaint();
          }),
          (l._needRepaint = function() {
            return (
              0 !== this._repaint &&
              this._$P.cacheCanvas &&
              this._$P.cacheCanvas.reCache
            );
          }),
          (l._childChanged = function(t) {
            this._childs.length
              ? (this._renderType |= 2048)
              : (this._renderType &= -2049),
              t &&
                this._get$P('hasZorder') &&
                i.timer.callLater(this, this.updateZOrder),
              this.repaint();
          }),
          (l.parentRepaint = function() {
            var t = this._parent;
            t && 0 === t._repaint && ((t._repaint = 1), t.parentRepaint());
          }),
          (l.startDrag = function(t, e, i, n, a, r, s) {
            void 0 === e && (e = !1),
              void 0 === i && (i = 0),
              void 0 === n && (n = 300),
              void 0 === r && (r = !1),
              void 0 === s && (s = 0.92),
              this._$P.dragging || this._set$P('dragging', new G()),
              this._$P.dragging.start(this, t, e, i, n, a, r, s);
          }),
          (l.stopDrag = function() {
            this._$P.dragging && this._$P.dragging.stop();
          }),
          (l._releaseMem = function() {
            if (this._$P) {
              var t = this._$P.cacheCanvas;
              t &&
                t.ctx &&
                (W.recover('RenderContext', t.ctx),
                t.ctx.canvas.size(0, 0),
                (t.ctx = null));
              var e = this._$P._filterCache;
              e &&
                (e.destroy(), e.recycle(), this._set$P('_filterCache', null)),
                this._$P._isHaveGlowFilter &&
                  this._set$P('_isHaveGlowFilter', !1),
                (this._$P._isHaveGlowFilter = null);
            }
          }),
          (l._setDisplay = function(t) {
            t || this._releaseMem(), e.prototype._setDisplay.call(this, t);
          }),
          (l.hitTestPoint = function(t, e) {
            var i = this.globalToLocal(T.TEMP.setTo(t, e));
            (t = i.x), (e = i.y);
            return (this._$P.hitArea
              ? this._$P.hitArea
              : this._width > 0 && this._height > 0
              ? M.TEMP.setTo(0, 0, this._width, this._height)
              : this.getSelfBounds()
            ).contains(t, e);
          }),
          (l.getMousePoint = function() {
            return this.globalToLocal(
              T.TEMP.setTo(i.stage.mouseX, i.stage.mouseY)
            );
          }),
          (l._getWords = function() {
            return null;
          }),
          (l._addChildsToLayout = function(t) {
            var e = this._getWords();
            if (null == e && 0 == this._childs.length) return !1;
            if (e) for (var i = 0, n = e.length; i < n; i++) t.push(e[i]);
            return (
              this._childs.forEach(function(e, i, n) {
                e._style._enableLayout() && e._addToLayout(t);
              }),
              !0
            );
          }),
          (l._addToLayout = function(t) {
            this._style.absolute ||
              (this._style.block
                ? t.push(this)
                : this._addChildsToLayout(t) && (this.x = this.y = 0));
          }),
          (l._isChar = function() {
            return !1;
          }),
          (l._getCSSStyle = function() {
            return this._style.getCSSStyle();
          }),
          (l._setAttributes = function(t, e) {
            switch (t) {
              case 'x':
                this.x = parseFloat(e);
                break;
              case 'y':
                this.y = parseFloat(e);
                break;
              case 'width':
                this.width = parseFloat(e);
                break;
              case 'height':
                this.height = parseFloat(e);
                break;
              default:
                this[t] = e;
            }
          }),
          (l._layoutLater = function() {
            this.parent && this.parent._layoutLater();
          }),
          r(
            0,
            l,
            'optimizeScrollRect',
            function() {
              return this._optimizeScrollRect;
            },
            function(t) {
              this._optimizeScrollRect != t &&
                ((this._optimizeScrollRect = t),
                this.conchModel && this.conchModel.optimizeScrollRect(t));
            }
          ),
          r(0, l, 'customRenderEnable', null, function(t) {
            if (t && ((this._renderType |= 1024), N.isConchNode)) {
              o.CustomList.push(this);
              var e = new bt('2d');
              e._setContext(new CanvasRenderingContext2D()),
                (this.customContext = new R(0, 0, e)),
                e.context.setCanvasType && e.context.setCanvasType(2),
                this.conchModel.custom(e.context);
            }
          }),
          r(
            0,
            l,
            'cacheAsBitmap',
            function() {
              return 'none' !== this.cacheAs;
            },
            function(t) {
              this.cacheAs = t
                ? this._$P.hasFilter
                  ? 'none'
                  : 'normal'
                : 'none';
            }
          ),
          r(
            0,
            l,
            'cacheAs',
            function() {
              return null == this._$P.cacheCanvas
                ? 'none'
                : this._$P.cacheCanvas.type;
            },
            function(t) {
              var e = this._$P.cacheCanvas;
              if (t !== (e ? e.type : 'none')) {
                if ('none' !== t)
                  this._getBit(1) || this._setUpNoticeType(1),
                    e ||
                      (e = this._set$P(
                        'cacheCanvas',
                        W.getItemByClass('cacheCanvas', Object)
                      )),
                    (e.type = t),
                    (e.reCache = !0),
                    (this._renderType |= 16),
                    'bitmap' == t &&
                      this.conchModel &&
                      this.conchModel.cacheAs(1),
                    this._set$P('cacheForFilters', !1);
                else if (this._$P._mask);
                else if (this._$P.hasFilter) this._set$P('cacheForFilters', !0);
                else {
                  if (e) {
                    var i = e;
                    i &&
                      i.ctx &&
                      (W.recover('RenderContext', i.ctx),
                      i.ctx.canvas.size(0, 0),
                      (i.ctx = null)),
                      W.recover('cacheCanvas', e);
                  }
                  (this._$P.cacheCanvas = null),
                    (this._renderType &= -17),
                    this.conchModel && this.conchModel.cacheAs(0);
                }
                this.repaint();
              }
            }
          ),
          r(
            0,
            l,
            'zOrder',
            function() {
              return this._zOrder;
            },
            function(t) {
              this._zOrder != t &&
                ((this._zOrder = t),
                this.conchModel &&
                  this.conchModel.setZOrder &&
                  this.conchModel.setZOrder(t),
                this._parent &&
                  (t && this._parent._set$P('hasZorder', !0),
                  i.timer.callLater(this._parent, this.updateZOrder)));
            }
          ),
          r(
            0,
            l,
            'rotation',
            function() {
              return this._style._tf.rotate;
            },
            function(t) {
              var e = this.getStyle();
              if (e._tf.rotate !== t) {
                e.setRotate(t),
                  (this._tfChanged = !0),
                  this.conchModel && this.conchModel.rotate(t),
                  (this._renderType |= 4);
                var i = this._parent;
                i && 0 === i._repaint && ((i._repaint = 1), i.parentRepaint());
              }
            }
          ),
          r(
            0,
            l,
            'width',
            function() {
              return this.autoSize ? this.getSelfBounds().width : this._width;
            },
            function(t) {
              this._width !== t &&
                ((this._width = t),
                this.conchModel && this.conchModel.size(t, this._height),
                this.repaint());
            }
          ),
          r(
            0,
            l,
            'x',
            function() {
              return this._x;
            },
            function(t) {
              if (this._x !== t) {
                if (this.destroyed) return;
                (this._x = t),
                  this.conchModel && this.conchModel.pos(t, this._y);
                var e = this._parent;
                e && 0 === e._repaint && ((e._repaint = 1), e.parentRepaint()),
                  this._$P.maskParent &&
                    0 === this._$P.maskParent._repaint &&
                    ((this._$P.maskParent._repaint = 1),
                    this._$P.maskParent.parentRepaint());
              }
            }
          ),
          r(0, l, 'globalScaleY', function() {
            for (var t = 1, e = this; e && e !== i.stage; )
              (t *= e.scaleY), (e = e.parent);
            return t;
          }),
          r(
            0,
            l,
            'hitArea',
            function() {
              return this._$P.hitArea;
            },
            function(t) {
              this._set$P('hitArea', t);
            }
          ),
          r(
            0,
            l,
            'staticCache',
            function() {
              return this._$P.staticCache;
            },
            function(t) {
              this._set$P('staticCache', t), t || this.reCache();
            }
          ),
          r(
            0,
            l,
            'texture',
            function() {
              return this._texture;
            },
            function(t) {
              this._texture != t &&
                ((this._texture = t), this.graphics.cleanByTexture(t, 0, 0));
            }
          ),
          r(
            0,
            l,
            'y',
            function() {
              return this._y;
            },
            function(t) {
              if (this._y !== t) {
                if (this.destroyed) return;
                (this._y = t),
                  this.conchModel && this.conchModel.pos(this._x, t);
                var e = this._parent;
                e && 0 === e._repaint && ((e._repaint = 1), e.parentRepaint()),
                  this._$P.maskParent &&
                    0 === this._$P.maskParent._repaint &&
                    ((this._$P.maskParent._repaint = 1),
                    this._$P.maskParent.parentRepaint());
              }
            }
          ),
          r(
            0,
            l,
            'height',
            function() {
              return this.autoSize ? this.getSelfBounds().height : this._height;
            },
            function(t) {
              this._height !== t &&
                ((this._height = t),
                this.conchModel && this.conchModel.size(this._width, t),
                this.repaint());
            }
          ),
          r(
            0,
            l,
            'blendMode',
            function() {
              return this._style.blendMode;
            },
            function(t) {
              (this.getStyle().blendMode = t),
                this.conchModel && this.conchModel.blendMode(t),
                t && 'source-over' != t
                  ? (this._renderType |= 8)
                  : (this._renderType &= -9),
                this.parentRepaint();
            }
          ),
          r(
            0,
            l,
            'scaleX',
            function() {
              return this._style._tf.scaleX;
            },
            function(t) {
              var e = this.getStyle();
              if (e._tf.scaleX !== t) {
                e.setScaleX(t),
                  (this._tfChanged = !0),
                  this.conchModel && this.conchModel.scale(t, e._tf.scaleY),
                  (this._renderType |= 4);
                var i = this._parent;
                i && 0 === i._repaint && ((i._repaint = 1), i.parentRepaint());
              }
            }
          ),
          r(
            0,
            l,
            'scaleY',
            function() {
              return this._style._tf.scaleY;
            },
            function(t) {
              var e = this.getStyle();
              if (e._tf.scaleY !== t) {
                e.setScaleY(t),
                  (this._tfChanged = !0),
                  this.conchModel && this.conchModel.scale(e._tf.scaleX, t),
                  (this._renderType |= 4);
                var i = this._parent;
                i && 0 === i._repaint && ((i._repaint = 1), i.parentRepaint());
              }
            }
          ),
          r(0, l, 'stage', function() {
            return i.stage;
          }),
          r(
            0,
            l,
            'skewX',
            function() {
              return this._style._tf.skewX;
            },
            function(t) {
              var e = this.getStyle();
              if (e._tf.skewX !== t) {
                e.setSkewX(t),
                  (this._tfChanged = !0),
                  this.conchModel && this.conchModel.skew(t, e._tf.skewY),
                  (this._renderType |= 4);
                var i = this._parent;
                i && 0 === i._repaint && ((i._repaint = 1), i.parentRepaint());
              }
            }
          ),
          r(
            0,
            l,
            'scrollRect',
            function() {
              return this._style.scrollRect;
            },
            function(t) {
              (this.getStyle().scrollRect = t),
                this.repaint(),
                t
                  ? ((this._renderType |= 128),
                    this.conchModel &&
                      this.conchModel.scrollRect(t.x, t.y, t.width, t.height))
                  : ((this._renderType &= -129),
                    this.conchModel &&
                      (o.RUNTIMEVERION < '0.9.1'
                        ? this.conchModel.removeType(64)
                        : this.conchModel.removeType(128)));
            }
          ),
          r(
            0,
            l,
            'skewY',
            function() {
              return this._style._tf.skewY;
            },
            function(t) {
              var e = this.getStyle();
              if (e._tf.skewY !== t) {
                e.setSkewY(t),
                  (this._tfChanged = !0),
                  this.conchModel && this.conchModel.skew(e._tf.skewX, t),
                  (this._renderType |= 4);
                var i = this._parent;
                i && 0 === i._repaint && ((i._repaint = 1), i.parentRepaint());
              }
            }
          ),
          r(
            0,
            l,
            'transform',
            function() {
              return this._tfChanged
                ? this._adjustTransform()
                : this._transform;
            },
            function(t) {
              (this._tfChanged = !1),
                (this._transform = t),
                t &&
                  ((this._x = t.tx),
                  (this._y = t.ty),
                  (t.tx = t.ty = 0),
                  this.conchModel &&
                    this.conchModel.transform(
                      t.a,
                      t.b,
                      t.c,
                      t.d,
                      this._x,
                      this._y
                    )),
                t
                  ? (this._renderType |= 4)
                  : ((this._renderType &= -5),
                    this.conchModel && this.conchModel.removeType(4)),
                this.parentRepaint();
            }
          ),
          r(
            0,
            l,
            'pivotX',
            function() {
              return this._style._tf.translateX;
            },
            function(t) {
              this.getStyle().setTranslateX(t),
                this.conchModel &&
                  this.conchModel.pivot(t, this._style._tf.translateY),
                this.repaint();
            }
          ),
          r(
            0,
            l,
            'pivotY',
            function() {
              return this._style._tf.translateY;
            },
            function(t) {
              this.getStyle().setTranslateY(t),
                this.conchModel &&
                  this.conchModel.pivot(this._style._tf.translateX, t),
                this.repaint();
            }
          ),
          r(
            0,
            l,
            'alpha',
            function() {
              return this._style.alpha;
            },
            function(t) {
              this._style &&
                this._style.alpha !== t &&
                ((t = t < 0 ? 0 : t > 1 ? 1 : t),
                (this.getStyle().alpha = t),
                this.conchModel && this.conchModel.alpha(t),
                1 !== t ? (this._renderType |= 2) : (this._renderType &= -3),
                this.parentRepaint());
            }
          ),
          r(
            0,
            l,
            'visible',
            function() {
              return this._style.visible;
            },
            function(t) {
              this._style &&
                this._style.visible !== t &&
                ((this.getStyle().visible = t),
                this.conchModel && this.conchModel.visible(t),
                this.parentRepaint());
            }
          ),
          r(
            0,
            l,
            'graphics',
            function() {
              return this._graphics || (this.graphics = s.createGraphics());
            },
            function(t) {
              this._graphics && (this._graphics._sp = null),
                (this._graphics = t),
                t
                  ? ((this._renderType &= -2),
                    (this._renderType |= 512),
                    (t._sp = this),
                    this.conchModel && this.conchModel.graphics(this._graphics))
                  : ((this._renderType &= -513),
                    (this._renderType &= -2),
                    this.conchModel &&
                      (o.RUNTIMEVERION < '0.9.1'
                        ? this.conchModel.removeType(256)
                        : this.conchModel.removeType(512))),
                this.repaint();
            }
          ),
          r(
            0,
            l,
            'filters',
            function() {
              return this._$P.filters;
            },
            function(t) {
              t && 0 === t.length && (t = null),
                this._$P.filters != t &&
                  (this._set$P('filters', t ? t.slice() : null),
                  N.isConchApp &&
                    (this.conchModel &&
                      (o.RUNTIMEVERION < '0.9.1'
                        ? this.conchModel.removeType(16)
                        : this.conchModel.removeType(32)),
                    this._$P.filters &&
                      1 == this._$P.filters.length &&
                      this._$P.filters[0].callNative(this)),
                  N.isWebGL &&
                    (t && t.length
                      ? (this._renderType |= 32)
                      : (this._renderType &= -33)),
                  t && t.length > 0
                    ? (this._getBit(1) || this._setUpNoticeType(1),
                      (N.isWebGL &&
                        1 == t.length &&
                        t[0] instanceof laya.filters.ColorFilter) ||
                        ('bitmap' != this.cacheAs &&
                          (N.isConchNode || (this.cacheAs = 'bitmap'),
                          this._set$P('cacheForFilters', !0)),
                        this._set$P('hasFilter', !0)))
                    : (this._set$P('hasFilter', !1),
                      this._$P.cacheForFilters &&
                        'bitmap' == this.cacheAs &&
                        (this.cacheAs = 'none')),
                  this.repaint());
            }
          ),
          r(0, l, 'parent', e.prototype._$get_parent, function(t) {
            i.superSet($, this, 'parent', t),
              t && this._getBit(2) && this._$2__onDisplay();
          }),
          r(
            0,
            l,
            'mask',
            function() {
              return this._$P._mask;
            },
            function(t) {
              (t && this.mask && this.mask._$P.maskParent) ||
                (t
                  ? ((this.cacheAs = 'bitmap'),
                    this._set$P('_mask', t),
                    t._set$P('maskParent', this))
                  : (this.mask && this.mask._set$P('maskParent', null),
                    this._set$P('_mask', t),
                    (this.cacheAs = 'none')),
                this.conchModel &&
                  this.conchModel.mask(t ? t.conchModel : null),
                (this._renderType |= 64),
                this.parentRepaint());
            }
          ),
          r(
            0,
            l,
            'mouseEnabled',
            function() {
              return this._mouseEnableState > 1;
            },
            function(t) {
              this._mouseEnableState = t ? 2 : 1;
            }
          ),
          r(0, l, 'globalScaleX', function() {
            for (var t = 1, e = this; e && e !== i.stage; )
              (t *= e.scaleX), (e = e.parent);
            return t;
          }),
          r(0, l, 'mouseX', function() {
            return this.getMousePoint().x;
          }),
          r(0, l, 'mouseY', function() {
            return this.getMousePoint().y;
          }),
          (o.fromImage = function(t) {
            return new o().loadImage(t);
          }),
          (o.CustomList = []),
          n(o, [
            'RUNTIMEVERION',
            function() {
              return (this.RUNTIMEVERION = t.conch
                ? conchConfig
                    .getRuntimeVersion()
                    .substr(
                      conchConfig.getRuntimeVersion().lastIndexOf('-') + 1
                    )
                : '');
            }
          ]),
          o
        );
      })($),
      dt = (function(t) {
        function e(t) {
          (this._audio = null),
            (this._onEnd = null),
            (this._resumePlay = null),
            e.__super.call(this),
            (this._onEnd = J.bind(this.__onEnd, this)),
            (this._resumePlay = J.bind(this.__resumePlay, this)),
            t.addEventListener('ended', this._onEnd),
            (this._audio = t);
        }
        a(e, 'laya.media.h5audio.AudioSoundChannel', it);
        var n = e.prototype;
        return (
          (n.__onEnd = function() {
            if (1 == this.loops)
              return (
                this.completeHandler &&
                  (i.timer.once(
                    10,
                    this,
                    this.__runComplete,
                    [this.completeHandler],
                    !1
                  ),
                  (this.completeHandler = null)),
                this.stop(),
                void this.event('complete')
              );
            this.loops > 0 && this.loops--, (this.startTime = 0), this.play();
          }),
          (n.__resumePlay = function() {
            this._audio &&
              this._audio.removeEventListener('canplay', this._resumePlay);
            try {
              (this._audio.currentTime = this.startTime),
                O.container.appendChild(this._audio),
                this._audio.play();
            } catch (t) {
              this.event('error');
            }
          }),
          (n.play = function() {
            this.isStopped = !1;
            try {
              (this._audio.playbackRate = E.playbackRate),
                (this._audio.currentTime = this.startTime);
            } catch (t) {
              return void this._audio.addEventListener(
                'canplay',
                this._resumePlay
              );
            }
            E.addChannel(this),
              O.container.appendChild(this._audio),
              'play' in this._audio && this._audio.play();
          }),
          (n.stop = function() {
            (this.isStopped = !0),
              E.removeChannel(this),
              (this.completeHandler = null),
              this._audio &&
                ('pause' in this._audio && N.isConchApp && this._audio.stop(),
                this._audio.pause(),
                this._audio.removeEventListener('ended', this._onEnd),
                this._audio.removeEventListener('canplay', this._resumePlay),
                O.onIE ||
                  (this._audio != et._musicAudio &&
                    W.recover('audio:' + this.url, this._audio)),
                O.removeElement(this._audio),
                (this._audio = null));
          }),
          (n.pause = function() {
            (this.isStopped = !0),
              E.removeChannel(this),
              'pause' in this._audio && this._audio.pause();
          }),
          (n.resume = function() {
            this._audio &&
              ((this.isStopped = !1),
              E.addChannel(this),
              'play' in this._audio && this._audio.play());
          }),
          r(0, n, 'position', function() {
            return this._audio ? this._audio.currentTime : 0;
          }),
          r(0, n, 'duration', function() {
            return this._audio ? this._audio.duration : 0;
          }),
          r(
            0,
            n,
            'volume',
            function() {
              return this._audio ? this._audio.volume : 1;
            },
            function(t) {
              this._audio && (this._audio.volume = t);
            }
          ),
          e
        );
      })(),
      ft = (function(t) {
        function e() {
          (this.audioBuffer = null),
            (this.gain = null),
            (this.bufferSource = null),
            (this._currentTime = 0),
            (this._volume = 1),
            (this._startTime = 0),
            (this._pauseTime = 0),
            (this._onPlayEnd = null),
            (this.context = at.ctx),
            e.__super.call(this),
            (this._onPlayEnd = J.bind(this.__onPlayEnd, this)),
            this.context.createGain
              ? (this.gain = this.context.createGain())
              : (this.gain = this.context.createGainNode());
        }
        a(e, 'laya.media.webaudio.WebAudioSoundChannel', it);
        var n = e.prototype;
        return (
          (n.play = function() {
            if (
              (E.addChannel(this),
              (this.isStopped = !1),
              this._clearBufferSource(),
              this.audioBuffer)
            ) {
              var t = this.context,
                e = this.gain,
                i = t.createBufferSource();
              (this.bufferSource = i),
                (i.buffer = this.audioBuffer),
                i.connect(e),
                e && e.disconnect(),
                e.connect(t.destination),
                (i.onended = this._onPlayEnd),
                this.startTime >= this.duration && (this.startTime = 0),
                (this._startTime = O.now()),
                (this.gain.gain.value = this._volume),
                0 == this.loops && (i.loop = !0),
                (i.playbackRate.value = E.playbackRate),
                i.start(0, this.startTime),
                (this._currentTime = 0);
            }
          }),
          (n.__onPlayEnd = function() {
            if (1 == this.loops)
              return (
                this.completeHandler &&
                  (i.timer.once(
                    10,
                    this,
                    this.__runComplete,
                    [this.completeHandler],
                    !1
                  ),
                  (this.completeHandler = null)),
                this.stop(),
                void this.event('complete')
              );
            this.loops > 0 && this.loops--, (this.startTime = 0), this.play();
          }),
          (n._clearBufferSource = function() {
            if (this.bufferSource) {
              var t = this.bufferSource;
              t.stop ? t.stop(0) : t.noteOff(0),
                t.disconnect(0),
                (t.onended = null),
                e._tryCleanFailed || this._tryClearBuffer(t),
                (this.bufferSource = null);
            }
          }),
          (n._tryClearBuffer = function(t) {
            if (O.onMac)
              try {
                t.buffer = at._miniBuffer;
              } catch (t) {
                e._tryCleanFailed = !0;
              }
            else
              try {
                t.buffer = null;
              } catch (t) {
                e._tryCleanFailed = !0;
              }
          }),
          (n.stop = function() {
            this._clearBufferSource(),
              (this.audioBuffer = null),
              this.gain && this.gain.disconnect(),
              (this.isStopped = !0),
              E.removeChannel(this),
              (this.completeHandler = null),
              E.autoReleaseSound &&
                i.timer.once(
                  5e3,
                  null,
                  E.disposeSoundIfNotUsed,
                  [this.url],
                  !1
                );
          }),
          (n.pause = function() {
            this.isStopped || (this._pauseTime = this.position),
              this._clearBufferSource(),
              this.gain && this.gain.disconnect(),
              (this.isStopped = !0),
              E.removeChannel(this),
              E.autoReleaseSound &&
                i.timer.once(
                  5e3,
                  null,
                  E.disposeSoundIfNotUsed,
                  [this.url],
                  !1
                );
          }),
          (n.resume = function() {
            (this.startTime = this._pauseTime), this.play();
          }),
          r(0, n, 'position', function() {
            return this.bufferSource
              ? (O.now() - this._startTime) / 1e3 + this.startTime
              : 0;
          }),
          r(0, n, 'duration', function() {
            return this.audioBuffer ? this.audioBuffer.duration : 0;
          }),
          r(
            0,
            n,
            'volume',
            function() {
              return this._volume;
            },
            function(t) {
              this.isStopped ||
                ((this._volume = t), (this.gain.gain.value = t));
            }
          ),
          (e._tryCleanFailed = !1),
          e
        );
      })(),
      pt = (function(t) {
        function e() {
          e.__super.call(this), (this._w = 0), (this._h = 0);
        }
        a(e, 'laya.resource.Bitmap', ht);
        var i = e.prototype;
        return (
          r(0, i, 'width', function() {
            return this._w;
          }),
          r(0, i, 'height', function() {
            return this._h;
          }),
          r(0, i, 'source', function() {
            return this._source;
          }),
          e
        );
      })(),
      mt = (function(t) {
        function e() {
          (this.loop = !1),
            (this.wrapMode = 0),
            (this._index = 0),
            (this._count = 0),
            (this._isPlaying = !1),
            (this._labels = null),
            (this._isReverse = !1),
            (this._frameRateChanged = !1),
            (this._controlNode = null),
            (this._actionName = null),
            e.__super.call(this),
            (this._interval = o.animationInterval),
            this._setUpNoticeType(1);
        }
        a(e, 'laya.display.AnimationPlayerBase', t);
        var i = e.prototype;
        return (
          (i.play = function(t, e, i, n) {
            void 0 === t && (t = 0),
              void 0 === e && (e = !0),
              void 0 === i && (i = ''),
              void 0 === n && (n = !0),
              (this._isPlaying = !0),
              (this.index =
                'string' == typeof t ? this._getFrameByLabel(t) : t),
              (this.loop = e),
              (this._actionName = i),
              (this._isReverse = 1 == this.wrapMode),
              this.interval > 0 &&
                this.timerLoop(
                  this.interval,
                  this,
                  this._frameLoop,
                  null,
                  !0,
                  !0
                );
          }),
          (i._getFrameByLabel = function(t) {
            var e = 0;
            for (e = 0; e < this._count; e++)
              if (this._labels[e] && this._labels[e].indexOf(t) >= 0) return e;
            return 0;
          }),
          (i._frameLoop = function() {
            if (this._isReverse) {
              if ((this._index--, this._index < 0)) {
                if (!this.loop)
                  return (
                    (this._index = 0), this.stop(), void this.event('complete')
                  );
                2 == this.wrapMode
                  ? ((this._index = this._count > 0 ? 1 : 0),
                    (this._isReverse = !1))
                  : (this._index = this._count - 1),
                  this.event('complete');
              }
            } else if ((this._index++, this._index >= this._count)) {
              if (!this.loop)
                return this._index--, this.stop(), void this.event('complete');
              2 == this.wrapMode
                ? ((this._index = this._count - 2 >= 0 ? this._count - 2 : 0),
                  (this._isReverse = !0))
                : (this._index = 0),
                this.event('complete');
            }
            this.index = this._index;
          }),
          (i._setControlNode = function(t) {
            this._controlNode &&
              (this._controlNode.off('display', this, this._checkResumePlaying),
              this._controlNode.off(
                'undisplay',
                this,
                this._checkResumePlaying
              )),
              (this._controlNode = t),
              t &&
                t != this &&
                (t.on('display', this, this._checkResumePlaying),
                t.on('undisplay', this, this._checkResumePlaying));
          }),
          (i._setDisplay = function(e) {
            t.prototype._setDisplay.call(this, e), this._checkResumePlaying();
          }),
          (i._checkResumePlaying = function() {
            this._isPlaying &&
              (this._controlNode.displayedInStage
                ? this.play(this._index, this.loop, this._actionName)
                : this.clearTimer(this, this._frameLoop));
          }),
          (i.stop = function() {
            (this._isPlaying = !1), this.clearTimer(this, this._frameLoop);
          }),
          (i.addLabel = function(t, e) {
            this._labels || (this._labels = {}),
              this._labels[e] || (this._labels[e] = []),
              this._labels[e].push(t);
          }),
          (i.removeLabel = function(t) {
            if (t) {
              if (this._labels)
                for (var e in this._labels)
                  this._removeLabelFromLabelList(this._labels[e], t);
            } else this._labels = null;
          }),
          (i._removeLabelFromLabelList = function(t, e) {
            if (t)
              for (var i = t.length - 1; i >= 0; i--)
                t[i] == e && t.splice(i, 1);
          }),
          (i.gotoAndStop = function(t) {
            (this.index = 'string' == typeof t ? this._getFrameByLabel(t) : t),
              this.stop();
          }),
          (i._displayToIndex = function(t) {}),
          (i.clear = function() {
            this.stop(), (this._labels = null);
          }),
          r(
            0,
            i,
            'interval',
            function() {
              return this._interval;
            },
            function(t) {
              this._interval != t &&
                ((this._frameRateChanged = !0),
                (this._interval = t),
                this._isPlaying &&
                  t > 0 &&
                  this.timerLoop(t, this, this._frameLoop, null, !0, !0));
            }
          ),
          r(0, i, 'isPlaying', function() {
            return this._isPlaying;
          }),
          r(
            0,
            i,
            'index',
            function() {
              return this._index;
            },
            function(t) {
              if (
                ((this._index = t),
                this._displayToIndex(t),
                this._labels && this._labels[t])
              )
                for (var e = this._labels[t], i = 0, n = e.length; i < n; i++)
                  this.event('label', e[i]);
            }
          ),
          r(0, i, 'count', function() {
            return this._count;
          }),
          (e.WRAP_POSITIVE = 0),
          (e.WRAP_REVERSE = 1),
          (e.WRAP_PINGPONG = 2),
          e
        );
      })(_t),
      gt = (function(t) {
        function e() {
          (this._clipPoint = null),
            (this._currBitmapFont = null),
            (this._text = null),
            (this._isChanged = !1),
            (this._isColorChanged = !1),
            (this._textWidth = 0),
            (this._textHeight = 0),
            (this._lines = []),
            (this._lineWidths = []),
            (this._startX = NaN),
            (this._startY = NaN),
            (this._lastVisibleLineIndex = -1),
            (this._words = null),
            (this._charSize = {}),
            (this.underline = !1),
            (this._underlineColor = null),
            e.__super.call(this),
            (this.overflow = e.VISIBLE),
            (this._style = new tt(this)),
            (this._style.wordWrap = !1);
        }
        a(e, 'laya.display.Text', t);
        var s = e.prototype;
        return (
          (s.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              (this._lines = null),
              this._words && ((this._words.length = 0), (this._words = null));
          }),
          (s._getBoundPointsM = function(t) {
            void 0 === t && (t = !1);
            var e = M.TEMP;
            return e.setTo(0, 0, this.width, this.height), e._getBoundPoints();
          }),
          (s.getGraphicBounds = function(t) {
            void 0 === t && (t = !1);
            var e = M.TEMP;
            return e.setTo(0, 0, this.width, this.height), e;
          }),
          (s._getCSSStyle = function() {
            return this._style;
          }),
          (s.lang = function(t, i, n, a, r, s, o, l, h, c, u) {
            if (
              ((t = e.langPacks && e.langPacks[t] ? e.langPacks[t] : t),
              arguments.length < 2)
            )
              this._text = t;
            else {
              for (var _ = 0, d = arguments.length; _ < d; _++)
                t = t.replace('{' + _ + '}', arguments[_ + 1]);
              this._text = t;
            }
          }),
          (s._isPassWordMode = function() {
            var t = this._style.password;
            return 'prompt' in this && this.prompt == this._text && (t = !1), t;
          }),
          (s._getPassWordTxt = function(t) {
            var e;
            e = '';
            for (var i = t.length; i > 0; i--) e += '●';
            return e;
          }),
          (s.renderText = function(t, e) {
            var i = this.graphics;
            i.clear(!0);
            var n =
              (this.italic ? 'italic ' : '') +
              (this.bold ? 'bold ' : '') +
              this.fontSize +
              'px ' +
              (O.onIPhone
                ? laya.display.Text._fontFamilyMap[this.font] || this.font
                : this.font);
            O.context.font = n;
            var a = this.padding,
              r = a[3],
              s = 'left',
              o = this._lines,
              l = this.leading + this._charSize.height,
              h = this._currBitmapFont;
            h && (l = this.leading + h.getMaxHeight());
            var c = a[0];
            if (
              (!h &&
                this._width > 0 &&
                this._textWidth <= this._width &&
                ('right' == this.align
                  ? ((s = 'right'), (r = this._width - a[1]))
                  : 'center' == this.align &&
                    ((s = 'center'), (r = 0.5 * this._width + a[3] - a[1]))),
              this._height > 0)
            ) {
              var u = this._textHeight > this._height ? 'top' : this.valign;
              'middle' === u
                ? (c = 0.5 * (this._height - e * l) + a[0] - a[2])
                : 'bottom' === u && (c = this._height - e * l - a[2]);
            }
            var _ = this._style;
            if (h && h.autoScaleSize) var d = h.fontSize / this.fontSize;
            if (this._clipPoint)
              if ((i.save(), h && h.autoScaleSize)) {
                var f = 0,
                  p = 0;
                (f = this._width ? this._width - a[3] - a[1] : this._textWidth),
                  (p = this._height
                    ? this._height - a[0] - a[2]
                    : this._textHeight),
                  (f *= d),
                  (p *= d),
                  i.clipRect(a[3], a[0], f, p);
              } else
                i.clipRect(
                  a[3],
                  a[0],
                  this._width ? this._width - a[3] - a[1] : this._textWidth,
                  this._height ? this._height - a[0] - a[2] : this._textHeight
                );
            var m = _.password;
            'prompt' in this && this.prompt == this._text && (m = !1);
            for (
              var g = 0,
                y = 0,
                v = Math.min(this._lines.length, e + t) || 1,
                b = t;
              b < v;
              b++
            ) {
              var w,
                x = o[b];
              if (m) {
                var I = x.length;
                x = '';
                for (var C = I; C > 0; C--) x += '●';
              }
              if (
                ((g = r - (this._clipPoint ? this._clipPoint.x : 0)),
                (y = c + l * b - (this._clipPoint ? this._clipPoint.y : 0)),
                this.underline && this.drawUnderline(s, g, y, b),
                h)
              ) {
                var S = this.width;
                h.autoScaleSize && (S = this.width * d),
                  h.drawText(x, this, g, y, this.align, S);
              } else
                N.isWebGL
                  ? (this._words || (this._words = []),
                    (w =
                      this._words.length > b - t
                        ? this._words[b - t]
                        : new Q()).setText(x))
                  : (w = x),
                  _.stroke
                    ? i.fillBorderText(
                        w,
                        g,
                        y,
                        n,
                        this.color,
                        _.strokeColor,
                        _.stroke,
                        s
                      )
                    : i.fillText(w, g, y, n, this.color, s);
            }
            if (h && h.autoScaleSize) {
              var T = 1 / d;
              this.scale(T, T);
            }
            this._clipPoint && i.restore(),
              (this._startX = r),
              (this._startY = c);
          }),
          (s.drawUnderline = function(t, e, i, n) {
            var a = this._lineWidths[n];
            switch (t) {
              case 'center':
                e -= a / 2;
                break;
              case 'right':
                e -= a;
            }
            (i += this._charSize.height),
              this._graphics.drawLine(
                e,
                i,
                e + a,
                i,
                this.underlineColor || this.color,
                1
              );
          }),
          (s.typeset = function() {
            if (
              ((this._isChanged = !1),
              this._isColorChanged &&
                ((this._isColorChanged = !1), this._currBitmapFont))
            ) {
              var t = parseInt(this.color.substring(1), 16),
                i = new lt([
                  ((16711680 & t) >> 16) / 255,
                  0,
                  0,
                  0,
                  0,
                  0,
                  ((65280 & t) >> 8) / 255,
                  0,
                  0,
                  0,
                  0,
                  0,
                  (255 & t) / 255,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0
                ]);
              this.filters = [i];
            }
            if (!this._text)
              return (
                (this._clipPoint = null),
                (this._textWidth = this._textHeight = 0),
                void this.graphics.clear(!0)
              );
            (O.context.font = this._getCSSStyle().font),
              (this._lines.length = 0),
              (this._lineWidths.length = 0),
              this._isPassWordMode()
                ? this.parseLines(this._getPassWordTxt(this._text))
                : this.parseLines(this._text),
              this.evalTextSize(),
              this.checkEnabledViewportOrNot()
                ? this._clipPoint || (this._clipPoint = new T(0, 0))
                : (this._clipPoint = null);
            var n = this._lines.length;
            if (this.overflow != e.VISIBLE) {
              var a = this.overflow == e.HIDDEN ? Math.floor : Math.ceil;
              n = Math.min(
                n,
                a(
                  (this.height - this.padding[0] - this.padding[2]) /
                    (this.leading + this._charSize.height)
                )
              );
            }
            var r = (this.scrollY / (this._charSize.height + this.leading)) | 0;
            this.renderText(r, n), this.repaint();
          }),
          (s.evalTextSize = function() {
            var t = NaN,
              e = NaN;
            (t = Math.max.apply(this, this._lineWidths)),
              (e = this._currBitmapFont
                ? this._lines.length *
                    (this._currBitmapFont.getMaxHeight() + this.leading) +
                  this.padding[0] +
                  this.padding[2]
                : this._lines.length * (this._charSize.height + this.leading) +
                  this.padding[0] +
                  this.padding[2]),
              (t == this._textWidth && e == this._textHeight) ||
                ((this._textWidth = t),
                (this._textHeight = e),
                (this._width && this._height) ||
                  (this.conchModel &&
                    this.conchModel.size(
                      this._width || this._textWidth,
                      this._height || this._textHeight
                    )));
          }),
          (s.checkEnabledViewportOrNot = function() {
            return (
              this.overflow == e.SCROLL &&
              ((this._width > 0 && this._textWidth > this._width) ||
                (this._height > 0 && this._textHeight > this._height))
            );
          }),
          (s.changeText = function(t) {
            this._text !== t &&
              (this.lang(t + ''),
              (this._graphics && this._graphics.replaceText(this._text)) ||
                this.typeset());
          }),
          (s.parseLines = function(t) {
            var i = this.wordWrap || this.overflow == e.HIDDEN;
            if (i) var n = this.getWordWrapWidth();
            if (this._currBitmapFont)
              (this._charSize.width = this._currBitmapFont.getMaxWidth()),
                (this._charSize.height = this._currBitmapFont.getMaxHeight());
            else {
              var a = O.context.measureText(e._testWord);
              N.isConchApp &&
                0 === a.width &&
                0 === a.height &&
                (a = O.context.measureText('W')),
                (this._charSize.width = a.width),
                (this._charSize.height = a.height || this.fontSize);
            }
            for (
              var r = t.replace(/\r\n/g, '\n').split('\n'), s = 0, o = r.length;
              s < o;
              s++
            ) {
              var l = r[s];
              i
                ? this.parseLine(l, n)
                : (this._lineWidths.push(this.getTextWidth(l)),
                  this._lines.push(l));
            }
          }),
          (s.parseLine = function(t, i) {
            O.context;
            var n,
              a = this._lines,
              r = 0,
              s = NaN,
              o = NaN,
              l = 0;
            if ((s = this.getTextWidth(t)) <= i)
              return a.push(t), void this._lineWidths.push(s);
            (s = this._charSize.width),
              0 == (r = Math.floor(i / s)) && (r = 1),
              (o = s = this.getTextWidth(t.substring(0, r)));
            for (var h = r, c = t.length; h < c; h++)
              if (((s = this.getTextWidth(t.charAt(h))), (o += s) > i))
                if (this.wordWrap) {
                  var u = t.substring(l, h);
                  if (
                    (u.charCodeAt(u.length - 1) < 255
                      ? (n = /(?:\w|-)+$/.exec(u)) &&
                        ((h = n.index + l),
                        0 == n.index
                          ? (h += u.length)
                          : (u = t.substring(l, h)))
                      : e.RightToLeft &&
                        (n = /([\u0600-\u06FF])+$/.exec(u)) &&
                        ((h = n.index + l),
                        0 == n.index
                          ? (h += u.length)
                          : (u = t.substring(l, h))),
                    a.push(u),
                    this._lineWidths.push(o - s),
                    (l = h),
                    !(h + r < c))
                  ) {
                    a.push(t.substring(l, c)),
                      this._lineWidths.push(this.getTextWidth(a[a.length - 1])),
                      (l = -1);
                    break;
                  }
                  (h += r), (o = s = this.getTextWidth(t.substring(l, h))), h--;
                } else if (this.overflow == e.HIDDEN)
                  return (
                    a.push(t.substring(0, h)),
                    void this._lineWidths.push(
                      this.getTextWidth(a[a.length - 1])
                    )
                  );
            this.wordWrap &&
              -1 != l &&
              (a.push(t.substring(l, c)),
              this._lineWidths.push(this.getTextWidth(a[a.length - 1])));
          }),
          (s.getTextWidth = function(t) {
            return this._currBitmapFont
              ? this._currBitmapFont.getTextWidth(t)
              : O.context.measureText(t).width;
          }),
          (s.getWordWrapWidth = function() {
            var t = this.padding,
              e = NaN;
            return (
              (e =
                this._currBitmapFont && this._currBitmapFont.autoScaleSize
                  ? this._width *
                    (this._currBitmapFont.fontSize / this.fontSize)
                  : this._width) <= 0 && (e = this.wordWrap ? 100 : O.width),
              e <= 0 && (e = 100),
              e - t[3] - t[1]
            );
          }),
          (s.getCharPoint = function(t, e) {
            this._isChanged && i.timer.runCallLater(this, this.typeset);
            for (
              var n = 0, a = this._lines, r = 0, s = 0, o = a.length;
              s < o;
              s++
            ) {
              if (((n += a[s].length), t < n)) {
                var l = s;
                break;
              }
              r = n;
            }
            var h =
              (this.italic ? 'italic ' : '') +
              (this.bold ? 'bold ' : '') +
              this.fontSize +
              'px ' +
              this.font;
            O.context.font = h;
            var c = this.getTextWidth(this._text.substring(r, t));
            return (e || new T()).setTo(
              this._startX + c - (this._clipPoint ? this._clipPoint.x : 0),
              this._startY +
                l * (this._charSize.height + this.leading) -
                (this._clipPoint ? this._clipPoint.y : 0)
            );
          }),
          r(
            0,
            s,
            'width',
            function() {
              return this._width
                ? this._width
                : this.textWidth + this.padding[1] + this.padding[3];
            },
            function(t) {
              t != this._width &&
                (i.superSet(_t, this, 'width', t), (this.isChanged = !0));
            }
          ),
          r(0, s, 'textWidth', function() {
            return (
              this._isChanged && i.timer.runCallLater(this, this.typeset),
              this._textWidth
            );
          }),
          r(
            0,
            s,
            'height',
            function() {
              return this._height
                ? this._height
                : this.textHeight + this.padding[0] + this.padding[2];
            },
            function(t) {
              t != this._height &&
                (i.superSet(_t, this, 'height', t), (this.isChanged = !0));
            }
          ),
          r(0, s, 'textHeight', function() {
            return (
              this._isChanged && i.timer.runCallLater(this, this.typeset),
              this._textHeight
            );
          }),
          r(
            0,
            s,
            'padding',
            function() {
              return this._getCSSStyle().padding;
            },
            function(t) {
              (this._getCSSStyle().padding = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'bold',
            function() {
              return this._getCSSStyle().bold;
            },
            function(t) {
              (this._getCSSStyle().bold = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'text',
            function() {
              return this._text || '';
            },
            function(t) {
              this._text !== t &&
                (this.lang(t + ''),
                (this.isChanged = !0),
                this.event('change'));
            }
          ),
          r(
            0,
            s,
            'color',
            function() {
              return this._getCSSStyle().color;
            },
            function(t) {
              this._getCSSStyle().color != t &&
                ((this._getCSSStyle().color = t),
                this._isChanged || !this._graphics || this._currBitmapFont
                  ? ((this.isChanged = !0), (this._isColorChanged = !0))
                  : this._graphics.replaceTextColor(this.color));
            }
          ),
          r(
            0,
            s,
            'font',
            function() {
              return this._getCSSStyle().fontFamily;
            },
            function(t) {
              this._currBitmapFont &&
                ((this._currBitmapFont = null), this.scale(1, 1)),
                e._bitmapFonts &&
                  e._bitmapFonts[t] &&
                  (this._currBitmapFont = e._bitmapFonts[t]),
                (this._getCSSStyle().fontFamily = t),
                (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'fontSize',
            function() {
              return this._getCSSStyle().fontSize;
            },
            function(t) {
              (this._getCSSStyle().fontSize = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'italic',
            function() {
              return this._getCSSStyle().italic;
            },
            function(t) {
              (this._getCSSStyle().italic = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'align',
            function() {
              return this._getCSSStyle().align;
            },
            function(t) {
              (this._getCSSStyle().align = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'valign',
            function() {
              return this._getCSSStyle().valign;
            },
            function(t) {
              (this._getCSSStyle().valign = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'wordWrap',
            function() {
              return this._getCSSStyle().wordWrap;
            },
            function(t) {
              (this._getCSSStyle().wordWrap = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'leading',
            function() {
              return this._getCSSStyle().leading;
            },
            function(t) {
              (this._getCSSStyle().leading = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'bgColor',
            function() {
              return this._getCSSStyle().backgroundColor;
            },
            function(t) {
              (this._getCSSStyle().backgroundColor = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'borderColor',
            function() {
              return this._getCSSStyle().borderColor;
            },
            function(t) {
              (this._getCSSStyle().borderColor = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'stroke',
            function() {
              return this._getCSSStyle().stroke;
            },
            function(t) {
              (this._getCSSStyle().stroke = t), (this.isChanged = !0);
            }
          ),
          r(
            0,
            s,
            'strokeColor',
            function() {
              return this._getCSSStyle().strokeColor;
            },
            function(t) {
              (this._getCSSStyle().strokeColor = t), (this.isChanged = !0);
            }
          ),
          r(0, s, 'isChanged', null, function(t) {
            this._isChanged !== t &&
              ((this._isChanged = t),
              t && i.timer.callLater(this, this.typeset));
          }),
          r(
            0,
            s,
            'scrollX',
            function() {
              return this._clipPoint ? this._clipPoint.x : 0;
            },
            function(t) {
              if (
                !(this.overflow != e.SCROLL || this.textWidth < this._width) &&
                this._clipPoint
              ) {
                t = t < this.padding[3] ? this.padding[3] : t;
                var i = this._textWidth - this._width;
                t = t > i ? i : t;
                var n =
                  (this._height / (this._charSize.height + this.leading)) | 1;
                (this._clipPoint.x = t),
                  this.renderText(this._lastVisibleLineIndex, n);
              }
            }
          ),
          r(
            0,
            s,
            'scrollY',
            function() {
              return this._clipPoint ? this._clipPoint.y : 0;
            },
            function(t) {
              if (
                !(
                  this.overflow != e.SCROLL || this.textHeight < this._height
                ) &&
                this._clipPoint
              ) {
                t = t < this.padding[0] ? this.padding[0] : t;
                var i = this._textHeight - this._height,
                  n =
                    ((t = t > i ? i : t) /
                      (this._charSize.height + this.leading)) |
                    0;
                this._lastVisibleLineIndex = n;
                var a =
                  1 +
                  ((this._height / (this._charSize.height + this.leading)) | 0);
                (this._clipPoint.y = t), this.renderText(n, a);
              }
            }
          ),
          r(0, s, 'maxScrollX', function() {
            return this.textWidth < this._width
              ? 0
              : this._textWidth - this._width;
          }),
          r(0, s, 'maxScrollY', function() {
            return this.textHeight < this._height
              ? 0
              : this._textHeight - this._height;
          }),
          r(0, s, 'lines', function() {
            return this._isChanged && this.typeset(), this._lines;
          }),
          r(
            0,
            s,
            'underlineColor',
            function() {
              return this._underlineColor;
            },
            function(t) {
              (this._underlineColor = t),
                (this._isChanged = !0),
                this.typeset();
            }
          ),
          (e.registerBitmapFont = function(t, i) {
            e._bitmapFonts || (e._bitmapFonts = {}), (e._bitmapFonts[t] = i);
          }),
          (e.unregisterBitmapFont = function(t, i) {
            if (
              (void 0 === i && (i = !0), e._bitmapFonts && e._bitmapFonts[t])
            ) {
              var n = e._bitmapFonts[t];
              i && n.destroy(), delete e._bitmapFonts[t];
            }
          }),
          (e.setTextRightToLeft = function() {
            var t;
            ((t = O.canvas.source.style).display = 'none'),
              (t.position = 'absolute'),
              (t.direction = 'rtl'),
              (N._mainCanvas.source.style.direction = 'rtl'),
              (laya.display.Text.RightToLeft = !0),
              O.document.body.appendChild(O.canvas.source);
          }),
          (e.supportFont = function(t) {
            O.context.font = '10px sans-serif';
            var e = O.context.measureText('abcji').width;
            O.context.font = '10px ' + t;
            var i = O.context.measureText('abcji').width;
            return console.log(e, i), e !== i;
          }),
          (e._testWord = '游'),
          (e.langPacks = null),
          (e.VISIBLE = 'visible'),
          (e.SCROLL = 'scroll'),
          (e.HIDDEN = 'hidden'),
          (e.CharacterCache = !0),
          (e.RightToLeft = !1),
          (e._bitmapFonts = null),
          n(e, [
            '_fontFamilyMap',
            function() {
              return (this._fontFamilyMap = {
                报隶: '报隶-简',
                黑体: '黑体-简',
                楷体: '楷体-简',
                兰亭黑: '兰亭黑-简',
                隶变: '隶变-简',
                凌慧体: '凌慧体-简',
                翩翩体: '翩翩体-简',
                苹方: '苹方-简',
                手札体: '手札体-简',
                宋体: '宋体-简',
                娃娃体: '娃娃体-简',
                魏碑: '魏碑-简',
                行楷: '行楷-简',
                雅痞: '雅痞-简',
                圆体: '圆体-简'
              });
            }
          ]),
          e
        );
      })(_t),
      yt = (function(t) {
        function e() {
          (this.focus = null),
            (this.designWidth = 0),
            (this.designHeight = 0),
            (this.canvasRotation = !1),
            (this.canvasDegree = 0),
            (this.renderingEnabled = !0),
            (this.screenAdaptationEnabled = !0),
            (this._screenMode = 'none'),
            (this._scaleMode = 'noscale'),
            (this._alignV = 'top'),
            (this._alignH = 'left'),
            (this._bgColor = 'black'),
            (this._mouseMoveTime = 0),
            (this._renderCount = 0),
            (this._frameStartTime = NaN),
            (this._isFocused = !1),
            (this._isVisibility = !1),
            (this._scenes = null),
            (this._frameRate = 'fast'),
            e.__super.call(this),
            (this.offset = new T()),
            (this._canvasTransform = new S()),
            (this._previousOrientation = O.window.orientation);
          var t = this;
          (this.transform = S.create()),
            (this._scenes = []),
            (this.mouseEnabled = !0),
            (this.hitTestPrior = !0),
            (this.autoSize = !1),
            (this._displayedInStage = !0),
            (this._isFocused = !0),
            (this._isVisibility = !0);
          var i = O.window,
            n = this;
          i.addEventListener('focus', function() {
            (t._isFocused = !0), n.event('focus'), n.event('focuschange');
          }),
            i.addEventListener('blur', function() {
              (t._isFocused = !1),
                n.event('blur'),
                n.event('focuschange'),
                n._isInputting() && (xt.inputElement.target.focus = !1);
            });
          var a = 'visibilityState',
            r = 'visibilitychange',
            s = i.document;
          void 0 !== s.hidden
            ? ((r = 'visibilitychange'), (a = 'visibilityState'))
            : void 0 !== s.mozHidden
            ? ((r = 'mozvisibilitychange'), (a = 'mozVisibilityState'))
            : void 0 !== s.msHidden
            ? ((r = 'msvisibilitychange'), (a = 'msVisibilityState'))
            : void 0 !== s.webkitHidden &&
              ((r = 'webkitvisibilitychange'), (a = 'webkitVisibilityState')),
            i.document.addEventListener(r, function() {
              'hidden' == O.document[a]
                ? n._setStageVisible(!1)
                : n._setStageVisible(!0);
            }),
            i.document.addEventListener('qbrowserVisibilityChange', function(
              t
            ) {
              n._setStageVisible(!t.hidden);
            }),
            i.addEventListener('resize', function() {
              var e = O.window.orientation;
              null != e &&
                e != t._previousOrientation &&
                n._isInputting() &&
                (xt.inputElement.target.focus = !1),
                (t._previousOrientation = e),
                n._isInputting() || n._resetCanvas();
            }),
            i.addEventListener('orientationchange', function(t) {
              n._resetCanvas();
            }),
            this.on('mousemove', this, this._onmouseMove),
            O.onMobile && this.on('mousedown', this, this._onmouseMove);
        }
        a(e, 'laya.display.Stage', t);
        var o = e.prototype;
        return (
          (o._setStageVisible = function(t) {
            this._isVisibility != t &&
              ((this._isVisibility = t),
              this._isVisibility ||
                (this._isInputting() && (xt.inputElement.target.focus = !1)),
              this.event('visibilitychange'));
          }),
          (o._isInputting = function() {
            return O.onMobile && xt.isInputting;
          }),
          (o._changeCanvasSize = function() {
            this.setScreenSize(
              O.clientWidth * O.pixelRatio,
              O.clientHeight * O.pixelRatio
            );
          }),
          (o._resetCanvas = function() {
            if (this.screenAdaptationEnabled) {
              var t = N._mainCanvas;
              t.source.style;
              t.size(1, 1), i.timer.once(100, this, this._changeCanvasSize);
            }
          }),
          (o.setScreenSize = function(t, e) {
            var i = !1;
            if ('none' !== this._screenMode) {
              if (
                (i =
                  (t / e < 1 ? 'vertical' : 'horizontal') !== this._screenMode)
              ) {
                var n = e;
                (e = t), (t = n);
              }
            }
            this.canvasRotation = i;
            var a = N._mainCanvas,
              r = a.source.style,
              o = this._canvasTransform.identity(),
              l = this._scaleMode,
              h = t / this.designWidth,
              c = e / this.designHeight,
              u = this.designWidth,
              _ = this.designHeight,
              d = t,
              f = e,
              p = O.pixelRatio;
            switch (
              ((this._width = this.designWidth),
              (this._height = this.designHeight),
              l)
            ) {
              case 'noscale':
                (h = c = 1), (d = this.designWidth), (f = this.designHeight);
                break;
              case 'showall':
                (h = c = Math.min(h, c)),
                  (u = d = Math.round(this.designWidth * h)),
                  (_ = f = Math.round(this.designHeight * c));
                break;
              case 'noborder':
                (h = c = Math.max(h, c)),
                  (d = Math.round(this.designWidth * h)),
                  (f = Math.round(this.designHeight * c));
                break;
              case 'full':
                (h = c = 1), (this._width = u = t), (this._height = _ = e);
                break;
              case 'fixedwidth':
                (c = h), (this._height = _ = Math.round(e / h));
                break;
              case 'fixedheight':
                (h = c), (this._width = u = Math.round(t / c));
                break;
              case 'fixedauto':
                t / e < this.designWidth / this.designHeight
                  ? ((c = h), (this._height = _ = Math.round(e / h)))
                  : ((h = c), (this._width = u = Math.round(t / c)));
            }
            this.conchModel && this.conchModel.size(this._width, this._height),
              (h *= this.scaleX),
              (c *= this.scaleY),
              1 === h && 1 === c
                ? this.transform.identity()
                : ((this.transform.a = this._formatData(h / (d / u))),
                  (this.transform.d = this._formatData(c / (f / _))),
                  this.conchModel &&
                    this.conchModel.scale(this.transform.a, this.transform.d)),
              a.size(u, _),
              s.changeWebGLSize(u, _),
              o.scale(d / u / p, f / _ / p),
              'left' === this._alignH
                ? (this.offset.x = 0)
                : 'right' === this._alignH
                ? (this.offset.x = (t - d) / p)
                : (this.offset.x = (0.5 * (t - d)) / p),
              'top' === this._alignV
                ? (this.offset.y = 0)
                : 'bottom' === this._alignV
                ? (this.offset.y = (e - f) / p)
                : (this.offset.y = (0.5 * (e - f)) / p),
              (this.offset.x = Math.round(this.offset.x)),
              (this.offset.y = Math.round(this.offset.y)),
              o.translate(this.offset.x, this.offset.y),
              (this.canvasDegree = 0),
              i &&
                ('horizontal' === this._screenMode
                  ? (o.rotate(Math.PI / 2),
                    o.translate(e / p, 0),
                    (this.canvasDegree = 90))
                  : (o.rotate(-Math.PI / 2),
                    o.translate(0, t / p),
                    (this.canvasDegree = -90))),
              (o.a = this._formatData(o.a)),
              (o.d = this._formatData(o.d)),
              (o.tx = this._formatData(o.tx)),
              (o.ty = this._formatData(o.ty)),
              (r.transformOrigin = r.webkitTransformOrigin = r.msTransformOrigin = r.mozTransformOrigin = r.oTransformOrigin =
                '0px 0px 0px'),
              (r.transform = r.webkitTransform = r.msTransform = r.mozTransform = r.oTransform =
                'matrix(' + o.toString() + ')'),
              o.translate(parseInt(r.left) || 0, parseInt(r.top) || 0),
              (this.visible = !0),
              (this._repaint = 1),
              this.event('resize');
          }),
          (o._formatData = function(t) {
            return Math.abs(t) < 1e-6
              ? 0
              : Math.abs(1 - t) < 0.001
              ? t > 0
                ? 1
                : -1
              : t;
          }),
          (o.getMousePoint = function() {
            return T.TEMP.setTo(this.mouseX, this.mouseY);
          }),
          (o.repaint = function() {
            this._repaint = 1;
          }),
          (o.parentRepaint = function() {}),
          (o._loop = function() {
            return this.render(N.context, 0, 0), !0;
          }),
          (o._onmouseMove = function(t) {
            this._mouseMoveTime = O.now();
          }),
          (o.getTimeFromFrameStart = function() {
            return O.now() - this._frameStartTime;
          }),
          (o.render = function(e, n, a) {
            if ('sleep' === this._frameRate && !N.isConchApp) {
              var r = O.now();
              if (!(r - this._frameStartTime >= 1e3)) return;
              this._frameStartTime = r;
            }
            if (
              (this._renderCount++,
              N.isFlash && this.repaint(),
              this._style.visible)
            ) {
              this._frameStartTime = O.now();
              var o =
                  'slow' !==
                  ('mouse' === this._frameRate
                    ? this._frameStartTime - this._mouseMoveTime < 2e3
                      ? 'fast'
                      : 'slow'
                    : this._frameRate),
                l = this._renderCount % 2 == 0;
              if (((X.renderSlow = !o), o || l || N.isConchApp)) {
                X.loopCount++,
                  y.instance.runEvent(),
                  i.timer._update(),
                  s.update3DLoop();
                var h,
                  c = 0,
                  u = 0;
                if (N.isConchNode)
                  for (c = 0, u = this._scenes.length; c < u; c++)
                    (h = this._scenes[c]) && h._updateSceneConch();
                else
                  for (c = 0, u = this._scenes.length; c < u; c++)
                    (h = this._scenes[c]) && h._updateScene();
                if (N.isConchNode) {
                  var _ = _t.CustomList;
                  for (c = 0, u = _.length; c < u; c++) {
                    var d = _[c];
                    d.customRender(d.customContext, 0, 0);
                  }
                  return;
                }
              }
              N.isConchNode ||
                (this.renderingEnabled &&
                  (o || !l || N.isConchWebGL) &&
                  (N.isWebGL
                    ? (e.clear(),
                      t.prototype.render.call(this, e, n, a),
                      X._show && X._sp && X._sp.render(e, n, a),
                      s.clear(this._bgColor),
                      s.beginFlush(),
                      e.flush(),
                      s.endFinish(),
                      K.instance && K.getInstance().endDispose())
                    : (s.clear(this._bgColor),
                      t.prototype.render.call(this, e, n, a),
                      X._show && X._sp && X._sp.render(e, n, a))));
            } else
              this._renderCount % 5 == 0 &&
                (X.loopCount++, y.instance.runEvent(), i.timer._update());
          }),
          (o._requestFullscreen = function() {
            var t = O.document.documentElement;
            t.requestFullscreen
              ? t.requestFullscreen()
              : t.mozRequestFullScreen
              ? t.mozRequestFullScreen()
              : t.webkitRequestFullscreen
              ? t.webkitRequestFullscreen()
              : t.msRequestFullscreen && t.msRequestFullscreen();
          }),
          (o._fullScreenChanged = function() {
            i.stage.event('fullscreenchange');
          }),
          (o.exitFullscreen = function() {
            var t = O.document;
            t.exitFullscreen
              ? t.exitFullscreen()
              : t.mozCancelFullScreen
              ? t.mozCancelFullScreen()
              : t.webkitExitFullscreen && t.webkitExitFullscreen();
          }),
          r(0, o, 'clientScaleX', function() {
            return this._transform ? this._transform.getScaleX() : 1;
          }),
          r(0, o, 'desginHeight', function() {
            return (
              console.debug('desginHeight已经弃用，请使用designHeight代替'),
              this.designHeight
            );
          }),
          r(
            0,
            o,
            'frameRate',
            function() {
              return this._frameRate;
            },
            function(t) {
              if (((this._frameRate = t), N.isConchApp))
                switch (this._frameRate) {
                  case 'slow':
                    O.window.conch &&
                      O.window.conchConfig.setSlowFrame &&
                      O.window.conchConfig.setSlowFrame(!0);
                    break;
                  case 'fast':
                    O.window.conch &&
                      O.window.conchConfig.setSlowFrame &&
                      O.window.conchConfig.setSlowFrame(!1);
                    break;
                  case 'mouse':
                    O.window.conch &&
                      O.window.conchConfig.setMouseFrame &&
                      O.window.conchConfig.setMouseFrame(2e3);
                    break;
                  case 'sleep':
                    O.window.conch &&
                      O.window.conchConfig.setLimitFPS &&
                      O.window.conchConfig.setLimitFPS(1);
                    break;
                  default:
                    throw new Error('Stage:frameRate invalid.');
                }
            }
          ),
          r(0, o, 'clientScaleY', function() {
            return this._transform ? this._transform.getScaleY() : 1;
          }),
          r(0, o, 'width', t.prototype._$get_width, function(t) {
            (this.designWidth = t),
              i.superSet(_t, this, 'width', t),
              i.timer.callLater(this, this._changeCanvasSize);
          }),
          r(
            0,
            o,
            'alignH',
            function() {
              return this._alignH;
            },
            function(t) {
              (this._alignH = t),
                i.timer.callLater(this, this._changeCanvasSize);
            }
          ),
          r(0, o, 'isFocused', function() {
            return this._isFocused;
          }),
          r(0, o, 'height', t.prototype._$get_height, function(t) {
            (this.designHeight = t),
              i.superSet(_t, this, 'height', t),
              i.timer.callLater(this, this._changeCanvasSize);
          }),
          r(
            0,
            o,
            'transform',
            function() {
              return (
                this._tfChanged && this._adjustTransform(),
                (this._transform = this._transform || S.create())
              );
            },
            t.prototype._$set_transform
          ),
          r(0, o, 'isVisibility', function() {
            return this._isVisibility;
          }),
          r(0, o, 'desginWidth', function() {
            return (
              console.debug('desginWidth已经弃用，请使用designWidth代替'),
              this.designWidth
            );
          }),
          r(
            0,
            o,
            'scaleMode',
            function() {
              return this._scaleMode;
            },
            function(t) {
              (this._scaleMode = t),
                i.timer.callLater(this, this._changeCanvasSize);
            }
          ),
          r(
            0,
            o,
            'alignV',
            function() {
              return this._alignV;
            },
            function(t) {
              (this._alignV = t),
                i.timer.callLater(this, this._changeCanvasSize);
            }
          ),
          r(
            0,
            o,
            'bgColor',
            function() {
              return this._bgColor;
            },
            function(t) {
              (this._bgColor = t),
                this.conchModel && this.conchModel.bgColor(t),
                N.isWebGL &&
                  (t
                    ? (e._wgColor = H.create(t)._color)
                    : O.onMiniGame || (e._wgColor = null)),
                O.onLimixiu
                  ? (e._wgColor = H.create(t)._color)
                  : (N.canvas.style.background = t || 'none');
            }
          ),
          r(0, o, 'mouseX', function() {
            return Math.round(y.instance.mouseX / this.clientScaleX);
          }),
          r(0, o, 'mouseY', function() {
            return Math.round(y.instance.mouseY / this.clientScaleY);
          }),
          r(
            0,
            o,
            'screenMode',
            function() {
              return this._screenMode;
            },
            function(t) {
              this._screenMode = t;
            }
          ),
          r(0, o, 'visible', t.prototype._$get_visible, function(t) {
            if (this.visible !== t) {
              i.superSet(_t, this, 'visible', t);
              N._mainCanvas.source.style.visibility = t ? 'visible' : 'hidden';
            }
          }),
          r(0, o, 'fullScreenEnabled', null, function(t) {
            var e = O.document,
              i = N.canvas;
            t
              ? (i.addEventListener('mousedown', this._requestFullscreen),
                i.addEventListener('touchstart', this._requestFullscreen),
                e.addEventListener('fullscreenchange', this._fullScreenChanged),
                e.addEventListener(
                  'mozfullscreenchange',
                  this._fullScreenChanged
                ),
                e.addEventListener(
                  'webkitfullscreenchange',
                  this._fullScreenChanged
                ),
                e.addEventListener(
                  'msfullscreenchange',
                  this._fullScreenChanged
                ))
              : (i.removeEventListener('mousedown', this._requestFullscreen),
                i.removeEventListener('touchstart', this._requestFullscreen),
                e.removeEventListener(
                  'fullscreenchange',
                  this._fullScreenChanged
                ),
                e.removeEventListener(
                  'mozfullscreenchange',
                  this._fullScreenChanged
                ),
                e.removeEventListener(
                  'webkitfullscreenchange',
                  this._fullScreenChanged
                ),
                e.removeEventListener(
                  'msfullscreenchange',
                  this._fullScreenChanged
                ));
          }),
          (e.SCALE_NOSCALE = 'noscale'),
          (e.SCALE_EXACTFIT = 'exactfit'),
          (e.SCALE_SHOWALL = 'showall'),
          (e.SCALE_NOBORDER = 'noborder'),
          (e.SCALE_FULL = 'full'),
          (e.SCALE_FIXED_WIDTH = 'fixedwidth'),
          (e.SCALE_FIXED_HEIGHT = 'fixedheight'),
          (e.SCALE_FIXED_AUTO = 'fixedauto'),
          (e.ALIGN_LEFT = 'left'),
          (e.ALIGN_RIGHT = 'right'),
          (e.ALIGN_CENTER = 'center'),
          (e.ALIGN_TOP = 'top'),
          (e.ALIGN_MIDDLE = 'middle'),
          (e.ALIGN_BOTTOM = 'bottom'),
          (e.SCREEN_NONE = 'none'),
          (e.SCREEN_HORIZONTAL = 'horizontal'),
          (e.SCREEN_VERTICAL = 'vertical'),
          (e.FRAME_FAST = 'fast'),
          (e.FRAME_SLOW = 'slow'),
          (e.FRAME_MOUSE = 'mouse'),
          (e.FRAME_SLEEP = 'sleep'),
          (e.FRAME_MOUSE_THREDHOLD = 2e3),
          n(e, [
            '_wgColor',
            function() {
              return (this._wgColor = [0, 0, 0, 1]);
            }
          ]),
          e
        );
      })(_t),
      vt =
        ((function(t) {
          function e() {
            (this.url = null),
              (this._channel = null),
              (this._tar = null),
              (this._playEvents = null),
              (this._stopEvents = null),
              e.__super.call(this),
              (this.visible = !1),
              this.on('added', this, this._onParentChange),
              this.on('removed', this, this._onParentChange);
          }
          a(e, 'laya.media.SoundNode', _t);
          var i = e.prototype;
          (i._onParentChange = function() {
            this.target = this.parent;
          }),
            (i.play = function(t, e) {
              void 0 === t && (t = 1),
                isNaN(t) && (t = 1),
                this.url &&
                  (this.stop(), (this._channel = E.playSound(this.url, t, e)));
            }),
            (i.stop = function() {
              this._channel && !this._channel.isStopped && this._channel.stop(),
                (this._channel = null);
            }),
            (i._setPlayAction = function(t, e, i, n) {
              void 0 === n && (n = !0),
                this[i] &&
                  t &&
                  (n ? t.on(e, this, this[i]) : t.off(e, this, this[i]));
            }),
            (i._setPlayActions = function(t, e, i, n) {
              if ((void 0 === n && (n = !0), t && e)) {
                var a = e.split(','),
                  r = 0,
                  s = 0;
                for (s = a.length, r = 0; r < s; r++)
                  this._setPlayAction(t, a[r], i, n);
              }
            }),
            r(0, i, 'playEvent', null, function(t) {
              (this._playEvents = t),
                t && this._tar && this._setPlayActions(this._tar, t, 'play');
            }),
            r(0, i, 'target', null, function(t) {
              this._tar &&
                (this._setPlayActions(this._tar, this._playEvents, 'play', !1),
                this._setPlayActions(this._tar, this._stopEvents, 'stop', !1)),
                (this._tar = t),
                this._tar &&
                  (this._setPlayActions(
                    this._tar,
                    this._playEvents,
                    'play',
                    !0
                  ),
                  this._setPlayActions(
                    this._tar,
                    this._stopEvents,
                    'stop',
                    !0
                  ));
            }),
            r(0, i, 'stopEvent', null, function(t) {
              (this._stopEvents = t),
                t && this._tar && this._setPlayActions(this._tar, t, 'stop');
            });
        })(),
        (function(t) {
          function e() {
            (this._src = null),
              (this._onload = null),
              (this._onerror = null),
              e.__super.call(this);
          }
          a(e, 'laya.resource.FileBitmap', pt);
          var i = e.prototype;
          return (
            r(
              0,
              i,
              'src',
              function() {
                return this._src;
              },
              function(t) {
                this._src = t;
              }
            ),
            r(0, i, 'onload', null, function(t) {}),
            r(0, i, 'onerror', null, function(t) {}),
            e
          );
        })()),
      bt = (function(t) {
        function e(t, i) {
          (this._is2D = !1), e.__super.call(this);
          var n = this;
          if (
            ((this._source = this), '2D' === t || ('AUTO' === t && !N.isWebGL))
          ) {
            (this._is2D = !0),
              (this._source = i || O.createElement('canvas')),
              (this._w = this._source.width),
              (this._h = this._source.height);
            var a = this;
            a.getContext = function(t, e) {
              if (n._ctx) return n._ctx;
              var i = (n._ctx = n._source.getContext(t, e));
              return (
                i &&
                  ((i._canvas = a),
                  N.isFlash || O.onLimixiu || (i.size = function(t, e) {})),
                i
              );
            };
          }
          this.lock = !0;
        }
        a(e, 'laya.resource.HTMLCanvas', pt);
        var i = e.prototype;
        return (
          (i.clear = function() {
            this._ctx && this._ctx.clear();
          }),
          (i.destroy = function() {
            this._ctx && this._ctx.destroy(),
              (this._ctx = null),
              laya.resource.Resource.prototype.destroy.call(this);
          }),
          (i.release = function() {}),
          (i._setContext = function(t) {
            this._ctx = t;
          }),
          (i.getContext = function(t, i) {
            return this._ctx ? this._ctx : (this._ctx = e._createContext(this));
          }),
          (i.getMemSize = function() {
            return 0;
          }),
          (i.size = function(t, e) {
            (this._w != t ||
              this._h != e ||
              (this._source &&
                (this._source.width != t || this._source.height != e))) &&
              ((this._w = t),
              (this._h = e),
              (this.memorySize = this._w * this._h * 4),
              this._ctx && this._ctx.size(t, e),
              this._source &&
                ((this._source.height = e), (this._source.width = t)));
          }),
          (i.getCanvas = function() {
            return this._source;
          }),
          (i.toBase64 = function(t, e, i) {
            if (this._source)
              if (N.isConchApp && this._source.toBase64)
                this._source.toBase64(t, e, i);
              else {
                var n = this._source.toDataURL(t, e);
                i.call(this, n);
              }
          }),
          r(0, i, 'context', function() {
            return this._ctx;
          }),
          r(0, i, 'asBitmap', null, function(t) {}),
          (e.create = function(t, i) {
            return new e(t, i);
          }),
          (e.TYPE2D = '2D'),
          (e.TYPE3D = '3D'),
          (e.TYPEAUTO = 'AUTO'),
          (e._createContext = null),
          e
        );
      })(),
      wt =
        ((function(t) {
          function e(t, i, n, a, r, s, o, l) {
            throw (e.__super.call(this), new Error('不允许new！'));
          }
          a(e, 'laya.resource.HTMLSubImage', pt),
            (e.create = function(t, i, n, a, r, s, o, l) {
              return void 0 === l && (l = !1), new e(t, i, n, a, r, s, o, l);
            });
        })(),
        (function(t) {
          function e() {
            (this._frames = null),
              (this._url = null),
              e.__super.call(this),
              this._setControlNode(this);
          }
          a(e, 'laya.display.Animation', t);
          var n = e.prototype;
          (n.destroy = function(t) {
            void 0 === t && (t = !0),
              this.stop(),
              laya.display.Sprite.prototype.destroy.call(this, t),
              (this._frames = null),
              (this._labels = null);
          }),
            (n.play = function(t, e, i, n) {
              void 0 === t && (t = 0),
                void 0 === e && (e = !0),
                void 0 === i && (i = ''),
                void 0 === n && (n = !0),
                i && this._setFramesFromCache(i, n),
                (this._isPlaying = !0),
                (this.index =
                  'string' == typeof t ? this._getFrameByLabel(t) : t),
                (this.loop = e),
                (this._actionName = i),
                (this._isReverse = 1 == this.wrapMode),
                this._frames &&
                  this.interval > 0 &&
                  this.timerLoop(
                    this.interval,
                    this,
                    this._frameLoop,
                    null,
                    !0,
                    !0
                  );
            }),
            (n._setFramesFromCache = function(t, i) {
              if (
                (void 0 === i && (i = !1),
                this._url && (t = this._url + '#' + t),
                t && e.framesMap[t])
              ) {
                var n;
                return (
                  (n = e.framesMap[t]) instanceof Array
                    ? ((this._frames = e.framesMap[t]),
                      (this._count = this._frames.length))
                    : (n.nodeRoot &&
                        ((e.framesMap[t] = this._parseGraphicAnimationByData(
                          n
                        )),
                        (n = e.framesMap[t])),
                      (this._frames = n.frames),
                      (this._count = this._frames.length),
                      this._frameRateChanged || (this._interval = n.interval),
                      (this._labels = this._copyLabels(n.labels))),
                  !0
                );
              }
              return i && console.log('ani not found:', t), !1;
            }),
            (n._copyLabels = function(t) {
              if (!t) return null;
              var e;
              e = {};
              var i;
              for (i in t) e[i] = J.copyArray([], t[i]);
              return e;
            }),
            (n._frameLoop = function() {
              this._style.visible &&
                this._style.alpha > 0.01 &&
                t.prototype._frameLoop.call(this);
            }),
            (n._displayToIndex = function(t) {
              this._frames && (this.graphics = this._frames[t]);
            }),
            (n.clear = function() {
              this.stop(),
                (this.graphics = null),
                (this._frames = null),
                (this._labels = null);
            }),
            (n.loadImages = function(t, i) {
              return (
                void 0 === i && (i = ''),
                (this._url = ''),
                this._setFramesFromCache(i) ||
                  (this.frames = e.framesMap[i]
                    ? e.framesMap[i]
                    : e.createFrames(t, i)),
                this
              );
            }),
            (n.loadAtlas = function(t, n, a) {
              function r(i) {
                t === i &&
                  ((s.frames = e.framesMap[a]
                    ? e.framesMap[a]
                    : e.createFrames(t, a)),
                  n && n.run());
              }
              void 0 === a && (a = ''), (this._url = '');
              var s = this;
              return (
                s._setFramesFromCache(a) ||
                  (st.getAtlas(t)
                    ? r(t)
                    : i.loader.load(t, h.create(null, r, [t]), null, 'atlas')),
                this
              );
            }),
            (n.loadAnimation = function(t, e, n) {
              this._url = t;
              return (
                this._actionName || (this._actionName = ''),
                this._setFramesFromCache('')
                  ? (this._setFramesFromCache(this._actionName, !0),
                    (this.index = 0),
                    e && e.run())
                  : !n || st.getAtlas(n)
                  ? this._loadAnimationData(t, e, n)
                  : i.loader.load(
                      n,
                      h.create(this, this._loadAnimationData, [t, e, n]),
                      null,
                      'atlas'
                    ),
                this
              );
            }),
            (n._loadAnimationData = function(t, n, a) {
              function r(i) {
                if (st.getRes(i) && t === i) {
                  var a;
                  if (e.framesMap[t + '#'])
                    o._setFramesFromCache(s._actionName, !0),
                      (s.index = 0),
                      s._checkResumePlaying();
                  else {
                    var r = o._parseGraphicAnimation(st.getRes(t));
                    if (!r) return;
                    var l,
                      h = r.animationList,
                      c = 0,
                      u = h.length;
                    for (c = 0; c < u; c++)
                      (a = h[c]),
                        (e.framesMap[t + '#' + a.name] = a),
                        l || (l = a);
                    l &&
                      ((e.framesMap[t + '#'] = l),
                      o._setFramesFromCache(s._actionName, !0),
                      (s.index = 0)),
                      s._checkResumePlaying();
                  }
                  n && n.run();
                }
              }
              var s = this;
              if (!a || st.getAtlas(a)) {
                var o = this;
                st.getRes(t)
                  ? r(t)
                  : i.loader.load(t, h.create(null, r, [t]), null, 'json'),
                  st.clearRes(t);
              } else console.warn('atlas load fail:' + a);
            }),
            (n._parseGraphicAnimation = function(t) {
              return Ct.parseAnimationData(t);
            }),
            (n._parseGraphicAnimationByData = function(t) {
              return Ct.parseAnimationByData(t);
            }),
            r(
              0,
              n,
              'frames',
              function() {
                return this._frames;
              },
              function(t) {
                (this._frames = t),
                  t &&
                    ((this._count = t.length),
                    this._isPlaying
                      ? this.play(this._index, this.loop, this._actionName)
                      : (this.index = this._index));
              }
            ),
            r(0, n, 'autoPlay', null, function(t) {
              t ? this.play() : this.stop();
            }),
            r(0, n, 'source', null, function(t) {
              t.indexOf('.ani') > -1
                ? this.loadAnimation(t)
                : t.indexOf('.json') > -1 ||
                  t.indexOf('als') > -1 ||
                  t.indexOf('atlas') > -1
                ? this.loadAtlas(t)
                : this.loadImages(t.split(','));
            }),
            r(0, n, 'autoAnimation', null, function(t) {
              this.play(0, !0, t, !1);
            }),
            (e.createFrames = function(t, i) {
              var n,
                a,
                r = 0,
                o = 0;
              if ('string' == typeof t) {
                var l = st.getAtlas(t);
                if (l && l.length)
                  for (n = [], r = 0, o = l.length; r < o; r++)
                    (a = new s.createGraphics()).drawTexture(
                      st.getRes(l[r]),
                      0,
                      0
                    ),
                      n.push(a);
              } else if (t instanceof Array)
                for (n = [], r = 0, o = t.length; r < o; r++)
                  (a = new s.createGraphics()).loadImage(t[r], 0, 0), n.push(a);
              return i && (e.framesMap[i] = n), n;
            }),
            (e.clearCache = function(t) {
              var i,
                n = e.framesMap,
                a = t + '#';
              for (i in n)
                (i !== t && 0 != i.indexOf(a)) || delete e.framesMap[i];
            }),
            (e.framesMap = {});
        })(mt),
        (function(t) {
          function e() {
            (this._targetDic = null),
              (this._animationData = null),
              (this._animationNewFrames = null),
              e.__super.call(this),
              null == e._sortIndexFun &&
                (e._sortIndexFun = C.sortByKey('index', !1, !0));
          }
          a(e, 'laya.display.FrameAnimation', t);
          var n = e.prototype;
          return (
            (n._setUp = function(t, e) {
              for (
                var n = 'fast' == i.stage.frameRate ? 60 : 30,
                  a = n / e.frameRate,
                  r = 0;
                r < e.nodes.length;
                r++
              ) {
                var s = e.nodes[r].keyframes;
                for (var o in s)
                  for (var l = s[o], h = 0; h < l.length; h++)
                    l[h].index = Math.floor(l[h].index * a + 0.5);
              }
              (this._labels = null),
                (this._animationNewFrames = null),
                (this._targetDic = t),
                (this._animationData = e),
                (this.interval = 1e3 / n),
                e.parsed
                  ? ((this._count = e.count),
                    (this._labels = e.labels),
                    (this._animationNewFrames = e.animationNewFrames))
                  : ((this._animationNewFrames = []), this._calculateDatas()),
                (e.parsed = !0),
                (e.labels = this._labels),
                (e.count = this._count),
                (e.animationNewFrames = this._animationNewFrames);
            }),
            (n.clear = function() {
              t.prototype.clear.call(this),
                (this._targetDic = null),
                (this._animationData = null);
            }),
            (n._displayToIndex = function(t) {
              if (this._animationData) {
                t < 0 && (t = 0), t > this._count && (t = this._count);
                var e = this._animationData.nodes,
                  i = 0,
                  n = e.length;
                for (i = 0; i < n; i++) this._displayNodeToFrame(e[i], t);
              }
            }),
            (n._displayNodeToFrame = function(t, e, i) {
              i || (i = this._targetDic);
              var n = i[t.target];
              if (n) {
                var a,
                  r,
                  s,
                  o = t.frames,
                  l = t.keys,
                  h = 0,
                  c = l.length;
                for (h = 0; h < c; h++)
                  (s = (r = o[(a = l[h])]).length > e ? r[e] : r[r.length - 1]),
                    (n[a] = s);
              }
            }),
            (n._calculateDatas = function() {
              if (this._animationData) {
                var t,
                  e = this._animationData.nodes,
                  i = 0,
                  n = e.length;
                for (this._count = 0, i = 0; i < n; i++)
                  (t = e[i]), this._calculateNodeKeyFrames(t);
                this._count += 1;
              }
            }),
            (n._calculateNodeKeyFrames = function(t) {
              var i,
                n,
                a = t.keyframes,
                r = t.target;
              t.frames || (t.frames = {}),
                t.keys ? (t.keys.length = 0) : (t.keys = []),
                t.initValues || (t.initValues = {});
              for (i in a)
                (n = a[i]),
                  t.frames[i] || (t.frames[i] = []),
                  this._targetDic &&
                    this._targetDic[r] &&
                    (t.initValues[i] = this._targetDic[r][i]),
                  n.sort(e._sortIndexFun),
                  t.keys.push(i),
                  this._calculateNodePropFrames(n, t.frames[i], i, r);
            }),
            (n.resetToInitState = function() {
              if (this._targetDic && this._animationData) {
                var t,
                  e,
                  i = this._animationData.nodes,
                  n = 0,
                  a = i.length;
                for (n = 0; n < a; n++)
                  if (((t = i[n]), (e = t.initValues))) {
                    var r = this._targetDic[t.target];
                    if (r) {
                      var s;
                      for (s in e) r[s] = e[s];
                    }
                  }
              }
            }),
            (n._calculateNodePropFrames = function(t, e, i, n) {
              var a = 0,
                r = t.length - 1;
              for (e.length = t[r].index + 1, a = 0; a < r; a++)
                this._dealKeyFrame(t[a]),
                  this._calculateFrameValues(t[a], t[a + 1], e);
              0 == r &&
                ((e[0] = t[0].value),
                this._animationNewFrames &&
                  (this._animationNewFrames[t[0].index] = !0)),
                this._dealKeyFrame(t[a]);
            }),
            (n._dealKeyFrame = function(t) {
              t.label && '' != t.label && this.addLabel(t.label, t.index);
            }),
            (n._calculateFrameValues = function(t, e, i) {
              var n,
                a = 0,
                r = t.index,
                s = e.index,
                o = t.value,
                l = e.value - t.value,
                h = s - r;
              if ((s > this._count && (this._count = s), t.tween))
                for (
                  null == (n = z[t.tweenMethod]) && (n = z.linearNone), a = r;
                  a < s;
                  a++
                )
                  (i[a] = n(a - r, o, l, h)),
                    this._animationNewFrames &&
                      (this._animationNewFrames[a] = !0);
              else for (a = r; a < s; a++) i[a] = o;
              this._animationNewFrames &&
                ((this._animationNewFrames[t.index] = !0),
                (this._animationNewFrames[e.index] = !0)),
                (i[e.index] = e.value);
            }),
            (e._sortIndexFun = null),
            e
          );
        })(mt)),
      xt = (function(t) {
        function e() {
          (this._focus = !1),
            (this._multiline = !1),
            (this._editable = !0),
            (this._restrictPattern = null),
            (this._type = 'text'),
            (this._prompt = ''),
            (this._promptColor = '#A9A9A9'),
            (this._originColor = '#000000'),
            (this._content = ''),
            e.__super.call(this),
            (this._maxChars = 1e5),
            (this._width = 100),
            (this._height = 20),
            (this.multiline = !1),
            (this.overflow = gt.SCROLL),
            this.on('mousedown', this, this._onMouseDown),
            this.on('undisplay', this, this._onUnDisplay);
        }
        a(e, 'laya.display.Input', t);
        var s = e.prototype;
        return (
          (s.setSelection = function(t, e) {
            (this.focus = !0),
              (laya.display.Input.inputElement.selectionStart = t),
              (laya.display.Input.inputElement.selectionEnd = e);
          }),
          (s._onUnDisplay = function(t) {
            this.focus = !1;
          }),
          (s._onMouseDown = function(t) {
            this.focus = !0;
          }),
          (s._syncInputTransform = function() {
            var t = this.nativeInput,
              n = J.getTransformRelativeToWindow(
                this,
                this.padding[3],
                this.padding[0]
              ),
              a = this._width - this.padding[1] - this.padding[3],
              r = this._height - this.padding[0] - this.padding[2];
            N.isConchApp
              ? (t.setScale(n.scaleX, n.scaleY),
                t.setSize(a, r),
                t.setPos(n.x, n.y))
              : ((e.inputContainer.style.transform = e.inputContainer.style.webkitTransform =
                  'scale(' +
                  n.scaleX +
                  ',' +
                  n.scaleY +
                  ') rotate(' +
                  i.stage.canvasDegree +
                  'deg)'),
                (t.style.width = a + 'px'),
                (t.style.height = r + 'px'),
                (e.inputContainer.style.left = n.x + 'px'),
                (e.inputContainer.style.top = n.y + 'px'));
          }),
          (s.select = function() {
            this.nativeInput.select();
          }),
          (s._setInputMethod = function() {
            e.input.parentElement && e.inputContainer.removeChild(e.input),
              e.area.parentElement && e.inputContainer.removeChild(e.area),
              (e.inputElement = this._multiline ? e.area : e.input),
              e.inputContainer.appendChild(e.inputElement),
              gt.RightToLeft && (e.inputElement.style.direction = 'rtl');
          }),
          (s._focusIn = function() {
            laya.display.Input.isInputting = !0;
            var t = this.nativeInput;
            this._focus = !0;
            var e = t.style;
            (e.whiteSpace = this.wordWrap ? 'pre-wrap' : 'nowrap'),
              this._setPromptColor(),
              (t.readOnly = !this._editable),
              N.isConchApp &&
                (t.setType(this._type), t.setForbidEdit(!this._editable)),
              (t.maxLength = this._maxChars);
            this.padding;
            if (
              ((t.type = this._type),
              (t.value = this._content),
              (t.placeholder = this._prompt),
              i.stage.off('keydown', this, this._onKeyDown),
              i.stage.on('keydown', this, this._onKeyDown),
              (i.stage.focus = this),
              this.event('focus'),
              O.onPC && t.focus(),
              !O.onMiniGame)
            ) {
              this._text;
              this._text = null;
            }
            this.typeset(),
              t.setColor(this._originColor),
              t.setFontSize(this.fontSize),
              t.setFontFace(
                O.onIPhone
                  ? gt._fontFamilyMap[this.font] || this.font
                  : this.font
              ),
              N.isConchApp && t.setMultiAble && t.setMultiAble(this._multiline),
              (e.lineHeight = this.leading + this.fontSize + 'px'),
              (e.fontStyle = this.italic ? 'italic' : 'normal'),
              (e.fontWeight = this.bold ? 'bold' : 'normal'),
              (e.textAlign = this.align),
              (e.padding = '0 0'),
              this._syncInputTransform(),
              !N.isConchApp &&
                O.onPC &&
                i.timer.frameLoop(1, this, this._syncInputTransform);
          }),
          (s._setPromptColor = function() {
            (e.promptStyleDOM = O.getElementById('promptStyle')) ||
              ((e.promptStyleDOM = O.createElement('style')).setAttribute(
                'id',
                'promptStyle'
              ),
              O.document.head.appendChild(e.promptStyleDOM)),
              (e.promptStyleDOM.innerText =
                'input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:' +
                this._promptColor +
                '}input:-moz-placeholder, textarea:-moz-placeholder {color:' +
                this._promptColor +
                '}input::-moz-placeholder, textarea::-moz-placeholder {color:' +
                this._promptColor +
                '}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:' +
                this._promptColor +
                '}');
          }),
          (s._focusOut = function() {
            (laya.display.Input.isInputting = !1),
              (this._focus = !1),
              (this._text = null),
              (this._content = this.nativeInput.value),
              this._content
                ? (i.superSet(gt, this, 'text', this._content),
                  i.superSet(gt, this, 'color', this._originColor))
                : (i.superSet(gt, this, 'text', this._prompt),
                  i.superSet(gt, this, 'color', this._promptColor)),
              i.stage.off('keydown', this, this._onKeyDown),
              (i.stage.focus = null),
              this.event('blur'),
              N.isConchApp && this.nativeInput.blur(),
              O.onPC && i.timer.clear(this, this._syncInputTransform);
          }),
          (s._onKeyDown = function(t) {
            13 === t.keyCode &&
              (O.onMobile && !this._multiline && (this.focus = !1),
              this.event('enter'));
          }),
          (s.changeText = function(e) {
            (this._content = e),
              this._focus
                ? ((this.nativeInput.value = e || ''), this.event('change'))
                : t.prototype.changeText.call(this, e);
          }),
          r(0, s, 'color', t.prototype._$get_color, function(t) {
            this._focus && this.nativeInput.setColor(t),
              i.superSet(
                gt,
                this,
                'color',
                this._content ? t : this._promptColor
              ),
              (this._originColor = t);
          }),
          r(
            0,
            s,
            'inputElementYAdjuster',
            function() {
              return (
                console.warn(
                  'deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。'
                ),
                0
              );
            },
            function(t) {
              console.warn(
                'deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。'
              );
            }
          ),
          r(
            0,
            s,
            'multiline',
            function() {
              return this._multiline;
            },
            function(t) {
              (this._multiline = t), (this.valign = t ? 'top' : 'middle');
            }
          ),
          r(
            0,
            s,
            'maxChars',
            function() {
              return this._maxChars;
            },
            function(t) {
              t <= 0 && (t = 1e5), (this._maxChars = t);
            }
          ),
          r(
            0,
            s,
            'text',
            function() {
              return this._focus ? this.nativeInput.value : this._content || '';
            },
            function(t) {
              i.superSet(gt, this, 'color', this._originColor),
                (t += ''),
                this._focus
                  ? ((this.nativeInput.value = t || ''), this.event('change'))
                  : (this._multiline || (t = t.replace(/\r?\n/g, '')),
                    (this._content = t),
                    t
                      ? i.superSet(gt, this, 'text', t)
                      : (i.superSet(gt, this, 'text', this._prompt),
                        i.superSet(gt, this, 'color', this.promptColor)));
            }
          ),
          r(0, s, 'nativeInput', function() {
            return this._multiline ? e.area : e.input;
          }),
          r(
            0,
            s,
            'prompt',
            function() {
              return this._prompt;
            },
            function(t) {
              !this._text &&
                t &&
                i.superSet(gt, this, 'color', this._promptColor),
                (this.promptColor = this._promptColor),
                this._text
                  ? i.superSet(
                      gt,
                      this,
                      'text',
                      this._text == this._prompt ? t : this._text
                    )
                  : i.superSet(gt, this, 'text', t),
                (this._prompt =
                  gt.langPacks && gt.langPacks[t] ? gt.langPacks[t] : t);
            }
          ),
          r(
            0,
            s,
            'focus',
            function() {
              return this._focus;
            },
            function(t) {
              var i = this.nativeInput;
              this._focus !== t &&
                (t
                  ? (i.target ? i.target._focusOut() : this._setInputMethod(),
                    (i.target = this),
                    this._focusIn())
                  : ((i.target = null),
                    this._focusOut(),
                    (O.document.body.scrollTop = 0),
                    i.blur(),
                    N.isConchApp
                      ? i.setPos(-1e4, -1e4)
                      : e.inputContainer.contains(i) &&
                        e.inputContainer.removeChild(i)));
            }
          ),
          r(
            0,
            s,
            'restrict',
            function() {
              return this._restrictPattern ? this._restrictPattern.source : '';
            },
            function(t) {
              t
                ? ((t = '[^' + t + ']').indexOf('^^') > -1 &&
                    (t = t.replace('^^', '')),
                  (this._restrictPattern = new RegExp(t, 'g')))
                : (this._restrictPattern = null);
            }
          ),
          r(
            0,
            s,
            'editable',
            function() {
              return this._editable;
            },
            function(t) {
              (this._editable = t), N.isConchApp && e.input.setForbidEdit(!t);
            }
          ),
          r(
            0,
            s,
            'promptColor',
            function() {
              return this._promptColor;
            },
            function(t) {
              (this._promptColor = t),
                this._content || i.superSet(gt, this, 'color', t);
            }
          ),
          r(
            0,
            s,
            'type',
            function() {
              return this._type;
            },
            function(t) {
              (this._getCSSStyle().password = 'password' == t),
                (this._type = t),
                N.isConchApp && this.nativeInput.setType(t);
            }
          ),
          r(
            0,
            s,
            'inputElementXAdjuster',
            function() {
              return (
                console.warn(
                  'deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。'
                ),
                0
              );
            },
            function(t) {
              console.warn(
                'deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。'
              );
            }
          ),
          r(
            0,
            s,
            'asPassword',
            function() {
              return this._getCSSStyle().password;
            },
            function(t) {
              (this._getCSSStyle().password = t),
                (this._type = 'password'),
                console.warn(
                  'deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'
                ),
                (this.isChanged = !0);
            }
          ),
          (e.__init__ = function() {
            e._createInputElement(),
              O.onMobile &&
                N.canvas.addEventListener(
                  e.IOS_IFRAME
                    ? O.onMiniGame
                      ? 'touchend'
                      : 'click'
                    : 'touchend',
                  e._popupInputMethod
                );
          }),
          (e._popupInputMethod = function(t) {
            if (laya.display.Input.isInputting) {
              laya.display.Input.inputElement.focus();
            }
          }),
          (e._createInputElement = function() {
            e._initInput((e.area = O.createElement('textarea'))),
              e._initInput((e.input = O.createElement('input'))),
              ((e.inputContainer = O.createElement('div')).style.position =
                'absolute'),
              (e.inputContainer.style.zIndex = 1e5),
              O.container.appendChild(e.inputContainer),
              (e.inputContainer.setPos = function(t, i) {
                (e.inputContainer.style.left = t + 'px'),
                  (e.inputContainer.style.top = i + 'px');
              });
          }),
          (e._initInput = function(t) {
            var i = t.style;
            (i.cssText =
              'position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;'),
              (i.resize = 'none'),
              (i.backgroundColor = 'transparent'),
              (i.border = 'none'),
              (i.outline = 'none'),
              (i.zIndex = 1),
              t.addEventListener('input', e._processInputting),
              t.addEventListener('mousemove', e._stopEvent),
              t.addEventListener('mousedown', e._stopEvent),
              t.addEventListener('touchmove', e._stopEvent),
              (t.setFontFace = function(e) {
                t.style.fontFamily = e;
              }),
              N.isConchApp ||
                ((t.setColor = function(e) {
                  t.style.color = e;
                }),
                (t.setFontSize = function(e) {
                  t.style.fontSize = e + 'px';
                }));
          }),
          (e._processInputting = function(t) {
            var e = laya.display.Input.inputElement.target;
            if (e) {
              var i = laya.display.Input.inputElement.value;
              e._restrictPattern &&
                ((i = i.replace(/\u2006|\x27/g, '')),
                e._restrictPattern.test(i) &&
                  ((i = i.replace(e._restrictPattern, '')),
                  (laya.display.Input.inputElement.value = i))),
                (e._text = i),
                e.event('input');
            }
          }),
          (e._stopEvent = function(t) {
            'touchmove' == t.type && t.preventDefault(),
              t.stopPropagation && t.stopPropagation();
          }),
          (e.TYPE_TEXT = 'text'),
          (e.TYPE_PASSWORD = 'password'),
          (e.TYPE_EMAIL = 'email'),
          (e.TYPE_URL = 'url'),
          (e.TYPE_NUMBER = 'number'),
          (e.TYPE_RANGE = 'range'),
          (e.TYPE_DATE = 'date'),
          (e.TYPE_MONTH = 'month'),
          (e.TYPE_WEEK = 'week'),
          (e.TYPE_TIME = 'time'),
          (e.TYPE_DATE_TIME = 'datetime'),
          (e.TYPE_DATE_TIME_LOCAL = 'datetime-local'),
          (e.TYPE_SEARCH = 'search'),
          (e.input = null),
          (e.area = null),
          (e.inputElement = null),
          (e.inputContainer = null),
          (e.confirmButton = null),
          (e.promptStyleDOM = null),
          (e.inputHeight = 45),
          (e.isInputting = !1),
          (e.stageMatrix = null),
          n(e, [
            'IOS_IFRAME',
            function() {
              return (this.IOS_IFRAME =
                O.onIOS && O.window.top != O.window.self);
            }
          ]),
          e
        );
      })(gt),
      It = (function(t) {
        function e(t, i) {
          (this._recreateLock = !1),
            (this._needReleaseAgain = !1),
            (this._enableMerageInAtlas = !0),
            e.__super.call(this),
            this._init_(t, i);
        }
        a(e, 'laya.resource.HTMLImage', vt);
        var i = e.prototype;
        return (
          (i._init_ = function(t, e) {
            (this._src = t),
              (this._source = new O.window.Image()),
              e &&
                (e.onload && (this.onload = e.onload),
                e.onerror && (this.onerror = e.onerror),
                e.onCreate && e.onCreate(this)),
              0 != t.indexOf('data:image') && (this._source.crossOrigin = ''),
              t && (this._source.src = t);
          }),
          (i.recreateResource = function() {
            var t = this;
            if ('' === this._src) throw new Error('src no null！');
            if (((this._needReleaseAgain = !1), this._source)) {
              if (this._recreateLock) return;
              (this.memorySize = this._w * this._h * 4),
                (this._recreateLock = !1),
                this.completeCreate();
            } else {
              this._recreateLock = !0;
              var e = this;
              (this._source = new O.window.Image()),
                (this._source.crossOrigin = ''),
                (this._source.onload = function() {
                  if (e._needReleaseAgain)
                    return (
                      (e._needReleaseAgain = !1),
                      (e._source.onload = null),
                      void (e._source = null)
                    );
                  (e._source.onload = null),
                    (e.memorySize = t._w * t._h * 4),
                    (e._recreateLock = !1),
                    e.completeCreate();
                }),
                (this._source.src = this._src);
            }
          }),
          (i.disposeResource = function() {
            this._recreateLock && (this._needReleaseAgain = !0),
              this._source && ((this._source = null), (this.memorySize = 0));
          }),
          (i.onresize = function() {
            (this._w = this._source.width), (this._h = this._source.height);
          }),
          r(0, i, 'onload', null, function(t) {
            var e = this;
            (this._onload = t),
              this._source &&
                (this._source.onload =
                  null != this._onload
                    ? function() {
                        e.onresize(), e._onload();
                      }
                    : null);
          }),
          r(0, i, 'onerror', null, function(t) {
            var e = this;
            (this._onerror = t),
              this._source &&
                (this._source.onerror =
                  null != this._onerror
                    ? function() {
                        e._onerror();
                      }
                    : null);
          }),
          r(
            0,
            i,
            'enableMerageInAtlas',
            function() {
              return this._enableMerageInAtlas;
            },
            function(t) {
              (this._enableMerageInAtlas = t),
                N.isConchApp &&
                  this._source &&
                  (this._source.enableMerageInAtlas = t);
            }
          ),
          (e.create = function(t, i) {
            return new e(t, i);
          }),
          e
        );
      })(),
      Ct =
        ((function(t) {
          function e() {
            (this._target = null),
              (this._playEvents = null),
              (this._initData = {}),
              (this._aniKeys = null),
              (this._effectClass = null),
              e.__super.call(this);
          }
          a(e, 'laya.display.EffectAnimation', t);
          var i = e.prototype;
          (i._onOtherBegin = function(t) {
            t != this && this.stop();
          }),
            (i.addEvent = function() {
              this._target &&
                this._playEvents &&
                (this._setControlNode(this._target),
                this._target.on(this._playEvents, this, this._onPlayAction));
            }),
            (i._onPlayAction = function() {
              this.play(0, !1);
            }),
            (i.play = function(t, e, i, n) {
              void 0 === t && (t = 0),
                void 0 === e && (e = !0),
                void 0 === i && (i = ''),
                void 0 === n && (n = !0),
                this._target &&
                  (this._target.event('effectanimationbegin', [this]),
                  this._recordInitData(),
                  laya.display.AnimationPlayerBase.prototype.play.call(
                    this,
                    t,
                    e,
                    i,
                    n
                  ));
            }),
            (i._recordInitData = function() {
              if (this._aniKeys) {
                var t = 0,
                  e = 0;
                e = this._aniKeys.length;
                var i;
                for (t = 0; t < e; t++)
                  (i = this._aniKeys[t]), (this._initData[i] = this._target[i]);
              }
            }),
            (i._displayToIndex = function(t) {
              if (this._animationData) {
                t < 0 && (t = 0), t > this._count && (t = this._count);
                var e = this._animationData.nodes,
                  i = 0,
                  n = e.length;
                for (n = n > 1 ? 1 : n, i = 0; i < n; i++)
                  this._displayNodeToFrame(e[i], t);
              }
            }),
            (i._displayNodeToFrame = function(t, e, i) {
              if (this._target) {
                var n;
                n = this._target;
                var a,
                  r,
                  s,
                  o,
                  l = t.frames,
                  h = t.keys,
                  c = 0,
                  u = h.length;
                o = t.secondFrames;
                var _,
                  d,
                  f,
                  p,
                  m = 0;
                for (c = 0; c < u; c++)
                  (r = l[(a = h[c])]),
                    -1 == (m = o[a])
                      ? (s = this._initData[a])
                      : e < m
                      ? (f = (d = t.keyframes[a])[0]).tween
                        ? (null == (_ = z[f.tweenMethod]) && (_ = z.linearNone),
                          (p = d[1]),
                          (s = _(
                            e,
                            this._initData[a],
                            p.value - this._initData[a],
                            p.index
                          )))
                        : (s = this._initData[a])
                      : (s = r.length > e ? r[e] : r[r.length - 1]),
                    (n[a] = s);
              }
            }),
            (i._calculateNodeKeyFrames = function(e) {
              t.prototype._calculateNodeKeyFrames.call(this, e);
              var i,
                n,
                a,
                r = e.keyframes;
              e.target;
              (a = {}), (e.secondFrames = a);
              for (i in r)
                (n = r[i]).length <= 1 ? (a[i] = -1) : (a[i] = n[1].index);
            }),
            r(
              0,
              i,
              'target',
              function() {
                return this._target;
              },
              function(t) {
                this._target &&
                  this._target.off(
                    'effectanimationbegin',
                    this,
                    this._onOtherBegin
                  ),
                  (this._target = t),
                  this._target &&
                    this._target.on(
                      'effectanimationbegin',
                      this,
                      this._onOtherBegin
                    ),
                  this.addEvent();
              }
            ),
            r(0, i, 'playEvent', null, function(t) {
              (this._playEvents = t), t && this.addEvent();
            }),
            r(0, i, 'effectData', null, function(t) {
              if (t) {
                var e;
                (e = t.animations) &&
                  e[0] &&
                  (this._setUp({}, e[0]),
                  e[0].nodes &&
                    e[0].nodes[0] &&
                    (this._aniKeys = e[0].nodes[0].keys));
              }
            }),
            r(0, i, 'effectClass', null, function(t) {
              if (((this._effectClass = F.getClass(t)), this._effectClass)) {
                var e;
                if ((e = this._effectClass.uiView)) {
                  var i;
                  (i = e.animations) &&
                    i[0] &&
                    (this._setUp({}, i[0]),
                    i[0].nodes &&
                      i[0].nodes[0] &&
                      (this._aniKeys = i[0].nodes[0].keys));
                }
              }
            }),
            (e.EffectAnimationBegin = 'effectanimationbegin');
        })(wt),
        (function(t) {
          function e() {
            (this.animationList = null),
              (this.animationDic = null),
              (this._nodeList = null),
              (this._nodeDefaultProps = null),
              (this._gList = null),
              (this._nodeIDAniDic = {}),
              (this._rootNode = null),
              (this._nodeGDic = null),
              e.__super.call(this);
          }
          var i;
          a(e, 'laya.utils.GraphicAnimation', t);
          var r = e.prototype;
          return (
            (r._parseNodeList = function(t) {
              this._nodeList || (this._nodeList = []),
                (this._nodeDefaultProps[t.compId] = t.props),
                t.compId && this._nodeList.push(t.compId);
              var e = t.child;
              if (e) {
                var i = 0,
                  n = e.length;
                for (i = 0; i < n; i++) this._parseNodeList(e[i]);
              }
            }),
            (r._calGraphicData = function(t) {
              if (
                (this._setUp(null, t),
                this._createGraphicData(),
                this._nodeIDAniDic)
              ) {
                var e;
                for (e in this._nodeIDAniDic) this._nodeIDAniDic[e] = null;
              }
            }),
            (r._createGraphicData = function() {
              var t = [],
                e = 0,
                i = this.count,
                n = this._animationNewFrames;
              n || (n = []);
              var a;
              for (e = 0; e < i; e++)
                (!n[e] && a) || (a = this._createFrameGraphic(e)), t.push(a);
              this._gList = t;
            }),
            (r._createFrameGraphic = function(t) {
              var i = s.createGraphics();
              return (
                e._rootMatrix || (e._rootMatrix = new S()),
                this._updateNodeGraphic(this._rootNode, t, e._rootMatrix, i),
                i
              );
            }),
            (r._updateNodeGraphic = function(t, e, i, n, a) {
              void 0 === a && (a = 1);
              var r,
                s =
                  (r = this._nodeGDic[t.compId] = this._getNodeGraphicData(
                    t.compId,
                    e,
                    this._nodeGDic[t.compId]
                  )).alpha * a;
              if (!(s < 0.01)) {
                r.resultTransform || (r.resultTransform = S.create());
                var o;
                (o = r.resultTransform), S.mul(r.transform, i, o);
                var l;
                r.skin &&
                  (l = this._getTextureByUrl(r.skin)) &&
                  (o._checkTransform()
                    ? (n.drawTexture(l, 0, 0, r.width, r.height, o, s),
                      (r.resultTransform = null))
                    : n.drawTexture(l, o.tx, o.ty, r.width, r.height, null, s));
                var h;
                if ((h = t.child)) {
                  var c = 0,
                    u = 0;
                  for (u = h.length, c = 0; c < u; c++)
                    this._updateNodeGraphic(h[c], e, o, n, s);
                }
              }
            }),
            (r._updateNoChilds = function(t, e) {
              if (t.skin) {
                var i = this._getTextureByUrl(t.skin);
                if (i) {
                  var n = t.transform;
                  n._checkTransform();
                  !n.bTransform
                    ? e.drawTexture(
                        i,
                        n.tx,
                        n.ty,
                        t.width,
                        t.height,
                        null,
                        t.alpha
                      )
                    : e.drawTexture(
                        i,
                        0,
                        0,
                        t.width,
                        t.height,
                        n.clone(),
                        t.alpha
                      );
                }
              }
            }),
            (r._updateNodeGraphic2 = function(t, e, i) {
              var n;
              if (
                ((n = this._nodeGDic[t.compId] = this._getNodeGraphicData(
                  t.compId,
                  e,
                  this._nodeGDic[t.compId]
                )),
                t.child)
              ) {
                var a = n.transform;
                a._checkTransform();
                var r = !1,
                  s = !1;
                s = (r = !a.bTransform) && (0 != a.tx || 0 != a.ty);
                var o = !1;
                (o = a.bTransform || 1 != n.alpha) && i.save(),
                  1 != n.alpha && i.alpha(n.alpha),
                  r ? s && i.translate(a.tx, a.ty) : i.transform(a.clone());
                var l;
                l = t.child;
                var h;
                if (
                  (n.skin &&
                    (h = this._getTextureByUrl(n.skin)) &&
                    i.drawTexture(h, 0, 0, n.width, n.height),
                  l)
                ) {
                  var c = 0,
                    u = 0;
                  for (u = l.length, c = 0; c < u; c++)
                    this._updateNodeGraphic2(l[c], e, i);
                }
                o
                  ? i.restore()
                  : r
                  ? s && i.translate(-a.tx, -a.ty)
                  : i.transform(a.clone().invert());
              } else this._updateNoChilds(n, i);
            }),
            (r._calculateNodeKeyFrames = function(e) {
              t.prototype._calculateNodeKeyFrames.call(this, e),
                (this._nodeIDAniDic[e.target] = e);
            }),
            (r.getNodeDataByID = function(t) {
              return this._nodeIDAniDic[t];
            }),
            (r._getParams = function(t, i, n, a) {
              var r = e._temParam;
              r.length = i.length;
              var s = 0,
                o = i.length;
              for (s = 0; s < o; s++)
                r[s] = this._getObjVar(t, i[s][0], n, i[s][1], a);
              return r;
            }),
            (r._getObjVar = function(t, e, i, n, a) {
              if (t.hasOwnProperty(e)) {
                var r = t[e];
                return i >= r.length && (i = r.length - 1), t[e][i];
              }
              return a.hasOwnProperty(e) ? a[e] : n;
            }),
            (r._getNodeGraphicData = function(t, n, a) {
              a || (a = i.create()),
                a.transform
                  ? a.transform.identity()
                  : (a.transform = S.create());
              var r = this.getNodeDataByID(t);
              if (!r) return a;
              var s = r.frames,
                o = this._getParams(
                  s,
                  e._drawTextureCmd,
                  n,
                  this._nodeDefaultProps[t]
                ),
                l = o[0],
                h = NaN,
                c = NaN,
                u = o[5],
                _ = o[6],
                d = o[13],
                f = o[14],
                p = o[7],
                m = o[8],
                g = o[9],
                y = o[11],
                v = o[12];
              (h = o[3]),
                (c = o[4]),
                (0 != h && 0 != c) || (l = null),
                -1 == h && (h = 0),
                -1 == c && (c = 0);
              var b;
              (a.skin = l),
                (a.width = h),
                (a.height = c),
                l &&
                  ((b = this._getTextureByUrl(l))
                    ? (h || (h = b.sourceWidth), c || (c = b.sourceHeight))
                    : console.warn(
                        'lost skin:',
                        l,
                        ',you may load pics first'
                      )),
                (a.alpha = o[10]);
              var w;
              (w = a.transform),
                0 != d && (u = d * h),
                0 != f && (_ = f * c),
                (0 == u && 0 == _) || w.translate(-u, -_);
              var x = null;
              if (g || 1 !== p || 1 !== m || y || v) {
                (x = e._tempMt).identity(), (x.bTransform = !0);
                var I = 0.0174532922222222 * (g - y),
                  C = 0.0174532922222222 * (g + v),
                  T = Math.cos(C),
                  M = Math.sin(C),
                  E = Math.sin(I),
                  L = Math.cos(I);
                (x.a = p * T),
                  (x.b = p * M),
                  (x.c = -m * E),
                  (x.d = m * L),
                  (x.tx = x.ty = 0);
              }
              return x && (w = S.mul(w, x, w)), w.translate(o[1], o[2]), a;
            }),
            (r._getTextureByUrl = function(t) {
              return st.getRes(t);
            }),
            (r.setAniData = function(t, i) {
              if (t.animations) {
                (this._nodeDefaultProps = {}),
                  (this._nodeGDic = {}),
                  this._nodeList && (this._nodeList.length = 0),
                  (this._rootNode = t),
                  this._parseNodeList(t);
                var n,
                  a = {},
                  r = [],
                  s = t.animations,
                  o = 0,
                  l = s.length;
                for (o = 0; o < l; o++)
                  if (
                    ((n = s[o]),
                    (this._labels = null),
                    (!i || i == n.name) && n)
                  ) {
                    try {
                      this._calGraphicData(n);
                    } catch (t) {
                      console.warn(
                        'parse animation fail:' +
                          n.name +
                          ',empty animation created'
                      ),
                        (this._gList = []);
                    }
                    var h = {};
                    (h.interval = 1e3 / n.frameRate),
                      (h.frames = this._gList),
                      (h.labels = this._labels),
                      (h.name = n.name),
                      r.push(h),
                      (a[n.name] = h);
                  }
                (this.animationList = r), (this.animationDic = a);
              }
              e._temParam.length = 0;
            }),
            (r.parseByData = function(t) {
              var e, i;
              (e = t.nodeRoot),
                (i = t.aniO),
                delete t.nodeRoot,
                delete t.aniO,
                (this._nodeDefaultProps = {}),
                (this._nodeGDic = {}),
                this._nodeList && (this._nodeList.length = 0),
                (this._rootNode = e),
                this._parseNodeList(e),
                (this._labels = null);
              try {
                this._calGraphicData(i);
              } catch (t) {
                console.warn(
                  'parse animation fail:' + i.name + ',empty animation created'
                ),
                  (this._gList = []);
              }
              var n = t;
              return (
                (n.interval = 1e3 / i.frameRate),
                (n.frames = this._gList),
                (n.labels = this._labels),
                (n.name = i.name),
                n
              );
            }),
            (r.setUpAniData = function(t) {
              if (t.animations) {
                var e,
                  i = {},
                  n = [],
                  a = t.animations,
                  r = 0,
                  s = a.length;
                for (r = 0; r < s; r++)
                  if ((e = a[r])) {
                    var o = {};
                    (o.name = e.name),
                      (o.aniO = e),
                      (o.nodeRoot = t),
                      n.push(o),
                      (i[e.name] = o);
                  }
                (this.animationList = n), (this.animationDic = i);
              }
            }),
            (r._clear = function() {
              if (
                ((this.animationList = null),
                (this.animationDic = null),
                (this._gList = null),
                this._nodeGDic)
              ) {
                var t, e;
                for (t in this._nodeGDic)
                  (e = this._nodeGDic[t]) && e.recover();
              }
              this._nodeGDic = null;
            }),
            (e.parseAnimationByData = function(t) {
              e._I || (e._I = new e());
              var i;
              return (i = e._I.parseByData(t)), e._I._clear(), i;
            }),
            (e.parseAnimationData = function(t) {
              e._I || (e._I = new e()), e._I.setUpAniData(t);
              var i;
              return (
                (i = {}),
                (i.animationList = e._I.animationList),
                (i.animationDic = e._I.animationDic),
                e._I._clear(),
                i
              );
            }),
            (e._drawTextureCmd = [
              ['skin', null],
              ['x', 0],
              ['y', 0],
              ['width', -1],
              ['height', -1],
              ['pivotX', 0],
              ['pivotY', 0],
              ['scaleX', 1],
              ['scaleY', 1],
              ['rotation', 0],
              ['alpha', 1],
              ['skewX', 0],
              ['skewY', 0],
              ['anchorX', 0],
              ['anchorY', 0]
            ]),
            (e._temParam = []),
            (e._I = null),
            (e._rootMatrix = null),
            n(e, [
              '_tempMt',
              function() {
                return (this._tempMt = new S());
              }
            ]),
            (e.__init$ = function() {
              i = (function() {
                function t() {
                  (this.skin = null),
                    (this.transform = null),
                    (this.resultTransform = null),
                    (this.width = NaN),
                    (this.height = NaN),
                    (this.alpha = 1);
                }
                a(t, '');
                return (
                  (t.prototype.recover = function() {
                    (this.skin = null),
                      (this.width = 0),
                      (this.height = 0),
                      (this.alpha = 1),
                      this.transform &&
                        (this.transform.destroy(), (this.transform = null)),
                      this.resultTransform &&
                        (this.resultTransform.destroy(),
                        (this.resultTransform = null)),
                      W.recover('GraphicNode', this);
                  }),
                  (t.create = function() {
                    return W.getItemByClass('GraphicNode', t);
                  }),
                  t
                );
              })();
            }),
            e
          );
        })(wt));
    i.__init([l, ot, N, O, q, L, ut, Ct]);
  })(window, document, Laya),
  (function(t, e, i) {
    i.un, i.uns, i.static;
    var n = i.class;
    i.getset, i.__newvec;
    new ((function() {
      function t() {}
      return n(t, 'LayaMain'), t;
    })())();
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset,
      s = (i.__newvec, laya.utils.Browser),
      o = (laya.events.Event, laya.events.EventDispatcher),
      l = laya.resource.HTMLImage,
      h = laya.utils.Handler,
      c = laya.display.Input,
      u = laya.net.Loader,
      _ = laya.net.LocalStorage,
      d = (laya.maths.Matrix, laya.renders.Render),
      f = laya.utils.RunDriver,
      p = laya.media.SoundChannel,
      m = laya.media.SoundManager,
      g = laya.net.URL,
      y = laya.utils.Utils,
      v = (function() {
        function e() {}
        return (
          a(e, 'laya.wx.mini.MiniAdpter'),
          (e.getJson = function(t) {
            return JSON.parse(t);
          }),
          (e.init = function(n, a) {
            if (
              (void 0 === n && (n = !1),
              void 0 === a && (a = !1),
              !(
                e._inited ||
                ((e._inited = !0),
                (e.window = t).navigator.userAgent.indexOf('MiniGame') < 0)
              ))
            ) {
              (e.isZiYu = a), (e.isPosMsgYu = n), (e.EnvConfig = {});
              try {
                laya.webgl.resource.WebGLCanvas.premulAlpha = !0;
              } catch (t) {}
              e.isZiYu ||
                (b.setNativeFileDir('/layaairGame'),
                b.existDir(b.fileNativeDir, h.create(e, e.onMkdirCallBack))),
                (e.systemInfo = wx.getSystemInfoSync()),
                (e.window.focus = function() {}),
                (i.getUrlPath = function() {}),
                (e.window.logtime = function(t) {}),
                (e.window.alertTimeLog = function(t) {}),
                (e.window.resetShareInfo = function() {}),
                (e.window.CanvasRenderingContext2D = function() {}),
                (e.window.CanvasRenderingContext2D.prototype = e.window.wx
                  .createCanvas()
                  .getContext('2d').__proto__),
                (e.window.document.body.appendChild = function() {}),
                (e.EnvConfig.pixelRatioInt = 0),
                (f.getPixelRatio = e.pixelRatio),
                (e._preCreateElement = s.createElement),
                (s.createElement = e.createElement),
                (f.createShaderCondition = e.createShaderCondition),
                (y.parseXMLFromString = e.parseXMLFromString),
                (c._createInputElement = x._createInputElement),
                (e.EnvConfig.load = u.prototype.load),
                (u.prototype.load = C.prototype.load),
                (u.prototype._loadImage = w.prototype._loadImage),
                I.__init__(),
                (_._baseClass = I);
            }
          }),
          (e.getUrlEncode = function(t, e) {
            return -1 != t.indexOf('.fnt')
              ? 'utf8'
              : 'arraybuffer' == e
              ? ''
              : 'ascii';
          }),
          (e.downLoadFile = function(t, e, i, n) {
            void 0 === e && (e = ''), void 0 === n && (n = 'ascii');
            b.getFileInfo(t)
              ? null != i && i.runWith([0])
              : b.downLoadFile(t, e, i, n);
          }),
          (e.remove = function(t, e) {
            b.deleteFile('', t, e, '', 0);
          }),
          (e.removeAll = function() {
            b.deleteAll();
          }),
          (e.hasNativeFile = function(t) {
            return b.isLocalNativeFile(t);
          }),
          (e.getFileInfo = function(t) {
            return b.getFileInfo(t);
          }),
          (e.getFileList = function() {
            return b.filesListObj;
          }),
          (e.exitMiniProgram = function() {
            e.window.wx.exitMiniProgram();
          }),
          (e.onMkdirCallBack = function(t, e) {
            t || (b.filesListObj = JSON.parse(e.data));
          }),
          (e.pixelRatio = function() {
            if (!e.EnvConfig.pixelRatioInt)
              try {
                return (
                  (e.EnvConfig.pixelRatioInt = e.systemInfo.pixelRatio),
                  e.systemInfo.pixelRatio
                );
              } catch (t) {}
            return e.EnvConfig.pixelRatioInt;
          }),
          (e.createElement = function(i) {
            if ('canvas' == i) {
              var n;
              return (
                1 == e.idx
                  ? e.isZiYu
                    ? ((n = sharedCanvas).style = {})
                    : (n = t.canvas)
                  : (n = t.wx.createCanvas()),
                e.idx++,
                n
              );
            }
            if ('textarea' == i || 'input' == i) return e.onCreateInput(i);
            if ('div' == i) {
              var a = e._preCreateElement(i);
              return (
                (a.contains = function(t) {
                  return null;
                }),
                (a.removeChild = function(t) {}),
                a
              );
            }
            return e._preCreateElement(i);
          }),
          (e.onCreateInput = function(t) {
            var i = e._preCreateElement(t);
            return (
              (i.focus = x.wxinputFocus),
              (i.blur = x.wxinputblur),
              (i.style = {}),
              (i.value = 0),
              (i.parentElement = {}),
              (i.placeholder = {}),
              (i.type = {}),
              (i.setColor = function(t) {}),
              (i.setType = function(t) {}),
              (i.setFontFace = function(t) {}),
              (i.addEventListener = function(t) {}),
              (i.contains = function(t) {
                return null;
              }),
              (i.removeChild = function(t) {}),
              i
            );
          }),
          (e.createShaderCondition = function(t) {
            var e = this;
            return function() {
              return e[t.replace('this.', '')];
            };
          }),
          (e.EnvConfig = null),
          (e.window = null),
          (e._preCreateElement = null),
          (e._inited = !1),
          (e.systemInfo = null),
          (e.isZiYu = !1),
          (e.isPosMsgYu = !1),
          (e.autoCacheFile = !0),
          (e.minClearSize = 5242880),
          (e.parseXMLFromString = function(e) {
            var i;
            e = e.replace(/>\s+</g, '><');
            try {
              i = new t.Parser.DOMParser().parseFromString(e, 'text/xml');
            } catch (t) {
              throw '需要引入xml解析库文件';
            }
            return i;
          }),
          (e.idx = 1),
          n(e, [
            'nativefiles',
            function() {
              return (this.nativefiles = ['layaNativeDir', 'wxlocal']);
            }
          ]),
          e
        );
      })(),
      b = (function() {
        function t() {}
        return (
          a(t, 'laya.wx.mini.MiniFileMgr'),
          (t.isLocalNativeFile = function(t) {
            for (var e = 0, i = v.nativefiles.length; e < i; e++)
              if (-1 != t.indexOf(v.nativefiles[e])) return !0;
            return !1;
          }),
          (t.getFileInfo = function(e) {
            var i = e.split('?')[0],
              n = t.filesListObj[i];
            return null == n ? null : n;
          }),
          (t.read = function(e, i, n, a, r, s) {
            void 0 === i && (i = 'ascill'),
              void 0 === a && (a = ''),
              void 0 === r && (r = !1),
              void 0 === s && (s = '');
            var o;
            (o =
              '' == a ||
              (-1 == a.indexOf('http://') && -1 == a.indexOf('https://'))
                ? e
                : t.getFileNativePath(e)),
              t.fs.readFile({
                filePath: o,
                encoding: i,
                success: function(t) {
                  null != n && n.runWith([0, t]);
                },
                fail: function(e) {
                  e && '' != a
                    ? t.downFiles(a, i, n, a, r, s)
                    : null != n && n.runWith([1]);
                }
              });
          }),
          (t.downFiles = function(e, i, n, a, r, s) {
            void 0 === i && (i = 'ascii'),
              void 0 === a && (a = ''),
              void 0 === r && (r = !1),
              void 0 === s && (s = '');
            t.wxdown({
              url: e,
              success: function(e) {
                200 === e.statusCode &&
                  t.readFile(e.tempFilePath, i, n, a, r, s);
              },
              fail: function(t) {
                null != n && n.runWith([1, t]);
              }
            }).onProgressUpdate(function(t) {
              null != n && n.runWith([2, t.progress]);
            });
          }),
          (t.readFile = function(e, i, n, a, r, s) {
            void 0 === i && (i = 'ascill'),
              void 0 === a && (a = ''),
              void 0 === r && (r = !1),
              void 0 === s && (s = ''),
              t.fs.readFile({
                filePath: e,
                encoding: i,
                success: function(s) {
                  -1 != e.indexOf('http://') || -1 != e.indexOf('https://')
                    ? (v.autoCacheFile || r) && t.copyFile(e, a, n, i)
                    : null != n && n.runWith([0, s]);
                },
                fail: function(t) {
                  t && null != n && n.runWith([1, t]);
                }
              });
          }),
          (t.downOtherFiles = function(e, i, n, a) {
            void 0 === n && (n = ''),
              void 0 === a && (a = !1),
              t.wxdown({
                url: e,
                success: function(e) {
                  200 === e.statusCode &&
                    ((v.autoCacheFile || a) && -1 == n.indexOf('wx.qlogo.cn')
                      ? t.copyFile(e.tempFilePath, n, i)
                      : null != i && i.runWith([0, e.tempFilePath]));
                },
                fail: function(t) {
                  null != i && i.runWith([1, t]);
                }
              });
          }),
          (t.downLoadFile = function(e, i, n, a) {
            void 0 === i && (i = ''),
              void 0 === a && (a = 'ascii'),
              'image' == i || 'sound' == i
                ? t.downOtherFiles(e, n, e, !0)
                : t.downFiles(e, a, n, e, !0, i);
          }),
          (t.copyFile = function(e, i, n, a) {
            void 0 === a && (a = '');
            var r = e.split('/'),
              s = r[r.length - 1],
              o = (i.split('?')[0], t.getFileInfo(i)),
              l = t.getFileNativePath(s),
              h = t.getCacheUseSize();
            o
              ? o.readyUrl != i
                ? t.fs.getFileInfo({
                    filePath: e,
                    success: function(e) {
                      h + 4194304 + e.size >= 52428800 &&
                        (e.size > v.minClearSize && (v.minClearSize = e.size),
                        t.onClearCacheRes()),
                        t.deleteFile(s, i, n, a, e.size);
                    },
                    fail: function(t) {
                      null != n && n.runWith([1, t]);
                    }
                  })
                : null != n && n.runWith([0])
              : t.fs.getFileInfo({
                  filePath: e,
                  success: function(r) {
                    h + 4194304 + r.size >= 52428800 &&
                      (r.size > v.minClearSize && (v.minClearSize = r.size),
                      t.onClearCacheRes()),
                      t.fs.copyFile({
                        srcPath: e,
                        destPath: l,
                        success: function(e) {
                          t.onSaveFile(i, s, !0, a, n, r.size);
                        },
                        fail: function(t) {
                          null != n && n.runWith([1, t]);
                        }
                      });
                  },
                  fail: function(t) {
                    null != n && n.runWith([1, t]);
                  }
                });
          }),
          (t.onClearCacheRes = function() {
            var e = v.minClearSize,
              i = [];
            for (var n in t.filesListObj) i.push(t.filesListObj[n]);
            t.sortOn(i, 'time', 16);
            for (var a = 0, r = 1, s = i.length; r < s; r++) {
              var o = i[r];
              if (a >= e) break;
              (a += o.size), t.deleteFile('', o.readyUrl);
            }
          }),
          (t.sortOn = function(t, e, i) {
            return (
              void 0 === i && (i = 0),
              16 == i
                ? t.sort(function(t, i) {
                    return t[e] - i[e];
                  })
                : 18 == i
                ? t.sort(function(t, i) {
                    return i[e] - t[e];
                  })
                : t.sort(function(t, i) {
                    return t[e] - i[e];
                  })
            );
          }),
          (t.getFileNativePath = function(t) {
            return laya.wx.mini.MiniFileMgr.fileNativeDir + '/' + t;
          }),
          (t.deleteFile = function(e, i, n, a, r) {
            void 0 === i && (i = ''),
              void 0 === a && (a = ''),
              void 0 === r && (r = 0);
            var s = t.getFileInfo(i),
              o = t.getFileNativePath(s.md5);
            t.fs.unlink({
              filePath: o,
              success: function(s) {
                var o = '' != e;
                if ('' != e) {
                  var l = t.getFileNativePath(e);
                  t.fs.copyFile({
                    srcPath: e,
                    destPath: l,
                    success: function(r) {
                      t.onSaveFile(i, e, o, a, n, r.size);
                    },
                    fail: function(t) {
                      null != n && n.runWith([1, t]);
                    }
                  });
                } else t.onSaveFile(i, e, o, a, n, r);
              },
              fail: function(t) {}
            });
          }),
          (t.deleteAll = function() {
            var e = [];
            for (var i in t.filesListObj) e.push(t.filesListObj[i]);
            for (var n = 1, a = e.length; n < a; n++) {
              var r = e[n];
              t.deleteFile('', r.readyUrl);
            }
          }),
          (t.onSaveFile = function(e, i, n, a, r, o) {
            void 0 === n && (n = !0),
              void 0 === a && (a = ''),
              void 0 === o && (o = 0);
            var l = e.split('?')[0];
            if (
              (null == t.filesListObj.fileUsedSize &&
                (t.filesListObj.fileUsedSize = 0),
              n)
            ) {
              t.getFileNativePath(i);
              (t.filesListObj[l] = {
                md5: i,
                readyUrl: e,
                size: o,
                times: s.now(),
                encoding: a
              }),
                (t.filesListObj.fileUsedSize =
                  parseInt(t.filesListObj.fileUsedSize) + o),
                t.writeFilesList(l, JSON.stringify(t.filesListObj), !0),
                null != r && r.runWith([0]);
            } else if (t.filesListObj[l]) {
              var h = parseInt(t.filesListObj[l].size);
              (t.filesListObj.fileUsedSize =
                parseInt(t.filesListObj.fileUsedSize) - h),
                delete t.filesListObj[l],
                t.writeFilesList(l, JSON.stringify(t.filesListObj), !1),
                null != r && r.runWith([0]);
            }
          }),
          (t.writeFilesList = function(e, i, n) {
            var a = t.fileNativeDir + '/' + t.fileListName;
            t.fs.writeFile({
              filePath: a,
              encoding: 'utf8',
              data: i,
              success: function(t) {},
              fail: function(t) {}
            }),
              !v.isZiYu &&
                v.isPosMsgYu &&
                wx.postMessage({
                  url: e,
                  data: t.filesListObj[e],
                  isLoad: 'filenative',
                  isAdd: n
                });
          }),
          (t.getCacheUseSize = function() {
            return t.filesListObj && t.filesListObj.fileUsedSize
              ? t.filesListObj.fileUsedSize
              : 0;
          }),
          (t.existDir = function(e, i) {
            t.fs.mkdir({
              dirPath: e,
              success: function(t) {
                null != i && i.runWith([0, { data: JSON.stringify({}) }]);
              },
              fail: function(e) {
                -1 != e.errMsg.indexOf('file already exists')
                  ? t.readSync(t.fileListName, 'utf8', i)
                  : null != i && i.runWith([1, e]);
              }
            });
          }),
          (t.readSync = function(e, i, n, a) {
            void 0 === i && (i = 'ascill'), void 0 === a && (a = '');
            var r,
              s = t.getFileNativePath(e);
            try {
              (r = t.fs.readFileSync(s, i)),
                null != n && n.runWith([0, { data: r }]);
            } catch (t) {
              null != n && n.runWith([1]);
            }
          }),
          (t.setNativeFileDir = function(e) {
            t.fileNativeDir = wx.env.USER_DATA_PATH + e;
          }),
          (t.filesListObj = {}),
          (t.fileNativeDir = null),
          (t.fileListName = 'layaairfiles.txt'),
          (t.ziyuFileData = {}),
          (t.loadPath = ''),
          (t.DESCENDING = 2),
          (t.NUMERIC = 16),
          n(t, [
            'fs',
            function() {
              return (this.fs = wx.getFileSystemManager());
            },
            'wxdown',
            function() {
              return (this.wxdown = wx.downloadFile);
            }
          ]),
          t
        );
      })(),
      w = (function() {
        function t() {}
        a(t, 'laya.wx.mini.MiniImage');
        return (
          (t.prototype._loadImage = function(e) {
            if (v.isZiYu) t.onCreateImage(e, this, !0);
            else {
              var i = !1;
              if (b.isLocalNativeFile(e)) {
                if (-1 != e.indexOf('http://') || -1 != e.indexOf('https://'))
                  if ('' != b.loadPath) e = e.split(b.loadPath)[1];
                  else {
                    var n = '' != g.rootPath ? g.rootPath : g.basePath;
                    '' != n && (e = e.split(n)[1]);
                  }
              } else (i = !0), (e = g.formatURL(e));
              b.getFileInfo(e)
                ? t.onCreateImage(e, this, !i)
                : -1 != e.indexOf('http://') || -1 != e.indexOf('https://')
                ? v.isZiYu
                  ? t.onCreateImage(e, this, !0)
                  : b.downOtherFiles(
                      e,
                      new h(t, t.onDownImgCallBack, [e, this]),
                      e
                    )
                : t.onCreateImage(e, this, !0);
            }
          }),
          (t.onDownImgCallBack = function(e, i, n, a) {
            void 0 === a && (a = ''),
              n ? i.onError(null) : t.onCreateImage(e, i, !1, a);
          }),
          (t.onCreateImage = function(t, e, i, n) {
            function a() {
              (h.onload = null), (h.onerror = null), delete e.imgCache[t];
            }
            void 0 === i && (i = !1), void 0 === n && (n = '');
            var r;
            if (v.autoCacheFile)
              if (i) r = t;
              else if ('' != n) r = n;
              else {
                var o = b.getFileInfo(t).md5;
                r = b.getFileNativePath(o);
              }
            else r = i ? t : n;
            null == e.imgCache && (e.imgCache = {});
            var h,
              c = function() {
                a(), (e._url = g.formatURL(e._url)), e.onLoaded(h);
              },
              u = function() {
                a(), e.event('error', 'Load image failed');
              };
            'nativeimage' == e._type
              ? (((h = new s.window.Image()).crossOrigin = ''),
                (h.onload = c),
                (h.onerror = u),
                (h.src = r),
                (e.imgCache[t] = h))
              : new l.create(r, {
                  onload: c,
                  onerror: u,
                  onCreate: function(i) {
                    (h = i), (e.imgCache[t] = i);
                  }
                });
          }),
          t
        );
      })(),
      x = (function() {
        function e() {}
        return (
          a(e, 'laya.wx.mini.MiniInput'),
          (e._createInputElement = function() {
            c._initInput((c.area = s.createElement('textarea'))),
              c._initInput((c.input = s.createElement('input'))),
              (c.inputContainer = s.createElement('div')),
              (c.inputContainer.style.position = 'absolute'),
              (c.inputContainer.style.zIndex = 1e5),
              s.container.appendChild(c.inputContainer),
              (c.inputContainer.setPos = function(t, e) {
                (c.inputContainer.style.left = t + 'px'),
                  (c.inputContainer.style.top = e + 'px');
              }),
              i.stage.on('resize', null, e._onStageResize),
              wx.onWindowResize &&
                wx.onWindowResize(function(e) {
                  t.dispatchEvent && t.dispatchEvent('resize');
                }),
              (m._soundClass = S),
              (m._musicClass = S);
            var n = v.systemInfo.model,
              a = v.systemInfo.system;
            -1 != n.indexOf('iPhone') &&
              ((s.onIPhone = !0),
              (s.onIOS = !0),
              (s.onIPad = !0),
              (s.onAndroid = !1)),
              (-1 == a.indexOf('Android') && -1 == a.indexOf('Adr')) ||
                ((s.onAndroid = !0),
                (s.onIPhone = !1),
                (s.onIOS = !1),
                (s.onIPad = !1));
          }),
          (e._onStageResize = function() {
            i.stage._canvasTransform
              .identity()
              .scale(
                s.width / d.canvas.width / f.getPixelRatio(),
                s.height / d.canvas.height / f.getPixelRatio()
              );
          }),
          (e.wxinputFocus = function(t) {
            var e = c.inputElement.target;
            (e && !e.editable) ||
              (v.window.wx.offKeyboardConfirm(),
              v.window.wx.offKeyboardInput(),
              v.window.wx.showKeyboard({
                defaultValue: e.text,
                maxLength: e.maxChars,
                multiple: e.multiline,
                confirmHold: !0,
                confirmType: 'done',
                success: function(t) {},
                fail: function(t) {}
              }),
              v.window.wx.onKeyboardConfirm(function(t) {
                var i = t ? t.value : '';
                (e.text = i),
                  e.event('input'),
                  laya.wx.mini.MiniInput.inputEnter();
              }),
              v.window.wx.onKeyboardInput(function(t) {
                var i = t ? t.value : '';
                e.multiline || -1 == i.indexOf('\n')
                  ? ((e.text = i), e.event('input'))
                  : laya.wx.mini.MiniInput.inputEnter();
              }));
          }),
          (e.inputEnter = function() {
            c.inputElement.target.focus = !1;
          }),
          (e.wxinputblur = function() {
            e.hideKeyboard();
          }),
          (e.hideKeyboard = function() {
            v.window.wx.offKeyboardConfirm(),
              v.window.wx.offKeyboardInput(),
              v.window.wx.hideKeyboard({
                success: function(t) {
                  console.log('隐藏键盘');
                },
                fail: function(t) {
                  console.log('隐藏键盘出错:' + (t ? t.errMsg : ''));
                }
              });
          }),
          e
        );
      })(),
      I = (function() {
        function t() {}
        return (
          a(t, 'laya.wx.mini.MiniLocalStorage'),
          (t.__init__ = function() {
            t.items = t;
          }),
          (t.setItem = function(t, e) {
            wx.setStorageSync(t, e);
          }),
          (t.getItem = function(t) {
            return wx.getStorageSync(t);
          }),
          (t.setJSON = function(e, i) {
            t.setItem(e, i);
          }),
          (t.getJSON = function(e) {
            return t.getItem(e);
          }),
          (t.removeItem = function(t) {
            wx.removeStorageSync(t);
          }),
          (t.clear = function() {
            wx.clearStorageSync();
          }),
          (t.getStorageInfoSync = function() {
            try {
              var t = wx.getStorageInfoSync();
              return (
                console.log(t.keys),
                console.log(t.currentSize),
                console.log(t.limitSize),
                t
              );
            } catch (t) {}
            return null;
          }),
          (t.support = !0),
          (t.items = null),
          t
        );
      })(),
      C =
        ((function() {
          function t() {}
          a(t, 'laya.wx.mini.MiniLocation'),
            (t.__init__ = function() {
              (v.window.navigator.geolocation.getCurrentPosition =
                t.getCurrentPosition),
                (v.window.navigator.geolocation.watchPosition =
                  t.watchPosition),
                (v.window.navigator.geolocation.clearWatch = t.clearWatch);
            }),
            (t.getCurrentPosition = function(t, e, i) {
              var n;
              ((n = {}).success = function(e) {
                null != t && t(e);
              }),
                (n.fail = e),
                v.window.wx.getLocation(n);
            }),
            (t.watchPosition = function(e, n, a) {
              t._curID++;
              var r;
              return (
                (r = {}),
                (r.success = e),
                (r.error = n),
                (t._watchDic[t._curID] = r),
                i.timer.loop(1e3, null, t._myLoop),
                t._curID
              );
            }),
            (t.clearWatch = function(e) {
              delete t._watchDic[e],
                t._hasWatch() || i.timer.clear(null, t._myLoop);
            }),
            (t._hasWatch = function() {
              var e;
              for (e in t._watchDic) if (t._watchDic[e]) return !0;
              return !1;
            }),
            (t._myLoop = function() {
              t.getCurrentPosition(t._mySuccess, t._myError);
            }),
            (t._mySuccess = function(e) {
              var i = {};
              (i.coords = e), (i.timestamp = s.now());
              var n;
              for (n in t._watchDic)
                t._watchDic[n].success && t._watchDic[n].success(i);
            }),
            (t._myError = function(e) {
              var i;
              for (i in t._watchDic)
                t._watchDic[i].error && t._watchDic[i].error(e);
            }),
            (t._watchDic = {}),
            (t._curID = 0);
        })(),
        (function(t) {
          function e() {
            e.__super.call(this);
          }
          a(e, 'laya.wx.mini.MiniAccelerator', t);
          var i = e.prototype;
          (i.on = function(i, n, a, r) {
            return (
              t.prototype.on.call(this, i, n, a, r),
              e.startListen(this.onDeviceOrientationChange),
              this
            );
          }),
            (i.off = function(i, n, a, r) {
              return (
                void 0 === r && (r = !1),
                this.hasListener(i) || e.stopListen(),
                t.prototype.off.call(this, i, n, a, r)
              );
            }),
            (e.__init__ = function() {
              try {
                var t;
                if (!(t = laya.device.motion.Accelerator)) return;
                (t.prototype.on = e.prototype.on),
                  (t.prototype.off = e.prototype.off);
              } catch (t) {}
            }),
            (e.startListen = function(t) {
              if (((e._callBack = t), !e._isListening)) {
                e._isListening = !0;
                try {
                  wx.onAccelerometerChange(e.onAccelerometerChange);
                } catch (t) {}
              }
            }),
            (e.stopListen = function() {
              e._isListening = !1;
              try {
                wx.stopAccelerometer({});
              } catch (t) {}
            }),
            (e.onAccelerometerChange = function(t) {
              var i;
              ((i = {}).acceleration = t),
                (i.accelerationIncludingGravity = t),
                (i.rotationRate = {}),
                null != e._callBack && e._callBack(i);
            }),
            (e._isListening = !1),
            (e._callBack = null);
        })(o),
        (function(t) {
          function e() {
            e.__super.call(this);
          }
          a(e, 'laya.wx.mini.MiniLoader', o);
          return (
            (e.prototype.load = function(t, i, n, a, r) {
              void 0 === n && (n = !0), void 0 === r && (r = !1);
              if (
                ((this._url = t),
                0 === t.indexOf('data:image')
                  ? (this._type = i = 'image')
                  : (this._type = i || (i = this.getTypeFromUrl(t))),
                (this._cache = n),
                (this._data = null),
                !r && u.loadedMap[g.formatURL(t)])
              )
                return (
                  (this._data = u.loadedMap[g.formatURL(t)]),
                  this.event('progress', 1),
                  void this.event('complete', this._data)
                );
              if (null != u.parserMap[i])
                return (
                  (this._customParse = !0),
                  void (u.parserMap[i] instanceof laya.utils.Handler
                    ? u.parserMap[i].runWith(this)
                    : u.parserMap[i].call(null, this))
                );
              var s = v.getUrlEncode(t, i),
                o = y.getFileExtension(t);
              if (-1 != e._fileTypeArr.indexOf(o))
                v.EnvConfig.load.call(this, t, i, n, a, r);
              else {
                if (v.isZiYu && b.ziyuFileData[t]) {
                  var l = b.ziyuFileData[t];
                  return void this.onLoaded(l);
                }
                if (b.getFileInfo(t)) {
                  var c = b.getFileInfo(t);
                  (c.encoding = null == c.encoding ? 'ascii' : c.encoding),
                    b.readFile(
                      t,
                      c.encoding,
                      new h(e, e.onReadNativeCallBack, [
                        s,
                        t,
                        i,
                        n,
                        a,
                        r,
                        this
                      ]),
                      t
                    );
                } else {
                  if (b.isLocalNativeFile(t))
                    return void b.read(
                      t,
                      s,
                      new h(e, e.onReadNativeCallBack, [s, t, i, n, a, r, this])
                    );
                  var _ = t;
                  -1 != (t = g.formatURL(t)).indexOf('http://') ||
                  -1 != t.indexOf('https://')
                    ? v.EnvConfig.load.call(this, _, i, n, a, r)
                    : b.readFile(
                        t,
                        s,
                        new h(e, e.onReadNativeCallBack, [
                          s,
                          t,
                          i,
                          n,
                          a,
                          r,
                          this
                        ]),
                        t
                      );
                }
              }
            }),
            (e.onReadNativeCallBack = function(t, e, i, n, a, r, s, o, l) {
              if (
                (void 0 === n && (n = !0),
                void 0 === r && (r = !1),
                void 0 === o && (o = 0),
                o)
              )
                1 == o && v.EnvConfig.load.call(s, e, i, n, a, r);
              else {
                var h;
                (h =
                  'json' == i || 'atlas' == i
                    ? v.getJson(l.data)
                    : 'xml' == i
                    ? y.parseXMLFromString(l.data)
                    : l.data),
                  !v.isZiYu &&
                    v.isPosMsgYu &&
                    'arraybuffer' != i &&
                    wx.postMessage({ url: e, data: h, isLoad: 'filedata' }),
                  s.onLoaded(h);
              }
            }),
            n(e, [
              '_fileTypeArr',
              function() {
                return (this._fileTypeArr = [
                  'png',
                  'jpg',
                  'bmp',
                  'jpeg',
                  'gif'
                ]);
              }
            ]),
            e
          );
        })()),
      S = (function(t) {
        function e() {
          (this._sound = null),
            (this.url = null),
            (this.loaded = !1),
            (this.readyUrl = null),
            e.__super.call(this);
        }
        a(e, 'laya.wx.mini.MiniSound', o);
        var i = e.prototype;
        return (
          (i.load = function(t) {
            (t = g.formatURL(t)),
              (this.url = t),
              (this.readyUrl = t),
              e._audioCache[this.readyUrl]
                ? this.event('complete')
                : v.autoCacheFile && b.getFileInfo(t)
                ? this.onDownLoadCallBack(t, 0)
                : v.autoCacheFile
                ? b.downOtherFiles(
                    t,
                    h.create(this, this.onDownLoadCallBack, [t]),
                    t
                  )
                : this.onDownLoadCallBack(t, 0);
          }),
          (i.onDownLoadCallBack = function(t, i) {
            if (i) this.event('error');
            else {
              var n;
              if (v.autoCacheFile) {
                var a = b.getFileInfo(t).md5;
                (n = b.getFileNativePath(a)),
                  (this._sound = e._createSound()),
                  (this._sound.src = this.url = n);
              } else (this._sound = e._createSound()), (this._sound.src = t);
              this._sound.onCanplay(e.bindToThis(this.onCanPlay, this)),
                this._sound.onError(e.bindToThis(this.onError, this));
            }
          }),
          (i.onError = function(t) {
            try {
              console.log('-----1---------------minisound-----id:' + e._id),
                console.log(t);
            } catch (t) {
              console.log('-----2---------------minisound-----id:' + e._id),
                console.log(t);
            }
            this.event('error'), this._sound.offError(null);
          }),
          (i.onCanPlay = function() {
            (this.loaded = !0),
              this.event('complete'),
              (e._audioCache[this.readyUrl] = this),
              this._sound.offCanplay(null);
          }),
          (i.play = function(t, i) {
            void 0 === t && (t = 0), void 0 === i && (i = 0);
            var n;
            if (
              (this.url == m._tMusic
                ? (e._musicAudio || (e._musicAudio = e._createSound()),
                  (n = e._musicAudio))
                : (n = e._audioCache[this.readyUrl]
                    ? e._audioCache[this.readyUrl]._sound
                    : e._createSound()),
              v.autoCacheFile && b.getFileInfo(this.url))
            ) {
              var a = b.getFileInfo(this.url).md5;
              n.src = this.url = b.getFileNativePath(a);
            } else n.src = this.url;
            var r = new T(n, this);
            return (
              (r.url = this.url),
              (r.loops = i),
              (r.loop = 0 === i),
              (r.startTime = t),
              r.play(),
              m.addChannel(r),
              r
            );
          }),
          (i.dispose = function() {
            var t = e._audioCache[this.readyUrl];
            t &&
              ((t.src = ''),
              t._sound && (t._sound.destroy(), (t._sound = null), (t = null)),
              delete e._audioCache[this.readyUrl]);
          }),
          r(0, i, 'duration', function() {
            return this._sound.duration;
          }),
          (e._createSound = function() {
            return e._id++, v.window.wx.createInnerAudioContext();
          }),
          (e.bindToThis = function(t, e) {
            return t.bind(e);
          }),
          (e._musicAudio = null),
          (e._id = 0),
          (e._audioCache = {}),
          e
        );
      })(),
      T = (function(t) {
        function e(t, i) {
          (this._audio = null),
            (this._onEnd = null),
            (this._miniSound = null),
            e.__super.call(this),
            (this._audio = t),
            (this._miniSound = i),
            (this._onEnd = e.bindToThis(this.__onEnd, this)),
            t.onEnded(this._onEnd);
        }
        a(e, 'laya.wx.mini.MiniSoundChannel', p);
        var n = e.prototype;
        return (
          (n.__onEnd = function() {
            if (1 == this.loops)
              return (
                this.completeHandler &&
                  (i.timer.once(
                    10,
                    this,
                    this.__runComplete,
                    [this.completeHandler],
                    !1
                  ),
                  (this.completeHandler = null)),
                this.stop(),
                void this.event('complete')
              );
            this.loops > 0 && this.loops--, (this.startTime = 0), this.play();
          }),
          (n.play = function() {
            (this.isStopped = !1), m.addChannel(this), this._audio.play();
          }),
          (n.stop = function() {
            (this.isStopped = !0),
              m.removeChannel(this),
              (this.completeHandler = null),
              this._audio &&
                (this._audio.pause(),
                this._audio.offEnded(null),
                (this._audio = null),
                (this._miniSound = null),
                (this._onEnd = null));
          }),
          (n.pause = function() {
            (this.isStopped = !0), this._audio.pause();
          }),
          (n.resume = function() {
            this._audio &&
              ((this.isStopped = !1), m.addChannel(this), this._audio.play());
          }),
          r(
            0,
            n,
            'autoplay',
            function() {
              return this._audio.autoplay;
            },
            function(t) {
              this._audio.autoplay = t;
            }
          ),
          r(0, n, 'position', function() {
            return this._audio ? this._audio.currentTime : 0;
          }),
          r(0, n, 'duration', function() {
            return this._audio ? this._audio.duration : 0;
          }),
          r(
            0,
            n,
            'loop',
            function() {
              return this._audio.loop;
            },
            function(t) {
              this._audio.loop = t;
            }
          ),
          r(
            0,
            n,
            'volume',
            function() {
              return this._audio ? this._audio.volume : 1;
            },
            function(t) {
              this._audio && (this._audio.volume = t);
            }
          ),
          (e.bindToThis = function(t, e) {
            return t.bind(e);
          }),
          e
        );
      })();
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset,
      s = i.__newvec,
      o = laya.maths.Arith,
      l = laya.maths.Bezier,
      h = laya.resource.Bitmap,
      c = laya.utils.Browser,
      u = laya.utils.Byte,
      _ = laya.utils.Color,
      d = (laya.filters.ColorFilter, i.Config),
      f = laya.resource.Context,
      p = (laya.events.Event, laya.filters.Filter),
      m = laya.display.Graphics,
      g = laya.resource.HTMLCanvas,
      y = (laya.utils.HTMLChar, laya.resource.HTMLImage),
      v = laya.resource.HTMLSubImage,
      b = (laya.utils.Handler, laya.net.Loader, laya.maths.Matrix),
      w = laya.maths.Point,
      x = laya.maths.Rectangle,
      I = laya.renders.Render,
      C = (laya.renders.RenderContext, laya.renders.RenderSprite),
      S = laya.resource.Resource,
      T = laya.resource.ResourceManager,
      M = laya.utils.RunDriver,
      E = laya.display.Sprite,
      L = laya.display.Stage,
      D = laya.utils.Stat,
      A = laya.utils.StringKey,
      N = (laya.display.css.Style, laya.system.System),
      R = laya.display.Text,
      B = laya.resource.Texture,
      k = (laya.display.css.TransformInfo, laya.net.URL, laya.utils.Utils),
      P = laya.utils.VectorGraphManager;
    laya.utils.WordText;
    i.interface('laya.webgl.shapes.IShape'),
      i.interface('laya.webgl.submit.ISubmit'),
      i.interface('laya.webgl.text.ICharSegment'),
      i.interface('laya.webgl.canvas.save.ISaveData'),
      i.interface('laya.webgl.resource.IMergeAtlasBitmap'),
      i.interface('laya.filters.IFilterActionGL', 'laya.filters.IFilterAction');
    var O = (function() {
        function t() {}
        a(t, 'laya.filters.webgl.FilterActionGL');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.filters.IFilterActionGL': !0 }),
          (e.setValue = function(t) {}),
          (e.setValueMix = function(t) {}),
          (e.apply3d = function(t, e, i, n, a) {
            return null;
          }),
          (e.apply = function(t) {
            return null;
          }),
          r(0, e, 'typeMix', function() {
            return 0;
          }),
          t
        );
      })(),
      U = (function() {
        function t() {}
        return a(t, 'laya.webgl.shader.ShaderValue'), t;
      })(),
      V = (function() {
        function t(t, e, n) {
          (this._atlasID = 0),
            (this._width = 0),
            (this._height = 0),
            (this._texCount = 0),
            (this._rowInfo = null),
            (this._cells = null),
            (this._failSize = new i()),
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === n && (n = 0),
            (this._cells = null),
            (this._rowInfo = null),
            this._init(t, e),
            (this._atlasID = n);
        }
        var e, i;
        a(t, 'laya.webgl.atlas.AtlasGrid');
        var n = t.prototype;
        return (
          (n.getAltasID = function() {
            return this._atlasID;
          }),
          (n.setAltasID = function(t) {
            t >= 0 && (this._atlasID = t);
          }),
          (n.addTex = function(t, e, i) {
            var n = this._get(e, i);
            return 0 == n.ret
              ? n
              : (this._fill(n.x, n.y, e, i, t), this._texCount++, n);
          }),
          (n._release = function() {
            null != this._cells &&
              ((this._cells.length = 0), (this._cells = null)),
              this._rowInfo &&
                ((this._rowInfo.length = 0), (this._rowInfo = null));
          }),
          (n._init = function(t, i) {
            if (
              ((this._width = t),
              (this._height = i),
              this._release(),
              0 == this._width)
            )
              return !1;
            (this._cells = new Uint8Array(this._width * this._height * 3)),
              (this._rowInfo = s(this._height));
            for (var n = 0; n < this._height; n++) this._rowInfo[n] = new e();
            return this._clear(), !0;
          }),
          (n._get = function(t, e) {
            var i = new H();
            if (t >= this._failSize.width && e >= this._failSize.height)
              return i;
            for (
              var n = -1,
                a = -1,
                r = this._width,
                s = this._height,
                o = this._cells,
                l = 0;
              l < s;
              l++
            )
              if (!(this._rowInfo[l].spaceCount < t))
                for (var h = 0; h < r; ) {
                  var c = 3 * (l * r + h);
                  if (0 != o[c] || o[c + 1] < t || o[c + 2] < e) h += o[c + 1];
                  else {
                    (n = h), (a = l);
                    for (var u = 0; u < t; u++)
                      if (o[3 * u + c + 2] < e) {
                        n = -1;
                        break;
                      }
                    if (!(n < 0)) return (i.ret = !0), (i.x = n), (i.y = a), i;
                    h += o[c + 1];
                  }
                }
            return i;
          }),
          (n._fill = function(t, e, i, n, a) {
            var r = this._width,
              s = this._height;
            this._check(t + i <= r && e + n <= s);
            for (var o = e; o < n + e; ++o) {
              this._check(this._rowInfo[o].spaceCount >= i),
                (this._rowInfo[o].spaceCount -= i);
              for (var l = 0; l < i; l++) {
                var h = 3 * (t + o * r + l);
                this._check(0 == this._cells[h]),
                  (this._cells[h] = a),
                  (this._cells[h + 1] = i),
                  (this._cells[h + 2] = n);
              }
            }
            if (t > 0)
              for (o = 0; o < n; ++o) {
                var c = 0;
                for (
                  l = t - 1;
                  l >= 0 && 0 == this._cells[3 * ((e + o) * r + l)];
                  --l, ++c
                );
                for (l = c; l > 0; --l)
                  (this._cells[3 * ((e + o) * r + t - l) + 1] = l),
                    this._check(l > 0);
              }
            if (e > 0)
              for (l = t; l < t + i; ++l) {
                for (
                  c = 0, o = e - 1;
                  o >= 0 && 0 == this._cells[3 * (l + o * r)];
                  --o, c++
                );
                for (o = c; o > 0; --o)
                  (this._cells[3 * (l + (e - o) * r) + 2] = o),
                    this._check(o > 0);
              }
          }),
          (n._check = function(t) {
            0 == t && console.log('xtexMerger 错误啦');
          }),
          (n._clear = function() {
            this._texCount = 0;
            for (var t = 0; t < this._height; t++)
              this._rowInfo[t].spaceCount = this._width;
            for (var e = 0; e < this._height; e++)
              for (var i = 0; i < this._width; i++) {
                var n = 3 * (e * this._width + i);
                (this._cells[n] = 0),
                  (this._cells[n + 1] = this._width - i),
                  (this._cells[n + 2] = this._width - e);
              }
            (this._failSize.width = this._width + 1),
              (this._failSize.height = this._height + 1);
          }),
          (t.__init$ = function() {
            (e = (function() {
              function t() {
                this.spaceCount = 0;
              }
              return a(t, ''), t;
            })()),
              (i = (function() {
                function t() {
                  (this.width = 0), (this.height = 0);
                }
                return a(t, ''), t;
              })());
          }),
          t
        );
      })(),
      F = (function() {
        function t(t, e, i, n) {
          (this._currentAtlasCount = 0),
            (this._maxAtlaserCount = 0),
            (this._width = 0),
            (this._height = 0),
            (this._gridSize = 0),
            (this._gridNumX = 0),
            (this._gridNumY = 0),
            (this._init = !1),
            (this._curAtlasIndex = 0),
            (this._setAtlasParam = !1),
            (this._atlaserArray = null),
            (this._needGC = !1),
            (this._setAtlasParam = !0),
            (this._width = t),
            (this._height = e),
            (this._gridSize = i),
            (this._maxAtlaserCount = n),
            (this._gridNumX = t / i),
            (this._gridNumY = e / i),
            (this._curAtlasIndex = 0),
            (this._atlaserArray = []);
        }
        a(t, 'laya.webgl.atlas.AtlasResourceManager');
        var e = t.prototype;
        return (
          (e.setAtlasParam = function(e, i, n, a) {
            if (1 == this._setAtlasParam)
              return (
                (t._sid_ = 0),
                (this._width = e),
                (this._height = i),
                (this._gridSize = n),
                (this._maxAtlaserCount = a),
                (this._gridNumX = e / n),
                (this._gridNumY = i / n),
                (this._curAtlasIndex = 0),
                this.freeAll(),
                !0
              );
            throw (console.log(
              '设置大图合集参数错误，只能在开始页面设置各种参数'
            ),
            -1);
          }),
          (e.pushData = function(e) {
            var i = e.bitmap,
              n = -1,
              a = null,
              r = 0,
              s = 0,
              o = 0;
            for (
              r = 0, s = this._atlaserArray.length;
              r < s &&
              ((o = (this._curAtlasIndex + r) % s),
              (a = this._atlaserArray[o]),
              -1 == (n = a.findBitmapIsExist(i)));
              r++
            );
            if (-1 != n) {
              var l = a.InAtlasWebGLImagesOffsetValue[n];
              return (p = l[0]), (m = l[1]), a.addToAtlas(e, p, m), !0;
            }
            this._setAtlasParam = !1;
            for (
              var h = Math.ceil((e.bitmap.width + 2) / this._gridSize),
                c = Math.ceil((e.bitmap.height + 2) / this._gridSize),
                u = !1,
                _ = 0;
              _ < 2;
              _++
            ) {
              var d = this._maxAtlaserCount;
              for (r = 0; r < d; r++) {
                (o = (this._curAtlasIndex + r) % d),
                  this._atlaserArray.length - 1 >= o ||
                    this._atlaserArray.push(
                      new Mt(
                        this._gridNumX,
                        this._gridNumY,
                        this._width,
                        this._height,
                        t._sid_++
                      )
                    );
                var f = this._atlaserArray[o],
                  p = 0,
                  m = 0,
                  g = f.addTex(1, h, c);
                if (g.ret) {
                  (p = g.x * this._gridSize + 1),
                    (m = g.y * this._gridSize + 1),
                    (i.lock = !0),
                    f.addToAtlasTexture(i, p, m),
                    f.addToAtlas(e, p, m),
                    (u = !0),
                    (this._curAtlasIndex = o);
                  break;
                }
              }
              if (u) break;
              this._atlaserArray.push(
                new Mt(
                  this._gridNumX,
                  this._gridNumY,
                  this._width,
                  this._height,
                  t._sid_++
                )
              ),
                (this._needGC = !0),
                this.garbageCollection(),
                (this._curAtlasIndex = this._atlaserArray.length - 1);
            }
            return u || console.log('>>>AtlasManager pushData error'), u;
          }),
          (e.addToAtlas = function(t) {
            laya.webgl.atlas.AtlasResourceManager.instance.pushData(t);
          }),
          (e.garbageCollection = function() {
            if (!0 === this._needGC) {
              for (
                var t = this._atlaserArray.length - this._maxAtlaserCount,
                  e = 0;
                e < t;
                e++
              )
                this._atlaserArray[e].dispose(),
                  console.log('AtlasResourceManager:Dispose the inner Atlas。');
              console.log('>>>>altas garbageCollection =' + t),
                this._atlaserArray.splice(0, t),
                (this._needGC = !1);
            }
            return !0;
          }),
          (e.freeAll = function() {
            for (var t = 0, e = this._atlaserArray.length; t < e; t++)
              this._atlaserArray[t].dispose();
            (this._atlaserArray.length = 0), (this._curAtlasIndex = 0);
          }),
          (e.getAtlaserCount = function() {
            return this._atlaserArray.length;
          }),
          (e.getAtlaserByIndex = function(t) {
            return this._atlaserArray[t];
          }),
          r(1, t, 'instance', function() {
            return (
              t._Instance ||
                (t._Instance = new t(
                  laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth,
                  laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight,
                  16,
                  laya.webgl.atlas.AtlasResourceManager.maxTextureCount
                )),
              t._Instance
            );
          }),
          r(1, t, 'enabled', function() {
            return d.atlasEnable;
          }),
          r(
            1,
            t,
            'atlasLimitWidth',
            function() {
              return t._atlasLimitWidth;
            },
            function(e) {
              t._atlasLimitWidth = e;
            }
          ),
          r(
            1,
            t,
            'atlasLimitHeight',
            function() {
              return t._atlasLimitHeight;
            },
            function(e) {
              t._atlasLimitHeight = e;
            }
          ),
          (t._enable = function() {
            d.atlasEnable = !0;
          }),
          (t._disable = function() {
            d.atlasEnable = !1;
          }),
          (t.__init__ = function() {
            (t.atlasTextureWidth = 2048),
              (t.atlasTextureHeight = 2048),
              (t.maxTextureCount = 6),
              (t.atlasLimitWidth = 512),
              (t.atlasLimitHeight = 512);
          }),
          (t._atlasLimitWidth = 0),
          (t._atlasLimitHeight = 0),
          (t.gridSize = 16),
          (t.atlasTextureWidth = 0),
          (t.atlasTextureHeight = 0),
          (t.maxTextureCount = 0),
          (t._atlasRestore = 0),
          (t.BOARDER_TYPE_NO = 0),
          (t.BOARDER_TYPE_RIGHT = 1),
          (t.BOARDER_TYPE_LEFT = 2),
          (t.BOARDER_TYPE_BOTTOM = 4),
          (t.BOARDER_TYPE_TOP = 8),
          (t.BOARDER_TYPE_ALL = 15),
          (t._sid_ = 0),
          (t._Instance = null),
          t
        );
      })(),
      H = (function() {
        function t() {
          (this.x = 0),
            (this.y = 0),
            (this.ret = !1),
            (this.ret = !1),
            (this.x = 0),
            (this.y = 0);
        }
        return a(t, 'laya.webgl.atlas.MergeFillInfo'), t;
      })(),
      G = (function() {
        function t() {}
        return (
          a(t, 'laya.webgl.canvas.BlendMode'),
          (t._init_ = function(e) {
            (t.fns = [
              t.BlendNormal,
              t.BlendAdd,
              t.BlendMultiply,
              t.BlendScreen,
              t.BlendOverlay,
              t.BlendLight,
              t.BlendMask,
              t.BlendDestinationOut
            ]),
              (t.targetFns = [
                t.BlendNormalTarget,
                t.BlendAddTarget,
                t.BlendMultiplyTarget,
                t.BlendScreenTarget,
                t.BlendOverlayTarget,
                t.BlendLightTarget,
                t.BlendMask,
                t.BlendDestinationOut
              ]);
          }),
          (t.BlendNormal = function(t) {
            t.blendFunc(1, 771);
          }),
          (t.BlendAdd = function(t) {
            t.blendFunc(1, 772);
          }),
          (t.BlendMultiply = function(t) {
            t.blendFunc(774, 771);
          }),
          (t.BlendScreen = function(t) {
            t.blendFunc(1, 1);
          }),
          (t.BlendOverlay = function(t) {
            t.blendFunc(1, 769);
          }),
          (t.BlendLight = function(t) {
            t.blendFunc(1, 1);
          }),
          (t.BlendNormalTarget = function(t) {
            t.blendFunc(1, 771);
          }),
          (t.BlendAddTarget = function(t) {
            t.blendFunc(1, 772);
          }),
          (t.BlendMultiplyTarget = function(t) {
            t.blendFunc(774, 771);
          }),
          (t.BlendScreenTarget = function(t) {
            t.blendFunc(1, 1);
          }),
          (t.BlendOverlayTarget = function(t) {
            t.blendFunc(1, 769);
          }),
          (t.BlendLightTarget = function(t) {
            t.blendFunc(1, 1);
          }),
          (t.BlendMask = function(t) {
            t.blendFunc(0, 770);
          }),
          (t.BlendDestinationOut = function(t) {
            t.blendFunc(0, 0);
          }),
          (t.activeBlendFunction = null),
          (t.NAMES = [
            'normal',
            'add',
            'multiply',
            'screen',
            'overlay',
            'light',
            'mask',
            'destination-out'
          ]),
          (t.TOINT = {
            normal: 0,
            add: 1,
            multiply: 2,
            screen: 3,
            lighter: 1,
            overlay: 4,
            light: 5,
            mask: 6,
            'destination-out': 7
          }),
          (t.NORMAL = 'normal'),
          (t.ADD = 'add'),
          (t.MULTIPLY = 'multiply'),
          (t.SCREEN = 'screen'),
          (t.LIGHT = 'light'),
          (t.OVERLAY = 'overlay'),
          (t.DESTINATIONOUT = 'destination-out'),
          (t.fns = []),
          (t.targetFns = []),
          t
        );
      })(),
      z = (function() {
        function t(t) {
          (this._color = _.create('black')), this.setValue(t);
        }
        a(t, 'laya.webgl.canvas.DrawStyle');
        var e = t.prototype;
        return (
          (e.setValue = function(t) {
            if (t) {
              if ('string' == typeof t) return void (this._color = _.create(t));
              if (t instanceof laya.utils.Color) return void (this._color = t);
            }
          }),
          (e.reset = function() {
            this._color = _.create('black');
          }),
          (e.equal = function(t) {
            return 'string' == typeof t
              ? this._color.strColor === t
              : t instanceof laya.utils.Color &&
                  this._color.numColor === t.numColor;
          }),
          (e.toColorStr = function() {
            return this._color.strColor;
          }),
          (t.create = function(e) {
            if (e) {
              var i;
              if (
                ('string' == typeof e
                  ? (i = _.create(e))
                  : e instanceof laya.utils.Color && (i = e),
                i)
              )
                return i._drawStyle || (i._drawStyle = new t(e));
            }
            return laya.webgl.canvas.DrawStyle.DEFAULT;
          }),
          n(t, [
            'DEFAULT',
            function() {
              return (this.DEFAULT = new t('#000000'));
            }
          ]),
          t
        );
      })(),
      j = (function() {
        function t() {
          (this._x = 0),
            (this._y = 0),
            (this.dirty = !1),
            (this.offset = 0),
            (this.count = 0),
            (this.geoStart = 0),
            (this.tempArray = []),
            (this.closePath = !1),
            (this.geomatrys = []);
          bt.mainContext;
          (this.ib = Qt.create(35048)), (this.vb = $t.create(5));
        }
        a(t, 'laya.webgl.canvas.Path');
        var e = t.prototype;
        return (
          (e.addPoint = function(t, e) {
            this.tempArray.push(t, e);
          }),
          (e.getEndPointX = function() {
            return this.tempArray[this.tempArray.length - 2];
          }),
          (e.getEndPointY = function() {
            return this.tempArray[this.tempArray.length - 1];
          }),
          (e.polygon = function(t, e, i, n, a, r) {
            var s;
            return (
              this.geomatrys.push(
                (this._curGeomatry = s = new At(t, e, i, n, a, r))
              ),
              n || (s.fill = !1),
              void 0 == r && (s.borderWidth = 0),
              s
            );
          }),
          (e.setGeomtry = function(t) {
            this.geomatrys.push((this._curGeomatry = t));
          }),
          (e.drawLine = function(t, e, i, n, a) {
            var r;
            return (
              this.closePath
                ? this.geomatrys.push(
                    (this._curGeomatry = r = new Dt(t, e, i, n, a))
                  )
                : this.geomatrys.push(
                    (this._curGeomatry = r = new Lt(t, e, i, n, a))
                  ),
              (r.fill = !1),
              r
            );
          }),
          (e.update = function() {
            var t = this.ib._byteLength,
              e = this.geomatrys.length;
            this.offset = t;
            for (var i = this.geoStart; i < e; i++)
              this.geomatrys[i].getData(
                this.ib,
                this.vb,
                this.vb._byteLength / 20
              );
            (this.geoStart = e),
              (this.count = (this.ib._byteLength - t) / pt.BYTES_PIDX);
          }),
          (e.reset = function() {
            this.vb.clear(),
              this.ib.clear(),
              (this.offset = this.count = this.geoStart = 0),
              (this.geomatrys.length = 0);
          }),
          (e.recover = function() {
            (this._curGeomatry = null),
              this.vb.destory(),
              (this.vb = null),
              this.ib.destory(),
              (this.ib = null);
          }),
          t
        );
      })(),
      W = (function() {
        function t() {}
        a(t, 'laya.webgl.canvas.save.SaveBase');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.canvas.save.ISaveData': !0 }),
          (e.isSaveMark = function() {
            return !1;
          }),
          (e.restore = function(e) {
            (this._dataObj[this._valueName] = this._value),
              (t._cache[t._cache._length++] = this),
              this._newSubmit &&
                ((e._curSubmit = rt.RENDERBASE), (e._renderKey = 0));
          }),
          (t._createArray = function() {
            var t = [];
            return (t._length = 0), t;
          }),
          (t._init = function() {
            var e = (t._namemap = {});
            return (
              (e[1] = 'ALPHA'),
              (e[2] = 'fillStyle'),
              (e[8] = 'font'),
              (e[256] = 'lineWidth'),
              (e[512] = 'strokeStyle'),
              (e[8192] = '_mergeID'),
              (e[1024] = e[2048] = e[4096] = []),
              (e[16384] = 'textBaseline'),
              (e[32768] = 'textAlign'),
              (e[65536] = '_nBlendType'),
              (e[1048576] = 'shader'),
              (e[2097152] = 'filters'),
              e
            );
          }),
          (t.save = function(e, i, n, a) {
            if ((e._saveMark._saveuse & i) !== i) {
              e._saveMark._saveuse |= i;
              var r = t._cache,
                s = r._length > 0 ? r[--r._length] : new t();
              (s._value = n[(s._valueName = t._namemap[i])]),
                (s._dataObj = n),
                (s._newSubmit = a);
              var o = e._save;
              o[o._length++] = s;
            }
          }),
          (t._cache = laya.webgl.canvas.save.SaveBase._createArray()),
          (t._namemap = t._init()),
          t
        );
      })(),
      X = (function() {
        function t() {
          this._clipRect = new x();
        }
        a(t, 'laya.webgl.canvas.save.SaveClipRect');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.canvas.save.ISaveData': !0 }),
          (e.isSaveMark = function() {
            return !1;
          }),
          (e.restore = function(e) {
            (e._clipRect = this._clipSaveRect),
              (t._cache[t._cache._length++] = this),
              (this._submitScissor.submitLength =
                e._submits._length - this._submitScissor.submitIndex),
              (e._curSubmit = rt.RENDERBASE),
              (e._renderKey = 0);
          }),
          (t.save = function(e, i) {
            if (131072 != (131072 & e._saveMark._saveuse)) {
              e._saveMark._saveuse |= 131072;
              var n = t._cache,
                a = n._length > 0 ? n[--n._length] : new t();
              (a._clipSaveRect = e._clipRect),
                (e._clipRect = a._clipRect.copyFrom(e._clipRect)),
                (a._submitScissor = i);
              var r = e._save;
              r[r._length++] = a;
            }
          }),
          n(t, [
            '_cache',
            function() {
              return (this._cache = W._createArray());
            }
          ]),
          t
        );
      })(),
      q = (function() {
        function t() {
          (this._contextX = 0),
            (this._contextY = 0),
            (this._clipRect = new x()),
            (this._rect = new x()),
            (this._matrix = new b());
        }
        a(t, 'laya.webgl.canvas.save.SaveClipRectStencil');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.canvas.save.ISaveData': !0 }),
          (e.isSaveMark = function() {
            return !1;
          }),
          (e.restore = function(e) {
            ct.restore(
              e,
              this._rect,
              this._saveMatrix,
              this._contextX,
              this._contextY
            ),
              (e._clipRect = this._clipSaveRect),
              (e._curMat = this._saveMatrix),
              (e._x = this._contextX),
              (e._y = this._contextY),
              (t._cache[t._cache._length++] = this),
              (e._curSubmit = rt.RENDERBASE);
          }),
          (t.save = function(e, i, n, a, r, s, o, l, h, c) {
            if (262144 != (262144 & e._saveMark._saveuse)) {
              e._saveMark._saveuse |= 262144;
              var u = t._cache,
                _ = u._length > 0 ? u[--u._length] : new t();
              (_._clipSaveRect = e._clipRect),
                _._clipRect.setTo(o, l, h, c),
                (e._clipRect = _._clipRect),
                (_._rect.x = n),
                (_._rect.y = a),
                (_._rect.width = r),
                (_._rect.height = s),
                (_._contextX = e._x),
                (_._contextY = e._y),
                (_._saveMatrix = e._curMat),
                e._curMat.copyTo(_._matrix),
                (e._curMat = _._matrix),
                (_._submitStencil = i);
              var d = e._save;
              d[d._length++] = _;
            }
          }),
          n(t, [
            '_cache',
            function() {
              return (this._cache = W._createArray());
            }
          ]),
          t
        );
      })(),
      Y = (function() {
        function t() {
          this._saveuse = 0;
        }
        a(t, 'laya.webgl.canvas.save.SaveMark');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.canvas.save.ISaveData': !0 }),
          (e.isSaveMark = function() {
            return !0;
          }),
          (e.restore = function(e) {
            (e._saveMark = this._preSaveMark), (t._no[t._no._length++] = this);
          }),
          (t.Create = function(e) {
            var i = t._no,
              n = i._length > 0 ? i[--i._length] : new t();
            return (
              (n._saveuse = 0),
              (n._preSaveMark = e._saveMark),
              (e._saveMark = n),
              n
            );
          }),
          n(t, [
            '_no',
            function() {
              return (this._no = W._createArray());
            }
          ]),
          t
        );
      })(),
      J = (function() {
        function t() {
          this._matrix = new b();
        }
        a(t, 'laya.webgl.canvas.save.SaveTransform');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.canvas.save.ISaveData': !0 }),
          (e.isSaveMark = function() {
            return !1;
          }),
          (e.restore = function(e) {
            (e._curMat = this._savematrix), (t._no[t._no._length++] = this);
          }),
          (t.save = function(e) {
            var i = e._saveMark;
            if (2048 != (2048 & i._saveuse)) {
              i._saveuse |= 2048;
              var n = t._no,
                a = n._length > 0 ? n[--n._length] : new t();
              (a._savematrix = e._curMat),
                (e._curMat = e._curMat.copyTo(a._matrix));
              var r = e._save;
              r[r._length++] = a;
            }
          }),
          n(t, [
            '_no',
            function() {
              return (this._no = W._createArray());
            }
          ]),
          t
        );
      })(),
      K = (function() {
        function t() {}
        a(t, 'laya.webgl.canvas.save.SaveTranslate');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.canvas.save.ISaveData': !0 }),
          (e.isSaveMark = function() {
            return !1;
          }),
          (e.restore = function(e) {
            e._curMat;
            (e._x = this._x), (e._y = this._y), (t._no[t._no._length++] = this);
          }),
          (t.save = function(e) {
            var i = t._no,
              n = i._length > 0 ? i[--i._length] : new t();
            (n._x = e._x), (n._y = e._y);
            var a = e._save;
            a[a._length++] = n;
          }),
          n(t, [
            '_no',
            function() {
              return (this._no = W._createArray());
            }
          ]),
          t
        );
      })(),
      Z = (function() {
        function t() {
          (this.target = null),
            (this.repaint = !1),
            (this._width = NaN),
            (this._height = NaN),
            (this._sp = null),
            (this._clipRect = new x());
        }
        a(t, 'laya.webgl.resource.RenderTargetMAX');
        var e = t.prototype;
        return (
          (e.setSP = function(t) {
            this._sp = t;
          }),
          (e.size = function(t, e) {
            var n = this;
            this._width !== t || this._height !== e
              ? ((this.repaint = !0),
                (this._width = t),
                (this._height = e),
                this.target
                  ? this.target.size(t, e)
                  : (this.target = Pt.create(t, e)),
                this.target.hasListener('recovered') ||
                  this.target.on('recovered', this, function(t) {
                    i.timer.callLater(n._sp, n._sp.repaint);
                  }))
              : this.target.size(t, e);
          }),
          (e._flushToTarget = function(t, e) {
            if (!e._destroy) {
              var i = yt.worldScissorTest,
                n = yt.worldClipRect;
              (yt.worldClipRect = this._clipRect),
                (this._clipRect.x = this._clipRect.y = 0),
                (this._clipRect.width = this._width),
                (this._clipRect.height = this._height),
                (yt.worldScissorTest = !1),
                bt.mainContext.disable(3089);
              var a = yt.worldAlpha,
                r = yt.worldMatrix4,
                s = yt.worldMatrix,
                o = yt.worldFilters,
                l = yt.worldShaderDefines;
              if (
                ((yt.worldMatrix = b.EMPTY),
                yt.restoreTempArray(),
                (yt.worldMatrix4 = yt.TEMPMAT4_ARRAY),
                (yt.worldAlpha = 1),
                (yt.worldFilters = null),
                (yt.worldShaderDefines = null),
                (kt.activeShader = null),
                e.start(),
                d.showCanvasMark ? e.clear(0, 1, 0, 0.3) : e.clear(0, 0, 0, 0),
                t.flush(),
                e.end(),
                (kt.activeShader = null),
                (yt.worldAlpha = a),
                (yt.worldMatrix4 = r),
                (yt.worldMatrix = s),
                (yt.worldFilters = o),
                (yt.worldShaderDefines = l),
                (yt.worldScissorTest = i),
                i)
              ) {
                var h = yt.height - n.y - n.height;
                bt.mainContext.scissor(n.x, h, n.width, n.height),
                  bt.mainContext.enable(3089);
              }
              yt.worldClipRect = n;
            }
          }),
          (e.flush = function(t) {
            this.repaint &&
              (this._flushToTarget(t, this.target), (this.repaint = !1));
          }),
          (e.drawTo = function(t, e, i, n, a) {
            t.drawTexture(this.target.getTexture(), e, i, n, a, 0, 0);
          }),
          (e.destroy = function() {
            this.target &&
              (this.target.destroy(), (this.target = null), (this._sp = null));
          }),
          t
        );
      })(),
      Q = (function() {
        function t() {
          (this.ALPHA = 1), (this.shaderType = 0), (this.defines = new Et());
        }
        a(t, 'laya.webgl.shader.d2.Shader2D');
        return (
          (t.prototype.destroy = function() {
            (this.defines = null),
              (this.filters = null),
              (this.glTexture = null),
              (this.strokeStyle = null),
              (this.fillStyle = null);
          }),
          (t.__init__ = function() {
            Yt.addInclude(
              'parts/ColorFilter_ps_uniform.glsl',
              'uniform vec4 colorAlpha;\nuniform mat4 colorMat;'
            ),
              Yt.addInclude(
                'parts/ColorFilter_ps_logic.glsl',
                'mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n'
              ),
              Yt.addInclude(
                'parts/GlowFilter_ps_uniform.glsl',
                'uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;'
              ),
              Yt.addInclude(
                'parts/GlowFilter_ps_logic.glsl',
                'const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;'
              ),
              Yt.addInclude(
                'parts/BlurFilter_ps_logic.glsl',
                'gl_FragColor =   blur();\ngl_FragColor.w*=alpha;'
              ),
              Yt.addInclude(
                'parts/BlurFilter_ps_uniform.glsl',
                'uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}'
              ),
              Yt.addInclude(
                'parts/ColorAdd_ps_uniform.glsl',
                'uniform vec4 colorAdd;\n'
              ),
              Yt.addInclude(
                'parts/ColorAdd_ps_logic.glsl',
                'gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;'
              );
            var t, e;
            (t =
              'attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}'),
              (e =
                'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}'),
              Yt.preCompile2D(0, 1, t, e, null),
              (t =
                'attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}'),
              (e =
                'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}'),
              Yt.preCompile2D(0, 2, t, e, null),
              (t =
                'attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}'),
              (e =
                'precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}'),
              Yt.preCompile2D(0, 4, t, e, null),
              (t =
                'attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}'),
              (e =
                '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}'),
              Yt.preCompile2D(0, 256, t, e, null),
              (t =
                'attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}'),
              (e =
                'precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}'),
              Yt.preCompile2D(0, 512, t, e, null);
          }),
          t
        );
      })(),
      $ = (function() {
        function t(t, e, i) {
          (this._value = 0),
            (this._name2int = t),
            (this._int2name = e),
            (this._int2nameMap = i);
        }
        a(t, 'laya.webgl.shader.ShaderDefines');
        var e = t.prototype;
        return (
          (e.add = function(t) {
            return (
              'string' == typeof t && (t = this._name2int[t]),
              (this._value |= t),
              this._value
            );
          }),
          (e.addInt = function(t) {
            return (this._value |= t), this._value;
          }),
          (e.remove = function(t) {
            return (
              'string' == typeof t && (t = this._name2int[t]),
              (this._value &= ~t),
              this._value
            );
          }),
          (e.isDefine = function(t) {
            return (this._value & t) === t;
          }),
          (e.getValue = function() {
            return this._value;
          }),
          (e.setValue = function(t) {
            this._value = t;
          }),
          (e.toNameDic = function() {
            var e = this._int2nameMap[this._value];
            return (
              e || t._toText(this._value, this._int2name, this._int2nameMap)
            );
          }),
          (t._reg = function(t, e, i, n) {
            (i[t] = e), (n[e] = t);
          }),
          (t._toText = function(t, e, i) {
            var n = i[t];
            if (n) return n;
            for (var a = {}, r = 1, s = 0; s < 32 && !((r = 1 << s) > t); s++)
              if (t & r) {
                var o = e[r];
                o && (a[o] = '');
              }
            return (i[t] = a), a;
          }),
          (t._toInt = function(t, e) {
            for (var i = t.split('.'), n = 0, a = 0, r = i.length; a < r; a++) {
              var s = e[i[a]];
              if (!s) throw new Error('Defines to int err:' + t + '/' + i[a]);
              n |= s;
            }
            return n;
          }),
          t
        );
      })(),
      tt = (function() {
        function t() {
          (this.mVBBuffer = null),
            (this.mIBBuffer = null),
            (this.mVBData = null),
            (this.mIBData = null),
            (this.mEleNum = 0),
            (this.mTexture = null),
            (this.transform = null),
            (this._vs = null),
            (this._ps = null),
            (this._indexStart = -1),
            (this._verticles = null),
            (this._uvs = null),
            (this._tempMatrix = new b());
        }
        a(t, 'laya.webgl.shader.d2.skinAnishader.SkinMesh');
        var e = t.prototype;
        return (
          (e.init = function(e, i, n) {
            if (i) this._vs = i;
            else {
              this._vs = [];
              var a = e.width,
                r = e.height;
              this._vs.push(0, 0, 0, 0, 1, 1, 1, 1),
                this._vs.push(a, 0, 1, 0, 1, 1, 1, 1),
                this._vs.push(a, r, 1, 1, 1, 1, 1, 1),
                this._vs.push(0, r, 0, 1, 1, 1, 1, 1);
            }
            n
              ? (this._ps = n)
              : (t._defaultPS || (t._defaultPS = []).push(0, 1, 3, 3, 1, 2),
                (this._ps = t._defaultPS)),
              (this.mVBData = new Float32Array(this._vs)),
              (this.mIBData = new Uint16Array(this._ps.length)),
              (this.mIBData.start = -1),
              (this.mEleNum = this._ps.length),
              (this.mTexture = e);
          }),
          (e.init2 = function(t, e, i, n, a) {
            this.transform && (this.transform = null),
              i
                ? (this._ps = i)
                : ((this._ps = []), this._ps.push(0, 1, 3, 3, 1, 2)),
              (this._verticles = n),
              (this._uvs = a),
              (this.mEleNum = this._ps.length),
              (this.mTexture = t),
              (I.isConchNode || I.isConchApp) &&
                (this._initMyData(),
                (this.mVBData = new Float32Array(this._vs)));
          }),
          (e._initMyData = function() {
            var e = 0,
              i = 0,
              n = 4 * this._verticles.length;
            this._vs = t._tempVS;
            var a = !1;
            if (
              (I.isConchNode || I.isConchApp
                ? ((this._vs.length = n), (a = !0))
                : this._vs.length < n && ((this._vs.length = n), (a = !0)),
              (t._tVSLen = n),
              a)
            )
              for (; e < n; )
                (this._vs[e] = this._verticles[i]),
                  (this._vs[e + 1] = this._verticles[i + 1]),
                  (this._vs[e + 2] = this._uvs[i]),
                  (this._vs[e + 3] = this._uvs[i + 1]),
                  (this._vs[e + 4] = 1),
                  (this._vs[e + 5] = 1),
                  (this._vs[e + 6] = 1),
                  (this._vs[e + 7] = 1),
                  (e += 8),
                  (i += 2);
            else
              for (; e < n; )
                (this._vs[e] = this._verticles[i]),
                  (this._vs[e + 1] = this._verticles[i + 1]),
                  (this._vs[e + 2] = this._uvs[i]),
                  (this._vs[e + 3] = this._uvs[i + 1]),
                  (e += 8),
                  (i += 2);
          }),
          (e.getData2 = function(e, i, n) {
            (this.mVBBuffer = e),
              (this.mIBBuffer = i),
              this._initMyData(),
              e.appendEx2(this._vs, Float32Array, t._tVSLen, 4),
              (this._indexStart = i._byteLength);
            var a;
            (a = t._tempIB).length < this._ps.length &&
              (a.length = this._ps.length);
            for (var r = 0, s = this._ps.length; r < s; r++)
              a[r] = this._ps[r] + n;
            i.appendEx2(a, Uint16Array, this._ps.length, 2);
          }),
          (e.getData = function(t, e, i) {
            if (
              ((this.mVBBuffer = t),
              (this.mIBBuffer = e),
              t.append(this.mVBData),
              (this._indexStart = e._byteLength),
              this.mIBData.start != i)
            ) {
              for (var n = 0, a = this._ps.length; n < a; n++)
                this.mIBData[n] = this._ps[n] + i;
              this.mIBData.start = i;
            }
            e.append(this.mIBData);
          }),
          (e.render = function(t, e, i) {
            if (I.isWebGL && this.mTexture) {
              (t._renderKey = 0),
                (t._shader2D.glTexture = null),
                et.getInstance().addSkinMesh(this);
              var n = rt.createShape(
                t,
                this.mIBBuffer,
                this.mVBBuffer,
                this.mEleNum,
                this._indexStart,
                Ct.create(512, 0)
              );
              this.transform || (this.transform = b.EMPTY),
                this.transform.translate(e, i),
                b.mul(this.transform, t._curMat, this._tempMatrix),
                this.transform.translate(-e, -i);
              var a = n.shaderValue,
                r = a.u_mmat2 || yt.getMatrArray();
              yt.mat2MatArray(this._tempMatrix, r),
                (a.textureHost = this.mTexture),
                (a.offsetX = 0),
                (a.offsetY = 0),
                (a.u_mmat2 = r),
                (a.ALPHA = t._shader2D.ALPHA),
                (t._submits[t._submits._length++] = n);
            } else
              I.isConchApp &&
                this.mTexture &&
                (this.transform || (this.transform = b.EMPTY),
                t.setSkinMesh &&
                  t.setSkinMesh(
                    e,
                    i,
                    this._ps,
                    this.mVBData,
                    this.mEleNum,
                    0,
                    this.mTexture,
                    this.transform
                  ));
          }),
          (t._tempVS = []),
          (t._tempIB = []),
          (t._defaultPS = null),
          (t._tVSLen = 0),
          t
        );
      })(),
      et = (function() {
        function t() {
          (this.ib = null), (this.vb = null);
          bt.mainContext;
          (this.ib = Qt.create(35048)), (this.vb = $t.create(8));
        }
        a(t, 'laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer');
        var e = t.prototype;
        return (
          (e.addSkinMesh = function(t) {
            t.getData2(this.vb, this.ib, this.vb._byteLength / 32);
          }),
          (e.reset = function() {
            this.vb.clear(), this.ib.clear();
          }),
          (t.getInstance = function() {
            return (t.instance = t.instance || new t());
          }),
          (t.instance = null),
          t
        );
      })(),
      it = (function() {
        function t(t, e, i, n, a, r, s, o, l) {
          (this.r0 = 0),
            (this.fill = !0),
            (this.r1 = Math.PI / 2),
            void 0 === l && (l = 0),
            (this.x = t),
            (this.y = e),
            (this.width = i),
            (this.height = n),
            (this.edges = a),
            (this.color = r),
            (this.borderWidth = s),
            (this.borderColor = o);
        }
        a(t, 'laya.webgl.shapes.BasePoly');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.shapes.IShape': !0 }),
          (e.getData = function(t, e, i) {}),
          (e.rebuild = function(t) {}),
          (e.setMatrix = function(t) {}),
          (e.needUpdate = function(t) {
            return !0;
          }),
          (e.sector = function(t, e, i) {
            var n = this.x,
              a = this.y,
              r = this.edges,
              s = (this.r1 - this.r0) / r,
              o = this.width,
              l = this.height,
              h = this.color,
              c = ((h >> 16) & 255) / 255,
              u = ((h >> 8) & 255) / 255,
              _ = (255 & h) / 255;
            t.push(n, a, c, u, _);
            for (var d = 0; d < r + 1; d++)
              t.push(
                n + Math.sin(s * d + this.r0) * o,
                a + Math.cos(s * d + this.r0) * l
              ),
                t.push(c, u, _);
            for (d = 0; d < r; d++) e.push(i, i + d + 1, i + d + 2);
          }),
          (e.createLine2 = function(t, e, i, n, a, r) {
            var s,
              o,
              l,
              h,
              c,
              u,
              _,
              d,
              f,
              p,
              m,
              g,
              y,
              v,
              b,
              w,
              x,
              I,
              C,
              S,
              T = t.concat(),
              M = a,
              E = this.borderColor,
              L = ((E >> 16) & 255) / 255,
              D = ((E >> 8) & 255) / 255,
              A = (255 & E) / 255,
              N = T.length / 2,
              R = n,
              B = i / 2;
            (l = T[0]),
              (h = T[1]),
              (p = l - (c = T[2])),
              (f =
                ((f = -(h - (u = T[3]))) / (S = Math.sqrt(f * f + p * p))) * B),
              (p = (p / S) * B),
              M.push(
                l - f + this.x,
                h - p + this.y,
                L,
                D,
                A,
                l + f + this.x,
                h + p + this.y,
                L,
                D,
                A
              );
            for (var k = 1; k < N - 1; k++)
              (l = T[2 * (k - 1)]),
                (h = T[2 * (k - 1) + 1]),
                (c = T[2 * k]),
                (u = T[2 * k + 1]),
                (_ = T[2 * (k + 1)]),
                (d = T[2 * (k + 1) + 1]),
                (p = l - c),
                (g = c - _),
                (b =
                  (-(f =
                    ((f = -(h - u)) / (S = Math.sqrt(f * f + p * p))) * B) +
                    l) *
                    (-(p = (p / S) * B) + u) -
                  (-f + c) * (-p + h)),
                (I =
                  (-(m =
                    ((m = -(u - d)) / (S = Math.sqrt(m * m + g * g))) * B) +
                    _) *
                    (-(g = (g / S) * B) + u) -
                  (-m + c) * (-g + d)),
                (C =
                  (y = -p + h - (-p + u)) * (x = -m + c - (-m + _)) -
                  (w = -g + d - (-g + u)) * (v = -f + c - (-f + l))),
                Math.abs(C) < 0.1
                  ? ((C += 10.1),
                    M.push(
                      c - f + this.x,
                      u - p + this.y,
                      L,
                      D,
                      A,
                      c + f + this.x,
                      u + p + this.y,
                      L,
                      D,
                      A
                    ))
                  : (((s = (v * I - x * b) / C) - c) * (s - c) +
                      ((o = (w * b - y * I) / C) - u) +
                      (o - u),
                    M.push(
                      s + this.x,
                      o + this.y,
                      L,
                      D,
                      A,
                      c - (s - c) + this.x,
                      u - (o - u) + this.y,
                      L,
                      D,
                      A
                    ));
            (l = T[T.length - 4]),
              (h = T[T.length - 3]),
              (p = l - (c = T[T.length - 2])),
              (f =
                ((f = -(h - (u = T[T.length - 1]))) /
                  (S = Math.sqrt(f * f + p * p))) *
                B),
              (p = (p / S) * B),
              M.push(
                c - f + this.x,
                u - p + this.y,
                L,
                D,
                A,
                c + f + this.x,
                u + p + this.y,
                L,
                D,
                A
              );
            var P = r;
            for (k = 1; k < P; k++)
              e.push(
                R + 2 * (k - 1),
                R + 2 * (k - 1) + 1,
                R + 2 * k + 1,
                R + 2 * k + 1,
                R + 2 * k,
                R + 2 * (k - 1)
              );
            return M;
          }),
          (e.createLine = function(t, e, i, n) {
            var a = t.concat(),
              r = t,
              s = this.borderColor,
              o = ((s >> 16) & 255) / 255,
              l = ((s >> 8) & 255) / 255,
              h = (255 & s) / 255;
            a.splice(0, 5);
            var c,
              u,
              _,
              d,
              f,
              p,
              m,
              g,
              y,
              v,
              b,
              w,
              x,
              I,
              C,
              S,
              T,
              M,
              E,
              L,
              D = a.length / 5,
              A = n,
              N = i / 2;
            (_ = a[0]),
              (d = a[1]),
              (v = _ - (f = a[5])),
              (y =
                ((y = -(d - (p = a[6]))) / (L = Math.sqrt(y * y + v * v))) * N),
              (v = (v / L) * N),
              r.push(_ - y, d - v, o, l, h, _ + y, d + v, o, l, h);
            for (var R = 1; R < D - 1; R++)
              (_ = a[5 * (R - 1)]),
                (d = a[5 * (R - 1) + 1]),
                (f = a[5 * R]),
                (p = a[5 * R + 1]),
                (m = a[5 * (R + 1)]),
                (g = a[5 * (R + 1) + 1]),
                (v = _ - f),
                (w = f - m),
                (C =
                  (-(y =
                    ((y = -(d - p)) / (L = Math.sqrt(y * y + v * v))) * N) +
                    _) *
                    (-(v = (v / L) * N) + p) -
                  (-y + f) * (-v + d)),
                (M =
                  (-(b =
                    ((b = -(p - g)) / (L = Math.sqrt(b * b + w * w))) * N) +
                    m) *
                    (-(w = (w / L) * N) + p) -
                  (-b + f) * (-w + g)),
                (E =
                  (x = -v + d - (-v + p)) * (T = -b + f - (-b + m)) -
                  (S = -w + g - (-w + p)) * (I = -y + f - (-y + _))),
                Math.abs(E) < 0.1
                  ? ((E += 10.1),
                    r.push(f - y, p - v, o, l, h, f + y, p + v, o, l, h))
                  : (((c = (I * M - T * C) / E) - f) * (c - f) +
                      ((u = (S * C - x * M) / E) - p) +
                      (u - p),
                    r.push(c, u, o, l, h, f - (c - f), p - (u - p), o, l, h));
            (_ = a[a.length - 10]),
              (d = a[a.length - 9]),
              (v = _ - (f = a[a.length - 5])),
              (y =
                ((y = -(d - (p = a[a.length - 4]))) /
                  (L = Math.sqrt(y * y + v * v))) *
                N),
              (v = (v / L) * N),
              r.push(f - y, p - v, o, l, h, f + y, p + v, o, l, h);
            var B = this.edges + 1;
            for (R = 1; R < B; R++)
              e.push(
                A + 2 * (R - 1),
                A + 2 * (R - 1) + 1,
                A + 2 * R + 1,
                A + 2 * R + 1,
                A + 2 * R,
                A + 2 * (R - 1)
              );
            return r;
          }),
          (e.createLoopLine = function(t, e, i, n, a, r) {
            var s = t.concat(),
              o = a || t,
              l = this.borderColor,
              h = ((l >> 16) & 255) / 255,
              c = ((l >> 8) & 255) / 255,
              u = (255 & l) / 255;
            s.splice(0, 5);
            var _ = [s[0], s[1]],
              d = [s[s.length - 5], s[s.length - 4]],
              f = d[0] + 0.5 * (_[0] - d[0]),
              p = d[1] + 0.5 * (_[1] - d[1]);
            s.unshift(f, p, 0, 0, 0), s.push(f, p, 0, 0, 0);
            var m,
              g,
              y,
              v,
              b,
              w,
              x,
              I,
              C,
              S,
              T,
              M,
              E,
              L,
              D,
              A,
              N,
              R,
              B,
              k,
              P = s.length / 5,
              O = n,
              U = i / 2;
            (y = s[0]),
              (v = s[1]),
              (S = y - (b = s[5])),
              (C =
                ((C = -(v - (w = s[6]))) / (k = Math.sqrt(C * C + S * S))) * U),
              (S = (S / k) * U),
              o.push(y - C, v - S, h, c, u, y + C, v + S, h, c, u);
            for (var V = 1; V < P - 1; V++)
              (y = s[5 * (V - 1)]),
                (v = s[5 * (V - 1) + 1]),
                (b = s[5 * V]),
                (w = s[5 * V + 1]),
                (x = s[5 * (V + 1)]),
                (I = s[5 * (V + 1) + 1]),
                (S = y - b),
                (M = b - x),
                (D =
                  (-(C =
                    ((C = -(v - w)) / (k = Math.sqrt(C * C + S * S))) * U) +
                    y) *
                    (-(S = (S / k) * U) + w) -
                  (-C + b) * (-S + v)),
                (R =
                  (-(T =
                    ((T = -(w - I)) / (k = Math.sqrt(T * T + M * M))) * U) +
                    x) *
                    (-(M = (M / k) * U) + w) -
                  (-T + b) * (-M + I)),
                (B =
                  (E = -S + v - (-S + w)) * (N = -T + b - (-T + x)) -
                  (A = -M + I - (-M + w)) * (L = -C + b - (-C + y))),
                Math.abs(B) < 0.1
                  ? ((B += 10.1),
                    o.push(b - C, w - S, h, c, u, b + C, w + S, h, c, u))
                  : (((m = (L * R - N * D) / B) - b) * (m - b) +
                      ((g = (A * D - E * R) / B) - w) +
                      (g - w),
                    o.push(m, g, h, c, u, b - (m - b), w - (g - w), h, c, u));
            r && (e = r);
            var F = this.edges + 1;
            for (V = 1; V < F; V++)
              e.push(
                O + 2 * (V - 1),
                O + 2 * (V - 1) + 1,
                O + 2 * V + 1,
                O + 2 * V + 1,
                O + 2 * V,
                O + 2 * (V - 1)
              );
            return (
              e.push(
                O + 2 * (V - 1),
                O + 2 * (V - 1) + 1,
                O + 1,
                O + 1,
                O,
                O + 2 * (V - 1)
              ),
              o
            );
          }),
          t
        );
      })(),
      nt = (function() {
        function t() {}
        return (
          a(t, 'laya.webgl.shapes.Earcut'),
          (t.earcut = function(e, i, n) {
            n = n || 2;
            var a = i && i.length,
              r = a ? i[0] * n : e.length,
              s = t.linkedList(e, 0, r, n, !0),
              o = [];
            if (!s) return o;
            var l, h, c, u, _, d, f;
            if ((a && (s = t.eliminateHoles(e, i, s, n)), e.length > 80 * n)) {
              (l = c = e[0]), (h = u = e[1]);
              for (var p = n; p < r; p += n)
                (_ = e[p]),
                  (d = e[p + 1]),
                  _ < l && (l = _),
                  d < h && (h = d),
                  _ > c && (c = _),
                  d > u && (u = d);
              f = 0 !== (f = Math.max(c - l, u - h)) ? 1 / f : 0;
            }
            return t.earcutLinked(s, o, n, l, h, f), o;
          }),
          (t.linkedList = function(e, i, n, a, r) {
            var s, o;
            if (r === t.signedArea(e, i, n, a) > 0)
              for (s = i; s < n; s += a) o = t.insertNode(s, e[s], e[s + 1], o);
            else
              for (s = n - a; s >= i; s -= a)
                o = t.insertNode(s, e[s], e[s + 1], o);
            return (
              o && t.equals(o, o.next) && (t.removeNode(o), (o = o.next)), o
            );
          }),
          (t.filterPoints = function(e, i) {
            if (!e) return e;
            i || (i = e);
            var n,
              a = e;
            do {
              if (
                ((n = !1),
                a.steiner ||
                  (!t.equals(a, a.next) && 0 !== t.area(a.prev, a, a.next)))
              )
                a = a.next;
              else {
                if ((t.removeNode(a), (a = i = a.prev) === a.next)) break;
                n = !0;
              }
            } while (n || a !== i);
            return i;
          }),
          (t.earcutLinked = function(e, i, n, a, r, s, o) {
            if (e) {
              !o && s && t.indexCurve(e, a, r, s);
              for (var l, h, c = e; e.prev !== e.next; )
                if (
                  ((l = e.prev),
                  (h = e.next),
                  s ? t.isEarHashed(e, a, r, s) : t.isEar(e))
                )
                  i.push(l.i / n),
                    i.push(e.i / n),
                    i.push(h.i / n),
                    t.removeNode(e),
                    (e = h.next),
                    (c = h.next);
                else if ((e = h) === c) {
                  o
                    ? 1 === o
                      ? ((e = t.cureLocalIntersections(e, i, n)),
                        t.earcutLinked(e, i, n, a, r, s, 2))
                      : 2 === o && t.splitEarcut(e, i, n, a, r, s)
                    : t.earcutLinked(t.filterPoints(e, null), i, n, a, r, s, 1);
                  break;
                }
            }
          }),
          (t.isEar = function(e) {
            var i = e.prev,
              n = e,
              a = e.next;
            if (t.area(i, n, a) >= 0) return !1;
            for (var r = e.next.next; r !== e.prev; ) {
              if (
                t.pointInTriangle(i.x, i.y, n.x, n.y, a.x, a.y, r.x, r.y) &&
                t.area(r.prev, r, r.next) >= 0
              )
                return !1;
              r = r.next;
            }
            return !0;
          }),
          (t.isEarHashed = function(e, i, n, a) {
            var r = e.prev,
              s = e,
              o = e.next;
            if (t.area(r, s, o) >= 0) return !1;
            for (
              var l =
                  r.x < s.x ? (r.x < o.x ? r.x : o.x) : s.x < o.x ? s.x : o.x,
                h = r.y < s.y ? (r.y < o.y ? r.y : o.y) : s.y < o.y ? s.y : o.y,
                c = r.x > s.x ? (r.x > o.x ? r.x : o.x) : s.x > o.x ? s.x : o.x,
                u = r.y > s.y ? (r.y > o.y ? r.y : o.y) : s.y > o.y ? s.y : o.y,
                _ = t.zOrder(l, h, i, n, a),
                d = t.zOrder(c, u, i, n, a),
                f = e.nextZ;
              f && f.z <= d;

            ) {
              if (
                f !== e.prev &&
                f !== e.next &&
                t.pointInTriangle(r.x, r.y, s.x, s.y, o.x, o.y, f.x, f.y) &&
                t.area(f.prev, f, f.next) >= 0
              )
                return !1;
              f = f.nextZ;
            }
            for (f = e.prevZ; f && f.z >= _; ) {
              if (
                f !== e.prev &&
                f !== e.next &&
                t.pointInTriangle(r.x, r.y, s.x, s.y, o.x, o.y, f.x, f.y) &&
                t.area(f.prev, f, f.next) >= 0
              )
                return !1;
              f = f.prevZ;
            }
            return !0;
          }),
          (t.cureLocalIntersections = function(e, i, n) {
            var a = e;
            do {
              var r = a.prev,
                s = a.next.next;
              !t.equals(r, s) &&
                t.intersects(r, a, a.next, s) &&
                t.locallyInside(r, s) &&
                t.locallyInside(s, r) &&
                (i.push(r.i / n),
                i.push(a.i / n),
                i.push(s.i / n),
                t.removeNode(a),
                t.removeNode(a.next),
                (a = e = s)),
                (a = a.next);
            } while (a !== e);
            return a;
          }),
          (t.splitEarcut = function(e, i, n, a, r, s) {
            var o = e;
            do {
              for (var l = o.next.next; l !== o.prev; ) {
                if (o.i !== l.i && t.isValidDiagonal(o, l)) {
                  var h = t.splitPolygon(o, l);
                  return (
                    (o = t.filterPoints(o, o.next)),
                    (h = t.filterPoints(h, h.next)),
                    t.earcutLinked(o, i, n, a, r, s),
                    void t.earcutLinked(h, i, n, a, r, s)
                  );
                }
                l = l.next;
              }
              o = o.next;
            } while (o !== e);
          }),
          (t.eliminateHoles = function(e, i, n, a) {
            var r,
              s,
              o,
              l,
              h,
              c = [];
            for (r = 0, s = i.length; r < s; r++)
              (o = i[r] * a),
                (l = r < s - 1 ? i[r + 1] * a : e.length),
                (h = t.linkedList(e, o, l, a, !1)) === h.next &&
                  (h.steiner = !0),
                c.push(t.getLeftmost(h));
            for (c.sort(t.compareX), r = 0; r < c.length; r++)
              t.eliminateHole(c[r], n), (n = t.filterPoints(n, n.next));
            return n;
          }),
          (t.compareX = function(t, e) {
            return t.x - e.x;
          }),
          (t.eliminateHole = function(e, i) {
            if ((i = t.findHoleBridge(e, i))) {
              var n = t.splitPolygon(i, e);
              t.filterPoints(n, n.next);
            }
          }),
          (t.findHoleBridge = function(e, i) {
            var n,
              a = i,
              r = e.x,
              s = e.y,
              o = -1 / 0;
            do {
              if (s <= a.y && s >= a.next.y && a.next.y !== a.y) {
                var l = a.x + ((s - a.y) * (a.next.x - a.x)) / (a.next.y - a.y);
                if (l <= r && l > o) {
                  if (((o = l), l === r)) {
                    if (s === a.y) return a;
                    if (s === a.next.y) return a.next;
                  }
                  n = a.x < a.next.x ? a : a.next;
                }
              }
              a = a.next;
            } while (a !== i);
            if (!n) return null;
            if (r === o) return n.prev;
            var h,
              c = n,
              u = n.x,
              _ = n.y,
              d = 1 / 0;
            for (a = n.next; a !== c; )
              r >= a.x &&
                a.x >= u &&
                r !== a.x &&
                t.pointInTriangle(
                  s < _ ? r : o,
                  s,
                  u,
                  _,
                  s < _ ? o : r,
                  s,
                  a.x,
                  a.y
                ) &&
                ((h = Math.abs(s - a.y) / (r - a.x)) < d ||
                  (h === d && a.x > n.x)) &&
                t.locallyInside(a, e) &&
                ((n = a), (d = h)),
                (a = a.next);
            return n;
          }),
          (t.indexCurve = function(e, i, n, a) {
            var r = e;
            do {
              null === r.z && (r.z = t.zOrder(r.x, r.y, i, n, a)),
                (r.prevZ = r.prev),
                (r.nextZ = r.next),
                (r = r.next);
            } while (r !== e);
            (r.prevZ.nextZ = null), (r.prevZ = null), t.sortLinked(r);
          }),
          (t.sortLinked = function(t) {
            var e,
              i,
              n,
              a,
              r,
              s,
              o,
              l,
              h = 1;
            do {
              for (i = t, t = null, r = null, s = 0; i; ) {
                for (
                  s++, n = i, o = 0, e = 0;
                  e < h && (o++, (n = n.nextZ));
                  e++
                );
                for (l = h; o > 0 || (l > 0 && n); )
                  0 !== o && (0 === l || !n || i.z <= n.z)
                    ? ((a = i), (i = i.nextZ), o--)
                    : ((a = n), (n = n.nextZ), l--),
                    r ? (r.nextZ = a) : (t = a),
                    (a.prevZ = r),
                    (r = a);
                i = n;
              }
              (r.nextZ = null), (h *= 2);
            } while (s > 1);
            return t;
          }),
          (t.zOrder = function(t, e, i, n, a) {
            return (
              (t = 32767 * (t - i) * a),
              (e = 32767 * (e - n) * a),
              (t = 16711935 & (t | (t << 8))),
              (t = 252645135 & (t | (t << 4))),
              (t = 858993459 & (t | (t << 2))),
              (t = 1431655765 & (t | (t << 1))),
              (e = 16711935 & (e | (e << 8))),
              (e = 252645135 & (e | (e << 4))),
              (e = 858993459 & (e | (e << 2))),
              (e = 1431655765 & (e | (e << 1))),
              t | (e << 1)
            );
          }),
          (t.getLeftmost = function(t) {
            var e = t,
              i = t;
            do {
              e.x < i.x && (i = e), (e = e.next);
            } while (e !== t);
            return i;
          }),
          (t.pointInTriangle = function(t, e, i, n, a, r, s, o) {
            return (
              (a - s) * (e - o) - (t - s) * (r - o) >= 0 &&
              (t - s) * (n - o) - (i - s) * (e - o) >= 0 &&
              (i - s) * (r - o) - (a - s) * (n - o) >= 0
            );
          }),
          (t.isValidDiagonal = function(e, i) {
            return (
              e.next.i !== i.i &&
              e.prev.i !== i.i &&
              !t.intersectsPolygon(e, i) &&
              t.locallyInside(e, i) &&
              t.locallyInside(i, e) &&
              t.middleInside(e, i)
            );
          }),
          (t.area = function(t, e, i) {
            return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y);
          }),
          (t.equals = function(t, e) {
            return t.x === e.x && t.y === e.y;
          }),
          (t.intersects = function(e, i, n, a) {
            return (
              !!(
                (t.equals(e, i) && t.equals(n, a)) ||
                (t.equals(e, a) && t.equals(n, i))
              ) ||
              (t.area(e, i, n) > 0 != t.area(e, i, a) > 0 &&
                t.area(n, a, e) > 0 != t.area(n, a, i) > 0)
            );
          }),
          (t.intersectsPolygon = function(e, i) {
            var n = e;
            do {
              if (
                n.i !== e.i &&
                n.next.i !== e.i &&
                n.i !== i.i &&
                n.next.i !== i.i &&
                t.intersects(n, n.next, e, i)
              )
                return !0;
              n = n.next;
            } while (n !== e);
            return !1;
          }),
          (t.locallyInside = function(e, i) {
            return t.area(e.prev, e, e.next) < 0
              ? t.area(e, i, e.next) >= 0 && t.area(e, e.prev, i) >= 0
              : t.area(e, i, e.prev) < 0 || t.area(e, e.next, i) < 0;
          }),
          (t.middleInside = function(t, e) {
            var i = t,
              n = !1,
              a = (t.x + e.x) / 2,
              r = (t.y + e.y) / 2;
            do {
              i.y > r != i.next.y > r &&
                i.next.y !== i.y &&
                a < ((i.next.x - i.x) * (r - i.y)) / (i.next.y - i.y) + i.x &&
                (n = !n),
                (i = i.next);
            } while (i !== t);
            return n;
          }),
          (t.splitPolygon = function(t, e) {
            var i = new at(t.i, t.x, t.y),
              n = new at(e.i, e.x, e.y),
              a = t.next,
              r = e.prev;
            return (
              (t.next = e),
              (e.prev = t),
              (i.next = a),
              (a.prev = i),
              (n.next = i),
              (i.prev = n),
              (r.next = n),
              (n.prev = r),
              n
            );
          }),
          (t.insertNode = function(t, e, i, n) {
            var a = new at(t, e, i);
            return (
              n
                ? ((a.next = n.next),
                  (a.prev = n),
                  (n.next.prev = a),
                  (n.next = a))
                : ((a.prev = a), (a.next = a)),
              a
            );
          }),
          (t.removeNode = function(t) {
            (t.next.prev = t.prev),
              (t.prev.next = t.next),
              t.prevZ && (t.prevZ.nextZ = t.nextZ),
              t.nextZ && (t.nextZ.prevZ = t.prevZ);
          }),
          (t.signedArea = function(t, e, i, n) {
            for (var a = 0, r = e, s = i - n; r < i; r += n)
              (a += (t[s] - t[r]) * (t[r + 1] + t[s + 1])), (s = r);
            return a;
          }),
          t
        );
      })(),
      at = (function() {
        function t(t, e, i) {
          (this.i = null),
            (this.x = null),
            (this.y = null),
            (this.prev = null),
            (this.next = null),
            (this.z = null),
            (this.prevZ = null),
            (this.nextZ = null),
            (this.steiner = null),
            (this.i = t),
            (this.x = e),
            (this.y = i),
            (this.prev = null),
            (this.next = null),
            (this.z = null),
            (this.prevZ = null),
            (this.nextZ = null),
            (this.steiner = !1);
        }
        return a(t, 'laya.webgl.shapes.EarcutNode'), t;
      })(),
      rt =
        ((function() {
          function t(t, e, i, n, a, r, s) {
            (this.lineWidth = t),
              (this.lineColor = e),
              (this.lineAlpha = i),
              (this.fillColor = n),
              (this.fillAlpha = a),
              (this.shape = s),
              (this.fill = r);
          }
          a(t, 'laya.webgl.shapes.GeometryData');
          var e = t.prototype;
          (e.clone = function() {
            return new t(
              this.lineWidth,
              this.lineColor,
              this.lineAlpha,
              this.fillColor,
              this.fillAlpha,
              this.fill,
              this.shape
            );
          }),
            (e.getIndexData = function() {
              return null;
            }),
            (e.getVertexData = function() {
              return null;
            }),
            (e.destroy = function() {
              this.shape = null;
            });
        })(),
        (function() {
          function t(t) {
            if (t instanceof Float32Array) this.points = t;
            else if (t instanceof Array) {
              t.length;
              this.points = new Float32Array(t);
            }
          }
          a(t, 'laya.webgl.shapes.Vertex');
          var e = t.prototype;
          i.imps(e, { 'laya.webgl.shapes.IShape': !0 }),
            (e.getData = function(t, e, i) {}),
            (e.needUpdate = function(t) {
              return !1;
            }),
            (e.rebuild = function(t) {}),
            (e.setMatrix = function(t) {});
        })(),
        (function() {
          function t(t) {
            void 0 === t && (t = 1e4), (this._renderType = t);
          }
          a(t, 'laya.webgl.submit.Submit');
          var e = t.prototype;
          return (
            i.imps(e, { 'laya.webgl.submit.ISubmit': !0 }),
            (e.releaseRender = function() {
              var e = t._cache;
              (e[e._length++] = this),
                this.shaderValue.release(),
                (this._vb = null);
            }),
            (e.getRenderType = function() {
              return this._renderType;
            }),
            (e.renderSubmit = function() {
              if (0 === this._numEle) return 1;
              var t = this.shaderValue.textureHost;
              if (t) {
                var e = t.source;
                if (!t.bitmap || !e) return 1;
                this.shaderValue.texture = e;
              }
              this._vb.bind_upload(this._ib);
              var i = bt.mainContext;
              return (
                this.shaderValue.upload(),
                G.activeBlendFunction !== this._blendFn &&
                  (i.enable(3042),
                  this._blendFn(i),
                  (G.activeBlendFunction = this._blendFn)),
                D.drawCall++,
                (D.trianglesFaces += this._numEle / 3),
                i.drawElements(4, this._numEle, 5123, this._startIdx),
                1
              );
            }),
            (t.__init__ = function() {
              var e = (t.RENDERBASE = new t(-1));
              (e.shaderValue = new Ct(0, 0)), (e.shaderValue.ALPHA = -1234);
            }),
            (t.createSubmit = function(e, i, n, a, r) {
              var s = t._cache._length ? t._cache[--t._cache._length] : new t();
              null == n &&
                ((n = s._selfVb || (s._selfVb = $t.create(-1))).clear(),
                (a = 0)),
                (s._ib = i),
                (s._vb = n),
                (s._startIdx = a * pt.BYTES_PIDX),
                (s._numEle = 0);
              var o = e._nBlendType;
              (s._blendFn = e._targets ? G.targetFns[o] : G.fns[o]),
                (s.shaderValue = r),
                s.shaderValue.setValue(e._shader2D);
              var l = e._shader2D.filters;
              return l && s.shaderValue.setFilters(l), s;
            }),
            (t.createShape = function(e, i, n, a, r, s) {
              var o = t._cache._length ? t._cache[--t._cache._length] : new t();
              (o._ib = i),
                (o._vb = n),
                (o._numEle = a),
                (o._startIdx = r),
                (o.shaderValue = s),
                o.shaderValue.setValue(e._shader2D);
              var l = e._nBlendType;
              return (o._blendFn = e._targets ? G.targetFns[l] : G.fns[l]), o;
            }),
            (t.TYPE_2D = 1e4),
            (t.TYPE_CANVAS = 10003),
            (t.TYPE_CMDSETRT = 10004),
            (t.TYPE_CUSTOM = 10005),
            (t.TYPE_BLURRT = 10006),
            (t.TYPE_CMDDESTORYPRERT = 10007),
            (t.TYPE_DISABLESTENCIL = 10008),
            (t.TYPE_OTHERIBVB = 10009),
            (t.TYPE_PRIMITIVE = 10010),
            (t.TYPE_RT = 10011),
            (t.TYPE_BLUR_RT = 10012),
            (t.TYPE_TARGET = 10013),
            (t.TYPE_CHANGE_VALUE = 10014),
            (t.TYPE_SHAPE = 10015),
            (t.TYPE_TEXTURE = 10016),
            (t.TYPE_FILLTEXTURE = 10017),
            (t.RENDERBASE = null),
            (t._cache = ((t._cache = []), (t._cache._length = 0), t._cache)),
            t
          );
        })()),
      st = (function() {
        function t() {
          (this.fun = null), (this.args = null);
        }
        a(t, 'laya.webgl.submit.SubmitCMD');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.submit.ISubmit': !0 }),
          (e.renderSubmit = function() {
            return this.fun.apply(null, this.args), 1;
          }),
          (e.getRenderType = function() {
            return 0;
          }),
          (e.releaseRender = function() {
            var e = t._cache;
            e[e._length++] = this;
          }),
          (t.create = function(e, i) {
            var n = t._cache._length ? t._cache[--t._cache._length] : new t();
            return (n.fun = i), (n.args = e), n;
          }),
          (t._cache = ((t._cache = []), (t._cache._length = 0), t._cache)),
          t
        );
      })(),
      ot = (function() {
        function t() {
          this.variables = {};
        }
        a(t, 'laya.webgl.submit.SubmitCMDScope');
        var e = t.prototype;
        return (
          (e.getValue = function(t) {
            return this.variables[t];
          }),
          (e.addValue = function(t, e) {
            return (this.variables[t] = e);
          }),
          (e.setValue = function(t, e) {
            return this.variables.hasOwnProperty(t)
              ? (this.variables[t] = e)
              : null;
          }),
          (e.clear = function() {
            for (var t in this.variables) delete this.variables[t];
          }),
          (e.recycle = function() {
            this.clear(), t.POOL.push(this);
          }),
          (t.create = function() {
            var e = t.POOL.pop();
            return e || (e = new t()), e;
          }),
          (t.POOL = []),
          t
        );
      })(),
      lt = (function() {
        function t() {
          (this.offset = 0), (this.startIndex = 0), (this._mat = b.create());
        }
        a(t, 'laya.webgl.submit.SubmitOtherIBVB');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.submit.ISubmit': !0 }),
          (e.releaseRender = function() {
            var e = t._cache;
            e[e._length++] = this;
          }),
          (e.getRenderType = function() {
            return 10009;
          }),
          (e.renderSubmit = function() {
            var e = this._shaderValue.textureHost;
            if (e) {
              var i = e.source;
              if (!e.bitmap || !i) return 1;
              this._shaderValue.texture = i;
            }
            this._vb.bind_upload(this._ib);
            var n = yt.worldMatrix4,
              a = b.TEMP;
            b.mulPre(this._mat, n[0], n[1], n[4], n[5], n[12], n[13], a);
            var r = (yt.worldMatrix4 = t.tempMatrix4);
            (r[0] = a.a),
              (r[1] = a.b),
              (r[4] = a.c),
              (r[5] = a.d),
              (r[12] = a.tx),
              (r[13] = a.ty),
              (this._shader._offset = this.offset),
              this._shaderValue.refresh(),
              this._shader.upload(this._shaderValue),
              (this._shader._offset = 0);
            var s = bt.mainContext;
            return (
              G.activeBlendFunction !== this._blendFn &&
                (s.enable(3042),
                this._blendFn(s),
                (G.activeBlendFunction = this._blendFn)),
              D.drawCall++,
              (D.trianglesFaces += this._numEle / 3),
              s.drawElements(4, this._numEle, 5123, this.startIndex),
              (yt.worldMatrix4 = n),
              (kt.activeShader = null),
              1
            );
          }),
          (t.create = function(e, i, n, a, r, s, o, l, h) {
            void 0 === h && (h = 0);
            var c = t._cache._length ? t._cache[--t._cache._length] : new t();
            (c._ib = n),
              (c._vb = i),
              (c._numEle = a),
              (c._shader = r),
              (c._shaderValue = s);
            var u = e._nBlendType;
            switch (
              ((c._blendFn = e._targets ? G.targetFns[u] : G.fns[u]), h)
            ) {
              case 0:
                (c.offset = 0),
                  (c.startIndex = (l / (pt.BYTES_PE * i.vertexStride)) * 1.5),
                  (c.startIndex *= pt.BYTES_PIDX);
                break;
              case 1:
                (c.startIndex = o), (c.offset = l);
            }
            return c;
          }),
          (t._cache = ((t._cache = []), (t._cache._length = 0), t._cache)),
          (t.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
          t
        );
      })(),
      ht = (function() {
        function t() {
          (this.submitIndex = 0),
            (this.submitLength = 0),
            (this.context = null),
            (this.clipRect = new x()),
            (this.screenRect = new x());
        }
        a(t, 'laya.webgl.submit.SubmitScissor');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.submit.ISubmit': !0 }),
          (e._scissor = function(t, e, i, n) {
            var a = yt.worldMatrix4,
              r = a[0],
              s = a[5];
            if (
              ((t = t * r + a[12]),
              (e = e * s + a[13]),
              (i *= r),
              (n *= s),
              i < 1 || n < 1)
            )
              return !1;
            var o = t + i,
              l = e + n;
            t < 0 && ((t = 0), (i = o - t)), e < 0 && ((e = 0), (n = l - e));
            var h = yt.worldClipRect;
            if (
              ((t = Math.max(t, h.x)),
              (e = Math.max(e, h.y)),
              (i = Math.min(o, h.right) - t),
              (n = Math.min(l, h.bottom) - e),
              i < 1 || n < 1)
            )
              return !1;
            var c = yt.worldScissorTest;
            return (
              this.screenRect.copyFrom(h),
              (h.x = t),
              (h.y = e),
              (h.width = i),
              (h.height = n),
              (yt.worldScissorTest = !0),
              (e = yt.height - e - n),
              bt.mainContext.scissor(t, e, i, n),
              bt.mainContext.enable(3089),
              this.context.submitElement(
                this.submitIndex,
                this.submitIndex + this.submitLength
              ),
              c
                ? ((e = yt.height - this.screenRect.y - this.screenRect.height),
                  bt.mainContext.scissor(
                    this.screenRect.x,
                    e,
                    this.screenRect.width,
                    this.screenRect.height
                  ),
                  bt.mainContext.enable(3089))
                : (bt.mainContext.disable(3089), (yt.worldScissorTest = !1)),
              h.copyFrom(this.screenRect),
              !0
            );
          }),
          (e._scissorWithTagart = function(t, e, i, n) {
            if (i < 1 || n < 1) return !1;
            var a = t + i,
              r = e + n;
            t < 0 && ((t = 0), (i = a - t)), e < 0 && ((e = 0), (n = r - e));
            var s = yt.worldClipRect;
            if (
              ((t = Math.max(t, s.x)),
              (e = Math.max(e, s.y)),
              (i = Math.min(a, s.right) - t),
              (n = Math.min(r, s.bottom) - e),
              i < 1 || n < 1)
            )
              return !1;
            var o = yt.worldScissorTest;
            return (
              this.screenRect.copyFrom(s),
              (yt.worldScissorTest = !0),
              (s.x = t),
              (s.y = e),
              (s.width = i),
              (s.height = n),
              (e = yt.height - e - n),
              bt.mainContext.scissor(t, e, i, n),
              bt.mainContext.enable(3089),
              this.context.submitElement(
                this.submitIndex,
                this.submitIndex + this.submitLength
              ),
              o
                ? ((e = yt.height - this.screenRect.y - this.screenRect.height),
                  bt.mainContext.scissor(
                    this.screenRect.x,
                    e,
                    this.screenRect.width,
                    this.screenRect.height
                  ),
                  bt.mainContext.enable(3089))
                : (bt.mainContext.disable(3089), (yt.worldScissorTest = !1)),
              s.copyFrom(this.screenRect),
              !0
            );
          }),
          (e.renderSubmit = function() {
            return (
              (this.submitLength = Math.min(
                this.context._submits._length - 1,
                this.submitLength
              )),
              this.submitLength < 1 ||
              this.clipRect.width < 1 ||
              this.clipRect.height < 1
                ? this.submitLength + 1
                : (this.context._targets
                    ? this._scissorWithTagart(
                        this.clipRect.x,
                        this.clipRect.y,
                        this.clipRect.width,
                        this.clipRect.height
                      )
                    : this._scissor(
                        this.clipRect.x,
                        this.clipRect.y,
                        this.clipRect.width,
                        this.clipRect.height
                      ),
                  this.submitLength + 1)
            );
          }),
          (e.getRenderType = function() {
            return 0;
          }),
          (e.releaseRender = function() {
            var e = t._cache;
            (e[e._length++] = this), (this.context = null);
          }),
          (t.create = function(e) {
            var i = t._cache._length ? t._cache[--t._cache._length] : new t();
            return (i.context = e), i;
          }),
          (t._cache = ((t._cache = []), (t._cache._length = 0), t._cache)),
          t
        );
      })(),
      ct = (function() {
        function t() {
          (this.step = 0), (this.blendMode = null), (this.level = 0);
        }
        a(t, 'laya.webgl.submit.SubmitStencil');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.submit.ISubmit': !0 }),
          (e.renderSubmit = function() {
            switch (this.step) {
              case 1:
                this.do1();
                break;
              case 2:
                this.do2();
                break;
              case 3:
                this.do3();
                break;
              case 4:
                this.do4();
                break;
              case 5:
                this.do5();
                break;
              case 6:
                this.do6();
                break;
              case 7:
                this.do7();
                break;
              case 8:
                this.do8();
            }
            return 1;
          }),
          (e.getRenderType = function() {
            return 0;
          }),
          (e.releaseRender = function() {
            var e = t._cache;
            e[e._length++] = this;
          }),
          (e.do1 = function() {
            var t = bt.mainContext;
            t.enable(2960),
              t.clear(1024),
              t.colorMask(!1, !1, !1, !1),
              t.stencilFunc(514, this.level, 255),
              t.stencilOp(7680, 7680, 7682);
          }),
          (e.do2 = function() {
            var t = bt.mainContext;
            t.stencilFunc(514, this.level + 1, 255),
              t.colorMask(!0, !0, !0, !0),
              t.stencilOp(7680, 7680, 7680);
          }),
          (e.do3 = function() {
            var t = bt.mainContext;
            t.colorMask(!0, !0, !0, !0),
              t.stencilOp(7680, 7680, 7680),
              t.clear(1024),
              t.disable(2960);
          }),
          (e.do4 = function() {
            var t = bt.mainContext;
            0 == this.level && (t.enable(2960), t.clear(1024)),
              t.colorMask(!1, !1, !1, !1),
              t.stencilFunc(519, 0, 255),
              t.stencilOp(7680, 7680, 7682);
          }),
          (e.do5 = function() {
            var t = bt.mainContext;
            t.stencilFunc(514, this.level, 255),
              t.colorMask(!0, !0, !0, !0),
              t.stencilOp(7680, 7680, 7680);
          }),
          (e.do6 = function() {
            var t = bt.mainContext;
            G.targetFns[G.TOINT[this.blendMode]](t);
          }),
          (e.do7 = function() {
            var t = bt.mainContext;
            t.colorMask(!1, !1, !1, !1), t.stencilOp(7680, 7680, 7683);
          }),
          (e.do8 = function() {
            var t = bt.mainContext;
            t.colorMask(!0, !0, !0, !0),
              t.stencilFunc(514, this.level, 255),
              t.stencilOp(7680, 7680, 7680);
          }),
          (t.restore = function(e, i, n, a, r) {
            var s;
            if (((e._renderKey = 0), t._mask > 0 && t._mask--, 0 == t._mask))
              (s = laya.webgl.submit.SubmitStencil.create(3)),
                e.addRenderObject(s),
                (e._curSubmit = rt.RENDERBASE);
            else {
              (s = laya.webgl.submit.SubmitStencil.create(7)),
                e.addRenderObject(s);
              var o = e._vb;
              o._byteLength;
              if (
                mt.fillRectImgVb(
                  o,
                  null,
                  i.x,
                  i.y,
                  i.width,
                  i.height,
                  B.DEF_UV,
                  n,
                  a,
                  r,
                  0,
                  0
                )
              ) {
                e._shader2D.glTexture = null;
                var l = (e._curSubmit = rt.createSubmit(
                  e,
                  e._ib,
                  o,
                  ((o._byteLength - 64) / 32) * 3,
                  Ct.create(2, 0)
                ));
                (l.shaderValue.ALPHA = 1),
                  (e._submits[e._submits._length++] = l),
                  (e._curSubmit._numEle += 6),
                  (e._curSubmit = rt.RENDERBASE);
              } else alert('clipRect calc stencil rect error');
              (s = laya.webgl.submit.SubmitStencil.create(8)),
                e.addRenderObject(s);
            }
          }),
          (t.restore2 = function(e, i) {
            var n;
            (e._renderKey = 0),
              t._mask > 0 && t._mask--,
              0 == t._mask
                ? ((n = laya.webgl.submit.SubmitStencil.create(3)),
                  e.addRenderObject(n),
                  (e._curSubmit = rt.RENDERBASE))
                : ((n = laya.webgl.submit.SubmitStencil.create(7)),
                  e.addRenderObject(n),
                  (e._submits[e._submits._length++] = i),
                  (n = laya.webgl.submit.SubmitStencil.create(8)),
                  e.addRenderObject(n));
          }),
          (t.create = function(e) {
            var i = t._cache._length ? t._cache[--t._cache._length] : new t();
            return (i.step = e), 5 == e && ++t._mask, (i.level = t._mask), i;
          }),
          (t._cache = ((t._cache = []), (t._cache._length = 0), t._cache)),
          (t._mask = 0),
          t
        );
      })(),
      ut = (function() {
        function t() {
          (this._renderType = 0),
            (this._vb = null),
            (this._ib = null),
            (this._startIdx = 0),
            (this._numEle = 0),
            (this.shaderValue = null),
            (this.blendType = 0),
            (this.proName = null),
            (this.scope = null);
        }
        a(t, 'laya.webgl.submit.SubmitTarget');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.submit.ISubmit': !0 }),
          (e.renderSubmit = function() {
            this._vb.bind_upload(this._ib);
            var t = this.scope.getValue(this.proName);
            return (
              t &&
                ((this.shaderValue.texture = t.source),
                this.shaderValue.strength &&
                  !this.shaderValue.blurInfo &&
                  (this.shaderValue.blurInfo = [t.width, t.height]),
                this.shaderValue.upload(),
                this.blend(),
                D.drawCall++,
                (D.trianglesFaces += this._numEle / 3),
                bt.mainContext.drawElements(
                  4,
                  this._numEle,
                  5123,
                  this._startIdx
                )),
              1
            );
          }),
          (e.blend = function() {
            if (G.activeBlendFunction !== G.fns[this.blendType]) {
              var t = bt.mainContext;
              t.enable(3042),
                G.fns[this.blendType](t),
                (G.activeBlendFunction = G.fns[this.blendType]);
            }
          }),
          (e.getRenderType = function() {
            return 0;
          }),
          (e.releaseRender = function() {
            var e = t._cache;
            e[e._length++] = this;
          }),
          (t.create = function(e, i, n, a, r, s) {
            var o = t._cache._length ? t._cache[--t._cache._length] : new t();
            return (
              (o._ib = i),
              (o._vb = n),
              (o.proName = s),
              (o._startIdx = a * pt.BYTES_PIDX),
              (o._numEle = 0),
              (o.blendType = e._nBlendType),
              (o.shaderValue = r),
              o.shaderValue.setValue(e._shader2D),
              o
            );
          }),
          (t._cache = ((t._cache = []), (t._cache._length = 0), t._cache)),
          t
        );
      })(),
      _t = (function() {
        function t() {
          this._sourceStr = null;
        }
        a(t, 'laya.webgl.text.CharSegment');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.webgl.text.ICharSegment': !0 }),
          (e.textToSpit = function(t) {
            this._sourceStr = t;
          }),
          (e.getChar = function(t) {
            return this._sourceStr.charAt(t);
          }),
          (e.getCharCode = function(t) {
            return this._sourceStr.charCodeAt(t);
          }),
          (e.length = function() {
            return this._sourceStr.length;
          }),
          t
        );
      })(),
      dt = (function() {
        function t() {}
        var e;
        return (
          a(t, 'laya.webgl.text.DrawText'),
          (t.__init__ = function() {
            (t._charsTemp = new Array()),
              (t._drawValue = new e()),
              (t._charSeg = new _t());
          }),
          (t.customCharSeg = function(e) {
            t._charSeg = e;
          }),
          (t.getChar = function(e, i, n) {
            var a = Wt.createOneChar(e, n);
            return -1 != i && (t._charsCache[i] = a), a;
          }),
          (t._drawSlow = function(e, i, n, a, r, s, o, l, h, c, u, _, d, f, p) {
            var m,
              g,
              y = t._drawValue.value(s, l, h, c, d, f, p),
              v = 0,
              b = 0,
              w = t._charsTemp,
              x = 0,
              I = NaN;
            if (a)
              for (w.length = a.length, v = 0, b = a.length; v < b; v++)
                (I = (g = a[v]).charNum + y.txtID),
                  (w[v] = m = t._charsCache[I] || t.getChar(g.char, I, y)),
                  m.active();
            else {
              var C = n instanceof laya.utils.WordText ? n.toString() : n;
              if (R.CharacterCache) {
                t._charSeg.textToSpit(C);
                var S = t._charSeg.length();
                for (w.length = S, v = 0, b = S; v < b; v++)
                  (I = t._charSeg.getCharCode(v) + y.txtID),
                    (w[v] = m =
                      t._charsCache[I] ||
                      t.getChar(t._charSeg.getChar(v), I, y)),
                    m.active(),
                    (x += m.cw);
              } else
                (w.length = 0),
                  (m = t.getChar(C, -1, y)).active(),
                  (x += m.cw),
                  (w[0] = m);
            }
            var T = 0;
            null !== o && 'left' !== o && (T = -('center' == o ? x / 2 : x));
            var M,
              E,
              L = NaN,
              D = 0;
            if (a)
              for (v = 0, b = w.length; v < b; v++)
                (m = w[v]).isSpace ||
                  ((g = a[v]),
                  (L = m.borderSize),
                  (M = m.texture),
                  i._drawText(
                    M,
                    u + T + g.x * d - L,
                    _ + g.y * f - L,
                    M.width,
                    M.height,
                    r,
                    0,
                    0,
                    0,
                    0
                  ));
            else {
              for (v = 0, b = w.length; v < b; v++)
                (m = w[v]).isSpace ||
                  ((L = m.borderSize),
                  (M = m.texture),
                  i._drawText(
                    M,
                    u + T - L,
                    _ - L,
                    M.width,
                    M.height,
                    r,
                    0,
                    0,
                    0,
                    0
                  ),
                  e &&
                    ((E = e[D++]) || (E = e[D - 1] = []),
                    (E[0] = M),
                    (E[1] = T - L),
                    (E[2] = -L))),
                  (T += m.cw);
              e && (e.length = D);
            }
          }),
          (t._drawFast = function(t, e, i, n, a) {
            for (var r, s, o = 0, l = t.length; o < l; o++)
              (r = (s = t[o])[0]).active(),
                e._drawText(
                  r,
                  n + s[1],
                  a + s[2],
                  r.width,
                  r.height,
                  i,
                  0,
                  0,
                  0,
                  0
                );
          }),
          (t.drawText = function(e, n, a, r, s, o, l, h, c, u, _, f) {
            if (
              (void 0 === f && (f = 0),
              !((n && 0 === n.length) || (a && 0 === a.length)))
            ) {
              var p = r.a,
                m = r.d;
              (0 !== r.b || 0 !== r.c) && (p = m = 1);
              var g = 1 !== p || 1 !== m;
              if (g && i.stage.transform) {
                var y = i.stage.transform;
                g = y.a === p && y.d === m;
              } else g = !1;
              if (g) {
                var v = (r = r.copyTo(It._tmpMatrix)).tx,
                  b = r.ty;
                r.scale(1 / p, 1 / m),
                  r._checkTransform(),
                  (u *= p),
                  (_ *= m),
                  (u += v - r.tx),
                  (_ += b - r.ty);
              } else p = m = 1;
              if (a)
                t._drawSlow(null, e, n, a, r, s, o, l, h, c, u, _, p, m, f);
              else {
                if (null === n.toUpperCase) {
                  var w = p + 1e5 * m,
                    x = n;
                  return void (x.changed || x.id !== w
                    ? ((x.id = w),
                      (x.changed = !1),
                      t._drawSlow(
                        x.save,
                        e,
                        n,
                        a,
                        r,
                        s,
                        o,
                        l,
                        h,
                        c,
                        u,
                        _,
                        p,
                        m,
                        f
                      ))
                    : t._drawFast(x.save, e, r, u, _));
                }
                var I = n + s.toString() + l + h + c + p + m + o,
                  C = t._textsCache[I];
                R.CharacterCache
                  ? C
                    ? t._drawFast(C, e, r, u, _)
                    : (t._textsCache.__length || (t._textsCache.__length = 0),
                      t._textsCache.__length > d.WebGLTextCacheCount &&
                        (((t._textsCache = {}).__length = 0),
                        (t._curPoolIndex = 0)),
                      t._textCachesPool[t._curPoolIndex]
                        ? ((C = t._textsCache[I] =
                            t._textCachesPool[t._curPoolIndex]),
                          (C.length = 0))
                        : (t._textCachesPool[
                            t._curPoolIndex
                          ] = C = t._textsCache[I] = []),
                      t._textsCache.__length++,
                      t._curPoolIndex++,
                      t._drawSlow(C, e, n, a, r, s, o, l, h, c, u, _, p, m, f))
                  : t._drawSlow(C, e, n, a, r, s, o, l, h, c, u, _, p, m, f);
              }
            }
          }),
          (t._charsTemp = null),
          (t._textCachesPool = []),
          (t._curPoolIndex = 0),
          (t._charsCache = {}),
          (t._textsCache = {}),
          (t._drawValue = null),
          (t.d = []),
          (t._charSeg = null),
          (t.__init$ = function() {
            e = (function() {
              function t() {}
              a(t, '');
              return (
                (t.prototype.value = function(e, i, n, a, r, s, o) {
                  (this.font = e),
                    (this.fillColor = i),
                    (this.borderColor = n),
                    (this.lineWidth = a),
                    (this.scaleX = r),
                    (this.scaleY = s),
                    (this.underLine = o);
                  var l = e.toString() + r + s + a + i + n + o;
                  return (
                    (this.txtID = t._keymap[l]),
                    this.txtID ||
                      ((this.txtID = 1e-7 * ++t._keymapCount),
                      (t._keymap[l] = this.txtID)),
                    this
                  );
                }),
                (t.clear = function() {
                  (t._keymap = {}), (t._keymapCount = 1);
                }),
                (t._keymap = {}),
                (t._keymapCount = 1),
                t
              );
            })();
          }),
          t
        );
      })(),
      ft = (function() {
        function t(e) {
          (this._index = 0),
            (this._size = 14),
            (this._italic = -2),
            (t._cache2 = t._cache2 || []),
            this.setFont(e || '14px Arial');
        }
        a(t, 'laya.webgl.text.FontInContext');
        var e = t.prototype;
        return (
          (e.setFont = function(e) {
            var i = t._cache2[e];
            if (i) (this._words = i[0]), (this._size = i[1]);
            else {
              this._words = e.split(' ');
              for (var n = 0, a = this._words.length; n < a; n++)
                if (this._words[n].indexOf('px') > 0) {
                  this._index = n;
                  break;
                }
              (this._size = parseInt(this._words[this._index])),
                (t._cache2[e] = [this._words, this._size]);
            }
            (this._text = null), (this._italic = -2);
          }),
          (e.getItalic = function() {
            return (
              -2 === this._italic && (this._italic = this.hasType('italic')),
              this._italic
            );
          }),
          (e.hasType = function(t) {
            for (var e = 0, i = this._words.length; e < i; e++)
              if (this._words[e] === t) return e;
            return -1;
          }),
          (e.removeType = function(t) {
            for (var e = 0, i = this._words.length; e < i; e++)
              if (this._words[e] === t) {
                this._words.splice(e, 1), this._index > e && this._index--;
                break;
              }
            (this._text = null), (this._italic = -2);
          }),
          (e.copyTo = function(t) {
            return (
              (t._text = this._text),
              (t._size = this._size),
              (t._index = this._index),
              (t._words = this._words.slice()),
              (t._italic = -2),
              t
            );
          }),
          (e.toString = function() {
            return this._text
              ? this._text
              : (this._text = this._words.join(' '));
          }),
          r(
            0,
            e,
            'size',
            function() {
              return this._size;
            },
            function(t) {
              (this._size = t),
                (this._words[this._index] = t + 'px'),
                (this._text = null);
            }
          ),
          (t.create = function(e) {
            var i = t._cache[e];
            return i || (i = t._cache[e] = new t(e));
          }),
          (t.EMPTY = new t()),
          (t._cache = {}),
          (t._cache2 = null),
          t
        );
      })(),
      pt = (function() {
        function t() {}
        return (
          a(t, 'laya.webgl.utils.CONST3D2D'),
          (t.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
          (t.defaultMinusYMatrix4 = [
            1,
            0,
            0,
            0,
            0,
            -1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
          ]),
          (t.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]),
          (t._TMPARRAY = []),
          (t._OFFSETX = 0),
          (t._OFFSETY = 0),
          n(t, [
            'BYTES_PE',
            function() {
              return (this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT);
            },
            'BYTES_PIDX',
            function() {
              return (this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT);
            }
          ]),
          t
        );
      })(),
      mt = (function() {
        function t() {}
        return (
          a(t, 'laya.webgl.utils.GlUtils'),
          (t.make2DProjection = function(t, e, i) {
            return [
              2 / t,
              0,
              0,
              0,
              0,
              -2 / e,
              0,
              0,
              0,
              0,
              2 / i,
              0,
              -1,
              1,
              0,
              1
            ];
          }),
          (t.fillIBQuadrangle = function(t, e) {
            if (e > 65535 / 4)
              throw Error(
                'IBQuadrangle count:' + e + ' must<:' + Math.floor(65535 / 4)
              );
            (e = Math.floor(e)),
              t._resizeBuffer(6 * (e + 1) * 2, !1),
              (t.byteLength = t.bufferLength);
            for (var i = t.getUint16Array(), n = 0, a = 0; a < e; a++)
              (i[n++] = 4 * a),
                (i[n++] = 4 * a + 2),
                (i[n++] = 4 * a + 1),
                (i[n++] = 4 * a),
                (i[n++] = 4 * a + 3),
                (i[n++] = 4 * a + 2);
            return t.setNeedUpload(), !0;
          }),
          (t.expandIBQuadrangle = function(e, i) {
            e.bufferLength >= 6 * i * 2 || t.fillIBQuadrangle(e, i);
          }),
          (t.mathCeilPowerOfTwo = function(t) {
            return (
              t--,
              (t |= t >> 1),
              (t |= t >> 2),
              (t |= t >> 4),
              (t |= t >> 8),
              (t |= t >> 16),
              ++t
            );
          }),
          (t.fillQuadrangleImgVb = function(t, e, i, n, a, r, s, o) {
            var l = 16 + (t._byteLength >> 2);
            t.byteLength = l << 2;
            var h = t.getFloat32Array();
            (h[(l -= 16) + 2] = a[0]),
              (h[l + 3] = a[1]),
              (h[l + 6] = a[2]),
              (h[l + 7] = a[3]),
              (h[l + 10] = a[4]),
              (h[l + 11] = a[5]),
              (h[l + 14] = a[6]),
              (h[l + 15] = a[7]);
            var c = r.a,
              u = r.b,
              _ = r.c,
              d = r.d;
            if (1 !== c || 0 !== u || 0 !== _ || 1 !== d) {
              r.bTransform = !0;
              var f = r.tx + s,
                p = r.ty + o;
              (h[l] = (n[0] + e) * c + (n[1] + i) * _ + f),
                (h[l + 1] = (n[0] + e) * u + (n[1] + i) * d + p),
                (h[l + 4] = (n[2] + e) * c + (n[3] + i) * _ + f),
                (h[l + 5] = (n[2] + e) * u + (n[3] + i) * d + p),
                (h[l + 8] = (n[4] + e) * c + (n[5] + i) * _ + f),
                (h[l + 9] = (n[4] + e) * u + (n[5] + i) * d + p),
                (h[l + 12] = (n[6] + e) * c + (n[7] + i) * _ + f),
                (h[l + 13] = (n[6] + e) * u + (n[7] + i) * d + p);
            } else
              (r.bTransform = !1),
                (e += r.tx + s),
                (i += r.ty + o),
                (h[l] = e + n[0]),
                (h[l + 1] = i + n[1]),
                (h[l + 4] = e + n[2]),
                (h[l + 5] = i + n[3]),
                (h[l + 8] = e + n[4]),
                (h[l + 9] = i + n[5]),
                (h[l + 12] = e + n[6]),
                (h[l + 13] = i + n[7]);
            return (t._upload = !0), !0;
          }),
          (t.fillTranglesVB = function(t, e, i, n, a, r, s) {
            var o = (t._byteLength >> 2) + n.length;
            t.byteLength = o << 2;
            var l = t.getFloat32Array();
            o -= n.length;
            for (
              var h = n.length, c = a.a, u = a.b, _ = a.c, d = a.d, f = 0;
              f < h;
              f += 4
            )
              if (
                ((l[o + f + 2] = n[f + 2]),
                (l[o + f + 3] = n[f + 3]),
                1 !== c || 0 !== u || 0 !== _ || 1 !== d)
              ) {
                a.bTransform = !0;
                var p = a.tx + r,
                  m = a.ty + s;
                (l[o + f] = (n[f] + e) * c + (n[f + 1] + i) * _ + p),
                  (l[o + f + 1] = (n[f] + e) * u + (n[f + 1] + i) * d + m);
              } else
                (a.bTransform = !1),
                  (e += a.tx + r),
                  (i += a.ty + s),
                  (l[o + f] = e + n[f]),
                  (l[o + f + 1] = i + n[f + 1]);
            return (t._upload = !0), !0;
          }),
          (t.copyPreImgVb = function(t, e, i) {
            var n = t._byteLength >> 2;
            t.byteLength = (n + 16) << 2;
            for (var a = t.getFloat32Array(), r = 0, s = n - 16; r < 4; r++)
              (a[n] = a[s] + e),
                ++s,
                (a[++n] = a[s] + i),
                ++s,
                (a[++n] = a[s]),
                ++s,
                (a[++n] = a[s]),
                ++n,
                ++s;
            t._upload = !0;
          }),
          (t.fillRectImgVb = function(t, e, i, n, a, r, s, o, l, h, c, u, _) {
            void 0 === _ && (_ = !1);
            var d,
              f,
              p,
              m,
              g,
              y,
              v,
              b,
              w,
              x,
              I,
              C,
              S,
              T,
              M,
              E,
              L = 1,
              D = o.a,
              A = o.b,
              N = o.c,
              R = o.d,
              B = e && e.width < 99999999;
            if (
              (1 !== D || 0 !== A || 0 !== N || 1 !== R
                ? ((o.bTransform = !0),
                  0 === A &&
                    0 === N &&
                    ((L = 23),
                    (w = a + i),
                    (x = r + n),
                    (d = D * i + (I = o.tx + l)),
                    (p = D * w + I),
                    (f = R * n + (C = o.ty + h)),
                    (m = R * x + C)))
                : ((L = 23),
                  (o.bTransform = !1),
                  (p = (d = i + o.tx + l) + a),
                  (m = (f = n + o.ty + h) + r)),
              B &&
                ((g = e.x), (y = e.y), (v = e.width + g), (b = e.height + y)),
              1 !== L)
            ) {
              if (Math.min(d, p) >= v) return !1;
              if (Math.min(f, m) >= b) return !1;
              if (Math.max(p, d) <= g) return !1;
              if (Math.max(m, f) <= y) return !1;
            }
            var k = t._byteLength >> 2;
            t.byteLength = (k + 16) << 2;
            var P = t.getFloat32Array();
            switch (
              ((P[k + 2] = s[0]),
              (P[k + 3] = s[1]),
              (P[k + 6] = s[2]),
              (P[k + 7] = s[3]),
              (P[k + 10] = s[4]),
              (P[k + 11] = s[5]),
              (P[k + 14] = s[6]),
              (P[k + 15] = s[7]),
              L)
            ) {
              case 1:
                (I = o.tx + l), (C = o.ty + h);
                var O = D * i,
                  U = N * n,
                  V = R * n,
                  F = A * i,
                  H = D * (w = a + i),
                  G = N * (x = r + n),
                  z = R * x,
                  j = A * w;
                _
                  ? ((S = O + U + I),
                    (M = Math.round(S) - S),
                    (T = V + F + C),
                    (E = Math.round(T) - T),
                    (P[k] = S + M),
                    (P[k + 1] = T + E),
                    (P[k + 4] = H + U + I + M),
                    (P[k + 5] = V + j + C + E),
                    (P[k + 8] = H + G + I + M),
                    (P[k + 9] = z + j + C + E),
                    (P[k + 12] = O + G + I + M),
                    (P[k + 13] = z + F + C + E))
                  : ((P[k] = O + U + I),
                    (P[k + 1] = V + F + C),
                    (P[k + 4] = H + U + I),
                    (P[k + 5] = V + j + C),
                    (P[k + 8] = H + G + I),
                    (P[k + 9] = z + j + C),
                    (P[k + 12] = O + G + I),
                    (P[k + 13] = z + F + C));
                break;
              case 23:
                _
                  ? ((S = d + c),
                    (M = Math.round(S) - S),
                    (T = f),
                    (E = Math.round(T) - T),
                    (P[k] = S + M),
                    (P[k + 1] = T + E),
                    (P[k + 4] = p + c + M),
                    (P[k + 5] = f + E),
                    (P[k + 8] = p + M),
                    (P[k + 9] = m + E),
                    (P[k + 12] = d + M),
                    (P[k + 13] = m + E))
                  : ((P[k] = d + c),
                    (P[k + 1] = f),
                    (P[k + 4] = p + c),
                    (P[k + 5] = f),
                    (P[k + 8] = p),
                    (P[k + 9] = m),
                    (P[k + 12] = d),
                    (P[k + 13] = m));
            }
            return (t._upload = !0), !0;
          }),
          (t.fillLineVb = function(e, i, n, a, r, s, o, l) {
            var h = 0.5 * o,
              c = t._fillLineArray,
              u = -(a - s),
              _ = n - r,
              d = Math.sqrt(u * u + _ * _);
            (u /= d),
              (_ /= d),
              (u *= h),
              (_ *= h),
              (c[0] = n - u),
              (c[1] = a - _),
              (c[4] = n + u),
              (c[5] = a + _),
              (c[8] = r + u),
              (c[9] = s + _),
              (c[12] = r - u),
              (c[13] = s - _),
              l && l.transformPointArray(c, c);
            var f = 16 + (e._byteLength >> 2);
            return (e.byteLength = f << 2), e.insertData(c, f - 16), !0;
          }),
          (t._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
          t
        );
      })(),
      gt =
        ((function() {
          function t() {}
          a(t, 'laya.webgl.utils.MatirxArray'),
            (t.ArrayMul = function(e, i, n) {
              if (e)
                if (i)
                  for (
                    var a = NaN, r = NaN, s = NaN, o = NaN, l = 0;
                    l < 4;
                    l++
                  )
                    (a = e[l]),
                      (r = e[l + 4]),
                      (s = e[l + 8]),
                      (o = e[l + 12]),
                      (n[l] = a * i[0] + r * i[1] + s * i[2] + o * i[3]),
                      (n[l + 4] = a * i[4] + r * i[5] + s * i[6] + o * i[7]),
                      (n[l + 8] = a * i[8] + r * i[9] + s * i[10] + o * i[11]),
                      (n[l + 12] =
                        a * i[12] + r * i[13] + s * i[14] + o * i[15]);
                else t.copyArray(e, n);
              else t.copyArray(i, n);
            }),
            (t.copyArray = function(t, e) {
              if (t && e) for (var i = 0; i < t.length; i++) e[i] = t[i];
            });
        })(),
        (function() {
          function t(t, e, i) {
            (this._stride = 0),
              (this.vertNum = 0),
              (this.indexNum = 0),
              (this._applied = !1),
              (this._vb = null),
              (this._ib = null),
              (this._vao = null),
              (this._attribInfo = null),
              (this._quadNum = 0),
              (this.canReuse = !1),
              (this._stride = t),
              (this._vb = new $t(t, 35048)),
              e && this._vb._resizeBuffer(e, !1),
              (this._ib = new Qt()),
              i && this._ib._resizeBuffer(i, !1);
          }
          a(t, 'laya.webgl.utils.Mesh2D');
          var e = t.prototype;
          return (
            (e.cloneWithNewVB = function() {
              var e = new t(this._stride, 0, 0);
              return (
                (e._ib = this._ib),
                (e._quadNum = this._quadNum),
                (e._attribInfo = this._attribInfo),
                e
              );
            }),
            (e.cloneWithNewVBIB = function() {
              var e = new t(this._stride, 0, 0);
              return (e._attribInfo = this._attribInfo), e;
            }),
            (e.getVBW = function() {
              return this._vb.setNeedUpload(), this._vb;
            }),
            (e.getVBR = function() {
              return this._vb;
            }),
            (e.getIBR = function() {
              return this._ib;
            }),
            (e.getIBW = function() {
              return this._ib.setNeedUpload(), this._ib;
            }),
            (e.createQuadIB = function(t) {
              (this._quadNum = t),
                this._ib._resizeBuffer(6 * t * 2, !1),
                (this._ib.byteLength = this._ib.bufferLength);
              for (
                var e = this._ib.getUint16Array(), i = 0, n = 0, a = 0;
                a < t;
                a++
              )
                (e[i++] = n),
                  (e[i++] = n + 2),
                  (e[i++] = n + 1),
                  (e[i++] = n),
                  (e[i++] = n + 3),
                  (e[i++] = n + 2),
                  (n += 4);
              this._ib.setNeedUpload();
            }),
            (e.setAttributes = function(t) {
              if (((this._attribInfo = t), this._attribInfo.length % 3 != 0))
                throw 'Mesh2D setAttributes error!';
            }),
            (e.getEleNum = function() {
              return this._ib.getBuffer().byteLength / 2;
            }),
            (e.releaseMesh = function() {}),
            (e.destroy = function() {}),
            (e.clearVB = function() {
              this._vb.clear();
            }),
            (t._gvaoid = 0),
            t
          );
        })()),
      yt = (function() {
        function t() {}
        return (
          a(t, 'laya.webgl.utils.RenderState2D'),
          (t.getMatrArray = function() {
            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
          }),
          (t.mat2MatArray = function(e, i) {
            var n = e,
              a = i;
            return (
              (a[0] = n.a),
              (a[1] = n.b),
              (a[2] = t.EMPTYMAT4_ARRAY[2]),
              (a[3] = t.EMPTYMAT4_ARRAY[3]),
              (a[4] = n.c),
              (a[5] = n.d),
              (a[6] = t.EMPTYMAT4_ARRAY[6]),
              (a[7] = t.EMPTYMAT4_ARRAY[7]),
              (a[8] = t.EMPTYMAT4_ARRAY[8]),
              (a[9] = t.EMPTYMAT4_ARRAY[9]),
              (a[10] = t.EMPTYMAT4_ARRAY[10]),
              (a[11] = t.EMPTYMAT4_ARRAY[11]),
              (a[12] = n.tx),
              (a[13] = n.ty),
              (a[14] = t.EMPTYMAT4_ARRAY[14]),
              (a[15] = t.EMPTYMAT4_ARRAY[15]),
              i
            );
          }),
          (t.restoreTempArray = function() {
            (t.TEMPMAT4_ARRAY[0] = 1),
              (t.TEMPMAT4_ARRAY[1] = 0),
              (t.TEMPMAT4_ARRAY[4] = 0),
              (t.TEMPMAT4_ARRAY[5] = 1),
              (t.TEMPMAT4_ARRAY[12] = 0),
              (t.TEMPMAT4_ARRAY[13] = 0);
          }),
          (t.clear = function() {
            (t.worldScissorTest = !1),
              (t.worldShaderDefines = null),
              (t.worldFilters = null),
              (t.worldAlpha = 1),
              (t.worldClipRect.x = t.worldClipRect.y = 0),
              (t.worldClipRect.width = t.width),
              (t.worldClipRect.height = t.height),
              (t.curRenderTarget = null);
          }),
          (t._MAXSIZE = 99999999),
          (t.EMPTYMAT4_ARRAY = [
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
          ]),
          (t.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
          (t.worldMatrix4 = t.TEMPMAT4_ARRAY),
          (t.worldAlpha = 1),
          (t.worldScissorTest = !1),
          (t.worldFilters = null),
          (t.worldShaderDefines = null),
          (t.curRenderTarget = null),
          (t.width = 0),
          (t.height = 0),
          n(t, [
            'worldMatrix',
            function() {
              return (this.worldMatrix = new b());
            },
            'worldClipRect',
            function() {
              return (this.worldClipRect = new x(0, 0, 99999999, 99999999));
            }
          ]),
          t
        );
      })(),
      vt = (function() {
        function t(t, i, n, a, r) {
          function s(t) {
            var i = [],
              n = new e(i);
            return o._compileToTree(n, t.split('\n'), 0, i, r), n;
          }
          var o = this,
            l = c.now();
          (this._VS = s(i)),
            (this._PS = s(n)),
            (this._nameMap = a),
            c.now() - l > 2 &&
              console.log(
                'ShaderCompile use time:' +
                  (c.now() - l) +
                  '  size:' +
                  i.length +
                  '/' +
                  n.length
              );
        }
        var e, i;
        a(t, 'laya.webgl.utils.ShaderCompile');
        var r = t.prototype;
        return (
          (r._compileToTree = function(i, n, a, r, s) {
            var o,
              l,
              h,
              c,
              u,
              _,
              d,
              f = 0,
              p = 0,
              m = 0,
              g = 0;
            for (p = a; p < n.length; p++)
              if (!((h = n[p]).length < 1) && 0 !== (f = h.indexOf('//'))) {
                if (
                  (f >= 0 && (h = h.substr(0, f)),
                  (o = d || new e(r)),
                  (d = null),
                  (o.text = h),
                  (o.noCompile = !0),
                  (f = h.indexOf('#')) >= 0)
                ) {
                  for (c = '#', g = f + 1, m = h.length; g < m; g++) {
                    var y = h.charAt(g);
                    if (' ' === y || '\t' === y || '?' === y) break;
                    c += y;
                  }
                  switch (((o.name = c), c)) {
                    case '#ifdef':
                    case '#ifndef':
                      if (
                        ((o.src = h),
                        (o.noCompile = null != h.match(/[!&|()=<>]/)),
                        o.noCompile
                          ? console.log(
                              'function():Boolean{return ' +
                                h.substr(f + o.name.length) +
                                '}'
                            )
                          : ((_ = h.replace(/^\s*/, '').split(/\s+/)),
                            o.setCondition(_[1], '#ifdef' === c ? 1 : 2),
                            (o.text = '//' + o.text)),
                        o.setParent(i),
                        (i = o),
                        s)
                      )
                        for (
                          _ = h.substr(g).split(t._splitToWordExps3), g = 0;
                          g < _.length;
                          g++
                        )
                          (h = _[g]).length && (s[h] = !0);
                      continue;
                    case '#if':
                      if (
                        ((o.src = h),
                        (o.noCompile = !0),
                        o.setParent(i),
                        (i = o),
                        s)
                      )
                        for (
                          _ = h.substr(g).split(t._splitToWordExps3), g = 0;
                          g < _.length;
                          g++
                        )
                          (h = _[g]).length && 'defined' != h && (s[h] = !0);
                      continue;
                    case '#else':
                      (o.src = h),
                        (l = (i = i.parent).childs[i.childs.length - 1]),
                        (o.noCompile = l.noCompile),
                        o.noCompile ||
                          ((o.condition = l.condition),
                          (o.conditionType = 1 == l.conditionType ? 2 : 1),
                          (o.text =
                            '//' +
                            o.text +
                            ' ' +
                            l.text +
                            ' ' +
                            o.conditionType)),
                        o.setParent(i),
                        (i = o);
                      continue;
                    case '#endif':
                      (l = (i = i.parent).childs[i.childs.length - 1]),
                        (o.noCompile = l.noCompile),
                        o.noCompile || (o.text = '//' + o.text),
                        o.setParent(i);
                      continue;
                    case '#include':
                      _ = t.splitToWords(h, null);
                      var v = t.includes[_[1]];
                      if (!v)
                        throw 'ShaderCompile error no this include file:' +
                          _[1];
                      if ((f = _[0].indexOf('?')) < 0) {
                        o.setParent(i),
                          (h = v.getWith('with' == _[2] ? _[3] : null)),
                          this._compileToTree(o, h.split('\n'), 0, r, s),
                          (o.text = '');
                        continue;
                      }
                      o.setCondition(_[0].substr(f + 1), 1),
                        (o.text = v.getWith('with' == _[2] ? _[3] : null));
                      break;
                    case '#import':
                      (u = (_ = t.splitToWords(h, null))[1]),
                        r.push({
                          node: o,
                          file: t.includes[u],
                          ofs: o.text.length
                        });
                      continue;
                  }
                } else {
                  if ((l = i.childs[i.childs.length - 1]) && !l.name) {
                    r.length > 0 && t.splitToWords(h, l),
                      (d = o),
                      (l.text += '\n' + h);
                    continue;
                  }
                  r.length > 0 && t.splitToWords(h, o);
                }
                o.setParent(i);
              }
          }),
          (r.createShader = function(t, e, i) {
            var n = {},
              a = '';
            if (t) for (var r in t) (a += '#define ' + r + '\n'), (n[r] = !0);
            var s = this._VS.toscript(n, []),
              o = this._PS.toscript(n, []);
            return (i || Yt.create)(
              a + s.join('\n'),
              a + o.join('\n'),
              e,
              this._nameMap
            );
          }),
          (t._parseOne = function(e, i, n, a, r, s) {
            var o = {
              type: t.shaderParamsMap[n[a + 1]],
              name: n[a + 2],
              size: isNaN(parseInt(n[a + 3])) ? 1 : parseInt(n[a + 3])
            };
            return (
              s && ('attribute' == r ? e.push(o) : i.push(o)),
              ':' == n[a + 3] && ((o.type = n[a + 4]), (a += 2)),
              (a += 2)
            );
          }),
          (t.addInclude = function(e, n) {
            if (!n || 0 === n.length)
              throw new Error('add shader include file err:' + e);
            if (t.includes[e])
              throw new Error('add shader include file err, has add:' + e);
            t.includes[e] = new i(n);
          }),
          (t.preGetParams = function(e, i) {
            var n = [e, i],
              a = {},
              r = [],
              s = [],
              o = {},
              l = [];
            (a.attributes = r), (a.uniforms = s), (a.defines = o);
            for (var h = 0, c = 0, u = 0; u < 2; u++) {
              n[u] = n[u].replace(t._removeAnnotation, '');
              var _,
                d = n[u].match(t._reg);
              for (h = 0, c = d.length; h < c; h++) {
                var f = d[h];
                if ('attribute' == f || 'uniform' == f)
                  h = t._parseOne(r, s, d, h, f, !0);
                else {
                  if ('#define' == f) {
                    l[(f = d[++h])] = 1;
                    continue;
                  }
                  if ('#ifdef' == f) {
                    o[(_ = d[++h])] = o[_] || [];
                    for (h++; h < c; h++)
                      if ('attribute' == (f = d[h]) || 'uniform' == f)
                        h = t._parseOne(r, s, d, h, f, l[_]);
                      else if ('#else' == f)
                        for (h++; h < c; h++)
                          if ('attribute' == (f = d[h]) || 'uniform' == f)
                            h = t._parseOne(r, s, d, h, f, !l[_]);
                          else if ('#endif' == f) break;
                  }
                }
              }
            }
            return a;
          }),
          (t.splitToWords = function(t, e) {
            for (var i, n, a = [], r = -1, s = 0, o = t.length; s < o; s++)
              if (((i = t.charAt(s)), ' \t=+-*/&%!<>()\'",;'.indexOf(i) >= 0)) {
                if (
                  (r >= 0 && s - r > 1 && ((n = t.substr(r, s - r)), a.push(n)),
                  '"' == i || "'" == i)
                ) {
                  var l = t.indexOf(i, s + 1);
                  if (l < 0) throw 'Sharder err:' + t;
                  a.push(t.substr(s + 1, l - s - 1)), (s = l), (r = -1);
                  continue;
                }
                '(' == i &&
                  e &&
                  a.length > 0 &&
                  ((n = a[a.length - 1] + ';'),
                  'vec4;main;'.indexOf(n) < 0 && (e.useFuns += n)),
                  (r = -1);
              } else r < 0 && (r = s);
            return (
              r < o && o - r > 1 && ((n = t.substr(r, o - r)), a.push(n)), a
            );
          }),
          (t.IFDEF_NO = 0),
          (t.IFDEF_YES = 1),
          (t.IFDEF_ELSE = 2),
          (t.IFDEF_PARENT = 3),
          (t._removeAnnotation = new RegExp(
            '(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)',
            'g'
          )),
          (t._reg = new RegExp(
            '(".*")|(\'.*\')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])',
            'g'
          )),
          (t._splitToWordExps = new RegExp(
            '[(".*")]+|[(\'.*\')]+|([ \\t=\\+\\-*/&%!<>!%(),;])',
            'g'
          )),
          (t.includes = {}),
          n(t, [
            'shaderParamsMap',
            function() {
              return (this.shaderParamsMap = {
                float: 5126,
                int: 5124,
                bool: 35670,
                vec2: 35664,
                vec3: 35665,
                vec4: 35666,
                ivec2: 35667,
                ivec3: 35668,
                ivec4: 35669,
                bvec2: 35671,
                bvec3: 35672,
                bvec4: 35673,
                mat2: 35674,
                mat3: 35675,
                mat4: 35676,
                sampler2D: 35678,
                samplerCube: 35680
              });
            },
            '_splitToWordExps3',
            function() {
              return (this._splitToWordExps3 = new RegExp(
                '[ \\t=\\+\\-*/&%!<>!%(),;\\|]',
                'g'
              ));
            }
          ]),
          (t.__init$ = function() {
            (e = (function() {
              function t(t) {
                (this.childs = []),
                  (this.text = ''),
                  (this.parent = null),
                  (this.name = null),
                  (this.noCompile = !1),
                  (this.includefiles = null),
                  (this.condition = null),
                  (this.conditionType = 0),
                  (this.useFuns = ''),
                  (this.z = 0),
                  (this.src = null),
                  (this.includefiles = t);
              }
              a(t, '');
              var e = t.prototype;
              return (
                (e.setParent = function(t) {
                  t.childs.push(this), (this.z = t.z + 1), (this.parent = t);
                }),
                (e.setCondition = function(t, e) {
                  t &&
                    ((this.conditionType = e),
                    (t = t.replace(/(\s*$)/g, '')),
                    (this.condition = function() {
                      return this[t];
                    }),
                    (this.condition.__condition = t));
                }),
                (e.toscript = function(e, i) {
                  return this._toscript(e, i, ++t.__id);
                }),
                (e._toscript = function(t, e, i) {
                  if (this.childs.length < 1 && !this.text) return e;
                  e.length;
                  if (this.condition) {
                    var n = !!this.condition.call(t);
                    if ((2 === this.conditionType && (n = !n), !n)) return e;
                  }
                  if (
                    (this.text && e.push(this.text),
                    this.childs.length > 0 &&
                      this.childs.forEach(function(n, a, r) {
                        n._toscript(t, e, i);
                      }),
                    this.includefiles.length > 0 && this.useFuns.length > 0)
                  )
                    for (var a, r = 0, s = this.includefiles.length; r < s; r++)
                      this.includefiles[r].curUseID != i &&
                        (a = this.includefiles[r].file.getFunsScript(
                          this.useFuns
                        )).length > 0 &&
                        ((this.includefiles[r].curUseID = i),
                        (e[0] = a + e[0]));
                  return e;
                }),
                (t.__id = 1),
                t
              );
            })()),
              (i = (function() {
                function e(e) {
                  (this.script = null),
                    (this.codes = {}),
                    (this.funs = {}),
                    (this.curUseID = -1),
                    (this.funnames = ''),
                    (this.script = e);
                  for (var i = 0, n = 0, a = 0; ; ) {
                    if ((i = e.indexOf('#begin', i)) < 0) break;
                    for (a = i + 5; ; ) {
                      if ((a = e.indexOf('#end', a)) < 0) break;
                      if ('i' !== e.charAt(a + 4)) break;
                      a += 5;
                    }
                    if (a < 0) throw 'add include err,no #end:' + e;
                    n = e.indexOf('\n', i);
                    var r = t.splitToWords(e.substr(i, n - i), null);
                    'code' == r[1]
                      ? (this.codes[r[2]] = e.substr(n + 1, a - n - 1))
                      : 'function' == r[1] &&
                        ((n = e.indexOf('function', i)),
                        (n += 'function'.length),
                        (this.funs[r[3]] = e.substr(n + 1, a - n - 1)),
                        (this.funnames += r[3] + ';')),
                      (i = a + 1);
                  }
                }
                a(e, '');
                var i = e.prototype;
                return (
                  (i.getWith = function(t) {
                    var e = t ? this.codes[t] : this.script;
                    if (!e) throw 'get with error:' + t;
                    return e;
                  }),
                  (i.getFunsScript = function(t) {
                    var e = '';
                    for (var i in this.funs)
                      t.indexOf(i + ';') >= 0 && (e += this.funs[i]);
                    return e;
                  }),
                  e
                );
              })());
          }),
          t
        );
      })(),
      bt = (function() {
        function t() {}
        return (
          a(t, 'laya.webgl.WebGL'),
          (t._uint8ArraySlice = function() {
            for (
              var t = this.length, e = new Uint8Array(this.length), i = 0;
              i < t;
              i++
            )
              e[i] = this[i];
            return e;
          }),
          (t._float32ArraySlice = function() {
            for (
              var t = this.length, e = new Float32Array(this.length), i = 0;
              i < t;
              i++
            )
              e[i] = this[i];
            return e;
          }),
          (t._uint16ArraySlice = function(t) {
            var e,
              i = arguments,
              n = 0,
              a = 0;
            if (0 === i.length)
              for (n = this.length, e = new Uint16Array(n), a = 0; a < n; a++)
                e[a] = this[a];
            else if (2 === i.length) {
              var r = i[0],
                s = i[1];
              if (s > r)
                for (n = s - r, e = new Uint16Array(n), a = r; a < s; a++)
                  e[a - r] = this[a];
              else e = new Uint16Array(0);
            }
            return e;
          }),
          (t.expandContext = function() {
            var t = f.prototype,
              e = CanvasRenderingContext2D.prototype;
            (e.fillTrangles = t.fillTrangles),
              Jt.__int__(null),
              (e.setIBVB = function(t, e, i, n, a, r, s, o, l, h) {
                void 0 === l && (l = 0),
                  void 0 === h && (h = 0),
                  null === i &&
                    ((this._ib = this._ib || Qt.QuadrangleIB),
                    (i = this._ib),
                    mt.expandIBQuadrangle(i, n._byteLength / 64 + 8)),
                  this._setIBVB(t, e, i, n, a, r, s, o, l, h);
              }),
              (e.fillTrangles = function(t, e, i, n, a) {
                (this._curMat = this._curMat || b.create()),
                  (this._vb = this._vb || $t.create()),
                  this._ib ||
                    ((this._ib = Qt.create()),
                    mt.fillIBQuadrangle(this._ib, s / 4));
                var r = this._vb,
                  s = n.length >> 4;
                mt.fillTranglesVB(r, e, i, n, a || this._curMat, 0, 0),
                  mt.expandIBQuadrangle(this._ib, r._byteLength / 64 + 8);
                var o = new Ct(1, 0);
                o.textureHost = t;
                var l = new Zt(
                  'attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }',
                  'precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}'
                );
                (r._vertType = 3),
                  this._setIBVB(e, i, this._ib, r, 6 * s, a, l, o, 0, 0);
              });
          }),
          (t.enable = function() {
            if ((c.__init__(), I.isConchApp && !I.isConchWebGL))
              return (
                (M.skinAniSprite = function() {
                  return new tt();
                }),
                t.expandContext(),
                !1
              );
            if (
              ((M.getWebGLContext = function(t) {
                for (
                  var e,
                    i = [
                      'webgl',
                      'experimental-webgl',
                      'webkit-3d',
                      'moz-webgl'
                    ],
                    n = 0;
                  n < i.length;
                  n++
                ) {
                  try {
                    e = t.getContext(i[n], {
                      stencil: d.isStencil,
                      alpha: d.isAlpha,
                      antialias: d.isAntialias,
                      premultipliedAlpha: d.premultipliedAlpha,
                      preserveDrawingBuffer: d.preserveDrawingBuffer
                    });
                  } catch (t) {}
                  if (e) return e;
                }
                return null;
              }),
              null == (t.mainContext = M.getWebGLContext(I._mainCanvas)))
            )
              return !1;
            if (I.isWebGL) return !0;
            (y.create = function(t, e) {
              return new te(t, e);
            }),
              (v.create = function(t, e, i, n, a, r, s) {
                return new qt(t, e, i, n, a, r, s);
              }),
              (I.WebGL = t),
              (I.isWebGL = !0),
              dt.__init__(),
              (M.createRenderSprite = function(t, e) {
                return new St(t, e);
              }),
              (M.createWebGLContext2D = function(t) {
                return new It(t);
              }),
              (M.changeWebGLSize = function(t, e) {
                laya.webgl.WebGL.onStageResize(t, e);
              }),
              (M.createGraphics = function() {
                return new xt();
              });
            var e = M.createFilterAction;
            return (
              (M.createFilterAction =
                e ||
                function(t) {
                  return new Tt();
                }),
              (M.clear = function(t) {
                yt.worldScissorTest &&
                  laya.webgl.WebGL.mainContext.disable(3089);
                var e = I.context.ctx,
                  i =
                    0 == e._submits._length || d.preserveDrawingBuffer
                      ? _.create(t)._color
                      : L._wgColor;
                i && e.clearBG(i[0], i[1], i[2], i[3]), yt.clear();
              }),
              (M.addToAtlas = function(t, e) {
                void 0 === e && (e = !1);
                var n = t.bitmap;
                I.optimizeTextureMemory(t.url, t)
                  ? i.__typeof(n, 'laya.webgl.resource.IMergeAtlasBitmap') &&
                    n.allowMerageInAtlas &&
                    n.on('recovered', t, t.addTextureToAtlas)
                  : (n.enableMerageInAtlas = !1);
              }),
              (M.isAtlas = function(t) {
                return t instanceof laya.webgl.atlas.AtlasWebGLCanvas;
              }),
              F._enable(),
              (M.beginFlush = function() {
                for (
                  var t = F.instance, e = t.getAtlaserCount(), i = 0;
                  i < e;
                  i++
                ) {
                  var n = t.getAtlaserByIndex(i).texture;
                  n._flashCacheImageNeedFlush && M.flashFlushImage(n);
                }
              }),
              (M.drawToCanvas = function(t, e, i, n, a, r) {
                (i <= 0 || n <= 0) &&
                  console.log(
                    '[error] canvasWidth and canvasHeight should greater than zero'
                  ),
                  (a -= t.x),
                  (r -= t.y),
                  (i |= 1),
                  (n |= 1),
                  (a |= 1),
                  (r |= 1);
                var s = Pt.create(i, n, 6408, 5121, 0, !1);
                s.start(),
                  s.clear(0, 0, 0, 0),
                  I.context.clear(),
                  C.renders[e]._fun(t, I.context, a, yt.height - n + r),
                  I.context.flush(),
                  s.end();
                var o = s.getData(0, 0, i, n);
                if ((s.recycle(), o.byteLength == i * n * 4)) {
                  var l = new jt();
                  (l._canvas = c.createElement('canvas')), l.size(i, n);
                  var h = l._canvas.getContext('2d');
                  c.canvas.size(i, n);
                  var u = c.context,
                    _ = u.createImageData(i, n);
                  return (
                    _.data.set(new Uint8ClampedArray(o.buffer)),
                    (l._imgData = _),
                    u.putImageData(_, 0, 0),
                    h.save(),
                    h.translate(0, n),
                    h.scale(1, -1),
                    h.drawImage(c.canvas.source, 0, 0),
                    h.restore(),
                    l
                  );
                }
                console.log(
                  'drawToCanvas error: w:' +
                    i +
                    ',h:' +
                    n +
                    ',datalen:' +
                    o.byteLength
                );
              }),
              (M.createFilterAction = function(t) {
                var e;
                switch (t) {
                  case 32:
                    e = new Tt();
                }
                return e;
              }),
              (M.addTextureToAtlas = function(t) {
                t._uvID++,
                  F._atlasRestore++,
                  t.bitmap.enableMerageInAtlas && F.instance.addToAtlas(t);
              }),
              (M.getTexturePixels = function(t, e, i, n, a) {
                I.context.ctx.clear();
                var r = new E();
                r.graphics.drawTexture(t, -e, -i);
                var s = Pt.create(n, a);
                s.start(),
                  s.clear(0, 0, 0, 0),
                  r.render(I.context, 0, 0),
                  I.context.ctx.flush(),
                  s.end();
                for (
                  var o = s.getData(0, 0, n, a), l = [], h = 0, c = a - 1;
                  c >= 0;
                  c--
                )
                  for (var u = 0; u < n; u++)
                    (h = 4 * (c * n + u)),
                      l.push(o[h]),
                      l.push(o[h + 1]),
                      l.push(o[h + 2]),
                      l.push(o[h + 3]);
                return l;
              }),
              (M.skinAniSprite = function() {
                return new tt();
              }),
              (g.create = function(t, e) {
                var i = new jt();
                return (i._imgData = e), (i.flipY = !1), i;
              }),
              (p._filterStart = function(t, e, i, n, a) {
                var r = t.getValue('bounds'),
                  s = Pt.create(r.width, r.height);
                if (
                  (s.start(),
                  s.clear(0, 0, 0, 0),
                  t.addValue('src', s),
                  t.addValue('ScissorTest', yt.worldScissorTest),
                  yt.worldScissorTest)
                ) {
                  var o = new x();
                  o.copyFrom(i.ctx._clipRect),
                    t.addValue('clipRect', o),
                    (yt.worldScissorTest = !1),
                    laya.webgl.WebGL.mainContext.disable(3089);
                }
              }),
              (p._filterEnd = function(t, e, i, n, a) {
                var r = t.getValue('bounds');
                t.getValue('src').end();
                var s = Pt.create(r.width, r.height);
                s.start(),
                  s.clear(0, 0, 0, 0),
                  t.addValue('out', s),
                  e._set$P('_filterCache', s),
                  e._set$P(
                    '_isHaveGlowFilter',
                    t.getValue('_isHaveGlowFilter')
                  );
              }),
              (p._EndTarget = function(t, e) {
                t.getValue('src').recycle();
                t.getValue('out').end();
                if (t.getValue('ScissorTest')) {
                  (yt.worldScissorTest = !0),
                    laya.webgl.WebGL.mainContext.enable(3089),
                    e.ctx.save();
                  var i = t.getValue('clipRect');
                  e.ctx.clipRect(i.x, i.y, i.width, i.height);
                }
              }),
              (p._useSrc = function(t) {
                var e = t.getValue('out');
                e.end(), (e = t.getValue('src')).start(), e.clear(0, 0, 0, 0);
              }),
              (p._endSrc = function(t) {
                t.getValue('src').end();
              }),
              (p._useOut = function(t) {
                var e = t.getValue('src');
                e.end(), (e = t.getValue('out')).start(), e.clear(0, 0, 0, 0);
              }),
              (p._endOut = function(t) {
                t.getValue('out').end();
              }),
              (p._recycleScope = function(t) {
                t.recycle();
              }),
              (p._filter = function(t, e, i, n) {
                var a = this._next;
                if (a) {
                  var r = t.filters,
                    s = r.length;
                  if (1 == s && 32 == r[0].type)
                    return (
                      e.ctx.save(),
                      e.ctx.setFilters([r[0]]),
                      a._fun.call(a, t, e, i, n),
                      void e.ctx.restore()
                    );
                  var o,
                    l,
                    h = ot.create(),
                    c = w.TEMP,
                    u = e.ctx._getTransformMatrix(),
                    _ = b.create();
                  u.copyTo(_);
                  var d = 0,
                    f = 0,
                    m = !1,
                    g = t._$P._filterCache ? t._$P._filterCache : null;
                  if (!g || t._repaint) {
                    (m = t._isHaveGlowFilter()),
                      h.addValue('_isHaveGlowFilter', m),
                      m && ((d = 50), (f = 25)),
                      (l = new x()).copyFrom(t.getSelfBounds()),
                      (l.x += t.x),
                      (l.y += t.y),
                      (l.x -= t.pivotX + 4),
                      (l.y -= t.pivotY + 4);
                    var y = l.x,
                      v = l.y;
                    if (
                      ((l.width += d + 8),
                      (l.height += d + 8),
                      (c.x = l.x * _.a + l.y * _.c),
                      (c.y = l.y * _.d + l.x * _.b),
                      (l.x = c.x),
                      (l.y = c.y),
                      (c.x = l.width * _.a + l.height * _.c),
                      (c.y = l.height * _.d + l.width * _.b),
                      (l.width = c.x),
                      (l.height = c.y),
                      l.width <= 0 || l.height <= 0)
                    )
                      return;
                    g && g.recycle(), h.addValue('bounds', l);
                    var I = st.create([h, t, e, 0, 0], p._filterStart);
                    e.addRenderObject(I),
                      (e.ctx._renderKey = 0),
                      (e.ctx._shader2D.glTexture = null);
                    var C = t.x - y + f,
                      S = t.y - v + f;
                    a._fun.call(a, t, e, C, S),
                      (I = st.create([h, t, e, 0, 0], p._filterEnd)),
                      e.addRenderObject(I);
                    for (var T = 0; T < s; T++) {
                      0 != T &&
                        ((I = st.create([h], p._useSrc)),
                        e.addRenderObject(I),
                        (o = Ct.create(1, 0)),
                        b.TEMP.identity(),
                        e.ctx.drawTarget(
                          h,
                          0,
                          0,
                          l.width,
                          l.height,
                          b.TEMP,
                          'out',
                          o,
                          null,
                          G.TOINT.overlay
                        ),
                        (I = st.create([h], p._useOut)),
                        e.addRenderObject(I));
                      r[T].action.apply3d(h, t, e, 0, 0);
                    }
                    (I = st.create([h, e], p._EndTarget)), e.addRenderObject(I);
                  } else {
                    if (
                      ((m =
                        !!t._$P._isHaveGlowFilter && t._$P._isHaveGlowFilter) &&
                        ((d = 50), (f = 25)),
                      (l = t.getBounds()).width <= 0 || l.height <= 0)
                    )
                      return;
                    (l.width += d),
                      (l.height += d),
                      (c.x = l.x * _.a + l.y * _.c),
                      (c.y = l.y * _.d + l.x * _.b),
                      (l.x = c.x),
                      (l.y = c.y),
                      (c.x = l.width * _.a + l.height * _.c),
                      (c.y = l.height * _.d + l.width * _.b),
                      (l.width = c.x),
                      (l.height = c.y),
                      h.addValue('out', g);
                  }
                  (i = i - f - t.x),
                    (n = n - f - t.y),
                    c.setTo(i, n),
                    _.transformPoint(c),
                    (i = c.x + l.x),
                    (n = c.y + l.y),
                    (o = Ct.create(1, 0)),
                    b.TEMP.identity(),
                    e.ctx.drawTarget(
                      h,
                      i,
                      n,
                      l.width,
                      l.height,
                      b.TEMP,
                      'out',
                      o,
                      null,
                      G.TOINT.overlay
                    ),
                    (I = st.create([h], p._recycleScope)),
                    e.addRenderObject(I),
                    _.destroy();
                }
              }),
              Float32Array.prototype.slice ||
                (Float32Array.prototype.slice = t._float32ArraySlice),
              Uint16Array.prototype.slice ||
                (Uint16Array.prototype.slice = t._uint16ArraySlice),
              Uint8Array.prototype.slice ||
                (Uint8Array.prototype.slice = t._uint8ArraySlice),
              !0
            );
          }),
          (t.onStageResize = function(e, i) {
            null != t.mainContext &&
              (t.mainContext.viewport(0, 0, e, i),
              (yt.width = e),
              (yt.height = i));
          }),
          (t.onInvalidGLRes = function() {
            F.instance.freeAll(),
              T.releaseContentManagers(!0),
              t.doNodeRepaint(i.stage),
              t.mainContext.viewport(0, 0, yt.width, yt.height),
              i.stage.event('devicelost');
          }),
          (t.doNodeRepaint = function(e) {
            0 == e.numChildren && e.repaint();
            for (var i = 0; i < e.numChildren; i++)
              t.doNodeRepaint(e.getChildAt(i));
          }),
          (t.init = function(e, i, n) {
            (t.mainCanvas = e),
              (g._createContext = function(t) {
                return new It(t);
              }),
              (jt._createContext = function(t) {
                return new It(t);
              });
            var a = laya.webgl.WebGL.mainContext;
            if (null != a.getShaderPrecisionFormat) {
              var r = a.getShaderPrecisionFormat(35633, 36338),
                s = a.getShaderPrecisionFormat(35632, 36338);
              t.shaderHighPrecision = !(!r.precision || !s.precision);
            } else t.shaderHighPrecision = !1;
            if (
              ((t.compressAstc = a.getExtension(
                'WEBGL_compressed_texture_astc'
              )),
              (t.compressAtc = a.getExtension('WEBGL_compressed_texture_atc')),
              (t.compressEtc = a.getExtension('WEBGL_compressed_texture_etc')),
              (t.compressEtc1 = a.getExtension(
                'WEBGL_compressed_texture_etc1'
              )),
              (t.compressPvrtc = a.getExtension(
                'WEBGL_compressed_texture_pvrtc'
              )),
              (t.compressS3tc = a.getExtension(
                'WEBGL_compressed_texture_s3tc'
              )),
              (t.compressS3tc_srgb = a.getExtension(
                'WEBGL_compressed_texture_s3tc_srgb'
              )),
              (a.deleteTexture1 = a.deleteTexture),
              (a.deleteTexture = function(t) {
                t == wt.curBindTexValue && (wt.curBindTexValue = null),
                  a.deleteTexture1(t);
              }),
              t.onStageResize(i, n),
              null == t.mainContext)
            )
              throw new Error('webGL getContext err!');
            N.__init__(),
              F.__init__(),
              Et.__init__(),
              rt.__init__(),
              It.__init__(),
              Ct.__init__(),
              Q.__init__(),
              Jt.__int__(a),
              G._init_(a),
              I.isConchApp && conch.setOnInvalidGLRes(t.onInvalidGLRes);
          }),
          (t.compressAstc = null),
          (t.compressAtc = null),
          (t.compressEtc = null),
          (t.compressEtc1 = null),
          (t.compressPvrtc = null),
          (t.compressS3tc = null),
          (t.compressS3tc_srgb = null),
          (t.mainCanvas = null),
          (t.mainContext = null),
          (t.antialias = !0),
          (t.shaderHighPrecision = !1),
          (t._bg_null = [0, 0, 0, 0]),
          t
        );
      })(),
      wt = (function() {
        function t() {}
        return (
          a(t, 'laya.webgl.WebGLContext'),
          (t.UseProgram = function(e) {
            return (
              t._useProgram !== e &&
              (bt.mainContext.useProgram(e), (t._useProgram = e), !0)
            );
          }),
          (t.setDepthTest = function(e, i) {
            i !== t._depthTest &&
              ((t._depthTest = i), i ? e.enable(2929) : e.disable(2929));
          }),
          (t.setDepthMask = function(e, i) {
            i !== t._depthMask && ((t._depthMask = i), e.depthMask(i));
          }),
          (t.setDepthFunc = function(e, i) {
            i !== t._depthFunc && ((t._depthFunc = i), e.depthFunc(i));
          }),
          (t.setBlend = function(e, i) {
            i !== t._blend &&
              ((t._blend = i), i ? e.enable(3042) : e.disable(3042));
          }),
          (t.setBlendFunc = function(e, i, n) {
            (i !== t._sFactor || n !== t._dFactor) &&
              ((t._sFactor = i), (t._dFactor = n), e.blendFunc(i, n));
          }),
          (t.setCullFace = function(e, i) {
            i !== t._cullFace &&
              ((t._cullFace = i), i ? e.enable(2884) : e.disable(2884));
          }),
          (t.setFrontFace = function(e, i) {
            i !== t._frontFace && ((t._frontFace = i), e.frontFace(i));
          }),
          (t.bindTexture = function(e, i, n) {
            e.bindTexture(i, n),
              (t.curBindTexTarget = i),
              (t.curBindTexValue = n);
          }),
          (t.DEPTH_BUFFER_BIT = 256),
          (t.STENCIL_BUFFER_BIT = 1024),
          (t.COLOR_BUFFER_BIT = 16384),
          (t.POINTS = 0),
          (t.LINES = 1),
          (t.LINE_LOOP = 2),
          (t.LINE_STRIP = 3),
          (t.TRIANGLES = 4),
          (t.TRIANGLE_STRIP = 5),
          (t.TRIANGLE_FAN = 6),
          (t.ZERO = 0),
          (t.ONE = 1),
          (t.SRC_COLOR = 768),
          (t.ONE_MINUS_SRC_COLOR = 769),
          (t.SRC_ALPHA = 770),
          (t.ONE_MINUS_SRC_ALPHA = 771),
          (t.DST_ALPHA = 772),
          (t.ONE_MINUS_DST_ALPHA = 773),
          (t.DST_COLOR = 774),
          (t.ONE_MINUS_DST_COLOR = 775),
          (t.SRC_ALPHA_SATURATE = 776),
          (t.FUNC_ADD = 32774),
          (t.BLEND_EQUATION = 32777),
          (t.BLEND_EQUATION_RGB = 32777),
          (t.BLEND_EQUATION_ALPHA = 34877),
          (t.FUNC_SUBTRACT = 32778),
          (t.FUNC_REVERSE_SUBTRACT = 32779),
          (t.BLEND_DST_RGB = 32968),
          (t.BLEND_SRC_RGB = 32969),
          (t.BLEND_DST_ALPHA = 32970),
          (t.BLEND_SRC_ALPHA = 32971),
          (t.CONSTANT_COLOR = 32769),
          (t.ONE_MINUS_CONSTANT_COLOR = 32770),
          (t.CONSTANT_ALPHA = 32771),
          (t.ONE_MINUS_CONSTANT_ALPHA = 32772),
          (t.BLEND_COLOR = 32773),
          (t.ARRAY_BUFFER = 34962),
          (t.ELEMENT_ARRAY_BUFFER = 34963),
          (t.ARRAY_BUFFER_BINDING = 34964),
          (t.ELEMENT_ARRAY_BUFFER_BINDING = 34965),
          (t.STREAM_DRAW = 35040),
          (t.STATIC_DRAW = 35044),
          (t.DYNAMIC_DRAW = 35048),
          (t.BUFFER_SIZE = 34660),
          (t.BUFFER_USAGE = 34661),
          (t.CURRENT_VERTEX_ATTRIB = 34342),
          (t.FRONT = 1028),
          (t.BACK = 1029),
          (t.CULL_FACE = 2884),
          (t.FRONT_AND_BACK = 1032),
          (t.BLEND = 3042),
          (t.DITHER = 3024),
          (t.STENCIL_TEST = 2960),
          (t.DEPTH_TEST = 2929),
          (t.SCISSOR_TEST = 3089),
          (t.POLYGON_OFFSET_FILL = 32823),
          (t.SAMPLE_ALPHA_TO_COVERAGE = 32926),
          (t.SAMPLE_COVERAGE = 32928),
          (t.NO_ERROR = 0),
          (t.INVALID_ENUM = 1280),
          (t.INVALID_VALUE = 1281),
          (t.INVALID_OPERATION = 1282),
          (t.OUT_OF_MEMORY = 1285),
          (t.CW = 2304),
          (t.CCW = 2305),
          (t.LINE_WIDTH = 2849),
          (t.ALIASED_POINT_SIZE_RANGE = 33901),
          (t.ALIASED_LINE_WIDTH_RANGE = 33902),
          (t.CULL_FACE_MODE = 2885),
          (t.FRONT_FACE = 2886),
          (t.DEPTH_RANGE = 2928),
          (t.DEPTH_WRITEMASK = 2930),
          (t.DEPTH_CLEAR_VALUE = 2931),
          (t.DEPTH_FUNC = 2932),
          (t.STENCIL_CLEAR_VALUE = 2961),
          (t.STENCIL_FUNC = 2962),
          (t.STENCIL_FAIL = 2964),
          (t.STENCIL_PASS_DEPTH_FAIL = 2965),
          (t.STENCIL_PASS_DEPTH_PASS = 2966),
          (t.STENCIL_REF = 2967),
          (t.STENCIL_VALUE_MASK = 2963),
          (t.STENCIL_WRITEMASK = 2968),
          (t.STENCIL_BACK_FUNC = 34816),
          (t.STENCIL_BACK_FAIL = 34817),
          (t.STENCIL_BACK_PASS_DEPTH_FAIL = 34818),
          (t.STENCIL_BACK_PASS_DEPTH_PASS = 34819),
          (t.STENCIL_BACK_REF = 36003),
          (t.STENCIL_BACK_VALUE_MASK = 36004),
          (t.STENCIL_BACK_WRITEMASK = 36005),
          (t.VIEWPORT = 2978),
          (t.SCISSOR_BOX = 3088),
          (t.COLOR_CLEAR_VALUE = 3106),
          (t.COLOR_WRITEMASK = 3107),
          (t.UNPACK_ALIGNMENT = 3317),
          (t.PACK_ALIGNMENT = 3333),
          (t.MAX_TEXTURE_SIZE = 3379),
          (t.MAX_VIEWPORT_DIMS = 3386),
          (t.SUBPIXEL_BITS = 3408),
          (t.RED_BITS = 3410),
          (t.GREEN_BITS = 3411),
          (t.BLUE_BITS = 3412),
          (t.ALPHA_BITS = 3413),
          (t.DEPTH_BITS = 3414),
          (t.STENCIL_BITS = 3415),
          (t.POLYGON_OFFSET_UNITS = 10752),
          (t.POLYGON_OFFSET_FACTOR = 32824),
          (t.TEXTURE_BINDING_2D = 32873),
          (t.SAMPLE_BUFFERS = 32936),
          (t.SAMPLES = 32937),
          (t.SAMPLE_COVERAGE_VALUE = 32938),
          (t.SAMPLE_COVERAGE_INVERT = 32939),
          (t.NUM_COMPRESSED_TEXTURE_FORMATS = 34466),
          (t.COMPRESSED_TEXTURE_FORMATS = 34467),
          (t.DONT_CARE = 4352),
          (t.FASTEST = 4353),
          (t.NICEST = 4354),
          (t.GENERATE_MIPMAP_HINT = 33170),
          (t.BYTE = 5120),
          (t.UNSIGNED_BYTE = 5121),
          (t.SHORT = 5122),
          (t.UNSIGNED_SHORT = 5123),
          (t.INT = 5124),
          (t.UNSIGNED_INT = 5125),
          (t.FLOAT = 5126),
          (t.DEPTH_COMPONENT = 6402),
          (t.ALPHA = 6406),
          (t.RGB = 6407),
          (t.RGBA = 6408),
          (t.LUMINANCE = 6409),
          (t.LUMINANCE_ALPHA = 6410),
          (t.UNSIGNED_SHORT_4_4_4_4 = 32819),
          (t.UNSIGNED_SHORT_5_5_5_1 = 32820),
          (t.UNSIGNED_SHORT_5_6_5 = 33635),
          (t.FRAGMENT_SHADER = 35632),
          (t.VERTEX_SHADER = 35633),
          (t.MAX_VERTEX_ATTRIBS = 34921),
          (t.MAX_VERTEX_UNIFORM_VECTORS = 36347),
          (t.MAX_VARYING_VECTORS = 36348),
          (t.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661),
          (t.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660),
          (t.MAX_TEXTURE_IMAGE_UNITS = 34930),
          (t.MAX_FRAGMENT_UNIFORM_VECTORS = 36349),
          (t.SHADER_TYPE = 35663),
          (t.DELETE_STATUS = 35712),
          (t.LINK_STATUS = 35714),
          (t.VALIDATE_STATUS = 35715),
          (t.ATTACHED_SHADERS = 35717),
          (t.ACTIVE_UNIFORMS = 35718),
          (t.ACTIVE_ATTRIBUTES = 35721),
          (t.SHADING_LANGUAGE_VERSION = 35724),
          (t.CURRENT_PROGRAM = 35725),
          (t.NEVER = 512),
          (t.LESS = 513),
          (t.EQUAL = 514),
          (t.LEQUAL = 515),
          (t.GREATER = 516),
          (t.NOTEQUAL = 517),
          (t.GEQUAL = 518),
          (t.ALWAYS = 519),
          (t.KEEP = 7680),
          (t.REPLACE = 7681),
          (t.INCR = 7682),
          (t.DECR = 7683),
          (t.INVERT = 5386),
          (t.INCR_WRAP = 34055),
          (t.DECR_WRAP = 34056),
          (t.VENDOR = 7936),
          (t.RENDERER = 7937),
          (t.VERSION = 7938),
          (t.NEAREST = 9728),
          (t.LINEAR = 9729),
          (t.NEAREST_MIPMAP_NEAREST = 9984),
          (t.LINEAR_MIPMAP_NEAREST = 9985),
          (t.NEAREST_MIPMAP_LINEAR = 9986),
          (t.LINEAR_MIPMAP_LINEAR = 9987),
          (t.TEXTURE_MAG_FILTER = 10240),
          (t.TEXTURE_MIN_FILTER = 10241),
          (t.TEXTURE_WRAP_S = 10242),
          (t.TEXTURE_WRAP_T = 10243),
          (t.TEXTURE_2D = 3553),
          (t.TEXTURE = 5890),
          (t.TEXTURE_CUBE_MAP = 34067),
          (t.TEXTURE_BINDING_CUBE_MAP = 34068),
          (t.TEXTURE_CUBE_MAP_POSITIVE_X = 34069),
          (t.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070),
          (t.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071),
          (t.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072),
          (t.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073),
          (t.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074),
          (t.MAX_CUBE_MAP_TEXTURE_SIZE = 34076),
          (t.TEXTURE0 = 33984),
          (t.TEXTURE1 = 33985),
          (t.TEXTURE2 = 33986),
          (t.TEXTURE3 = 33987),
          (t.TEXTURE4 = 33988),
          (t.TEXTURE5 = 33989),
          (t.TEXTURE6 = 33990),
          (t.TEXTURE7 = 33991),
          (t.TEXTURE8 = 33992),
          (t.TEXTURE9 = 33993),
          (t.TEXTURE10 = 33994),
          (t.TEXTURE11 = 33995),
          (t.TEXTURE12 = 33996),
          (t.TEXTURE13 = 33997),
          (t.TEXTURE14 = 33998),
          (t.TEXTURE15 = 33999),
          (t.TEXTURE16 = 34e3),
          (t.TEXTURE17 = 34001),
          (t.TEXTURE18 = 34002),
          (t.TEXTURE19 = 34003),
          (t.TEXTURE20 = 34004),
          (t.TEXTURE21 = 34005),
          (t.TEXTURE22 = 34006),
          (t.TEXTURE23 = 34007),
          (t.TEXTURE24 = 34008),
          (t.TEXTURE25 = 34009),
          (t.TEXTURE26 = 34010),
          (t.TEXTURE27 = 34011),
          (t.TEXTURE28 = 34012),
          (t.TEXTURE29 = 34013),
          (t.TEXTURE30 = 34014),
          (t.TEXTURE31 = 34015),
          (t.ACTIVE_TEXTURE = 34016),
          (t.REPEAT = 10497),
          (t.CLAMP_TO_EDGE = 33071),
          (t.MIRRORED_REPEAT = 33648),
          (t.FLOAT_VEC2 = 35664),
          (t.FLOAT_VEC3 = 35665),
          (t.FLOAT_VEC4 = 35666),
          (t.INT_VEC2 = 35667),
          (t.INT_VEC3 = 35668),
          (t.INT_VEC4 = 35669),
          (t.BOOL = 35670),
          (t.BOOL_VEC2 = 35671),
          (t.BOOL_VEC3 = 35672),
          (t.BOOL_VEC4 = 35673),
          (t.FLOAT_MAT2 = 35674),
          (t.FLOAT_MAT3 = 35675),
          (t.FLOAT_MAT4 = 35676),
          (t.SAMPLER_2D = 35678),
          (t.SAMPLER_CUBE = 35680),
          (t.VERTEX_ATTRIB_ARRAY_ENABLED = 34338),
          (t.VERTEX_ATTRIB_ARRAY_SIZE = 34339),
          (t.VERTEX_ATTRIB_ARRAY_STRIDE = 34340),
          (t.VERTEX_ATTRIB_ARRAY_TYPE = 34341),
          (t.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922),
          (t.VERTEX_ATTRIB_ARRAY_POINTER = 34373),
          (t.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975),
          (t.COMPILE_STATUS = 35713),
          (t.LOW_FLOAT = 36336),
          (t.MEDIUM_FLOAT = 36337),
          (t.HIGH_FLOAT = 36338),
          (t.LOW_INT = 36339),
          (t.MEDIUM_INT = 36340),
          (t.HIGH_INT = 36341),
          (t.FRAMEBUFFER = 36160),
          (t.RENDERBUFFER = 36161),
          (t.RGBA4 = 32854),
          (t.RGB5_A1 = 32855),
          (t.RGB565 = 36194),
          (t.DEPTH_COMPONENT16 = 33189),
          (t.STENCIL_INDEX = 6401),
          (t.STENCIL_INDEX8 = 36168),
          (t.DEPTH_STENCIL = 34041),
          (t.RENDERBUFFER_WIDTH = 36162),
          (t.RENDERBUFFER_HEIGHT = 36163),
          (t.RENDERBUFFER_INTERNAL_FORMAT = 36164),
          (t.RENDERBUFFER_RED_SIZE = 36176),
          (t.RENDERBUFFER_GREEN_SIZE = 36177),
          (t.RENDERBUFFER_BLUE_SIZE = 36178),
          (t.RENDERBUFFER_ALPHA_SIZE = 36179),
          (t.RENDERBUFFER_DEPTH_SIZE = 36180),
          (t.RENDERBUFFER_STENCIL_SIZE = 36181),
          (t.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048),
          (t.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049),
          (t.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050),
          (t.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051),
          (t.COLOR_ATTACHMENT0 = 36064),
          (t.DEPTH_ATTACHMENT = 36096),
          (t.STENCIL_ATTACHMENT = 36128),
          (t.DEPTH_STENCIL_ATTACHMENT = 33306),
          (t.NONE = 0),
          (t.FRAMEBUFFER_COMPLETE = 36053),
          (t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054),
          (t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055),
          (t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057),
          (t.FRAMEBUFFER_UNSUPPORTED = 36061),
          (t.FRAMEBUFFER_BINDING = 36006),
          (t.RENDERBUFFER_BINDING = 36007),
          (t.MAX_RENDERBUFFER_SIZE = 34024),
          (t.INVALID_FRAMEBUFFER_OPERATION = 1286),
          (t.UNPACK_FLIP_Y_WEBGL = 37440),
          (t.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441),
          (t.CONTEXT_LOST_WEBGL = 37442),
          (t.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443),
          (t.BROWSER_DEFAULT_WEBGL = 37444),
          (t._useProgram = null),
          (t._depthTest = !0),
          (t._depthMask = !0),
          (t._blend = !1),
          (t._cullFace = !1),
          (t.curBindTexTarget = null),
          (t.curBindTexValue = null),
          n(t, [
            '_depthFunc',
            function() {
              return (this._depthFunc = 513);
            },
            '_sFactor',
            function() {
              return (this._sFactor = 1);
            },
            '_dFactor',
            function() {
              return (this._dFactor = 0);
            },
            '_frontFace',
            function() {
              return (this._frontFace = 2305);
            }
          ]),
          t
        );
      })(),
      xt = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.webgl.display.GraphicsGL', m);
        var i = e.prototype;
        return (
          (i.setShader = function(t) {
            this._saveToCmd(I.context._setShader, [t]);
          }),
          (i.setIBVB = function(t, e, i, n, a, r) {
            this._saveToCmd(I.context._setIBVB, [t, e, i, n, a, r]);
          }),
          (i.drawParticle = function(t, e, i) {
            var n = M.createParticleTemplate2D(i);
            (n.x = t), (n.y = e), this._saveToCmd(I.context._drawParticle, [n]);
          }),
          e
        );
      })(),
      It = (function(t) {
        function e(t) {
          (this._x = 0),
            (this._y = 0),
            (this._id = ++e._COUNT),
            (this._path = null),
            (this._drawCount = 1),
            (this._maxNumEle = 0),
            (this._clear = !1),
            (this._isMain = !1),
            (this._atlasResourceChange = 0),
            (this._submits = null),
            (this._curSubmit = null),
            (this._ib = null),
            (this._vb = null),
            (this._nBlendType = 0),
            (this._saveMark = null),
            (this._shader2D = null),
            (this.meshlist = []),
            (this.mId = -1),
            (this.mHaveKey = !1),
            (this.mHaveLineKey = !1),
            (this.mX = 0),
            (this.mY = 0),
            e.__super.call(this),
            (this._width = 99999999),
            (this._height = 99999999),
            (this._clipRect = e.MAXCLIPRECT),
            this.mOutPoint,
            (this._canvas = t),
            e._contextcount++,
            I.isFlash
              ? ((this._ib = Qt.create(35044)),
                mt.fillIBQuadrangle(this._ib, 16))
              : (this._ib = Qt.QuadrangleIB),
            this.clear();
        }
        var s;
        a(e, 'laya.webgl.canvas.WebGLContext2D', f);
        var o = e.prototype;
        return (
          (o.setIsMainContext = function() {
            this._isMain = !0;
          }),
          (o.clearBG = function(t, e, i, n) {
            var a = bt.mainContext;
            a.clearColor(t, e, i, n), a.clear(16384);
          }),
          (o._getSubmits = function() {
            return this._submits;
          }),
          (o._releaseMem = function() {
            if (this._submits) {
              this._curMat.destroy(),
                (this._curMat = null),
                this._shader2D.destroy(),
                (this._shader2D = null);
              for (var t = 0, e = this._submits._length; t < e; t++)
                this._submits[t].releaseRender();
              (this._submits.length = 0),
                (this._submits._length = 0),
                (this._submits = null),
                (this._curSubmit = null),
                this._path && this._path.recover(),
                (this._path = null),
                this._other && (this._other.font = null),
                (this._save = null),
                this._vb &&
                  (this._vb.releaseResource(),
                  this._vb.destroy(),
                  this._vb.destory(),
                  (this._vb = null));
            }
          }),
          (o.destroy = function() {
            --e._contextcount,
              (this.sprite = null),
              this._releaseMem(),
              this._targets && this._targets.destroy(),
              (this._targets = null),
              (this._canvas = null),
              this._ib &&
                this._ib != Qt.QuadrangleIB &&
                this._ib.releaseResource();
          }),
          (o.clear = function() {
            this._submits ||
              ((this._other = s.DEFAULT),
              (this._curMat = b.create()),
              (this._vb = $t.create(-1)),
              (this._submits = []),
              (this._save = [Y.Create(this)]),
              (this._save.length = 10),
              (this._shader2D = new Q()),
              (this._triangleMesh = Bt.getAMesh())),
              this._vb.clear(),
              this._targets && (this._targets.repaint = !0),
              (this._other = s.DEFAULT),
              (this._clear = !0),
              (this._repaint = !1),
              (this._drawCount = 1),
              (this._renderKey = 0),
              (this._other.lineWidth = this._shader2D.ALPHA = 1),
              (this._nBlendType = 0),
              (this._clipRect = e.MAXCLIPRECT),
              (this._curSubmit = rt.RENDERBASE),
              (this._shader2D.glTexture = null),
              (this._shader2D.fillStyle = this._shader2D.strokeStyle =
                z.DEFAULT);
            for (var t = 0, i = this._submits._length; t < i; t++)
              this._submits[t].releaseRender();
            (this._submits._length = 0),
              this._curMat.identity(),
              this._other.clear(),
              (this._saveMark = this._save[0]),
              (this._save._length = 1);
          }),
          (o.size = function(t, e) {
            if (this._width != t || this._height != e)
              if (0 == t || 0 == e) {
                0 != this._vb._byteLength &&
                  ((this._width = t),
                  (this._height = e),
                  this._vb.clear(),
                  this._vb.upload());
                for (var i = 0, n = this._submits._length; i < n; i++)
                  this._submits[i].releaseRender();
                (this._submits.length = 0),
                  (this._submits._length = 0),
                  (this._curSubmit = null),
                  this._path && this._path.recover(),
                  (this._path = null),
                  (this.sprite = null),
                  this._targets && this._targets.destroy(),
                  (this._targets = null);
              } else
                (this._width = t),
                  (this._height = e),
                  this._targets && this._targets.size(t, e),
                  (this._canvas.memorySize -= this._canvas.memorySize);
            0 === t && 0 === e && this._releaseMem();
          }),
          (o._getTransformMatrix = function() {
            return this._curMat;
          }),
          (o.translate = function(t, e) {
            (0 === t && 0 === e) ||
              (K.save(this),
              this._curMat.bTransform &&
                (J.save(this),
                this._curMat.transformPointN(w.TEMP.setTo(t, e)),
                (t = w.TEMP.x),
                (e = w.TEMP.y)),
              (this._x += t),
              (this._y += e));
          }),
          (o.save = function() {
            this._save[this._save._length++] = Y.Create(this);
          }),
          (o.restore = function() {
            var t = this._save._length;
            if (!(t < 1))
              for (var e = t - 1; e >= 0; e--) {
                var i = this._save[e];
                if ((i.restore(this), i.isSaveMark()))
                  return void (this._save._length = e);
              }
          }),
          (o._fillText = function(t, e, i, n, a, r, s, o, l, h) {
            void 0 === h && (h = 0);
            var c = this._shader2D,
              u = this._curSubmit.shaderValue,
              d = a ? ft.create(a) : this._other.font;
            if (F.enabled)
              c.ALPHA !== u.ALPHA && (c.glTexture = null),
                dt.drawText(
                  this,
                  t,
                  e,
                  this._curMat,
                  d,
                  l || this._other.textAlign,
                  r,
                  s,
                  o,
                  i,
                  n,
                  h
                );
            else {
              this._shader2D.defines.getValue();
              var f = r ? _.create(r)._color : c.colorAdd;
              (c.ALPHA === u.ALPHA &&
                f === c.colorAdd &&
                u.colorAdd === c.colorAdd) ||
                ((c.glTexture = null), (c.colorAdd = f)),
                dt.drawText(
                  this,
                  t,
                  e,
                  this._curMat,
                  d,
                  l || this._other.textAlign,
                  r,
                  s,
                  o,
                  i,
                  n,
                  h
                );
            }
          }),
          (o.fillWords = function(t, e, i, n, a, r) {
            this._fillText(null, t, e, i, n, a, null, -1, null, r);
          }),
          (o.fillBorderWords = function(t, e, i, n, a, r, s) {
            this._fillBorderText(null, t, e, i, n, a, r, s, null);
          }),
          (o.fillText = function(t, e, i, n, a, r) {
            this._fillText(t, null, e, i, n, a, null, -1, r);
          }),
          (o.strokeText = function(t, e, i, n, a, r, s) {
            this._fillText(t, null, e, i, n, null, a, r || 1, s);
          }),
          (o.fillBorderText = function(t, e, i, n, a, r, s, o) {
            this._fillBorderText(t, null, e, i, n, a, r, s, o);
          }),
          (o._fillBorderText = function(t, i, n, a, r, s, o, l, h) {
            if (!F.enabled)
              return (
                this._fillText(t, i, n, a, r, null, o, l || 1, h),
                void this._fillText(t, i, n, a, r, s, null, -1, h)
              );
            var c = this._shader2D,
              u = this._curSubmit.shaderValue;
            c.ALPHA !== u.ALPHA && (c.glTexture = null);
            var _ = r
              ? (e._fontTemp.setFont(r), e._fontTemp)
              : this._other.font;
            dt.drawText(
              this,
              t,
              i,
              this._curMat,
              _,
              h || this._other.textAlign,
              s,
              o,
              l || 1,
              n,
              a,
              0
            );
          }),
          (o.fillRect = function(t, e, i, n, a) {
            var r = this._vb;
            if (
              mt.fillRectImgVb(
                r,
                this._clipRect,
                t,
                e,
                i,
                n,
                B.DEF_UV,
                this._curMat,
                this._x,
                this._y,
                0,
                0
              )
            ) {
              this._renderKey = 0;
              var s = this._shader2D.fillStyle;
              a && (this._shader2D.fillStyle = z.create(a));
              var o = this._shader2D,
                l = this._curSubmit.shaderValue;
              if (o.fillStyle !== l.fillStyle || o.ALPHA !== l.ALPHA) {
                o.glTexture = null;
                var h = (this._curSubmit = rt.createSubmit(
                  this,
                  this._ib,
                  r,
                  ((r._byteLength - 64) / 32) * 3,
                  Ct.create(2, 0)
                ));
                (h.shaderValue.color = o.fillStyle._color._color),
                  (h.shaderValue.ALPHA = o.ALPHA),
                  (this._submits[this._submits._length++] = h);
              }
              (this._curSubmit._numEle += 6), (this._shader2D.fillStyle = s);
            }
          }),
          (o.fillTexture = function(t, e, n, a, r, s, o, l) {
            if (t.loaded && t.bitmap && t.source) {
              var h = this._vb,
                c = t.bitmap.width,
                u = t.bitmap.height,
                _ = t.uv,
                d = o.x % t.width,
                f = o.y % t.height;
              if (c != l.w || u != l.h) {
                if (!l.w && !l.h)
                  switch (((l.oy = l.ox = 0), s)) {
                    case 'repeat':
                      (l.width = a), (l.height = r);
                      break;
                    case 'repeat-x':
                      (l.width = a),
                        f < 0
                          ? t.height + f > r
                            ? (l.height = r)
                            : (l.height = t.height + f)
                          : ((l.oy = f),
                            t.height + f > r
                              ? (l.height = r - f)
                              : (l.height = t.height));
                      break;
                    case 'repeat-y':
                      d < 0
                        ? t.width + d > a
                          ? (l.width = a)
                          : (l.width = t.width + d)
                        : ((l.ox = d),
                          t.width + d > a
                            ? (l.width = a - d)
                            : (l.width = t.width)),
                        (l.height = r);
                      break;
                    default:
                      (l.width = a), (l.height = r);
                  }
                (l.w = c),
                  (l.h = u),
                  (l.uv = [
                    0,
                    0,
                    l.width / c,
                    0,
                    l.width / c,
                    l.height / u,
                    0,
                    l.height / u
                  ]);
              }
              if (
                ((e += l.ox),
                (n += l.oy),
                (d -= l.ox),
                (f -= l.oy),
                mt.fillRectImgVb(
                  h,
                  this._clipRect,
                  e,
                  n,
                  l.width,
                  l.height,
                  l.uv,
                  this._curMat,
                  this._x,
                  this._y,
                  0,
                  0
                ))
              ) {
                this._renderKey = 0;
                var p = Rt.create(
                  this,
                  this._ib,
                  h,
                  ((h._byteLength - 64) / 32) * 3,
                  Ct.create(256, 0)
                );
                this._submits[this._submits._length++] = p;
                var m = p.shaderValue;
                m.textureHost = t;
                var g = _[0] * c,
                  y = _[1] * u,
                  v = (_[2] - _[0]) * c,
                  b = (_[5] - _[3]) * u,
                  w = -d / c,
                  x = -f / u;
                (m.u_TexRange[0] = g / c),
                  (m.u_TexRange[1] = v / c),
                  (m.u_TexRange[2] = y / u),
                  (m.u_TexRange[3] = b / u),
                  (m.u_offset[0] = w),
                  (m.u_offset[1] = x),
                  F.enabled &&
                    !this._isMain &&
                    p.addTexture(t, (h._byteLength >> 2) - 16),
                  (this._curSubmit = p),
                  (p._renderType = 10017),
                  (p._numEle += 6);
              }
            } else this.sprite && i.timer.callLater(this, this._repaintSprite);
          }),
          (o.setShader = function(t) {
            W.save(this, 1048576, this._shader2D, !0),
              (this._shader2D.shader = t);
          }),
          (o.setFilters = function(t) {
            W.save(this, 2097152, this._shader2D, !0),
              (this._shader2D.filters = t),
              (this._curSubmit = rt.RENDERBASE),
              (this._renderKey = 0),
              this._drawCount++;
          }),
          (o.drawTexture = function(t, e, i, n, a, r, s) {
            this._drawTextureM(t, e, i, n, a, r, s, null, 1);
          }),
          (o.addTextureVb = function(t, e, i) {
            var n = this._curSubmit._vb || this._vb,
              a = n._byteLength >> 2;
            n.byteLength = (a + 16) << 2;
            for (var r = n.getFloat32Array(), s = 0; s < 16; s += 4)
              (r[a++] = t[s] + e),
                (r[a++] = t[s + 1] + i),
                (r[a++] = t[s + 2]),
                (r[a++] = t[s + 3]);
            (this._curSubmit._numEle += 6),
              (this._maxNumEle = Math.max(
                this._maxNumEle,
                this._curSubmit._numEle
              )),
              (n._upload = !0);
          }),
          (o.willDrawTexture = function(t, e) {
            if (!(t.loaded && t.bitmap && t.source))
              return (
                this.sprite && i.timer.callLater(this, this._repaintSprite), 0
              );
            var n = t.bitmap,
              a = n.id + this._shader2D.ALPHA * e + 10016;
            if (a == this._renderKey) return a;
            var r = this._shader2D,
              s = r.ALPHA,
              o = this._curSubmit.shaderValue;
            (r.ALPHA *= e),
              (this._renderKey = a),
              this._drawCount++,
              (r.glTexture = n);
            var l = this._vb,
              h = null,
              c = (l._byteLength / 32) * 3;
            return (
              (h = Rt.create(this, this._ib, l, c, Ct.create(1, 0))),
              (this._submits[this._submits._length++] = h),
              (h.shaderValue.textureHost = t),
              (h._renderType = 10016),
              (h._preIsSameTextureShader =
                10016 === this._curSubmit._renderType && r.ALPHA === o.ALPHA),
              (this._curSubmit = h),
              (r.ALPHA = s),
              a
            );
          }),
          (o.drawTextures = function(t, n, a, r) {
            if (t.loaded && t.bitmap && t.source) {
              var s = this._clipRect;
              if (
                ((this._clipRect = e.MAXCLIPRECT),
                this._drawTextureM(
                  t,
                  n[0],
                  n[1],
                  t.width,
                  t.height,
                  a,
                  r,
                  null,
                  1
                ))
              ) {
                if (((this._clipRect = s), D.drawCall++, !(n.length < 4))) {
                  for (
                    var o = this._curSubmit._vb || this._vb,
                      l = this._curMat.a,
                      h = this._curMat.d,
                      c = 2,
                      u = n.length;
                    c < u;
                    c += 2
                  )
                    mt.copyPreImgVb(
                      o,
                      (n[c] - n[c - 2]) * l,
                      (n[c + 1] - n[c - 1]) * h
                    ),
                      (this._curSubmit._numEle += 6);
                  this._maxNumEle = Math.max(
                    this._maxNumEle,
                    this._curSubmit._numEle
                  );
                }
              } else alert('drawTextures err');
            } else this.sprite && i.timer.callLater(this, this._repaintSprite);
          }),
          (o._drawTextureM = function(t, e, n, a, r, s, o, l, h) {
            if (!t.loaded || !t.source)
              return (
                this.sprite && i.timer.callLater(this, this._repaintSprite), !1
              );
            var c = this._curSubmit._vb || this._vb,
              u = t.bitmap;
            (e += s), (n += o), this._drawCount++;
            var _ = u.id + this._shader2D.ALPHA * h + 10016;
            if (_ != this._renderKey) {
              this._renderKey = _;
              var d = this._curSubmit.shaderValue,
                f = this._shader2D,
                p = f.ALPHA;
              (f.ALPHA *= h), (f.glTexture = u);
              var m = this._vb,
                g = null,
                y = (m._byteLength / 32) * 3;
              (g = Rt.create(this, this._ib, m, y, Ct.create(1, 0))),
                (this._submits[this._submits._length++] = g),
                (g.shaderValue.textureHost = t),
                (g._renderType = 10016),
                (g._preIsSameTextureShader =
                  10016 === this._curSubmit._renderType && f.ALPHA === d.ALPHA),
                (this._curSubmit = g),
                (c = this._curSubmit._vb || this._vb),
                (f.ALPHA = p);
            }
            return (
              !!mt.fillRectImgVb(
                c,
                this._clipRect,
                e,
                n,
                a || t.width,
                r || t.height,
                t.uv,
                l || this._curMat,
                this._x,
                this._y,
                0,
                0
              ) &&
              (F.enabled &&
                !this._isMain &&
                this._curSubmit.addTexture(t, (c._byteLength >> 2) - 16),
              (this._curSubmit._numEle += 6),
              (this._maxNumEle = Math.max(
                this._maxNumEle,
                this._curSubmit._numEle
              )),
              !0)
            );
          }),
          (o._repaintSprite = function() {
            this.sprite && this.sprite.repaint();
          }),
          (o._drawText = function(t, e, i, n, a, r, s, o, l, h) {
            var c = t.bitmap;
            this._drawCount++;
            var u = c.id + this._shader2D.ALPHA + 10016;
            if (u != this._renderKey) {
              this._renderKey = u;
              var _ = this._curSubmit.shaderValue,
                d = this._shader2D;
              d.glTexture = c;
              var f = this._vb,
                p = null,
                m = (f._byteLength / 32) * 3;
              ((p = F.enabled
                ? Rt.create(this, this._ib, f, m, Ct.create(1, 0))
                : Rt.create(
                    this,
                    this._ib,
                    f,
                    m,
                    Kt.create()
                  ))._preIsSameTextureShader =
                10016 === this._curSubmit._renderType && d.ALPHA === _.ALPHA),
                (this._submits[this._submits._length++] = p),
                (p.shaderValue.textureHost = t),
                (p._renderType = 10016),
                (this._curSubmit = p);
            }
            t.active();
            var g = this._curSubmit._vb || this._vb;
            mt.fillRectImgVb(
              g,
              this._clipRect,
              e + s,
              i + o,
              n || t.width,
              a || t.height,
              t.uv,
              r || this._curMat,
              this._x,
              this._y,
              l,
              h,
              !0
            ) &&
              (F.enabled &&
                !this._isMain &&
                this._curSubmit.addTexture(t, (g._byteLength >> 2) - 16),
              (this._curSubmit._numEle += 6),
              (this._maxNumEle = Math.max(
                this._maxNumEle,
                this._curSubmit._numEle
              )));
          }),
          (o.drawTextureWithTransform = function(t, i, n, a, r, s, o, l, h) {
            if (s) {
              var c = this._curMat,
                u = this._x,
                _ = this._y;
              (0 !== o || 0 !== l) &&
                ((this._x = o * c.a + l * c.c), (this._y = l * c.d + o * c.b)),
                s && c.bTransform
                  ? (b.mul(s, c, e._tmpMatrix),
                    (s = e._tmpMatrix)._checkTransform())
                  : ((this._x += c.tx), (this._y += c.ty)),
                this._drawTextureM(t, i, n, a, r, 0, 0, s, h),
                (this._x = u),
                (this._y = _);
            } else this._drawTextureM(t, i, n, a, r, o, l, null, h);
          }),
          (o.fillQuadrangle = function(t, e, i, n, a) {
            var r = this._curSubmit,
              s = this._vb,
              o = this._shader2D,
              l = r.shaderValue;
            if (((this._renderKey = 0), t.bitmap)) {
              var h = t.bitmap;
              (o.glTexture == h && o.ALPHA === l.ALPHA) ||
                ((o.glTexture = h),
                ((r = this._curSubmit = rt.createSubmit(
                  this,
                  this._ib,
                  s,
                  (s._byteLength / 32) * 3,
                  Ct.create(1, 0)
                )).shaderValue.glTexture = h),
                (this._submits[this._submits._length++] = r)),
                mt.fillQuadrangleImgVb(
                  s,
                  e,
                  i,
                  n,
                  t.uv,
                  a || this._curMat,
                  this._x,
                  this._y
                );
            } else
              (r.shaderValue.fillStyle &&
                r.shaderValue.fillStyle.equal(t) &&
                o.ALPHA === l.ALPHA) ||
                ((o.glTexture = null),
                (r = this._curSubmit = rt.createSubmit(
                  this,
                  this._ib,
                  s,
                  (s._byteLength / 32) * 3,
                  Ct.create(2, 0)
                )).shaderValue.defines.add(2),
                (r.shaderValue.fillStyle = z.create(t)),
                (this._submits[this._submits._length++] = r)),
                mt.fillQuadrangleImgVb(
                  s,
                  e,
                  i,
                  n,
                  B.DEF_UV,
                  a || this._curMat,
                  this._x,
                  this._y
                );
            r._numEle += 6;
          }),
          (o.drawTexture2 = function(t, i, n, a, r, s, o, l) {
            if (0 != s) {
              var h = this._curMat;
              if (
                ((this._x = t * h.a + i * h.c),
                (this._y = i * h.d + t * h.b),
                r &&
                  (h.bTransform || r.bTransform
                    ? (b.mul(r, h, e._tmpMatrix), (r = e._tmpMatrix))
                    : ((this._x += r.tx + h.tx),
                      (this._y += r.ty + h.ty),
                      (r = b.EMPTY))),
                1 !== s || o)
              ) {
                var c = this._shader2D.ALPHA,
                  u = this._nBlendType;
                (this._shader2D.ALPHA = s),
                  o && (this._nBlendType = G.TOINT(o)),
                  this._drawTextureM(
                    l[0],
                    l[1] - n,
                    l[2] - a,
                    l[3],
                    l[4],
                    0,
                    0,
                    r,
                    1
                  ),
                  (this._shader2D.ALPHA = c),
                  (this._nBlendType = u);
              } else
                this._drawTextureM(
                  l[0],
                  l[1] - n,
                  l[2] - a,
                  l[3],
                  l[4],
                  0,
                  0,
                  r,
                  1
                );
              this._x = this._y = 0;
            }
          }),
          (o.drawCanvas = function(t, e, i, n, a) {
            var r = t.context;
            if (((this._renderKey = 0), r._targets))
              (this._submits[this._submits._length++] = Nt.create(r, 0, null)),
                (this._curSubmit = rt.RENDERBASE),
                r._targets.drawTo(this, e, i, n, a);
            else {
              var s = (this._submits[this._submits._length++] = Nt.create(
                  r,
                  this._shader2D.ALPHA,
                  this._shader2D.filters
                )),
                o = n / t.width,
                l = a / t.height,
                h = s._matrix;
              this._curMat.copyTo(h), 1 != o && 1 != l && h.scale(o, l);
              var c = h.tx,
                u = h.ty;
              (h.tx = h.ty = 0),
                h.transformPoint(w.TEMP.setTo(e, i)),
                h.translate(w.TEMP.x + c, w.TEMP.y + u),
                (this._curSubmit = rt.RENDERBASE);
            }
            d.showCanvasMark &&
              (this.save(),
              (this.lineWidth = 4),
              (this.strokeStyle = r._targets ? 'yellow' : 'green'),
              this.strokeRect(e - 1, i - 1, n + 2, a + 2, 1),
              this.strokeRect(e, i, n, a, 1),
              this.restore());
          }),
          (o.drawTarget = function(t, e, i, n, a, r, s, o, l, h) {
            void 0 === h && (h = -1);
            var c = this._vb;
            if (
              mt.fillRectImgVb(
                c,
                this._clipRect,
                e,
                i,
                n,
                a,
                l || B.DEF_UV,
                r || this._curMat,
                this._x,
                this._y,
                0,
                0
              )
            ) {
              this._renderKey = 0;
              this._shader2D.glTexture = null;
              this._curSubmit.shaderValue;
              var u = (this._curSubmit = ut.create(
                this,
                this._ib,
                c,
                ((c._byteLength - 64) / 32) * 3,
                o,
                s
              ));
              (u.blendType = -1 == h ? this._nBlendType : h),
                (u.scope = t),
                (this._submits[this._submits._length++] = u),
                (this._curSubmit._numEle += 6);
            }
          }),
          (o.mixRGBandAlpha = function(t) {
            return this._mixRGBandAlpha(t, this._shader2D.ALPHA);
          }),
          (o._mixRGBandAlpha = function(t, e) {
            var i = (4278190080 & t) >>> 24;
            return (
              0 != i ? (i *= e) : (i = 255 * e), (16777215 & t) | (i << 24)
            );
          }),
          (o.drawTriangles = function(t, n, a, r, s, o, l, h, c, u) {
            if (!t.loaded || !t.source)
              return (
                this.sprite && i.timer.callLater(this, this._repaintSprite), !1
              );
            this._drawCount++;
            t.bitmap;
            var _ = this._mixRGBandAlpha(4294967295, h),
              d = (r.length, o.length);
            this._renderKey = -1;
            var f = (this._curSubmit = Rt.create(
              this,
              this._triangleMesh.getIBR(),
              this._triangleMesh.getVBR(),
              this._triangleMesh.indexNum,
              Ct.create(1, 0)
            ));
            return (
              (f.shaderValue.textureHost = t),
              (f._renderType = 10016),
              (this._submits[this._submits._length++] = f),
              l
                ? ((e._tmpMatrix.a = l.a),
                  (e._tmpMatrix.b = l.b),
                  (e._tmpMatrix.c = l.c),
                  (e._tmpMatrix.d = l.d),
                  (e._tmpMatrix.tx = l.tx + n),
                  (e._tmpMatrix.ty = l.ty + a),
                  b.mul(e._tmpMatrix, this._curMat, e._tmpMatrix))
                : ((e._tmpMatrix.a = this._curMat.a),
                  (e._tmpMatrix.b = this._curMat.b),
                  (e._tmpMatrix.c = this._curMat.c),
                  (e._tmpMatrix.d = this._curMat.d),
                  (e._tmpMatrix.tx = this._curMat.tx + n),
                  (e._tmpMatrix.ty = this._curMat.ty + a)),
              this._triangleMesh.addData(r, s, o, e._tmpMatrix, _, this),
              (this._curSubmit._numEle += d),
              (this._maxNumEle = Math.max(
                this._maxNumEle,
                this._curSubmit._numEle
              )),
              !0
            );
          }),
          (o.transform = function(t, e, i, n, a, r) {
            J.save(this),
              b.mul(b.TEMP.setTo(t, e, i, n, a, r), this._curMat, this._curMat),
              this._curMat._checkTransform();
          }),
          (o.setTransformByMatrix = function(t) {
            t.copyTo(this._curMat);
          }),
          (o.transformByMatrix = function(t) {
            J.save(this),
              b.mul(t, this._curMat, this._curMat),
              this._curMat._checkTransform();
          }),
          (o.rotate = function(t) {
            J.save(this), this._curMat.rotateEx(t);
          }),
          (o.scale = function(t, e) {
            J.save(this), this._curMat.scaleEx(t, e);
          }),
          (o.clipRect = function(t, e, i, n) {
            if (0 != this._curMat.b || 0 != this._curMat.c) {
              this._renderKey = 0;
              var a = ct.create(4);
              this.addRenderObject(a);
              var r = this._vb,
                s = r._byteLength >> 2;
              if (
                mt.fillRectImgVb(
                  r,
                  null,
                  t,
                  e,
                  i,
                  n,
                  B.DEF_UV,
                  this._curMat,
                  this._x,
                  this._y,
                  0,
                  0
                )
              ) {
                this._shader2D.glTexture = null;
                var o = (this._curSubmit = rt.createSubmit(
                  this,
                  this._ib,
                  r,
                  ((r._byteLength - 64) / 32) * 3,
                  Ct.create(2, 0)
                ));
                (o.shaderValue.ALPHA = 1),
                  (this._submits[this._submits._length++] = o),
                  (this._curSubmit._numEle += 6);
              } else alert('clipRect calc stencil rect error');
              var l = ct.create(5);
              this.addRenderObject(l);
              var h = r.getFloat32Array(),
                c = Math.min(
                  Math.min(Math.min(h[s + 0], h[s + 4]), h[s + 8]),
                  h[s + 12]
                ),
                u = Math.max(
                  Math.max(Math.max(h[s + 0], h[s + 4]), h[s + 8]),
                  h[s + 12]
                ),
                _ = Math.min(
                  Math.min(Math.min(h[s + 1], h[s + 5]), h[s + 9]),
                  h[s + 13]
                ),
                d = Math.max(
                  Math.max(Math.max(h[s + 1], h[s + 5]), h[s + 9]),
                  h[s + 13]
                );
              q.save(this, l, t, e, i, n, c, _, u - c, d - _),
                (this._curSubmit = rt.RENDERBASE);
            } else {
              (i *= this._curMat.a), (n *= this._curMat.d);
              var f = w.TEMP;
              this._curMat.transformPoint(f.setTo(t, e)),
                i < 0 && ((f.x = f.x + i), (i = -i)),
                n < 0 && ((f.y = f.y + n), (n = -n)),
                (this._renderKey = 0);
              var p = (this._curSubmit = ht.create(this));
              (this._submits[this._submits._length++] = p),
                (p.submitIndex = this._submits._length),
                (p.submitLength = 9999999),
                X.save(this, p);
              var m = this._clipRect,
                g = m.x,
                y = m.y,
                v = f.x + i,
                b = f.y + n;
              g < f.x && (m.x = f.x),
                y < f.y && (m.y = f.y),
                (m.width = Math.min(v, g + m.width) - m.x),
                (m.height = Math.min(b, y + m.height) - m.y),
                (this._shader2D.glTexture = null),
                p.clipRect.copyFrom(m),
                (this._curSubmit = rt.RENDERBASE);
            }
          }),
          (o.setIBVB = function(t, e, i, n, a, r, s, o, l, h, c) {
            if (
              (void 0 === l && (l = 0),
              void 0 === h && (h = 0),
              void 0 === c && (c = 0),
              null === i)
            ) {
              if (I.isFlash) {
                var u = n;
                u._selfIB || (u._selfIB = Qt.create(35044)),
                  u._selfIB.clear(),
                  (i = u._selfIB);
              } else i = this._ib;
              mt.expandIBQuadrangle(
                i,
                n._byteLength / (4 * n.vertexStride * 4)
              );
            }
            if (!o || !s) throw Error('setIBVB must input:shader shaderValues');
            var _ = lt.create(this, n, i, a, s, o, l, h, c);
            r || (r = b.EMPTY),
              r.translate(t, e),
              b.mul(r, this._curMat, _._mat),
              r.translate(-t, -e),
              (this._submits[this._submits._length++] = _),
              (this._curSubmit = rt.RENDERBASE),
              (this._renderKey = 0);
          }),
          (o.addRenderObject = function(t) {
            this._submits[this._submits._length++] = t;
          }),
          (o.fillTrangles = function(t, e, i, n, a) {
            var r = this._curSubmit,
              s = this._vb,
              o = this._shader2D,
              l = r.shaderValue,
              h = n.length >> 4,
              c = t.bitmap;
            (this._renderKey = 0),
              (o.glTexture == c && o.ALPHA === l.ALPHA) ||
                (((r = this._curSubmit = rt.createSubmit(
                  this,
                  this._ib,
                  s,
                  (s._byteLength / 32) * 3,
                  Ct.create(1, 0)
                )).shaderValue.textureHost = t),
                (this._submits[this._submits._length++] = r)),
              mt.fillTranglesVB(
                s,
                e,
                i,
                n,
                a || this._curMat,
                this._x,
                this._y
              ),
              (r._numEle += 6 * h);
          }),
          (o.submitElement = function(t, e) {
            var i = this._submits;
            for (e < 0 && (e = i._length); t < e; ) t += i[t].renderSubmit();
          }),
          (o.finish = function() {
            bt.mainContext.finish();
          }),
          (o.flush = function() {
            var t =
              Math.max(this._vb._byteLength / 64, this._maxNumEle / 6) + 8;
            if (
              (t > this._ib.bufferLength / 12 &&
                mt.expandIBQuadrangle(this._ib, t),
              !this._isMain &&
                F.enabled &&
                F._atlasRestore > this._atlasResourceChange)
            ) {
              this._atlasResourceChange = F._atlasRestore;
              for (var e = this._submits, i = 0, n = e._length; i < n; i++) {
                var a = e[i];
                10016 === a.getRenderType() && a.checkTexture();
              }
            }
            this.submitElement(0, this._submits._length),
              this._path && this._path.reset(),
              et.instance && et.getInstance().reset();
            var r = 0;
            for (i = 0, r = this.meshlist.length; i < r; i++) {
              var s = this.meshlist[i];
              s.canReuse ? s.releaseMesh() : s.destroy();
            }
            return (
              (this.meshlist.length = 0),
              (this._curSubmit = rt.RENDERBASE),
              (this._renderKey = 0),
              (this._triangleMesh = Bt.getAMesh()),
              this.meshlist.push(this._triangleMesh),
              this._submits._length
            );
          }),
          (o.setPathId = function(t) {
            if (((this.mId = t), -1 != this.mId)) {
              this.mHaveKey = !1;
              var e = P.getInstance();
              e.shapeDic[this.mId] && (this.mHaveKey = !0),
                (this.mHaveLineKey = !1),
                e.shapeLineDic[this.mId] && (this.mHaveLineKey = !0);
            }
          }),
          (o.movePath = function(t, e) {
            var i = t,
              n = e;
            (t = this._curMat.a * i + this._curMat.c * n + this._curMat.tx),
              (e = this._curMat.b * i + this._curMat.d * n + this._curMat.ty),
              (this.mX += t),
              (this.mY += e);
          }),
          (o.beginPath = function() {
            var t = this._getPath();
            (t.tempArray.length = 0),
              (t.closePath = !1),
              (this.mX = 0),
              (this.mY = 0);
          }),
          (o.closePath = function() {
            this._path.closePath = !0;
          }),
          (o.fill = function(t) {
            void 0 === t && (t = !1);
            var e = this._getPath();
            this.drawPoly(
              0,
              0,
              e.tempArray,
              this.fillStyle._color.numColor,
              0,
              0,
              t
            );
          }),
          (o.stroke = function() {
            var t = this._getPath();
            if (this.lineWidth > 0) {
              if (-1 == this.mId)
                t.drawLine(
                  0,
                  0,
                  t.tempArray,
                  this.lineWidth,
                  this.strokeStyle._color.numColor
                );
              else if (this.mHaveLineKey) {
                var e = P.getInstance().shapeLineDic[this.mId];
                e.rebuild(t.tempArray), t.setGeomtry(e);
              } else
                P.getInstance().addLine(
                  this.mId,
                  t.drawLine(
                    0,
                    0,
                    t.tempArray,
                    this.lineWidth,
                    this.strokeStyle._color.numColor
                  )
                );
              t.update();
              var i = [this.mX, this.mY],
                n = rt.createShape(
                  this,
                  t.ib,
                  t.vb,
                  t.count,
                  t.offset,
                  Ct.create(4, 0)
                );
              (n.shaderValue.ALPHA = this._shader2D.ALPHA),
                (n.shaderValue.u_pos = i),
                (n.shaderValue.u_mmat2 = yt.TEMPMAT4_ARRAY),
                (this._submits[this._submits._length++] = n),
                (this._renderKey = -1);
            }
          }),
          (o.line = function(t, e, i, n, a, r) {
            var s = this._curSubmit,
              o = this._vb;
            if (mt.fillLineVb(o, this._clipRect, t, e, i, n, a, r)) {
              this._renderKey = 0;
              var l = this._shader2D,
                h = s.shaderValue;
              (l.strokeStyle === h.strokeStyle && l.ALPHA === h.ALPHA) ||
                ((l.glTexture = null),
                ((s = this._curSubmit = rt.createSubmit(
                  this,
                  this._ib,
                  o,
                  ((o._byteLength - 64) / 32) * 3,
                  Ct.create(2, 0)
                )).shaderValue.strokeStyle = l.strokeStyle),
                (s.shaderValue.mainID = 2),
                (s.shaderValue.ALPHA = l.ALPHA),
                (this._submits[this._submits._length++] = s)),
                (s._numEle += 6);
            }
          }),
          (o.moveTo = function(t, e, i) {
            void 0 === i && (i = !0);
            var n = this._getPath();
            if (i) {
              var a = t,
                r = e;
              (t = this._curMat.a * a + this._curMat.c * r),
                (e = this._curMat.b * a + this._curMat.d * r);
            }
            n.addPoint(t, e);
          }),
          (o.lineTo = function(t, e, i) {
            void 0 === i && (i = !0);
            var n = this._getPath();
            if (i) {
              var a = t,
                r = e;
              (t = this._curMat.a * a + this._curMat.c * r),
                (e = this._curMat.b * a + this._curMat.d * r);
            }
            n.addPoint(t, e);
          }),
          (o.drawCurves = function(t, e, i) {
            this.setPathId(-1),
              this.beginPath(),
              (this.strokeStyle = i[3]),
              (this.lineWidth = i[4]);
            var n = i[2];
            (t += i[0]),
              (e += i[1]),
              this.movePath(t, e),
              this.moveTo(n[0], n[1]);
            for (var a = 2, r = n.length; a < r; )
              this.quadraticCurveTo(n[a++], n[a++], n[a++], n[a++]);
            this.stroke();
          }),
          (o.arcTo = function(t, i, n, a, r) {
            if (-1 == this.mId || !this.mHaveKey) {
              var s = 0,
                o = 0,
                l = 0,
                h = this._getPath();
              this._curMat.copyTo(e._tmpMatrix),
                (e._tmpMatrix.tx = e._tmpMatrix.ty = 0),
                e._tempPoint.setTo(h.getEndPointX(), h.getEndPointY()),
                e._tmpMatrix.invertTransformPoint(e._tempPoint);
              var c = e._tempPoint.x - t,
                u = e._tempPoint.y - i,
                _ = Math.sqrt(c * c + u * u);
              if (!(_ <= 1e-6)) {
                var d = c / _,
                  f = u / _,
                  p = n - t,
                  m = a - i,
                  g = p * p + m * m,
                  y = Math.sqrt(g);
                if (!(y <= 1e-6)) {
                  var v = p / y,
                    b = m / y,
                    w = d + v,
                    x = f + b,
                    I = Math.sqrt(w * w + x * x);
                  if (!(I <= 1e-6)) {
                    var C = w / I,
                      S = x / I,
                      T = Math.acos(C * d + S * f),
                      M = Math.PI / 2 - T,
                      E = (_ = r / Math.tan(M)) * d + t,
                      L = _ * f + i,
                      D = Math.sqrt(_ * _ + r * r),
                      A = t + C * D,
                      N = i + S * D,
                      R = 0,
                      B = 0,
                      k = 0;
                    if (d * b - f * v >= 0) {
                      var P = (R = 2 * M) / e.SEGNUM;
                      (B = Math.sin(P)), (k = Math.cos(P));
                    } else
                      (P = (R = 2 * -M) / e.SEGNUM),
                        (B = Math.sin(P)),
                        (k = Math.cos(P));
                    (o = this._curMat.a * E + this._curMat.c * L),
                      (l = this._curMat.b * E + this._curMat.d * L),
                      (o == this._path.getEndPointX() &&
                        l == this._path.getEndPointY()) ||
                        h.addPoint(o, l);
                    var O = E - A,
                      U = L - N;
                    for (s = 0; s < e.SEGNUM; s++) {
                      var V = O * k + U * B,
                        F = -O * B + U * k;
                      (o = V + A),
                        (l = F + N),
                        (t = this._curMat.a * o + this._curMat.c * l),
                        (l = i = this._curMat.b * o + this._curMat.d * l),
                        ((o = t) == this._path.getEndPointX() &&
                          l == this._path.getEndPointY()) ||
                          h.addPoint(o, l),
                        (O = V),
                        (U = F);
                    }
                  }
                }
              }
            }
          }),
          (o.arc = function(t, e, i, n, a, r, s) {
            if (
              (void 0 === r && (r = !1),
              void 0 === s && (s = !0),
              -1 != this.mId)
            ) {
              var o = P.getInstance().shapeDic[this.mId];
              if (o && this.mHaveKey && !o.needUpdate(this._curMat)) return;
              (t = 0), (e = 0);
            }
            var l = 0,
              h = 0,
              c = 0,
              u = 0,
              _ = 0,
              d = 0,
              f = 0,
              p = 0;
            if (((h = a - n), r))
              if (Math.abs(h) >= 2 * Math.PI) h = 2 * -Math.PI;
              else for (; h > 0; ) h -= 2 * Math.PI;
            else if (Math.abs(h) >= 2 * Math.PI) h = 2 * Math.PI;
            else for (; h < 0; ) h += 2 * Math.PI;
            (c =
              h /
              (p =
                i < 101
                  ? Math.max(10, (h * i) / 5)
                  : i < 201
                  ? Math.max(10, (h * i) / 20)
                  : Math.max(10, (h * i) / 40)) /
              2),
              (u = Math.abs(((4 / 3) * (1 - Math.cos(c))) / Math.sin(c))),
              r && (u = -u);
            var m = this._getPath(),
              g = NaN,
              y = NaN;
            for (f = 0; f <= p; f++)
              (l = n + h * (f / p)),
                (_ = t + Math.cos(l) * i),
                (d = e + Math.sin(l) * i),
                s &&
                  ((g = _),
                  (y = d),
                  (_ = this._curMat.a * g + this._curMat.c * y),
                  (d = this._curMat.b * g + this._curMat.d * y)),
                (_ == this._path.getEndPointX() &&
                  d == this._path.getEndPointY()) ||
                  m.addPoint(_, d);
            (_ = t + Math.cos(a) * i),
              (d = e + Math.sin(a) * i),
              s &&
                ((g = _),
                (y = d),
                (_ = this._curMat.a * g + this._curMat.c * y),
                (d = this._curMat.b * g + this._curMat.d * y)),
              (_ == this._path.getEndPointX() &&
                d == this._path.getEndPointY()) ||
                m.addPoint(_, d);
          }),
          (o.quadraticCurveTo = function(t, e, i, n) {
            var a = l.I,
              r = i,
              s = n;
            (i = this._curMat.a * r + this._curMat.c * s),
              (n = this._curMat.b * r + this._curMat.d * s),
              (r = t),
              (s = e),
              (t = this._curMat.a * r + this._curMat.c * s),
              (e = this._curMat.b * r + this._curMat.d * s);
            for (
              var o = a.getBezierPoints(
                  [
                    this._path.getEndPointX(),
                    this._path.getEndPointY(),
                    t,
                    e,
                    i,
                    n
                  ],
                  30,
                  2
                ),
                h = 0,
                c = o.length / 2;
              h < c;
              h++
            )
              this.lineTo(o[2 * h], o[2 * h + 1], !1);
            this.lineTo(i, n, !1);
          }),
          (o.rect = function(t, e, i, n) {
            (this._other = this._other.make()),
              this._other.path || (this._other.path = new j()),
              this._other.path.rect(t, e, i, n);
          }),
          (o.strokeRect = function(t, e, i, n, a) {
            var r = 0.5 * a;
            this.line(t - r, e, t + i + r, e, a, this._curMat),
              this.line(t + i, e, t + i, e + n, a, this._curMat),
              this.line(t, e, t, e + n, a, this._curMat),
              this.line(t - r, e + n, t + i + r, e + n, a, this._curMat);
          }),
          (o.clip = function() {}),
          (o.drawPoly = function(t, e, i, n, a, r, s) {
            void 0 === s && (s = !1),
              (this._renderKey = 0),
              (this._shader2D.glTexture = null);
            var o = this._getPath();
            if (-1 == this.mId) o.polygon(t, e, i, n, a || 1, r);
            else if (this.mHaveKey) {
              var l = P.getInstance().shapeDic[this.mId];
              l.setMatrix(this._curMat),
                l.rebuild(o.tempArray),
                o.setGeomtry(l);
            } else {
              var h = o.polygon(t, e, i, n, a || 1, r);
              P.getInstance().addShape(this.mId, h), h.setMatrix(this._curMat);
            }
            o.update();
            var c,
              u = [this.mX, this.mY];
            if (
              ((c = rt.createShape(
                this,
                o.ib,
                o.vb,
                o.count,
                o.offset,
                Ct.create(4, 0)
              )),
              (c.shaderValue.ALPHA = this._shader2D.ALPHA),
              (c.shaderValue.u_pos = u),
              (c.shaderValue.u_mmat2 = yt.EMPTYMAT4_ARRAY),
              (this._submits[this._submits._length++] = c),
              a > 0)
            ) {
              if (this.mHaveLineKey) {
                var _ = P.getInstance().shapeLineDic[this.mId];
                _.rebuild(o.tempArray), o.setGeomtry(_);
              } else
                P.getInstance().addShape(this.mId, o.drawLine(t, e, i, a, r));
              o.update(),
                ((c = rt.createShape(
                  this,
                  o.ib,
                  o.vb,
                  o.count,
                  o.offset,
                  Ct.create(4, 0)
                )).shaderValue.ALPHA = this._shader2D.ALPHA),
                (c.shaderValue.u_mmat2 = yt.EMPTYMAT4_ARRAY),
                (this._submits[this._submits._length++] = c);
            }
          }),
          (o.drawParticle = function(t, e, i) {
            (i.x = t), (i.y = e), (this._submits[this._submits._length++] = i);
          }),
          (o._getPath = function() {
            return this._path || (this._path = new j());
          }),
          r(
            0,
            o,
            'globalCompositeOperation',
            function() {
              return G.NAMES[this._nBlendType];
            },
            function(t) {
              var e = G.TOINT[t];
              null == e ||
                this._nBlendType === e ||
                (W.save(this, 65536, this, !0),
                (this._curSubmit = rt.RENDERBASE),
                (this._renderKey = 0),
                (this._nBlendType = e));
            }
          ),
          r(
            0,
            o,
            'strokeStyle',
            function() {
              return this._shader2D.strokeStyle;
            },
            function(t) {
              this._shader2D.strokeStyle.equal(t) ||
                (W.save(this, 512, this._shader2D, !1),
                (this._shader2D.strokeStyle = z.create(t)));
            }
          ),
          r(
            0,
            o,
            'globalAlpha',
            function() {
              return this._shader2D.ALPHA;
            },
            function(t) {
              (t = Math.floor(1e3 * t) / 1e3) != this._shader2D.ALPHA &&
                (W.save(this, 1, this._shader2D, !0),
                (this._shader2D.ALPHA = t));
            }
          ),
          r(0, o, 'asBitmap', null, function(t) {
            if (t) {
              if (
                (this._targets || (this._targets = new Z()),
                (this._targets.repaint = !0),
                !this._width || !this._height)
              )
                throw Error('asBitmap no size!');
              this._targets.setSP(this.sprite),
                this._targets.size(this._width, this._height);
            } else this._targets = null;
          }),
          r(
            0,
            o,
            'fillStyle',
            function() {
              return this._shader2D.fillStyle;
            },
            function(t) {
              this._shader2D.fillStyle.equal(t) ||
                (W.save(this, 2, this._shader2D, !1),
                (this._shader2D.fillStyle = z.create(t)));
            }
          ),
          r(
            0,
            o,
            'textAlign',
            function() {
              return this._other.textAlign;
            },
            function(t) {
              this._other.textAlign === t ||
                ((this._other = this._other.make()),
                W.save(this, 32768, this._other, !1),
                (this._other.textAlign = t));
            }
          ),
          r(
            0,
            o,
            'lineWidth',
            function() {
              return this._other.lineWidth;
            },
            function(t) {
              this._other.lineWidth === t ||
                ((this._other = this._other.make()),
                W.save(this, 256, this._other, !1),
                (this._other.lineWidth = t));
            }
          ),
          r(
            0,
            o,
            'textBaseline',
            function() {
              return this._other.textBaseline;
            },
            function(t) {
              this._other.textBaseline === t ||
                ((this._other = this._other.make()),
                W.save(this, 16384, this._other, !1),
                (this._other.textBaseline = t));
            }
          ),
          r(0, o, 'font', null, function(t) {
            t != this._other.font.toString() &&
              ((this._other = this._other.make()),
              W.save(this, 8, this._other, !1),
              this._other.font === ft.EMPTY
                ? (this._other.font = new ft(t))
                : this._other.font.setFont(t));
          }),
          (e.__init__ = function() {
            s.DEFAULT = new s();
          }),
          (e._tempPoint = new w()),
          (e._SUBMITVBSIZE = 32e3),
          (e._MAXSIZE = 99999999),
          (e._RECTVBSIZE = 16),
          (e.MAXCLIPRECT = new x(0, 0, 99999999, 99999999)),
          (e._COUNT = 0),
          (e._tmpMatrix = new b()),
          (e.SEGNUM = 32),
          (e._contextcount = 0),
          n(e, [
            '_fontTemp',
            function() {
              return (this._fontTemp = new ft());
            },
            '_drawStyleTemp',
            function() {
              return (this._drawStyleTemp = new z(null));
            }
          ]),
          (e.__init$ = function() {
            s = (function() {
              function t() {
                (this.lineWidth = 1),
                  (this.path = null),
                  (this.textAlign = null),
                  (this.textBaseline = null),
                  (this.font = ft.EMPTY);
              }
              a(t, '');
              var e = t.prototype;
              return (
                (e.clear = function() {
                  (this.lineWidth = 1),
                    this.path && this.path.clear(),
                    (this.textAlign = this.textBaseline = null),
                    (this.font = ft.EMPTY);
                }),
                (e.make = function() {
                  return this === t.DEFAULT ? new t() : this;
                }),
                (t.DEFAULT = null),
                t
              );
            })();
          }),
          e
        );
      })(),
      Ct = (function(t) {
        function e(t, i) {
          (this.size = [0, 0]),
            (this.alpha = 1),
            (this.ALPHA = 1),
            (this.subID = 0),
            (this._cacheID = 0),
            e.__super.call(this),
            (this.defines = new Et()),
            (this.position = e._POSITION),
            (this.mainID = t),
            (this.subID = i),
            (this.textureHost = null),
            (this.texture = null),
            (this.fillStyle = null),
            (this.color = null),
            (this.strokeStyle = null),
            (this.colorAdd = null),
            (this.glTexture = null),
            (this.u_mmat2 = null),
            (this._cacheID = t | i),
            (this._inClassCache = e._cache[this._cacheID]),
            t > 0 &&
              !this._inClassCache &&
              ((this._inClassCache = e._cache[this._cacheID] = []),
              (this._inClassCache._length = 0)),
            this.clear();
        }
        a(e, 'laya.webgl.shader.d2.value.Value2D', U);
        var i = e.prototype;
        return (
          (i.setValue = function(t) {}),
          (i.refresh = function() {
            var t = this.size;
            return (
              (t[0] = yt.width),
              (t[1] = yt.height),
              (this.alpha = this.ALPHA * yt.worldAlpha),
              (this.mmat = yt.worldMatrix4),
              this
            );
          }),
          (i._ShaderWithCompile = function() {
            return Yt.withCompile2D(
              0,
              this.mainID,
              this.defines.toNameDic(),
              this.mainID | this.defines._value,
              Zt.create
            );
          }),
          (i._withWorldShaderDefines = function() {
            var t = yt.worldShaderDefines,
              e = Yt.sharders[this.mainID | this.defines._value | t.getValue()];
            if (!e) {
              var i,
                n,
                a = {};
              i = this.defines.toNameDic();
              for (n in i) a[n] = '';
              i = t.toNameDic();
              for (n in i) a[n] = '';
              e = Yt.withCompile2D(
                0,
                this.mainID,
                a,
                this.mainID | this.defines._value | t.getValue(),
                Zt.create
              );
            }
            var r = yt.worldFilters;
            if (!r) return e;
            for (var s, o = r.length, l = 0; l < o; l++)
              (s = r[l]) && s.action.setValue(this);
            return e;
          }),
          (i.upload = function() {
            var t = yt;
            (this.alpha = this.ALPHA * t.worldAlpha),
              yt.worldMatrix4 !== yt.TEMPMAT4_ARRAY && this.defines.add(128),
              bt.shaderHighPrecision && this.defines.add(1024);
            var e,
              i = t.worldShaderDefines
                ? this._withWorldShaderDefines()
                : Yt.sharders[this.mainID | this.defines._value] ||
                  this._ShaderWithCompile();
            (this.size[0] = t.width),
              (this.size[1] = t.height),
              (this.mmat = t.worldMatrix4),
              kt.activeShader !== i
                ? (i._shaderValueWidth !== t.width ||
                  i._shaderValueHeight !== t.height
                    ? ((i._shaderValueWidth = t.width),
                      (i._shaderValueHeight = t.height))
                    : (e = i._params2dQuick2 || i._make2dQuick2()),
                  i.upload(this, e))
                : (i._shaderValueWidth !== t.width ||
                  i._shaderValueHeight !== t.height
                    ? ((i._shaderValueWidth = t.width),
                      (i._shaderValueHeight = t.height))
                    : (e = i._params2dQuick1 || i._make2dQuick1()),
                  i.upload(this, e));
          }),
          (i.setFilters = function(t) {
            if (((this.filters = t), t))
              for (var e, i = t.length, n = 0; n < i; n++)
                (e = t[n]) &&
                  (this.defines.add(e.type), e.action.setValue(this));
          }),
          (i.clear = function() {
            this.defines.setValue(this.subID);
          }),
          (i.release = function() {
            (this._inClassCache[this._inClassCache._length++] = this),
              (this.fillStyle = null),
              (this.strokeStyle = null),
              this.clear();
          }),
          (e._initone = function(t, i) {
            (e._typeClass[t] = i),
              (e._cache[t] = []),
              (e._cache[t]._length = 0);
          }),
          (e.__init__ = function() {
            (e._POSITION = [2, 5126, !1, 4 * pt.BYTES_PE, 0]),
              (e._TEXCOORD = [2, 5126, !1, 4 * pt.BYTES_PE, 2 * pt.BYTES_PE]),
              e._initone(2, Vt),
              e._initone(4, Gt),
              e._initone(256, Ft),
              e._initone(512, Ut),
              e._initone(1, Ht),
              e._initone(65, Kt),
              e._initone(9, Ht);
          }),
          (e.create = function(t, i) {
            var n = e._cache[t | i];
            return n._length ? n[--n._length] : new e._typeClass[t | i](i);
          }),
          (e._POSITION = null),
          (e._TEXCOORD = null),
          (e._cache = []),
          (e._typeClass = []),
          (e.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
          e
        );
      })(),
      St = (function(t) {
        function e(t, i) {
          e.__super.call(this, t, i);
        }
        a(e, 'laya.webgl.utils.RenderSprite3D', C);
        var i = e.prototype;
        return (
          (i.onCreate = function(t) {
            switch (t) {
              case 8:
                return void (this._fun = this._blend);
              case 4:
                return void (this._fun = this._transform);
            }
          }),
          (i._mask = function(t, i, n, a) {
            var r,
              s,
              o = this._next,
              l = t.mask;
            if (l) {
              i.ctx.save();
              var h = i.ctx.globalCompositeOperation,
                c = new x();
              if (
                (c.copyFrom(l.getBounds()),
                (c.width = Math.round(c.width)),
                (c.height = Math.round(c.height)),
                (c.x = Math.round(c.x)),
                (c.y = Math.round(c.y)),
                c.width > 0 && c.height > 0)
              ) {
                var u = t._style._tf,
                  _ = ot.create();
                _.addValue('bounds', c),
                  (r = st.create(
                    [_, i],
                    laya.webgl.utils.RenderSprite3D.tmpTarget
                  )),
                  i.addRenderObject(r),
                  l.render(i, -c.x, -c.y),
                  (r = st.create(
                    [_],
                    laya.webgl.utils.RenderSprite3D.endTmpTarget
                  )),
                  i.addRenderObject(r),
                  i.ctx.save(),
                  i.clipRect(
                    n - u.translateX + c.x,
                    a - u.translateY + c.y,
                    c.width,
                    c.height
                  ),
                  o._fun.call(o, t, i, n, a),
                  i.ctx.restore(),
                  (s = ct.create(6)),
                  (h = i.ctx.globalCompositeOperation),
                  (s.blendMode = 'mask'),
                  i.addRenderObject(s),
                  b.TEMP.identity();
                var d = Ct.create(1, 0),
                  f = B.INV_UV,
                  p = c.width,
                  m = c.height;
                (c.width < 32 || c.height < 32) &&
                  (((f = e.tempUV)[0] = 0),
                  (f[1] = 0),
                  (f[2] = c.width >= 32 ? 1 : c.width / 32),
                  (f[3] = 0),
                  (f[4] = c.width >= 32 ? 1 : c.width / 32),
                  (f[5] = c.height >= 32 ? 1 : c.height / 32),
                  (f[6] = 0),
                  (f[7] = c.height >= 32 ? 1 : c.height / 32),
                  (c.width = c.width >= 32 ? c.width : 32),
                  (c.height = c.height >= 32 ? c.height : 32),
                  (f[1] *= -1),
                  (f[3] *= -1),
                  (f[5] *= -1),
                  (f[7] *= -1),
                  (f[1] += 1),
                  (f[3] += 1),
                  (f[5] += 1),
                  (f[7] += 1)),
                  i.ctx.drawTarget(
                    _,
                    n + c.x - u.translateX,
                    a + c.y - u.translateY,
                    p,
                    m,
                    b.TEMP,
                    'tmpTarget',
                    d,
                    f,
                    6
                  ),
                  (r = st.create(
                    [_],
                    laya.webgl.utils.RenderSprite3D.recycleTarget
                  )),
                  i.addRenderObject(r),
                  ((s = ct.create(6)).blendMode = h),
                  i.addRenderObject(s);
              }
              i.ctx.restore();
            } else o._fun.call(o, t, i, n, a);
          }),
          (i._blend = function(t, e, i, n) {
            var a = t._style,
              r = this._next;
            a.blendMode
              ? (e.ctx.save(),
                (e.ctx.globalCompositeOperation = a.blendMode),
                r._fun.call(r, t, e, i, n),
                e.ctx.restore())
              : r._fun.call(r, t, e, i, n);
          }),
          (i._transform = function(t, e, i, n) {
            var a = t.transform,
              r = this._next;
            if (a && r != C.NORENDER) {
              var s = e.ctx;
              t._style;
              (a.tx = i), (a.ty = n);
              var o = s._getTransformMatrix(),
                l = o.clone();
              b.mul(a, o, o),
                o._checkTransform(),
                (a.tx = a.ty = 0),
                r._fun.call(r, t, e, 0, 0),
                l.copyTo(o),
                l.destroy();
            } else r._fun.call(r, t, e, i, n);
          }),
          (e.tmpTarget = function(t, e) {
            var i = t.getValue('bounds'),
              n = Pt.create(i.width, i.height);
            n.start(), n.clear(0, 0, 0, 0), t.addValue('tmpTarget', n);
          }),
          (e.endTmpTarget = function(t) {
            t.getValue('tmpTarget').end();
          }),
          (e.recycleTarget = function(t) {
            t.getValue('tmpTarget').recycle(), t.recycle();
          }),
          n(e, [
            'tempUV',
            function() {
              return (this.tempUV = new Array(8));
            }
          ]),
          e
        );
      })(),
      Tt = (function(t) {
        function e() {
          (this.data = null), e.__super.call(this);
        }
        a(e, 'laya.filters.webgl.ColorFilterActionGL', O);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.filters.IFilterActionGL': !0 }),
          (n.setValue = function(t) {
            (t.colorMat = this.data._mat), (t.colorAlpha = this.data._alpha);
          }),
          (n.apply3d = function(t, e, i, n, a) {
            var r = t.getValue('bounds'),
              s = Ct.create(1, 0);
            s.setFilters([this.data]);
            var o = b.TEMP;
            o.identity(),
              i.ctx.drawTarget(t, 0, 0, r.width, r.height, o, 'src', s);
          }),
          e
        );
      })(),
      Mt = (function(t) {
        function e(t, i, n, a, r) {
          (this._atlasCanvas = null),
            (this._inAtlasTextureKey = null),
            (this._inAtlasTextureBitmapValue = null),
            (this._inAtlasTextureOriUVValue = null),
            (this._InAtlasWebGLImagesKey = null),
            (this._InAtlasWebGLImagesOffsetValue = null),
            e.__super.call(this, t, i, r),
            (this._inAtlasTextureKey = []),
            (this._inAtlasTextureBitmapValue = []),
            (this._inAtlasTextureOriUVValue = []),
            (this._InAtlasWebGLImagesKey = {}),
            (this._InAtlasWebGLImagesOffsetValue = []),
            (this._atlasCanvas = new zt()),
            (this._atlasCanvas._atlaser = this),
            (this._atlasCanvas.width = n),
            (this._atlasCanvas.height = a),
            this._atlasCanvas.activeResource(),
            (this._atlasCanvas.lock = !0);
        }
        a(e, 'laya.webgl.atlas.Atlaser', V);
        var i = e.prototype;
        return (
          (i.computeUVinAtlasTexture = function(t, e, i, n) {
            var a = F.atlasTextureWidth,
              r = F.atlasTextureHeight,
              s = i / a,
              o = n / r,
              l = (i + t.bitmap.width) / a,
              h = (n + t.bitmap.height) / r,
              c = t.bitmap.width / a,
              u = t.bitmap.height / r;
            t.uv = [
              s + e[0] * c,
              o + e[1] * u,
              l - (1 - e[2]) * c,
              o + e[3] * u,
              l - (1 - e[4]) * c,
              h - (1 - e[5]) * u,
              s + e[6] * c,
              h - (1 - e[7]) * u
            ];
          }),
          (i.findBitmapIsExist = function(t) {
            if (t instanceof laya.webgl.resource.WebGLImage) {
              var e = t,
                i = e.url,
                n = this._InAtlasWebGLImagesKey[i || e.id];
              if (n) return n.offsetInfoID;
            }
            return -1;
          }),
          (i.addToAtlasTexture = function(t, e, i) {
            if (t instanceof laya.webgl.resource.WebGLImage) {
              var n = t,
                a = n.url;
              (this._InAtlasWebGLImagesKey[a || n.id] = {
                bitmap: t,
                offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length
              }),
                this._InAtlasWebGLImagesOffsetValue.push([e, i]);
            }
            this._atlasCanvas.texSubImage2D(e, i, t.atlasSource),
              t.clearAtlasSource();
          }),
          (i.addToAtlas = function(t, e, i) {
            t._atlasID = this._inAtlasTextureKey.length;
            var n = t.uv.slice(),
              a = t.bitmap;
            this._inAtlasTextureKey.push(t),
              this._inAtlasTextureOriUVValue.push(n),
              this._inAtlasTextureBitmapValue.push(a),
              this.computeUVinAtlasTexture(t, n, e, i),
              (t.bitmap = this._atlasCanvas);
          }),
          (i.clear = function() {
            for (var t = 0, e = this._inAtlasTextureKey.length; t < e; t++)
              (this._inAtlasTextureKey[
                t
              ].bitmap = this._inAtlasTextureBitmapValue[t]),
                (this._inAtlasTextureKey[t].uv = this._inAtlasTextureOriUVValue[
                  t
                ]),
                (this._inAtlasTextureKey[t]._atlasID = -1),
                (this._inAtlasTextureKey[t].bitmap.lock = !1),
                this._inAtlasTextureKey[t].bitmap.releaseResource();
            (this._inAtlasTextureKey.length = 0),
              (this._inAtlasTextureBitmapValue.length = 0),
              (this._inAtlasTextureOriUVValue.length = 0),
              (this._InAtlasWebGLImagesKey = null),
              (this._InAtlasWebGLImagesOffsetValue.length = 0);
          }),
          (i.dispose = function() {
            this.clear(), this._atlasCanvas.destroy();
          }),
          r(0, i, 'InAtlasWebGLImagesOffsetValue', function() {
            return this._InAtlasWebGLImagesOffsetValue;
          }),
          r(0, i, 'texture', function() {
            return this._atlasCanvas;
          }),
          r(0, i, 'inAtlasWebGLImagesKey', function() {
            return this._InAtlasWebGLImagesKey;
          }),
          e
        );
      })(),
      Et = (function(t) {
        function e() {
          e.__super.call(this, e.__name2int, e.__int2name, e.__int2nameMap);
        }
        return (
          a(e, 'laya.webgl.shader.d2.ShaderDefines2D', $),
          (e.__init__ = function() {
            e.reg('TEXTURE2D', 1),
              e.reg('COLOR2D', 2),
              e.reg('PRIMITIVE', 4),
              e.reg('GLOW_FILTER', 8),
              e.reg('BLUR_FILTER', 16),
              e.reg('COLOR_FILTER', 32),
              e.reg('COLOR_ADD', 64),
              e.reg('WORLDMAT', 128),
              e.reg('FILLTEXTURE', 256),
              e.reg('FSHIGHPRECISION', 1024);
          }),
          (e.reg = function(t, i) {
            $._reg(t, i, e.__name2int, e.__int2name);
          }),
          (e.toText = function(t, e, i) {
            return $._toText(t, e, i);
          }),
          (e.toInt = function(t) {
            return $._toInt(t, e.__name2int);
          }),
          (e.TEXTURE2D = 1),
          (e.COLOR2D = 2),
          (e.PRIMITIVE = 4),
          (e.FILTERGLOW = 8),
          (e.FILTERBLUR = 16),
          (e.FILTERCOLOR = 32),
          (e.COLORADD = 64),
          (e.WORLDMAT = 128),
          (e.FILLTEXTURE = 256),
          (e.SKINMESH = 512),
          (e.SHADERDEFINE_FSHIGHPRECISION = 1024),
          (e.__name2int = {}),
          (e.__int2name = []),
          (e.__int2nameMap = []),
          e
        );
      })(),
      Lt =
        ((function(t) {
          function e(t, i, n, a, r, s, o) {
            e.__super.call(this, t, i, n, a, 40, r, s, o);
          }
          a(e, 'laya.webgl.shapes.Ellipse', it);
        })(),
        (function(t) {
          function e(t, i, n, a, r) {
            (this._points = []),
              this.rebuild(n),
              e.__super.call(this, t, i, 0, 0, 0, r, a, r, 0);
          }
          a(e, 'laya.webgl.shapes.Line', it);
          var i = e.prototype;
          return (
            (i.rebuild = function(t) {
              var e = t.length;
              e != this._points.length &&
                ((this.mUint16Array = new Uint16Array(6 * (e / 2 - 1))),
                (this.mFloat32Array = new Float32Array(5 * e))),
                (this._points.length = 0);
              for (
                var i = NaN, n = NaN, a = -1, r = -1, s = t.length / 2, o = 0;
                o < s;
                o++
              )
                (i = t[2 * o]),
                  (n = t[2 * o + 1]),
                  (Math.abs(a - i) > 0.01 || Math.abs(r - n) > 0.01) &&
                    this._points.push(i, n),
                  (a = i),
                  (r = n);
            }),
            (i.getData = function(t, e, i) {
              var n = [],
                a = [];
              this.borderWidth > 0 &&
                this.createLine2(
                  this._points,
                  n,
                  this.borderWidth,
                  i,
                  a,
                  this._points.length / 2
                ),
                this.mUint16Array.set(n, 0),
                this.mFloat32Array.set(a, 0),
                t.append(this.mUint16Array),
                e.append(this.mFloat32Array);
            }),
            e
          );
        })()),
      Dt = (function(t) {
        function e(t, i, n, a, r) {
          this._points = [];
          for (
            var s = NaN, o = NaN, l = -1, h = -1, c = n.length / 2 - 1, u = 0;
            u < c;
            u++
          )
            (s = n[2 * u]),
              (o = n[2 * u + 1]),
              (Math.abs(l - s) > 0.01 || Math.abs(h - o) > 0.01) &&
                this._points.push(s, o),
              (l = s),
              (h = o);
          (s = n[2 * c]),
            (o = n[2 * c + 1]),
            (l = this._points[0]),
            (h = this._points[1]),
            (Math.abs(l - s) > 0.01 || Math.abs(h - o) > 0.01) &&
              this._points.push(s, o),
            e.__super.call(this, t, i, 0, 0, this._points.length / 2, 0, a, r);
        }
        a(e, 'laya.webgl.shapes.LoopLine', it);
        var i = e.prototype;
        return (
          (i.getData = function(t, e, i) {
            if (this.borderWidth > 0) {
              for (
                var n = this.color,
                  a = ((n >> 16) & 255) / 255,
                  r = ((n >> 8) & 255) / 255,
                  s = (255 & n) / 255,
                  o = [],
                  l = 0,
                  h = 0,
                  c = [],
                  u = Math.floor(this._points.length / 2),
                  _ = 0;
                _ < u;
                _++
              )
                (l = this._points[2 * _]),
                  (h = this._points[2 * _ + 1]),
                  o.push(this.x + l, this.y + h, a, r, s);
              this.createLoopLine(o, c, this.borderWidth, i + o.length / 5),
                t.append(new Uint16Array(c)),
                e.append(new Float32Array(o));
            }
          }),
          (i.createLoopLine = function(t, e, i, n, a, r) {
            t.length;
            var s = t.concat(),
              o = a || t,
              l = this.borderColor,
              h = ((l >> 16) & 255) / 255,
              c = ((l >> 8) & 255) / 255,
              u = (255 & l) / 255,
              _ = [s[0], s[1]],
              d = [s[s.length - 5], s[s.length - 4]],
              f = d[0] + 0.5 * (_[0] - d[0]),
              p = d[1] + 0.5 * (_[1] - d[1]);
            s.unshift(f, p, 0, 0, 0), s.push(f, p, 0, 0, 0);
            var m,
              g,
              y,
              v,
              b,
              w,
              x,
              I,
              C,
              S,
              T,
              M,
              E,
              L,
              D,
              A,
              N,
              R,
              B,
              k,
              P = s.length / 5,
              O = n,
              U = i / 2;
            (y = s[0]),
              (v = s[1]),
              (S = y - (b = s[5])),
              (C =
                ((C = -(v - (w = s[6]))) / (k = Math.sqrt(C * C + S * S))) * U),
              (S = (S / k) * U),
              o.push(y - C, v - S, h, c, u, y + C, v + S, h, c, u);
            for (var V = 1; V < P - 1; V++)
              (y = s[5 * (V - 1)]),
                (v = s[5 * (V - 1) + 1]),
                (b = s[5 * V]),
                (w = s[5 * V + 1]),
                (x = s[5 * (V + 1)]),
                (I = s[5 * (V + 1) + 1]),
                (S = y - b),
                (M = b - x),
                (D =
                  (-(C =
                    ((C = -(v - w)) / (k = Math.sqrt(C * C + S * S))) * U) +
                    y) *
                    (-(S = (S / k) * U) + w) -
                  (-C + b) * (-S + v)),
                (R =
                  (-(T =
                    ((T = -(w - I)) / (k = Math.sqrt(T * T + M * M))) * U) +
                    x) *
                    (-(M = (M / k) * U) + w) -
                  (-T + b) * (-M + I)),
                (B =
                  (E = -S + v - (-S + w)) * (N = -T + b - (-T + x)) -
                  (A = -M + I - (-M + w)) * (L = -C + b - (-C + y))),
                Math.abs(B) < 0.1
                  ? ((B += 10.1),
                    o.push(b - C, w - S, h, c, u, b + C, w + S, h, c, u))
                  : (((m = (L * R - N * D) / B) - b) * (m - b) +
                      ((g = (A * D - E * R) / B) - w) +
                      (g - w),
                    o.push(m, g, h, c, u, b - (m - b), w - (g - w), h, c, u));
            r && (e = r);
            var F = this.edges + 1;
            for (V = 1; V < F; V++)
              e.push(
                O + 2 * (V - 1),
                O + 2 * (V - 1) + 1,
                O + 2 * V + 1,
                O + 2 * V + 1,
                O + 2 * V,
                O + 2 * (V - 1)
              );
            return (
              e.push(
                O + 2 * (V - 1),
                O + 2 * (V - 1) + 1,
                O + 1,
                O + 1,
                O,
                O + 2 * (V - 1)
              ),
              o
            );
          }),
          e
        );
      })(),
      At = (function(t) {
        function e(t, i, n, a, r, s) {
          (this._points = null),
            (this._start = -1),
            (this._repaint = !1),
            (this.earcutTriangles = null),
            (this._mat = b.create()),
            (this._points = n.slice(0, n.length)),
            e.__super.call(this, t, i, 0, 0, this._points.length / 2, a, r, s);
        }
        a(e, 'laya.webgl.shapes.Polygon', it);
        var i = e.prototype;
        return (
          (i.rebuild = function(t) {
            this._repaint ||
              ((this._points.length = 0),
              (this._points = this._points.concat(t)));
          }),
          (i.setMatrix = function(t) {
            t.copyTo(this._mat);
          }),
          (i.needUpdate = function(t) {
            return (
              (this._repaint =
                this._mat.a == t.a &&
                this._mat.b == t.b &&
                this._mat.c == t.c &&
                this._mat.d == t.d &&
                this._mat.tx == t.tx &&
                this._mat.ty == t.ty),
              !this._repaint
            );
          }),
          (i.getData = function(t, e, i) {
            var n,
              a = 0,
              r = this._points,
              s = 0;
            if (this.mUint16Array && this.mFloat32Array && this._repaint) {
              if (this._start != i) {
                for (
                  this._start = i,
                    n = [],
                    s = this.earcutTriangles.length,
                    a = 0;
                  a < s;
                  a++
                )
                  n.push(this.earcutTriangles[a] + i);
                this.mUint16Array = new Uint16Array(n);
              }
            } else {
              (this._start = i), (n = []);
              var o = [],
                l = [],
                h = this.color,
                c = ((h >> 16) & 255) / 255,
                u = ((h >> 8) & 255) / 255,
                _ = (255 & h) / 255;
              for (s = Math.floor(r.length / 2), a = 0; a < s; a++)
                o.push(this.x + r[2 * a], this.y + r[2 * a + 1], c, u, _),
                  l.push(this.x + r[2 * a], this.y + r[2 * a + 1]);
              for (
                this.earcutTriangles = nt.earcut(l, null, 2),
                  s = this.earcutTriangles.length,
                  a = 0;
                a < s;
                a++
              )
                n.push(this.earcutTriangles[a] + i);
              (this.mUint16Array = new Uint16Array(n)),
                (this.mFloat32Array = new Float32Array(o));
            }
            t.append(this.mUint16Array), e.append(this.mFloat32Array);
          }),
          e
        );
      })(),
      Nt = (function(t) {
        function e() {
          (this._matrix = new b()),
            (this._matrix4 = pt.defaultMatrix4.concat()),
            e.__super.call(this, 1e4),
            (this.shaderValue = new Ct(0, 0));
        }
        a(e, 'laya.webgl.submit.SubmitCanvas', rt);
        var i = e.prototype;
        return (
          (i.renderSubmit = function() {
            if (this._ctx_src._targets)
              return this._ctx_src._targets.flush(this._ctx_src), 1;
            var t = yt.worldAlpha,
              e = yt.worldMatrix4,
              i = yt.worldMatrix,
              n = yt.worldFilters,
              a = yt.worldShaderDefines,
              r = this.shaderValue,
              s = this._matrix,
              o = this._matrix4,
              l = b.TEMP;
            return (
              b.mul(s, i, l),
              (o[0] = l.a),
              (o[1] = l.b),
              (o[4] = l.c),
              (o[5] = l.d),
              (o[12] = l.tx),
              (o[13] = l.ty),
              (yt.worldMatrix = l.clone()),
              (yt.worldMatrix4 = o),
              (yt.worldAlpha = yt.worldAlpha * r.alpha),
              r.filters &&
                r.filters.length &&
                ((yt.worldFilters = r.filters),
                (yt.worldShaderDefines = r.defines)),
              this._ctx_src.flush(),
              (yt.worldAlpha = t),
              (yt.worldMatrix4 = e),
              yt.worldMatrix.destroy(),
              (yt.worldMatrix = i),
              (yt.worldFilters = n),
              (yt.worldShaderDefines = a),
              1
            );
          }),
          (i.releaseRender = function() {
            var t = e._cache;
            (this._ctx_src = null), (t[t._length++] = this);
          }),
          (i.getRenderType = function() {
            return 10003;
          }),
          (e.create = function(t, i, n) {
            var a = e._cache._length ? e._cache[--e._cache._length] : new e();
            a._ctx_src = t;
            var r = a.shaderValue;
            return (
              (r.alpha = i),
              r.defines.setValue(0),
              n && n.length && r.setFilters(n),
              a
            );
          }),
          (e._cache = ((e._cache = []), (e._cache._length = 0), e._cache)),
          e
        );
      })(),
      Rt = (function(t) {
        function e(t) {
          (this._preIsSameTextureShader = !1),
            (this._isSameTexture = !0),
            (this._texs = new Array()),
            (this._texsID = new Array()),
            (this._vbPos = new Array()),
            void 0 === t && (t = 1e4),
            e.__super.call(this, t);
        }
        a(e, 'laya.webgl.submit.SubmitTexture', rt);
        var i = e.prototype;
        return (
          (i.releaseRender = function() {
            var t = e._cache;
            (t[t._length++] = this),
              this.shaderValue.release(),
              (this._preIsSameTextureShader = !1),
              (this._vb = null),
              (this._texs.length = 0),
              (this._vbPos.length = 0),
              (this._isSameTexture = !0);
          }),
          (i.addTexture = function(t, e) {
            (this._texsID[this._texs.length] = t._uvID),
              this._texs.push(t),
              this._vbPos.push(e);
          }),
          (i.checkTexture = function() {
            if (this._texs.length < 1) this._isSameTexture = !0;
            else {
              var t = this.shaderValue.textureHost.bitmap;
              if (null !== t)
                for (
                  var e = this._vb.getFloat32Array(),
                    i = 0,
                    n = this._texs.length;
                  i < n;
                  i++
                ) {
                  var a = this._texs[i];
                  a.active();
                  var r = a.uv;
                  if (this._texsID[i] !== a._uvID) {
                    this._texsID[i] = a._uvID;
                    var s = this._vbPos[i];
                    (e[s + 2] = r[0]),
                      (e[s + 3] = r[1]),
                      (e[s + 6] = r[2]),
                      (e[s + 7] = r[3]),
                      (e[s + 10] = r[4]),
                      (e[s + 11] = r[5]),
                      (e[s + 14] = r[6]),
                      (e[s + 15] = r[7]),
                      this._vb.setNeedUpload();
                  }
                  a.bitmap !== t && (this._isSameTexture = !1);
                }
            }
          }),
          (i.renderSubmit = function() {
            if (0 === this._numEle) return (e._shaderSet = !1), 1;
            var t = this.shaderValue.textureHost;
            if (t) {
              var i = t.source;
              if (!t.bitmap || !i) return (e._shaderSet = !1), 1;
              this.shaderValue.texture = i;
            }
            this._vb.bind_upload(this._ib);
            var n = bt.mainContext;
            if (
              (G.activeBlendFunction !== this._blendFn &&
                (n.enable(3042),
                this._blendFn(n),
                (G.activeBlendFunction = this._blendFn)),
              D.drawCall++,
              (D.trianglesFaces += this._numEle / 3),
              this._preIsSameTextureShader && kt.activeShader && e._shaderSet
                ? kt.activeShader.uploadTexture2D(this.shaderValue.texture)
                : this.shaderValue.upload(),
              (e._shaderSet = !0),
              this._texs.length > 1 && !this._isSameTexture)
            )
              for (
                var a = t.bitmap,
                  r = 0,
                  s = kt.activeShader,
                  o = 0,
                  l = this._texs.length;
                o < l;
                o++
              ) {
                var h = this._texs[o];
                (h.bitmap === a && o + 1 !== l) ||
                  (s.uploadTexture2D(h.source),
                  n.drawElements(
                    4,
                    6 * (o - r + 1),
                    5123,
                    this._startIdx + 6 * r * pt.BYTES_PIDX
                  ),
                  (a = h.bitmap),
                  (r = o));
              }
            else n.drawElements(4, this._numEle, 5123, this._startIdx);
            return 1;
          }),
          (e.create = function(t, i, n, a, r) {
            var s = e._cache._length ? e._cache[--e._cache._length] : new e();
            null == n &&
              ((n = s._selfVb || (s._selfVb = $t.create(-1))).clear(), (a = 0)),
              (s._ib = i),
              (s._vb = n),
              (s._startIdx = a * pt.BYTES_PIDX),
              (s._numEle = 0);
            var o = t._nBlendType;
            (s._blendFn = t._targets ? G.targetFns[o] : G.fns[o]),
              (s.shaderValue = r),
              s.shaderValue.setValue(t._shader2D);
            var l = t._shader2D.filters;
            return l && s.shaderValue.setFilters(l), s;
          }),
          (e._cache = ((e._cache = []), (e._cache._length = 0), e._cache)),
          (e._shaderSet = !0),
          e
        );
      })(),
      Bt = (function(t) {
        function e() {
          e.__super.call(this, laya.webgl.utils.MeshTexture.const_stride, 0, 0),
            (this.canReuse = !0),
            this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo);
        }
        a(e, 'laya.webgl.utils.MeshTexture', gt);
        var i = e.prototype;
        return (
          (i.addData = function(t, i, n, a, r, s) {
            for (
              var o = t.length / 2,
                l = this._vb.needSize(o * e.const_stride) >> 2,
                h = this._vb.getFloat32Array(),
                c = 0,
                u = 0;
              u < o;
              u++
            ) {
              var _ = t[c],
                d = t[c + 1],
                f = _ * a.a + d * a.c + a.tx,
                p = _ * a.b + d * a.d + a.ty;
              (h[l++] = f),
                (h[l++] = p),
                (h[l++] = i[c]),
                (h[l++] = i[c + 1]),
                (c += 2);
            }
            this._vb.setNeedUpload();
            var m = this.vertNum;
            if (m > 0) {
              (o = n.length) > e.tmpIdx.length &&
                (e.tmpIdx = new Uint16Array(o));
              for (var g = 0; g < o; g++) e.tmpIdx[g] = n[g] + m;
              this._ib.appendU16Array(e.tmpIdx, n.length);
            } else this._ib.append(n);
            this._ib.setNeedUpload(),
              (this.vertNum += o),
              (this.indexNum += n.length);
          }),
          (i.releaseMesh = function() {
            (this._vb._byteLength = 0),
              (this._ib._byteLength = 0),
              (this.vertNum = 0),
              (this.indexNum = 0),
              laya.webgl.utils.MeshTexture._POOL.push(this);
          }),
          (i.destroy = function() {
            this._ib.destroy(), this._vb.destroy();
          }),
          (e.getAMesh = function() {
            return laya.webgl.utils.MeshTexture._POOL.length
              ? laya.webgl.utils.MeshTexture._POOL.pop()
              : new e();
          }),
          (e.const_stride = 16),
          (e._POOL = []),
          n(e, [
            '_fixattriInfo',
            function() {
              return (this._fixattriInfo = [5126, 2, 0, 5126, 2, 8]);
            },
            'tmpIdx',
            function() {
              return (this.tmpIdx = new Uint16Array(4));
            }
          ]),
          e
        );
      })(),
      kt = (function(t) {
        function e() {
          e.__super.call(this), (this.lock = !0);
        }
        return (
          a(e, 'laya.webgl.shader.BaseShader', S),
          (e.activeShader = null),
          (e.bindShader = null),
          e
        );
      })(),
      Pt = (function(t) {
        function e(t, i, n, a, r, s, o, l, h) {
          (this._type = 0),
            (this._svWidth = NaN),
            (this._svHeight = NaN),
            (this._preRenderTarget = null),
            (this._alreadyResolved = !1),
            (this._looked = !1),
            (this._surfaceFormat = 0),
            (this._surfaceType = 0),
            (this._depthStencilFormat = 0),
            (this._mipMap = !1),
            (this._repeat = !1),
            (this._minFifter = 0),
            (this._magFifter = 0),
            (this._destroy = !1),
            void 0 === n && (n = 6408),
            void 0 === a && (a = 5121),
            void 0 === r && (r = 34041),
            void 0 === s && (s = !1),
            void 0 === o && (o = !1),
            void 0 === l && (l = -1),
            void 0 === h && (h = -1),
            (this._type = 1),
            (this._w = t),
            (this._h = i),
            (this._surfaceFormat = n),
            (this._surfaceType = a),
            (this._depthStencilFormat = r),
            I.isConchWebGL &&
              34041 === this._depthStencilFormat &&
              (this._depthStencilFormat = 33189),
            (this._mipMap = s),
            (this._repeat = o),
            (this._minFifter = l),
            (this._magFifter = h),
            this._createWebGLRenderTarget(),
            (this.bitmap.lock = !0),
            e.__super.call(this, this.bitmap, B.INV_UV);
        }
        a(e, 'laya.webgl.resource.RenderTarget2D', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.resource.IDispose': !0 }),
          (n.getType = function() {
            return this._type;
          }),
          (n.getTexture = function() {
            return this;
          }),
          (n.size = function(t, e) {
            (this._w == t && this._h == e) ||
              ((this._w = t),
              (this._h = e),
              this.release(),
              0 != this._w && 0 != this._h && this._createWebGLRenderTarget());
          }),
          (n.release = function() {
            this.destroy();
          }),
          (n.recycle = function() {
            e.POOL.push(this);
          }),
          (n.start = function() {
            var t = bt.mainContext;
            return (
              (this._preRenderTarget = yt.curRenderTarget),
              (yt.curRenderTarget = this),
              t.bindFramebuffer(36160, this.bitmap.frameBuffer),
              (this._alreadyResolved = !1),
              1 == this._type &&
                (t.viewport(0, 0, this._w, this._h),
                (this._svWidth = yt.width),
                (this._svHeight = yt.height),
                (yt.width = this._w),
                (yt.height = this._h),
                (kt.activeShader = null)),
              this
            );
          }),
          (n.clear = function(t, e, i, n) {
            void 0 === t && (t = 0),
              void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              void 0 === n && (n = 1);
            var a = bt.mainContext;
            a.clearColor(t, e, i, n);
            var r = 16384;
            switch (this._depthStencilFormat) {
              case 33189:
                r |= 256;
                break;
              case 36168:
                r |= 1024;
                break;
              case 34041:
                (r |= 256), (r |= 1024);
            }
            a.clear(r);
          }),
          (n.end = function() {
            var t = bt.mainContext;
            t.bindFramebuffer(
              36160,
              this._preRenderTarget
                ? this._preRenderTarget.bitmap.frameBuffer
                : null
            ),
              (this._alreadyResolved = !0),
              (yt.curRenderTarget = this._preRenderTarget),
              1 == this._type
                ? (t.viewport(0, 0, this._svWidth, this._svHeight),
                  (yt.width = this._svWidth),
                  (yt.height = this._svHeight),
                  (kt.activeShader = null))
                : t.viewport(0, 0, i.stage.width, i.stage.height);
          }),
          (n.getData = function(t, e, i, n) {
            var a = bt.mainContext;
            a.bindFramebuffer(36160, this.bitmap.frameBuffer);
            if (!(36053 === a.checkFramebufferStatus(36160)))
              return a.bindFramebuffer(36160, null), null;
            var r = new Uint8Array(this._w * this._h * 4);
            return (
              a.readPixels(
                t,
                e,
                i,
                n,
                this._surfaceFormat,
                this._surfaceType,
                r
              ),
              a.bindFramebuffer(36160, null),
              r
            );
          }),
          (n.destroy = function(e) {
            void 0 === e && (e = !1),
              this._destroy ||
                ((this._loaded = !1),
                this.bitmap.offAll(),
                this.bitmap.disposeResource(),
                this.bitmap.dispose(),
                this.offAll(),
                (this.bitmap = null),
                (this._alreadyResolved = !1),
                (this._destroy = !0),
                t.prototype.destroy.call(this));
          }),
          (n.dispose = function() {}),
          (n._createWebGLRenderTarget = function() {
            (this.bitmap = new Xt(
              this.width,
              this.height,
              this._surfaceFormat,
              this._surfaceType,
              this._depthStencilFormat,
              this._mipMap,
              this._repeat,
              this._minFifter,
              this._magFifter
            )),
              this.bitmap.activeResource(),
              (this._alreadyResolved = !0),
              (this._destroy = !1),
              (this._loaded = !0),
              this.bitmap.on('recovered', this, function(t) {
                this.event('recovered');
              });
          }),
          r(0, n, 'surfaceFormat', function() {
            return this._surfaceFormat;
          }),
          r(0, n, 'magFifter', function() {
            return this._magFifter;
          }),
          r(0, n, 'surfaceType', function() {
            return this._surfaceType;
          }),
          r(0, n, 'mipMap', function() {
            return this._mipMap;
          }),
          r(0, n, 'depthStencilFormat', function() {
            return this._depthStencilFormat;
          }),
          r(0, n, 'minFifter', function() {
            return this._minFifter;
          }),
          r(0, n, 'source', function() {
            return this._alreadyResolved ? i.superGet(B, this, 'source') : null;
          }),
          (e.create = function(t, i, n, a, r, s, o, l, h) {
            void 0 === n && (n = 6408),
              void 0 === a && (a = 5121),
              void 0 === r && (r = 34041),
              void 0 === s && (s = !1),
              void 0 === o && (o = !1),
              void 0 === l && (l = -1),
              void 0 === h && (h = -1);
            var c = e.POOL.pop();
            return (
              c || (c = new e(t, i)),
              (c.bitmap &&
                c._w == t &&
                c._h == i &&
                c._surfaceFormat == n &&
                c._surfaceType == a &&
                c._depthStencilFormat == r &&
                c._mipMap == s &&
                c._repeat == o &&
                c._minFifter == l &&
                c._magFifter == h) ||
                ((c._w = t),
                (c._h = i),
                (c._surfaceFormat = n),
                (c._surfaceType = a),
                (c._depthStencilFormat = r),
                I.isConchWebGL &&
                  34041 === c._depthStencilFormat &&
                  (c._depthStencilFormat = 33189),
                (c._mipMap = s),
                (c._repeat = o),
                (c._minFifter = l),
                (c._magFifter = h),
                c.release(),
                c._createWebGLRenderTarget()),
              c
            );
          }),
          (e.TYPE2D = 1),
          (e.TYPE3D = 2),
          (e.POOL = []),
          e
        );
      })(B),
      Ot = (function(t) {
        function e() {
          (this._glBuffer = null),
            (this._buffer = null),
            (this._bufferType = 0),
            (this._bufferUsage = 0),
            (this._byteLength = 0),
            e.__super.call(this),
            (e._gl = bt.mainContext);
        }
        a(e, 'laya.webgl.utils.Buffer', S);
        var i = e.prototype;
        return (
          (i._bind = function() {
            this.activeResource(),
              e._bindActive[this._bufferType] !== this._glBuffer &&
                (34962 === this._bufferType &&
                  (e._bindVertexBuffer = this._glBuffer),
                e._gl.bindBuffer(
                  this._bufferType,
                  (e._bindActive[this._bufferType] = this._glBuffer)
                ),
                (kt.activeShader = null));
          }),
          (i.recreateResource = function() {
            this._glBuffer || (this._glBuffer = e._gl.createBuffer()),
              this.completeCreate();
          }),
          (i.disposeResource = function() {
            this._glBuffer &&
              (bt.mainContext.deleteBuffer(this._glBuffer),
              (this._glBuffer = null)),
              (this.memorySize = 0);
          }),
          r(0, i, 'bufferUsage', function() {
            return this._bufferUsage;
          }),
          (e._gl = null),
          (e._bindActive = {}),
          (e._bindVertexBuffer = null),
          (e._enableAtributes = []),
          e
        );
      })(),
      Ut = (function(t) {
        function e(t) {
          (this.texcoord = null),
            (this.offsetX = 300),
            (this.offsetY = 0),
            e.__super.call(this, 512, 0);
          var i = 8 * pt.BYTES_PE;
          (this.position = [2, 5126, !1, i, 0]),
            (this.texcoord = [2, 5126, !1, i, 2 * pt.BYTES_PE]),
            (this.color = [4, 5126, !1, i, 4 * pt.BYTES_PE]);
        }
        return a(e, 'laya.webgl.shader.d2.skinAnishader.SkinSV', Ct), e;
      })(),
      Vt = (function(t) {
        function e(t) {
          e.__super.call(this, 2, 0), (this.color = []);
        }
        a(e, 'laya.webgl.shader.d2.value.Color2dSV', Ct);
        return (
          (e.prototype.setValue = function(t) {
            t.fillStyle && (this.color = t.fillStyle._color._color),
              t.strokeStyle && (this.color = t.strokeStyle._color._color);
          }),
          e
        );
      })(),
      Ft = (function(t) {
        function e(t) {
          (this.u_colorMatrix = null),
            (this.strength = 0),
            (this.colorMat = null),
            (this.colorAlpha = null),
            (this.u_TexRange = [0, 1, 0, 1]),
            (this.u_offset = [0, 0]),
            (this.texcoord = Ct._TEXCOORD),
            e.__super.call(this, 256, 0);
        }
        a(e, 'laya.webgl.shader.d2.value.FillTextureSV', Ct);
        var i = e.prototype;
        return (
          (i.setValue = function(t) {
            (this.ALPHA = t.ALPHA), t.filters && this.setFilters(t.filters);
          }),
          (i.clear = function() {
            (this.texture = null),
              (this.shader = null),
              this.defines.setValue(0);
          }),
          e
        );
      })(),
      Ht = (function(t) {
        function e(t) {
          (this.u_colorMatrix = null),
            (this.strength = 0),
            (this.blurInfo = null),
            (this.colorMat = null),
            (this.colorAlpha = null),
            (this.texcoord = Ct._TEXCOORD),
            void 0 === t && (t = 0),
            e.__super.call(this, 1, t);
        }
        a(e, 'laya.webgl.shader.d2.value.TextureSV', Ct);
        var i = e.prototype;
        return (
          (i.setValue = function(t) {
            (this.ALPHA = t.ALPHA), t.filters && this.setFilters(t.filters);
          }),
          (i.clear = function() {
            (this.texture = null),
              (this.shader = null),
              this.defines.setValue(0);
          }),
          e
        );
      })(),
      Gt = (function(t) {
        function e(t) {
          (this.a_color = null),
            (this.u_pos = [0, 0]),
            e.__super.call(this, 4, 0),
            (this.position = [2, 5126, !1, 5 * pt.BYTES_PE, 0]),
            (this.a_color = [3, 5126, !1, 5 * pt.BYTES_PE, 2 * pt.BYTES_PE]);
        }
        return a(e, 'laya.webgl.shader.d2.value.PrimitiveSV', Ct), e;
      })(),
      zt = (function(t) {
        function e() {
          (this._atlaser = null),
            (this._flashCacheImage = null),
            (this._flashCacheImageNeedFlush = !1),
            e.__super.call(this);
        }
        a(e, 'laya.webgl.atlas.AtlasWebGLCanvas', t);
        var i = e.prototype;
        return (
          (i.recreateResource = function() {
            var t = bt.mainContext,
              e = (this._source = t.createTexture()),
              i = wt.curBindTexTarget,
              n = wt.curBindTexValue;
            wt.bindTexture(t, 3553, e),
              t.texImage2D(
                3553,
                0,
                6408,
                this._w,
                this._h,
                0,
                6408,
                5121,
                null
              ),
              t.texParameteri(3553, 10241, 9729),
              t.texParameteri(3553, 10240, 9729),
              t.texParameteri(3553, 10242, 33071),
              t.texParameteri(3553, 10243, 33071),
              i && n && wt.bindTexture(t, i, n),
              (this.memorySize = this._w * this._h * 4),
              this.completeCreate();
          }),
          (i.disposeResource = function() {
            this._source &&
              (bt.mainContext.deleteTexture(this._source),
              (this._source = null),
              (this.memorySize = 0));
          }),
          (i.texSubImage2D = function(t, e, i) {
            if (I.isFlash) {
              this._flashCacheImage ||
                ((this._flashCacheImage = y.create('')),
                this._flashCacheImage._image.createCanvas(this._w, this._h));
              var n = i.bitmapdata;
              this._flashCacheImage._image.copyPixels(
                n,
                0,
                0,
                n.width,
                n.height,
                t,
                e
              ),
                this._flashCacheImageNeedFlush ||
                  (this._flashCacheImageNeedFlush = !0);
            } else {
              var a = bt.mainContext,
                r = wt.curBindTexTarget,
                s = wt.curBindTexValue;
              wt.bindTexture(a, 3553, this._source),
                I.isConchWebGL
                  ? (i !== ConchTextCanvas &&
                      (t - 1 >= 0 &&
                        a.texSubImage2DEx(!0, 3553, 0, t - 1, e, 6408, 5121, i),
                      t + 1 <= this._w &&
                        a.texSubImage2DEx(!0, 3553, 0, t + 1, e, 6408, 5121, i),
                      e - 1 >= 0 &&
                        a.texSubImage2DEx(!0, 3553, 0, t, e - 1, 6408, 5121, i),
                      e + 1 <= this._h &&
                        a.texSubImage2DEx(
                          !0,
                          3553,
                          0,
                          t,
                          e + 1,
                          6408,
                          5121,
                          i
                        )),
                    a.texSubImage2DEx(!0, 3553, 0, t, e, 6408, 5121, i))
                  : (a.pixelStorei(37441, !0),
                    t - 1 >= 0 &&
                      a.texSubImage2D(3553, 0, t - 1, e, 6408, 5121, i),
                    t + 1 <= this._w &&
                      a.texSubImage2D(3553, 0, t + 1, e, 6408, 5121, i),
                    e - 1 >= 0 &&
                      a.texSubImage2D(3553, 0, t, e - 1, 6408, 5121, i),
                    e + 1 <= this._h &&
                      a.texSubImage2D(3553, 0, t, e + 1, 6408, 5121, i),
                    a.texSubImage2D(3553, 0, t, e, 6408, 5121, i),
                    a.pixelStorei(37441, !1)),
                r && s && wt.bindTexture(a, r, s);
            }
          }),
          (i.texSubImage2DPixel = function(t, e, i, n, a) {
            var r = bt.mainContext,
              s = wt.curBindTexTarget,
              o = wt.curBindTexValue;
            wt.bindTexture(r, 3553, this._source);
            var l = new Uint8Array(a.data);
            I.isConchWebGL
              ? r.texSubImage2DEx(!0, 3553, 0, t, e, i, n, 6408, 5121, l)
              : (r.pixelStorei(37441, !0),
                r.texSubImage2D(3553, 0, t, e, i, n, 6408, 5121, l),
                r.pixelStorei(37441, !1)),
              s && o && wt.bindTexture(r, s, o);
          }),
          r(0, i, 'width', t.prototype._$get_width, function(t) {
            this._w = t;
          }),
          r(0, i, 'height', t.prototype._$get_height, function(t) {
            this._h = t;
          }),
          e
        );
      })(h),
      jt = (function(t) {
        function e() {
          (this.flipY = !0), (this.alwaysChange = !1), e.__super.call(this);
        }
        a(e, 'laya.webgl.resource.WebGLCanvas', h);
        var i = e.prototype;
        return (
          (i.getCanvas = function() {
            return this._canvas;
          }),
          (i.clear = function() {
            this._ctx && this._ctx.clear();
          }),
          (i.destroy = function() {
            this._ctx && this._ctx.destroy(), (this._ctx = null);
          }),
          (i._setContext = function(t) {
            this._ctx = t;
          }),
          (i.getContext = function(t, i) {
            return this._ctx ? this._ctx : (this._ctx = e._createContext(this));
          }),
          (i.size = function(t, e) {
            (this._w == t && this._h == e) ||
              ((this._w = t),
              (this._h = e),
              this._ctx && this._ctx.size(t, e),
              this._canvas &&
                ((this._canvas.height = e), (this._canvas.width = t)));
          }),
          (i.activeResource = function(t) {
            void 0 === t && (t = !1), this._source || this.recreateResource();
          }),
          (i.recreateResource = function() {
            this.createWebGlTexture(), this.completeCreate();
          }),
          (i.disposeResource = function() {
            this._source &&
              !this.iscpuSource &&
              (bt.mainContext.deleteTexture(this._source),
              (this._source = null),
              (this.memorySize = 0));
          }),
          (i.createWebGlTexture = function() {
            var t = bt.mainContext;
            this._canvas;
            var i = (this._source = t.createTexture());
            this.iscpuSource = !1;
            var n = wt.curBindTexTarget,
              a = wt.curBindTexValue;
            wt.bindTexture(t, 3553, i),
              t.pixelStorei(37440, this.flipY ? 1 : 0),
              I.isConchWebGL
                ? t.texImage2DEx(
                    e.premulAlpha,
                    3553,
                    0,
                    6408,
                    6408,
                    5121,
                    this._imgData
                  )
                : (e.premulAlpha && t.pixelStorei(37441, !0),
                  t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData),
                  e.premulAlpha && t.pixelStorei(37441, !1)),
              t.texParameteri(3553, 10240, 9729),
              t.texParameteri(3553, 10241, 9729),
              t.texParameteri(3553, 10242, 33071),
              t.texParameteri(3553, 10243, 33071),
              t.pixelStorei(37440, 0),
              (this.memorySize = this._w * this._h * 4),
              n && a && wt.bindTexture(t, n, a);
          }),
          (i.reloadCanvasData = function() {
            var t = bt.mainContext;
            if (!this._source)
              throw 'reloadCanvasData error, gl texture not created!';
            var i = wt.curBindTexTarget,
              n = wt.curBindTexValue;
            wt.bindTexture(t, 3553, this._source),
              I.isConchWebGL
                ? t.texImage2DEx(
                    e.premulAlpha,
                    3553,
                    0,
                    6408,
                    6408,
                    5121,
                    this._imgData
                  )
                : (e.premulAlpha && t.pixelStorei(37441, !0),
                  t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData),
                  e.premulAlpha && t.pixelStorei(37441, !1)),
              t.pixelStorei(37440, 0),
              i && n && wt.bindTexture(t, i, n);
          }),
          (i.texSubImage2D = function(t, e, i) {
            var n = bt.mainContext,
              a = wt.curBindTexTarget,
              r = wt.curBindTexValue;
            wt.bindTexture(n, 3553, this._source),
              I.isConchWebGL
                ? n.texSubImage2DEx(!0, 3553, 0, e, i, 6408, 5121, t._source)
                : (n.pixelStorei(37441, !0),
                  n.texSubImage2D(3553, 0, e, i, 6408, 5121, t._source),
                  n.pixelStorei(37441, !1)),
              a && r && wt.bindTexture(n, a, r);
          }),
          (i.toBase64 = function(t, e, i) {
            var n = null;
            this._canvas && (n = this._canvas.toDataURL(t, e)), i.call(this, n);
          }),
          r(0, i, 'context', function() {
            return this._ctx;
          }),
          r(0, i, 'source', function() {
            return this.alwaysChange && this.reloadCanvasData(), this._source;
          }),
          r(0, i, 'asBitmap', null, function(t) {
            this._ctx && (this._ctx.asBitmap = t);
          }),
          (e._createContext = null),
          (e.premulAlpha = !1),
          e
        );
      })(),
      Wt = (function(t) {
        function e(t, i) {
          (this.CborderSize = 12),
            e.__super.call(this),
            (this.char = t),
            (this.isSpace = ' ' === t),
            (this.xs = i.scaleX),
            (this.ys = i.scaleY),
            (this.font = i.font.toString()),
            (this.fontSize = i.font.size),
            (this.fillColor = i.fillColor),
            (this.borderColor = i.borderColor),
            (this.lineWidth = i.lineWidth),
            (this.underLine = i.underLine);
          var n,
            a = I.isConchApp;
          a
            ? (((n = ConchTextCanvas)._source = ConchTextCanvas),
              (n._source.canvas = ConchTextCanvas))
            : (n = c.canvas.source),
            (this.canvas = n),
            (this._enableMerageInAtlas = !0),
            (this._ctx = a ? n : this.canvas.getContext('2d', void 0));
          var r = k.measureText(this.char, this.font);
          (this.cw = r.width * this.xs),
            (this.ch = (r.height || this.fontSize) * this.ys),
            this.onresize(
              this.cw + 2 * this.CborderSize,
              this.ch + 2 * this.CborderSize
            ),
            (this.texture = new B(this));
        }
        a(e, 'laya.webgl.resource.WebGLCharImage', h);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.webgl.resource.IMergeAtlasBitmap': !0 }),
          (n.active = function() {
            this.texture.active();
          }),
          (n.recreateResource = function() {
            var t = I.isConchApp;
            if (
              (this.onresize(
                this.cw + 2 * this.CborderSize,
                this.ch + 2 * this.CborderSize
              ),
              this.canvas &&
                ((this.canvas.height = this._h), (this.canvas.width = this._w)),
              t)
            ) {
              var e = this.fontSize;
              (1 == this.xs && 1 == this.ys) ||
                (e = parseInt(
                  e * (this.xs > this.ys ? this.xs : this.ys) + ''
                ));
              var i = 'normal 100 ' + e + 'px Arial';
              this.borderColor && (i += ' 1 ' + this.borderColor),
                (this._ctx.font = i),
                (this._ctx.textBaseline = 'top'),
                (this._ctx.fillStyle = this.fillColor),
                this._ctx.fillText(
                  this.char,
                  this.CborderSize,
                  this.CborderSize,
                  null,
                  null,
                  null
                );
            } else {
              if (
                (this._ctx.save(),
                this._ctx.clearRect(
                  0,
                  0,
                  this.cw + 2 * this.CborderSize,
                  this.ch + 2 * this.CborderSize
                ),
                (this._ctx.font = this.font),
                R.RightToLeft && (this._ctx.textAlign = 'end'),
                (this._ctx.textBaseline = 'top'),
                this._ctx.translate(this.CborderSize, this.CborderSize),
                (1 == this.xs && 1 == this.ys) ||
                  this._ctx.scale(this.xs, this.ys),
                this.fillColor && this.borderColor
                  ? ((this._ctx.strokeStyle = this.borderColor),
                    (this._ctx.lineWidth = this.lineWidth),
                    this._ctx.strokeText(this.char, 0, 0, null, null, 0, null),
                    (this._ctx.fillStyle = this.fillColor),
                    this._ctx.fillText(this.char, 0, 0, null, null, null))
                  : -1 === this.lineWidth
                  ? ((this._ctx.fillStyle = this.fillColor
                      ? this.fillColor
                      : 'white'),
                    this._ctx.fillText(this.char, 0, 0, null, null, null))
                  : ((this._ctx.strokeStyle = this.borderColor
                      ? this.borderColor
                      : 'white'),
                    (this._ctx.lineWidth = this.lineWidth),
                    this._ctx.strokeText(this.char, 0, 0, null, null, 0, null)),
                this.underLine)
              ) {
                (this._ctx.lineWidth = 1),
                  (this._ctx.strokeStyle = this.fillColor),
                  this._ctx.beginPath(),
                  this._ctx.moveTo(0, this.fontSize + 1);
                var n = this._ctx.measureText(this.char).width + 1;
                this._ctx.lineTo(n, this.fontSize + 1), this._ctx.stroke();
              }
              this._ctx.restore();
            }
            (this.borderSize = this.CborderSize), this.completeCreate();
          }),
          (n.onresize = function(t, e) {
            (this._w = t), (this._h = e), (this._allowMerageInAtlas = !0);
          }),
          (n.clearAtlasSource = function() {}),
          r(0, n, 'allowMerageInAtlas', function() {
            return this._allowMerageInAtlas;
          }),
          r(0, n, 'atlasSource', function() {
            return this.canvas;
          }),
          r(
            0,
            n,
            'enableMerageInAtlas',
            function() {
              return this._enableMerageInAtlas;
            },
            function(t) {
              this._enableMerageInAtlas = t;
            }
          ),
          (e.createOneChar = function(t, i) {
            return new e(t, i);
          }),
          e
        );
      })(),
      Xt = (function(t) {
        function e(t, i, n, a, r, s, o, l, h) {
          void 0 === n && (n = 6408),
            void 0 === a && (a = 5121),
            void 0 === r && (r = 34041),
            void 0 === s && (s = !1),
            void 0 === o && (o = !1),
            void 0 === l && (l = -1),
            void 0 === h && (h = 1),
            e.__super.call(this),
            (this._w = t),
            (this._h = i),
            (this._surfaceFormat = n),
            (this._surfaceType = a),
            (this._depthStencilFormat = r),
            I.isConchWebGL &&
              34041 === this._depthStencilFormat &&
              (this._depthStencilFormat = 33189),
            (this._mipMap = s),
            (this._repeat = o),
            (this._minFifter = l),
            (this._magFifter = h);
        }
        a(e, 'laya.webgl.resource.WebGLRenderTarget', h);
        var i = e.prototype;
        return (
          (i.recreateResource = function() {
            var t = bt.mainContext;
            this._frameBuffer || (this._frameBuffer = t.createFramebuffer()),
              this._source || (this._source = t.createTexture());
            var e = wt.curBindTexTarget,
              i = wt.curBindTexValue;
            wt.bindTexture(t, 3553, this._source),
              t.texImage2D(
                3553,
                0,
                6408,
                this._w,
                this._h,
                0,
                this._surfaceFormat,
                this._surfaceType,
                null
              );
            var n = this._minFifter,
              a = this._magFifter,
              r = this._repeat ? 10497 : 33071,
              s = o.isPOT(this._w, this._h);
            if (
              (s
                ? (this._mipMap
                    ? -1 !== n || (n = 9987)
                    : -1 !== n || (n = 9729),
                  -1 !== a || (a = 9729),
                  t.texParameteri(3553, 10241, n),
                  t.texParameteri(3553, 10240, a),
                  t.texParameteri(3553, 10242, r),
                  t.texParameteri(3553, 10243, r),
                  this._mipMap && t.generateMipmap(3553))
                : (-1 !== n || (n = 9729),
                  -1 !== a || (a = 9729),
                  t.texParameteri(3553, 10241, n),
                  t.texParameteri(3553, 10240, a),
                  t.texParameteri(3553, 10242, 33071),
                  t.texParameteri(3553, 10243, 33071)),
              t.bindFramebuffer(36160, this._frameBuffer),
              t.framebufferTexture2D(36160, 36064, 3553, this._source, 0),
              this._depthStencilFormat)
            )
              switch (
                (this._depthStencilBuffer ||
                  (this._depthStencilBuffer = t.createRenderbuffer()),
                t.bindRenderbuffer(36161, this._depthStencilBuffer),
                t.renderbufferStorage(
                  36161,
                  this._depthStencilFormat,
                  this._w,
                  this._h
                ),
                this._depthStencilFormat)
              ) {
                case 33189:
                  t.framebufferRenderbuffer(
                    36160,
                    36096,
                    36161,
                    this._depthStencilBuffer
                  );
                  break;
                case 36168:
                  t.framebufferRenderbuffer(
                    36160,
                    36128,
                    36161,
                    this._depthStencilBuffer
                  );
                  break;
                case 34041:
                  t.framebufferRenderbuffer(
                    36160,
                    33306,
                    36161,
                    this._depthStencilBuffer
                  );
              }
            t.bindFramebuffer(36160, null),
              e && i && wt.bindTexture(t, e, i),
              t.bindRenderbuffer(36161, null),
              s && this._mipMap
                ? (this.memorySize = this._w * this._h * 4 * (1 + 1 / 3))
                : (this.memorySize = this._w * this._h * 4),
              this.completeCreate();
          }),
          (i.disposeResource = function() {
            this._frameBuffer &&
              (bt.mainContext.deleteTexture(this._source),
              bt.mainContext.deleteFramebuffer(this._frameBuffer),
              bt.mainContext.deleteRenderbuffer(this._depthStencilBuffer),
              (this._source = null),
              (this._frameBuffer = null),
              (this._depthStencilBuffer = null),
              (this.memorySize = 0));
          }),
          r(0, i, 'depthStencilBuffer', function() {
            return this._depthStencilBuffer;
          }),
          r(0, i, 'frameBuffer', function() {
            return this._frameBuffer;
          }),
          e
        );
      })(),
      qt = (function(t) {
        function e(t, i, n, a, r, s, o) {
          (this.offsetX = 0),
            (this.offsetY = 0),
            e.__super.call(this),
            (this.repeat = !0),
            (this.mipmap = !1),
            (this.minFifter = -1),
            (this.magFifter = -1),
            (this.atlasImage = s),
            (this.canvas = t),
            (this._ctx = t.getContext('2d', void 0)),
            (this._w = a),
            (this._h = r),
            (this.offsetX = i),
            (this.offsetY = n),
            (this.src = o),
            (this._enableMerageInAtlas = !0),
            F.enabled &&
            this._w < F.atlasLimitWidth &&
            this._h < F.atlasLimitHeight
              ? (this._allowMerageInAtlas = !0)
              : (this._allowMerageInAtlas = !1);
        }
        a(e, 'laya.webgl.resource.WebGLSubImage', h);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.webgl.resource.IMergeAtlasBitmap': !0 }),
          (n.size = function(t, e) {
            (this._w = t),
              (this._h = e),
              this._ctx && this._ctx.size(t, e),
              this.canvas &&
                ((this.canvas.height = e), (this.canvas.width = t));
          }),
          (n.recreateResource = function() {
            this.size(this._w, this._h),
              this._ctx.drawImage(
                this.atlasImage,
                this.offsetX,
                this.offsetY,
                this._w,
                this._h,
                0,
                0,
                this._w,
                this._h
              ),
              this._allowMerageInAtlas && this._enableMerageInAtlas
                ? (this.memorySize = 0)
                : this.createWebGlTexture(),
              this.completeCreate();
          }),
          (n.createWebGlTexture = function() {
            var t = bt.mainContext;
            if (!this.canvas)
              throw 'create GLTextur err:no data:' + this.canvas;
            var e = (this._source = t.createTexture()),
              i = wt.curBindTexTarget,
              n = wt.curBindTexValue;
            wt.bindTexture(t, 3553, e),
              I.isConchWebGL
                ? t.texImage2DEx(!0, 3553, 0, 6408, 6408, 5121, this.canvas)
                : (t.pixelStorei(37441, !0),
                  t.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas),
                  t.pixelStorei(37441, !1));
            var a = this.minFifter,
              r = this.magFifter,
              s = this.repeat ? 10497 : 33071,
              l = o.isPOT(this.width, this.height);
            l
              ? (this.mipmap ? -1 !== a || (a = 9987) : -1 !== a || (a = 9729),
                -1 !== r || (r = 9729),
                t.texParameteri(3553, 10240, r),
                t.texParameteri(3553, 10241, a),
                t.texParameteri(3553, 10242, s),
                t.texParameteri(3553, 10243, s),
                this.mipmap && t.generateMipmap(3553))
              : (-1 !== a || (a = 9729),
                -1 !== r || (r = 9729),
                t.texParameteri(3553, 10241, a),
                t.texParameteri(3553, 10240, r),
                t.texParameteri(3553, 10242, 33071),
                t.texParameteri(3553, 10243, 33071)),
              i && n && wt.bindTexture(t, i, n),
              (this.canvas = null),
              l && this.mipmap
                ? (this.memorySize = this._w * this._h * 4 * (1 + 1 / 3))
                : (this.memorySize = this._w * this._h * 4);
          }),
          (n.disposeResource = function() {
            (F.enabled && this._allowMerageInAtlas) ||
              !this._source ||
              (bt.mainContext.deleteTexture(this._source),
              (this._source = null),
              (this.memorySize = 0));
          }),
          (n.clearAtlasSource = function() {}),
          r(0, n, 'allowMerageInAtlas', function() {
            return this._allowMerageInAtlas;
          }),
          r(0, n, 'atlasSource', function() {
            return this.canvas;
          }),
          r(
            0,
            n,
            'enableMerageInAtlas',
            function() {
              return this._allowMerageInAtlas;
            },
            function(t) {
              this._allowMerageInAtlas = t;
            }
          ),
          e
        );
      })(),
      Yt = (function(t) {
        function e(t, i, n, a) {
          if (
            ((this._curActTexIndex = 0),
            (this.tag = {}),
            (this._program = null),
            (this._params = null),
            (this._paramsMap = {}),
            (this._offset = 0),
            e.__super.call(this),
            !t || !i)
          )
            throw 'Shader Error';
          (this._id = ++e._count),
            (this._vs = t),
            (this._ps = i),
            (this._nameMap = a || {}),
            null != n && (e.sharders[n] = this);
        }
        a(e, 'laya.webgl.shader.Shader', kt);
        var i = e.prototype;
        return (
          (i.recreateResource = function() {
            this._compile(), this.completeCreate(), (this.memorySize = 0);
          }),
          (i.disposeResource = function() {
            bt.mainContext.deleteShader(this._vshader),
              bt.mainContext.deleteShader(this._pshader),
              bt.mainContext.deleteProgram(this._program),
              (this._vshader = this._pshader = this._program = null),
              (this._params = null),
              (this._paramsMap = {}),
              (this.memorySize = 0),
              (this._curActTexIndex = 0);
          }),
          (i._compile = function() {
            if (this._vs && this._ps && !this._params) {
              (this._reCompile = !0), (this._params = []);
              var t = [this._vs, this._ps],
                i = bt.mainContext;
              if (
                ((this._program = i.createProgram()),
                (this._vshader = e._createShader(i, t[0], 35633)),
                (this._pshader = e._createShader(i, t[1], 35632)),
                i.attachShader(this._program, this._vshader),
                i.attachShader(this._program, this._pshader),
                i.linkProgram(this._program),
                !I.isConchApp && !i.getProgramParameter(this._program, 35714))
              )
                throw i.getProgramInfoLog(this._program);
              var n,
                a = 0,
                r = 0,
                s = 0;
              for (
                s = I.isConchApp
                  ? i.getProgramParameterEx(this._vs, this._ps, '', 35721)
                  : i.getProgramParameter(this._program, 35721),
                  a = 0;
                a < s;
                a++
              ) {
                var o = null;
                (n = {
                  vartype: 'attribute',
                  glfun: null,
                  ivartype: 0,
                  attrib: (o = I.isConchApp
                    ? i.getActiveAttribEx(this._vs, this._ps, '', a)
                    : i.getActiveAttrib(this._program, a)),
                  location: i.getAttribLocation(this._program, o.name),
                  name: o.name,
                  type: o.type,
                  isArray: !1,
                  isSame: !1,
                  preValue: null,
                  indexOfParams: 0
                }),
                  this._params.push(n);
              }
              var l = 0;
              for (
                l = I.isConchApp
                  ? i.getProgramParameterEx(this._vs, this._ps, '', 35718)
                  : i.getProgramParameter(this._program, 35718),
                  a = 0;
                a < l;
                a++
              ) {
                var h = null;
                (h = I.isConchApp
                  ? i.getActiveUniformEx(this._vs, this._ps, '', a)
                  : i.getActiveUniform(this._program, a)),
                  (n = {
                    vartype: 'uniform',
                    glfun: null,
                    ivartype: 1,
                    attrib: o,
                    location: i.getUniformLocation(this._program, h.name),
                    name: h.name,
                    type: h.type,
                    isArray: !1,
                    isSame: !1,
                    preValue: null,
                    indexOfParams: 0
                  }).name.indexOf('[0]') > 0 &&
                    ((n.name = n.name.substr(0, n.name.length - 3)),
                    (n.isArray = !0),
                    (n.location = i.getUniformLocation(this._program, n.name))),
                  this._params.push(n);
              }
              for (a = 0, r = this._params.length; a < r; a++)
                if (
                  ((n = this._params[a]),
                  (n.indexOfParams = a),
                  (n.index = 1),
                  (n.value = [n.location, null]),
                  (n.codename = n.name),
                  (n.name = this._nameMap[n.codename]
                    ? this._nameMap[n.codename]
                    : n.codename),
                  (this._paramsMap[n.name] = n),
                  (n._this = this),
                  (n.uploadedValue = []),
                  'attribute' !== n.vartype)
                )
                  switch (n.type) {
                    case 5124:
                      n.fun = n.isArray ? this._uniform1iv : this._uniform1i;
                      break;
                    case 5126:
                      n.fun = n.isArray ? this._uniform1fv : this._uniform1f;
                      break;
                    case 35664:
                      n.fun = n.isArray
                        ? this._uniform_vec2v
                        : this._uniform_vec2;
                      break;
                    case 35665:
                      n.fun = n.isArray
                        ? this._uniform_vec3v
                        : this._uniform_vec3;
                      break;
                    case 35666:
                      n.fun = n.isArray
                        ? this._uniform_vec4v
                        : this._uniform_vec4;
                      break;
                    case 35678:
                      n.fun = this._uniform_sampler2D;
                      break;
                    case 35680:
                      n.fun = this._uniform_samplerCube;
                      break;
                    case 35676:
                      (n.glfun = i.uniformMatrix4fv),
                        (n.fun = this._uniformMatrix4fv);
                      break;
                    case 35670:
                      n.fun = this._uniform1i;
                      break;
                    case 35674:
                    case 35675:
                    default:
                      throw new Error('compile shader err!');
                  }
                else n.fun = this._attribute;
            }
          }),
          (i.getUniform = function(t) {
            return this._paramsMap[t];
          }),
          (i._attribute = function(t, e) {
            var i = bt.mainContext,
              n = Ot._enableAtributes,
              a = t.location;
            return (
              n[a] || i.enableVertexAttribArray(a),
              i.vertexAttribPointer(
                a,
                e[0],
                e[1],
                e[2],
                e[3],
                e[4] + this._offset
              ),
              (n[a] = Ot._bindVertexBuffer),
              1
            );
          }),
          (i._uniform1f = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e
              ? (bt.mainContext.uniform1f(t.location, (i[0] = e)), 1)
              : 0;
          }),
          (i._uniform1fv = function(t, e) {
            if (e.length < 4) {
              var i = t.uploadedValue;
              return i[0] !== e[0] ||
                i[1] !== e[1] ||
                i[2] !== e[2] ||
                i[3] !== e[3]
                ? (bt.mainContext.uniform1fv(t.location, e),
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3]),
                  1)
                : 0;
            }
            return bt.mainContext.uniform1fv(t.location, e), 1;
          }),
          (i._uniform_vec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1]
              ? (bt.mainContext.uniform2f(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec2v = function(t, e) {
            if (e.length < 2) {
              var i = t.uploadedValue;
              return i[0] !== e[0] ||
                i[1] !== e[1] ||
                i[2] !== e[2] ||
                i[3] !== e[3]
                ? (bt.mainContext.uniform2fv(t.location, e),
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3]),
                  1)
                : 0;
            }
            return bt.mainContext.uniform2fv(t.location, e), 1;
          }),
          (i._uniform_vec3 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2]
              ? (bt.mainContext.uniform3f(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec3v = function(t, e) {
            return bt.mainContext.uniform3fv(t.location, e), 1;
          }),
          (i._uniform_vec4 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] ||
              i[1] !== e[1] ||
              i[2] !== e[2] ||
              i[3] !== e[3]
              ? (bt.mainContext.uniform4f(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec4v = function(t, e) {
            return bt.mainContext.uniform4fv(t.location, e), 1;
          }),
          (i._uniformMatrix2fv = function(t, e) {
            return bt.mainContext.uniformMatrix2fv(t.location, !1, e), 1;
          }),
          (i._uniformMatrix3fv = function(t, e) {
            return bt.mainContext.uniformMatrix3fv(t.location, !1, e), 1;
          }),
          (i._uniformMatrix4fv = function(t, e) {
            return bt.mainContext.uniformMatrix4fv(t.location, !1, e), 1;
          }),
          (i._uniform1i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e
              ? (bt.mainContext.uniform1i(t.location, (i[0] = e)), 1)
              : 0;
          }),
          (i._uniform1iv = function(t, e) {
            return bt.mainContext.uniform1iv(t.location, e), 1;
          }),
          (i._uniform_ivec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1]
              ? (bt.mainContext.uniform2i(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1])
                ),
                1)
              : 0;
          }),
          (i._uniform_ivec2v = function(t, e) {
            return bt.mainContext.uniform2iv(t.location, e), 1;
          }),
          (i._uniform_vec3i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2]
              ? (bt.mainContext.uniform3i(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec3vi = function(t, e) {
            return bt.mainContext.uniform3iv(t.location, e), 1;
          }),
          (i._uniform_vec4i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] ||
              i[1] !== e[1] ||
              i[2] !== e[2] ||
              i[3] !== e[3]
              ? (bt.mainContext.uniform4i(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec4vi = function(t, e) {
            return bt.mainContext.uniform4iv(t.location, e), 1;
          }),
          (i._uniform_sampler2D = function(t, i) {
            var n = bt.mainContext,
              a = t.uploadedValue;
            return null == a[0]
              ? ((a[0] = this._curActTexIndex),
                n.uniform1i(t.location, this._curActTexIndex),
                n.activeTexture(e._TEXTURES[this._curActTexIndex]),
                wt.bindTexture(n, 3553, i),
                this._curActTexIndex++,
                1)
              : (n.activeTexture(e._TEXTURES[a[0]]),
                wt.bindTexture(n, 3553, i),
                0);
          }),
          (i._uniform_samplerCube = function(t, i) {
            var n = bt.mainContext,
              a = t.uploadedValue;
            return null == a[0]
              ? ((a[0] = this._curActTexIndex),
                n.uniform1i(t.location, this._curActTexIndex),
                n.activeTexture(e._TEXTURES[this._curActTexIndex]),
                wt.bindTexture(n, 34067, i),
                this._curActTexIndex++,
                1)
              : (n.activeTexture(e._TEXTURES[a[0]]),
                wt.bindTexture(n, 34067, i),
                0);
          }),
          (i._noSetValue = function(t) {
            console.log('no....:' + t.name);
          }),
          (i.uploadOne = function(t, e) {
            this.activeResource(), wt.UseProgram(this._program);
            var i = this._paramsMap[t];
            i.fun.call(this, i, e);
          }),
          (i.uploadTexture2D = function(t) {
            D.shaderCall++;
            var e = bt.mainContext;
            e.activeTexture(33984), wt.bindTexture(e, 3553, t);
          }),
          (i.upload = function(t, e) {
            (kt.activeShader = kt.bindShader = this),
              this._lastUseFrameCount === D.loopCount || this.activeResource(),
              wt.UseProgram(this._program),
              this._reCompile
                ? ((e = this._params), (this._reCompile = !1))
                : (e = e || this._params);
            bt.mainContext;
            for (var i, n, a = e.length, r = 0, s = 0; s < a; s++)
              null !== (n = t[(i = e[s]).name]) &&
                (r += i.fun.call(this, i, n));
            D.shaderCall += r;
          }),
          (i.uploadArray = function(t, e, i) {
            (kt.activeShader = this),
              (kt.bindShader = this),
              this.activeResource(),
              wt.UseProgram(this._program);
            this._params;
            for (var n, a, r = 0, s = e - 2; s >= 0; s -= 2)
              (a = this._paramsMap[t[s]]) &&
                null != (n = t[s + 1]) &&
                (i && i[a.name] && i[a.name].bind(),
                (r += a.fun.call(this, a, n)));
            D.shaderCall += r;
          }),
          (i.getParams = function() {
            return this._params;
          }),
          (e.getShader = function(t) {
            return e.sharders[t];
          }),
          (e.create = function(t, i, n, a) {
            return new e(t, i, n, a);
          }),
          (e.withCompile = function(t, i, n, a) {
            if (n && e.sharders[n]) return e.sharders[n];
            var r = e._preCompileShader[2e-4 * t];
            if (!r) throw new Error('withCompile shader err!' + t);
            return r.createShader(i, n, a);
          }),
          (e.withCompile2D = function(t, i, n, a, r) {
            if (a && e.sharders[a]) return e.sharders[a];
            var s = e._preCompileShader[2e-4 * t + i];
            if (!s) throw new Error('withCompile shader err!' + t + ' ' + i);
            return s.createShader(n, a, r);
          }),
          (e.addInclude = function(t, e) {
            vt.addInclude(t, e);
          }),
          (e.preCompile = function(t, i, n, a) {
            var r = 2e-4 * t;
            e._preCompileShader[r] = new vt(r, i, n, a);
          }),
          (e.preCompile2D = function(t, i, n, a, r) {
            var s = 2e-4 * t + i;
            e._preCompileShader[s] = new vt(s, n, a, r);
          }),
          (e._createShader = function(t, e, i) {
            var n = t.createShader(i);
            return t.shaderSource(n, e), t.compileShader(n), n;
          }),
          (e._TEXTURES = [
            33984,
            33985,
            33986,
            33987,
            33988,
            33989,
            33990,
            ,
            33991,
            33992
          ]),
          (e._count = 0),
          (e._preCompileShader = {}),
          (e.SHADERNAME2ID = 2e-4),
          (e.sharders =
            ((e.sharders = []), (e.sharders.length = 32), e.sharders)),
          n(e, [
            'nameKey',
            function() {
              return (this.nameKey = new A());
            }
          ]),
          e
        );
      })(),
      Jt = (function(t) {
        function e() {
          (this._maxsize = 0),
            (this._upload = !0),
            (this._uploadSize = 0),
            e.__super.call(this),
            (this.lock = !0);
        }
        a(e, 'laya.webgl.utils.Buffer2D', t);
        var i = e.prototype;
        return (
          (i.needSize = function(t) {
            var e = this._byteLength;
            if (t) {
              var i = this._byteLength + t;
              i <= this._buffer.byteLength || this._resizeBuffer(i << 1, !0),
                (this._byteLength = i);
            }
            return e;
          }),
          (i._bufferData = function() {
            (this._maxsize = Math.max(this._maxsize, this._byteLength)),
              D.loopCount % 30 == 0 &&
                (this._buffer.byteLength > this._maxsize + 64 &&
                  ((this.memorySize = this._buffer.byteLength),
                  (this._buffer = this._buffer.slice(0, this._maxsize + 64)),
                  this._checkArrayUse()),
                (this._maxsize = this._byteLength)),
              this._uploadSize < this._buffer.byteLength &&
                ((this._uploadSize = this._buffer.byteLength),
                Ot._gl.bufferData(
                  this._bufferType,
                  this._uploadSize,
                  this._bufferUsage
                ),
                (this.memorySize = this._uploadSize)),
              Ot._gl.bufferSubData(this._bufferType, 0, this._buffer);
          }),
          (i._bufferSubData = function(t, e, i) {
            if (
              (void 0 === t && (t = 0),
              void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              (this._maxsize = Math.max(this._maxsize, this._byteLength)),
              D.loopCount % 30 == 0 &&
                (this._buffer.byteLength > this._maxsize + 64 &&
                  ((this.memorySize = this._buffer.byteLength),
                  (this._buffer = this._buffer.slice(0, this._maxsize + 64)),
                  this._checkArrayUse()),
                (this._maxsize = this._byteLength)),
              this._uploadSize < this._buffer.byteLength &&
                ((this._uploadSize = this._buffer.byteLength),
                Ot._gl.bufferData(
                  this._bufferType,
                  this._uploadSize,
                  this._bufferUsage
                ),
                (this.memorySize = this._uploadSize)),
              e || i)
            ) {
              var n = this._buffer.slice(e, i);
              Ot._gl.bufferSubData(this._bufferType, t, n);
            } else Ot._gl.bufferSubData(this._bufferType, t, this._buffer);
          }),
          (i._checkArrayUse = function() {}),
          (i._bind_upload = function() {
            return (
              !!this._upload &&
              ((this._upload = !1), this._bind(), this._bufferData(), !0)
            );
          }),
          (i._bind_subUpload = function(t, e, i) {
            return (
              void 0 === t && (t = 0),
              void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              !!this._upload &&
                ((this._upload = !1),
                this._bind(),
                this._bufferSubData(t, e, i),
                !0)
            );
          }),
          (i._resizeBuffer = function(t, e) {
            if (t < this._buffer.byteLength) return this;
            if (
              ((this.memorySize = t),
              e && this._buffer && this._buffer.byteLength > 0)
            ) {
              var i = new ArrayBuffer(t);
              new Uint8Array(i).set(new Uint8Array(this._buffer), 0),
                (this._buffer = i);
            } else this._buffer = new ArrayBuffer(t);
            return this._checkArrayUse(), (this._upload = !0), this;
          }),
          (i.append = function(t) {
            this._upload = !0;
            var e,
              i = 0;
            (i = t.byteLength),
              t instanceof Uint8Array
                ? (this._resizeBuffer(this._byteLength + i, !0),
                  (e = new Uint8Array(this._buffer, this._byteLength)))
                : t instanceof Uint16Array
                ? (this._resizeBuffer(this._byteLength + i, !0),
                  (e = new Uint16Array(this._buffer, this._byteLength)))
                : t instanceof Float32Array &&
                  (this._resizeBuffer(this._byteLength + i, !0),
                  (e = new Float32Array(this._buffer, this._byteLength))),
              e.set(t, 0),
              (this._byteLength += i),
              this._checkArrayUse();
          }),
          (i.appendU16Array = function(t, e) {
            this._resizeBuffer(this._byteLength + 2 * e, !0);
            for (
              var i = new Uint16Array(this._buffer, this._byteLength, e), n = 0;
              n < e;
              n++
            )
              i[n] = t[n];
            (this._byteLength += 2 * e), this._checkArrayUse();
          }),
          (i.appendEx = function(t, e) {
            this._upload = !0;
            var i = 0;
            (i = t.byteLength),
              this._resizeBuffer(this._byteLength + i, !0),
              new e(this._buffer, this._byteLength).set(t, 0),
              (this._byteLength += i),
              this._checkArrayUse();
          }),
          (i.appendEx2 = function(t, e, i, n) {
            void 0 === n && (n = 1), (this._upload = !0);
            var a,
              r = 0;
            (r = i * n),
              this._resizeBuffer(this._byteLength + r, !0),
              (a = new e(this._buffer, this._byteLength));
            var s = 0;
            for (s = 0; s < i; s++) a[s] = t[s];
            (this._byteLength += r), this._checkArrayUse();
          }),
          (i.getBuffer = function() {
            return this._buffer;
          }),
          (i.setNeedUpload = function() {
            this._upload = !0;
          }),
          (i.getNeedUpload = function() {
            return this._upload;
          }),
          (i.upload = function() {
            var t = this._bind_upload();
            return (
              Ot._gl.bindBuffer(this._bufferType, null),
              (Ot._bindActive[this._bufferType] = null),
              (kt.activeShader = null),
              t
            );
          }),
          (i.subUpload = function(t, e, i) {
            void 0 === t && (t = 0),
              void 0 === e && (e = 0),
              void 0 === i && (i = 0);
            var n = this._bind_subUpload();
            return (
              Ot._gl.bindBuffer(this._bufferType, null),
              (Ot._bindActive[this._bufferType] = null),
              (kt.activeShader = null),
              n
            );
          }),
          (i.disposeResource = function() {
            t.prototype.disposeResource.call(this),
              (this._upload = !0),
              (this._uploadSize = 0);
          }),
          (i.clear = function() {
            (this._byteLength = 0), (this._upload = !0);
          }),
          r(0, i, 'bufferLength', function() {
            return this._buffer.byteLength;
          }),
          r(0, i, 'byteLength', null, function(t) {
            this._byteLength !== t &&
              (t <= this._buffer.byteLength ||
                this._resizeBuffer(2 * t + 256, !0),
              (this._byteLength = t));
          }),
          (e.__int__ = function(t) {
            (Qt.QuadrangleIB = Qt.create(35044)),
              mt.fillIBQuadrangle(Qt.QuadrangleIB, 16);
          }),
          (e.FLOAT32 = 4),
          (e.SHORT = 2),
          e
        );
      })(Ot),
      Kt =
        ((function(t) {
          function e(t) {
            (this.u_blurX = !1),
              (this.u_color = null),
              (this.u_offset = null),
              (this.u_strength = NaN),
              (this.u_texW = 0),
              (this.u_texH = 0),
              e.__super.call(this, 9);
          }
          a(e, 'laya.webgl.shader.d2.value.GlowSV', t);
          var i = e.prototype;
          (i.setValue = function(e) {
            t.prototype.setValue.call(this, e);
          }),
            (i.clear = function() {
              t.prototype.clear.call(this);
            });
        })(Ht),
        (function(t) {
          function e(t) {
            e.__super.call(this, 64), this.defines.add(64);
          }
          a(e, 'laya.webgl.shader.d2.value.TextSV', t);
          var i = e.prototype;
          return (
            (i.release = function() {
              (e.pool[e._length++] = this), this.clear();
            }),
            (i.clear = function() {
              t.prototype.clear.call(this);
            }),
            (e.create = function() {
              return e._length ? e.pool[--e._length] : new e(null);
            }),
            (e.pool = []),
            (e._length = 0),
            e
          );
        })(Ht)),
      Zt = (function(t) {
        function e(t, i, n, a) {
          (this._params2dQuick1 = null),
            (this._params2dQuick2 = null),
            (this._shaderValueWidth = NaN),
            (this._shaderValueHeight = NaN),
            e.__super.call(this, t, i, n, a);
        }
        a(e, 'laya.webgl.shader.d2.Shader2X', t);
        var i = e.prototype;
        return (
          (i.upload2dQuick1 = function(t) {
            this.upload(t, this._params2dQuick1 || this._make2dQuick1());
          }),
          (i._make2dQuick1 = function() {
            if (!this._params2dQuick1) {
              this.activeResource(), (this._params2dQuick1 = []);
              for (var t, e = this._params, i = 0, n = e.length; i < n; i++)
                (t = e[i]),
                  (I.isFlash ||
                    ('size' !== t.name &&
                      'position' !== t.name &&
                      'texcoord' !== t.name)) &&
                    this._params2dQuick1.push(t);
            }
            return this._params2dQuick1;
          }),
          (i.disposeResource = function() {
            t.prototype.disposeResource.call(this),
              (this._params2dQuick1 = null),
              (this._params2dQuick2 = null);
          }),
          (i.upload2dQuick2 = function(t) {
            this.upload(t, this._params2dQuick2 || this._make2dQuick2());
          }),
          (i._make2dQuick2 = function() {
            if (!this._params2dQuick2) {
              this.activeResource(), (this._params2dQuick2 = []);
              for (var t, e = this._params, i = 0, n = e.length; i < n; i++)
                (t = e[i]),
                  (I.isFlash || 'size' !== t.name) &&
                    this._params2dQuick2.push(t);
            }
            return this._params2dQuick2;
          }),
          (e.create = function(t, i, n, a) {
            return new e(t, i, n, a);
          }),
          e
        );
      })(Yt),
      Qt = (function(t) {
        function e(t) {
          (this._uint8Array = null),
            (this._uint16Array = null),
            void 0 === t && (t = 35044),
            e.__super.call(this),
            (this._bufferUsage = t),
            (this._bufferType = 34963),
            I.isFlash || (this._buffer = new ArrayBuffer(8));
        }
        a(e, 'laya.webgl.utils.IndexBuffer2D', Jt);
        var i = e.prototype;
        return (
          (i._checkArrayUse = function() {
            this._uint8Array &&
              (this._uint8Array = new Uint8Array(this._buffer)),
              this._uint16Array &&
                (this._uint16Array = new Uint16Array(this._buffer));
          }),
          (i.getUint8Array = function() {
            return (
              this._uint8Array ||
              (this._uint8Array = new Uint8Array(this._buffer))
            );
          }),
          (i.getUint16Array = function() {
            return (
              this._uint16Array ||
              (this._uint16Array = new Uint16Array(this._buffer))
            );
          }),
          (i.destory = function() {
            (this._uint16Array = null),
              (this._uint8Array = null),
              (this._buffer = null);
          }),
          (e.QuadrangleIB = null),
          (e.create = function(t) {
            return void 0 === t && (t = 35044), new e(t);
          }),
          e
        );
      })(),
      $t = (function(t) {
        function e(t, i) {
          (this._floatArray32 = null),
            (this._vertexStride = 0),
            e.__super.call(this),
            (this._vertexStride = t),
            (this._bufferUsage = i),
            (this._bufferType = 34962),
            I.isFlash || (this._buffer = new ArrayBuffer(8)),
            this.getFloat32Array();
        }
        a(e, 'laya.webgl.utils.VertexBuffer2D', t);
        var i = e.prototype;
        return (
          (i.getFloat32Array = function() {
            return (
              this._floatArray32 ||
              (this._floatArray32 = new Float32Array(this._buffer))
            );
          }),
          (i.bind = function(t) {
            t && t._bind(), this._bind();
          }),
          (i.insertData = function(t, e) {
            this.getFloat32Array().set(t, e), (this._upload = !0);
          }),
          (i.bind_upload = function(t) {
            t._bind_upload() || t._bind(), this._bind_upload() || this._bind();
          }),
          (i._checkArrayUse = function() {
            this._floatArray32 &&
              (this._floatArray32 = new Float32Array(this._buffer));
          }),
          (i.disposeResource = function() {
            t.prototype.disposeResource.call(this);
            var e = Ot._enableAtributes;
            if (!I.isConchWebGL)
              for (var i = 0; i < 10; i++)
                bt.mainContext.disableVertexAttribArray(i), (e[i] = null);
          }),
          (i.destory = function() {
            (this._byteLength = 0),
              (this._upload = !0),
              (this._buffer = null),
              (this._floatArray32 = null);
          }),
          r(0, i, 'vertexStride', function() {
            return this._vertexStride;
          }),
          (e.create = function(t, i) {
            return void 0 === i && (i = 35048), new e(t, i);
          }),
          e
        );
      })(Jt),
      te = (function(t) {
        function e(t, i, n, a) {
          if (
            ((this._format = 0),
            (this._mipmap = !1),
            (this._allowMerageInAtlas = !1),
            (this._enableMerageInAtlas = !1),
            (this.repeat = !1),
            (this._image = null),
            (this.minFifter = 0),
            (this.magFifter = 0),
            void 0 === n && (n = 6408),
            void 0 === a && (a = !0),
            e.__super.call(this, t, i),
            (this._format = n),
            (this._mipmap = a),
            (this.repeat = !1),
            (this.minFifter = -1),
            (this.magFifter = -1),
            'string' == typeof t)
          )
            (this._url = t),
              (this._src = t),
              (this._image = new c.window.Image()),
              i &&
                (i.onload && (this.onload = i.onload),
                i.onerror && (this.onerror = i.onerror),
                i.onCreate && i.onCreate(this)),
              (this._image.crossOrigin =
                t && 0 == t.indexOf('data:') ? null : ''),
              t && (this._image.src = t);
          else if (t instanceof ArrayBuffer) {
            (this._src = i), (this._url = this._src);
            var r = new u(t);
            r.readUTFBytes(4), r.readUTFBytes(2), r.getInt16();
            (r.endian = 'bigEndian'),
              (this._w = r.getInt16()),
              (this._h = r.getInt16());
            r.getInt16(), r.getInt16();
            (this._image = new Uint8Array(t, r.pos)),
              (this._format = bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL),
              F.enabled &&
              this._w < F.atlasLimitWidth &&
              this._h < F.atlasLimitHeight
                ? (this._allowMerageInAtlas = !0)
                : (this._allowMerageInAtlas = !1);
          } else
            (this._src = i),
              (this._url = this._src),
              (this._image = t.source || t),
              this.onresize();
          this._$5__enableMerageInAtlas = !0;
        }
        a(e, 'laya.webgl.resource.WebGLImage', y);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.webgl.resource.IMergeAtlasBitmap': !0 }),
          (n._init_ = function(t, e) {}),
          (n._createWebGlTexture = function() {
            if (!this._image)
              throw 'create GLTextur err:no data:' + this._image;
            var t = bt.mainContext,
              e = (this._source = t.createTexture()),
              i = wt.curBindTexTarget,
              n = wt.curBindTexValue;
            if ((wt.bindTexture(t, 3553, e), I.isConchWebGL))
              switch (this._format) {
                case 6408:
                  t.texImage2DEx(
                    !0,
                    3553,
                    0,
                    this._format,
                    6408,
                    5121,
                    this._image
                  );
                  break;
                case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                  t.compressedTexImage2D(
                    3553,
                    0,
                    this._format,
                    this._w,
                    this._h,
                    0,
                    this._image
                  );
              }
            else {
              switch ((t.pixelStorei(37441, !0), this._format)) {
                case 6408:
                  t.texImage2D(3553, 0, this._format, 6408, 5121, this._image);
                  break;
                case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                  t.compressedTexImage2D(
                    3553,
                    0,
                    this._format,
                    this._w,
                    this._h,
                    0,
                    this._image
                  );
              }
              t.pixelStorei(37441, !1);
            }
            var a = this.minFifter,
              r = this.magFifter,
              s = this.repeat ? 10497 : 33071,
              l = o.isPOT(this._w, this._h);
            l
              ? (this.mipmap ? -1 !== a || (a = 9987) : -1 !== a || (a = 9729),
                -1 !== r || (r = 9729),
                t.texParameteri(3553, 10241, a),
                t.texParameteri(3553, 10240, r),
                t.texParameteri(3553, 10242, s),
                t.texParameteri(3553, 10243, s),
                this.mipmap && t.generateMipmap(3553))
              : (-1 !== a || (a = 9729),
                -1 !== r || (r = 9729),
                t.texParameteri(3553, 10241, a),
                t.texParameteri(3553, 10240, r),
                t.texParameteri(3553, 10242, 33071),
                t.texParameteri(3553, 10243, 33071)),
              i && n && wt.bindTexture(t, i, n),
              (this._image.onload = null),
              (this._image = null),
              l && this.mipmap
                ? (this.memorySize = this._w * this._h * 4 * (1 + 1 / 3))
                : (this.memorySize = this._w * this._h * 4),
              (this._recreateLock = !1);
          }),
          (n.recreateResource = function() {
            var t = this;
            if (null != this._src && '' !== this._src)
              if (((this._needReleaseAgain = !1), this._image)) {
                if (this._recreateLock) return;
                this._allowMerageInAtlas && this._$5__enableMerageInAtlas
                  ? ((this.memorySize = 0), (this._recreateLock = !1))
                  : this._createWebGlTexture(),
                  this.completeCreate();
              } else {
                this._recreateLock = !0;
                var e = this;
                (this._image = new c.window.Image()),
                  (this._image.crossOrigin =
                    0 == this._src.indexOf('data:') ? null : ''),
                  (this._image.onload = function() {
                    if (e._needReleaseAgain)
                      return (
                        (e._needReleaseAgain = !1),
                        (e._image.onload = null),
                        void (e._image = null)
                      );
                    e._allowMerageInAtlas && e._enableMerageInAtlas
                      ? ((t.memorySize = 0), (t._recreateLock = !1))
                      : e._createWebGlTexture(),
                      e.completeCreate();
                  }),
                  (this._image.src = this._src);
              }
          }),
          (n.disposeResource = function() {
            this._recreateLock && (this._needReleaseAgain = !0),
              this._source &&
                (bt.mainContext.deleteTexture(this._source),
                (this._source = null),
                (this._image = null),
                (this.memorySize = 0));
          }),
          (n.onresize = function() {
            (this._w = this._image.width),
              (this._h = this._image.height),
              F.enabled &&
              this._w < F.atlasLimitWidth &&
              this._h < F.atlasLimitHeight
                ? (this._allowMerageInAtlas = !0)
                : (this._allowMerageInAtlas = !1);
          }),
          (n.clearAtlasSource = function() {
            this._image = null;
          }),
          r(0, n, 'format', function() {
            return this._format;
          }),
          r(
            0,
            n,
            'enableMerageInAtlas',
            function() {
              return this._$5__enableMerageInAtlas;
            },
            function(t) {
              this._$5__enableMerageInAtlas = t;
            }
          ),
          r(0, n, 'mipmap', function() {
            return this._mipmap;
          }),
          r(0, n, 'allowMerageInAtlas', function() {
            return this._allowMerageInAtlas;
          }),
          r(0, n, 'atlasSource', function() {
            return this._image;
          }),
          r(0, n, 'onload', null, function(t) {
            var e = this;
            (this._onload = t),
              this._image &&
                (this._image.onload =
                  null != this._onload
                    ? function() {
                        e.onresize(), e._onload();
                      }
                    : null);
          }),
          r(0, n, 'onerror', null, function(t) {
            var e = this;
            (this._onerror = t),
              this._image &&
                (this._image.onerror =
                  null != this._onerror
                    ? function() {
                        e._onerror();
                      }
                    : null);
          }),
          e
        );
      })();
    i.__init([dt, V, It, vt]);
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset,
      s = i.__newvec,
      o = laya.maths.Bezier,
      l = laya.utils.Browser,
      h = laya.utils.Byte,
      c = (laya.events.Event, laya.events.EventDispatcher),
      u = laya.display.Graphics,
      _ = laya.resource.HTMLCanvas,
      d = laya.utils.Handler,
      f = laya.net.Loader,
      p = laya.maths.MathUtil,
      m = laya.maths.Matrix,
      g = (laya.display.Node, laya.maths.Point, laya.maths.Rectangle),
      y = laya.renders.Render,
      v = (laya.renders.RenderContext, laya.resource.Resource),
      b = laya.utils.RunDriver,
      w = laya.display.Sprite,
      x = laya.utils.Stat,
      I = laya.resource.Texture,
      C = laya.net.URL,
      S = laya.utils.Utils,
      T = (function() {
        function t() {
          (this.nodes = null),
            (this.name = null),
            (this.playTime = NaN),
            (this.bone3DMap = null),
            (this.totalKeyframeDatasLength = 0);
        }
        return a(t, 'laya.ani.AnimationContent'), t;
      })(),
      M = (function() {
        function t() {
          (this.name = null),
            (this.parentIndex = 0),
            (this.parent = null),
            (this.keyframeWidth = 0),
            (this.lerpType = 0),
            (this.interpolationMethod = null),
            (this.childs = null),
            (this.keyFrame = null),
            (this.playTime = NaN),
            (this.extenData = null),
            (this.dataOffset = 0);
        }
        return a(t, 'laya.ani.AnimationNodeContent'), t;
      })(),
      E = (function() {
        function t() {}
        return (
          a(t, 'laya.ani.AnimationParser01'),
          (t.parse = function(t, e) {
            var i = e.__getBuffer(),
              n = 0,
              a = 0,
              r = 0,
              s = 0,
              o = 0,
              l = 0,
              c = 0,
              u = e.readUTFString();
            t._aniClassName = u;
            var _,
              d = e.readUTFString().split('\n'),
              f = e.getUint8(),
              p = e.getUint32(),
              m = e.getUint32();
            p > 0 && (_ = i.slice(p, m));
            var g = new h(_);
            for (
              m > 0 && (t._publicExtData = i.slice(m, i.byteLength)),
                t._useParent = !!e.getUint8(),
                t._anis.length = f,
                n = 0;
              n < f;
              n++
            ) {
              var y = (t._anis[n] = new T());
              y.nodes = new Array();
              var v = (y.name = d[e.getUint16()]);
              (t._aniMap[v] = n),
                (y.bone3DMap = {}),
                (y.playTime = e.getFloat32());
              var b = (y.nodes.length = e.getUint8());
              for (y.totalKeyframeDatasLength = 0, a = 0; a < b; a++) {
                var w = (y.nodes[a] = new M());
                w.childs = [];
                var x = e.getInt16();
                x >= 0 && ((w.name = d[x]), (y.bone3DMap[w.name] = a)),
                  (w.keyFrame = new Array()),
                  (w.parentIndex = e.getInt16()),
                  -1 == w.parentIndex
                    ? (w.parent = null)
                    : (w.parent = y.nodes[w.parentIndex]),
                  (w.lerpType = e.getUint8());
                var I = e.getUint32();
                g.pos = I;
                var C = (w.keyframeWidth = g.getUint16());
                if (
                  ((y.totalKeyframeDatasLength += C),
                  0 === w.lerpType || 1 === w.lerpType)
                )
                  for (
                    w.interpolationMethod = [],
                      w.interpolationMethod.length = C,
                      r = 0;
                    r < C;
                    r++
                  )
                    w.interpolationMethod[r] = it.interpolation[g.getUint8()];
                null != w.parent && w.parent.childs.push(w);
                var S = e.getUint16();
                S > 0 &&
                  ((w.extenData = i.slice(e.pos, e.pos + S)), (e.pos += S));
                var E = e.getUint16();
                w.keyFrame.length = E;
                var L,
                  D = 0;
                for (r = 0, s = E; r < s; r++) {
                  if (
                    ((L = w.keyFrame[r] = new Z()),
                    (L.duration = e.getFloat32()),
                    (L.startTime = D),
                    2 === w.lerpType)
                  ) {
                    L.interpolationData = [];
                    var A = e.getUint8(),
                      N = 0;
                    switch ((N = e.getFloat32())) {
                      case 254:
                        for (L.interpolationData.length = C, c = 0; c < C; c++)
                          L.interpolationData[c] = 0;
                        break;
                      case 255:
                        for (L.interpolationData.length = C, c = 0; c < C; c++)
                          L.interpolationData[c] = 5;
                        break;
                      default:
                        for (L.interpolationData.push(N), l = 1; l < A; l++)
                          L.interpolationData.push(e.getFloat32());
                    }
                  }
                  for (L.data = new Float32Array(C), o = 0; o < C; o++)
                    (L.data[o] = e.getFloat32()),
                      L.data[o] > -1e-8 && L.data[o] < 1e-8 && (L.data[o] = 0);
                  D += L.duration;
                }
                (L.startTime = y.playTime),
                  (w.playTime = y.playTime),
                  t._calculateKeyFrame(w, E, C);
              }
            }
          }),
          t
        );
      })(),
      L = (function() {
        function t() {}
        return (
          a(t, 'laya.ani.AnimationParser02'),
          (t.READ_DATA = function() {
            (t._DATA.offset = t._reader.getUint32()),
              (t._DATA.size = t._reader.getUint32());
          }),
          (t.READ_BLOCK = function() {
            for (
              var e = (t._BLOCK.count = t._reader.getUint16()),
                i = (t._BLOCK.blockStarts = []),
                n = (t._BLOCK.blockLengths = []),
                a = 0;
              a < e;
              a++
            )
              i.push(t._reader.getUint32()), n.push(t._reader.getUint32());
          }),
          (t.READ_STRINGS = function() {
            var e = t._reader.getUint32(),
              i = t._reader.getUint16(),
              n = t._reader.pos;
            t._reader.pos = e + t._DATA.offset;
            for (var a = 0; a < i; a++)
              t._strings[a] = t._reader.readUTFString();
            t._reader.pos = n;
          }),
          (t.parse = function(e, i) {
            (t._templet = e), (t._reader = i);
            i.__getBuffer();
            t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
            for (var n = 0, a = t._BLOCK.count; n < a; n++) {
              var r = i.getUint16(),
                s = t._strings[r],
                o = t['READ_' + s];
              if (null == o)
                throw new Error(
                  'model file err,no this function:' + r + ' ' + s
                );
              o.call();
            }
          }),
          (t.READ_ANIMATIONS = function() {
            var e = t._reader,
              i = e.__getBuffer(),
              n = 0,
              a = 0,
              r = 0,
              s = 0,
              o = e.getUint16(),
              l = [];
            for (l.length = o, n = 0; n < o; n++)
              l[n] = it.interpolation[e.getByte()];
            var h = e.getUint8();
            for (t._templet._anis.length = h, n = 0; n < h; n++) {
              var c = (t._templet._anis[n] = {});
              c.nodes = new Array();
              var u = (c.name = t._strings[e.getUint16()]);
              (t._templet._aniMap[u] = n),
                (c.bone3DMap = {}),
                (c.playTime = e.getFloat32());
              var _ = (c.nodes.length = e.getInt16());
              for (c.totalKeyframeDatasLength = 0, a = 0; a < _; a++) {
                var d = (c.nodes[a] = {});
                (d.keyframeWidth = o), (d.childs = []);
                var f = e.getUint16();
                f >= 0 && ((d.name = t._strings[f]), (c.bone3DMap[d.name] = a)),
                  (d.keyFrame = new Array()),
                  (d.parentIndex = e.getInt16()),
                  -1 == d.parentIndex
                    ? (d.parent = null)
                    : (d.parent = c.nodes[d.parentIndex]),
                  (c.totalKeyframeDatasLength += o),
                  (d.interpolationMethod = l),
                  null != d.parent && d.parent.childs.push(d);
                var p = e.getUint16();
                d.keyFrame.length = p;
                var m = null,
                  g = null;
                for (r = 0, s = p; r < s; r++) {
                  ((m = d.keyFrame[r] = {}).startTime = e.getFloat32()),
                    g && (g.duration = m.startTime - g.startTime);
                  var y = t._DATA.offset,
                    v = e.getUint32(),
                    b = 4 * o,
                    w = i.slice(y + v, y + v + b);
                  (m.data = new Float32Array(w)), (g = m);
                }
                (m.duration = 0),
                  (d.playTime = c.playTime),
                  t._templet._calculateKeyFrame(d, p, o);
              }
            }
          }),
          (t._templet = null),
          (t._reader = null),
          (t._strings = []),
          n(t, [
            '_BLOCK',
            function() {
              return (this._BLOCK = { count: 0 });
            },
            '_DATA',
            function() {
              return (this._DATA = { offset: 0, size: 0 });
            }
          ]),
          t
        );
      })(),
      D =
        ((function() {
          function t() {}
          a(t, 'laya.ani.AnimationState'),
            (t.stopped = 0),
            (t.paused = 1),
            (t.playing = 2);
        })(),
        (function() {
          function t() {
            (this.name = null),
              (this.root = null),
              (this.parentBone = null),
              (this.length = 10),
              (this.transform = null),
              (this.inheritScale = !0),
              (this.inheritRotation = !0),
              (this.rotation = NaN),
              (this.resultRotation = NaN),
              (this.d = -1),
              (this._tempMatrix = null),
              (this._sprite = null),
              (this.resultTransform = new J()),
              (this.resultMatrix = new m()),
              (this._children = []);
          }
          a(t, 'laya.ani.bone.Bone');
          var e = t.prototype;
          return (
            (e.setTempMatrix = function(t) {
              this._tempMatrix = t;
              var e = 0,
                i = 0;
              for (e = 0, i = this._children.length; e < i; e++)
                this._children[e].setTempMatrix(this._tempMatrix);
            }),
            (e.update = function(t) {
              this.rotation = this.transform.skX;
              var e;
              if (t)
                (e = this.resultTransform.getMatrix()),
                  m.mul(e, t, this.resultMatrix),
                  (this.resultRotation = this.rotation);
              else if (
                ((this.resultRotation =
                  this.rotation + this.parentBone.resultRotation),
                this.parentBone)
              )
                if (this.inheritRotation && this.inheritScale)
                  (e = this.resultTransform.getMatrix()),
                    m.mul(e, this.parentBone.resultMatrix, this.resultMatrix);
                else {
                  var i = this.parentBone,
                    n = NaN,
                    a = NaN,
                    r = NaN,
                    s = this.parentBone.resultMatrix;
                  e = this.resultTransform.getMatrix();
                  var o = s.a * e.tx + s.c * e.ty + s.tx,
                    l = s.b * e.tx + s.d * e.ty + s.ty,
                    h = new m();
                  this.inheritRotation
                    ? ((n = Math.atan2(i.resultMatrix.b, i.resultMatrix.a)),
                      (a = Math.cos(n)),
                      (r = Math.sin(n)),
                      h.setTo(a, r, -r, a, 0, 0),
                      m.mul(this._tempMatrix, h, m.TEMP),
                      m.TEMP.copyTo(h),
                      (e = this.resultTransform.getMatrix()),
                      m.mul(e, h, this.resultMatrix),
                      this.resultTransform.scX * this.resultTransform.scY < 0 &&
                        this.resultMatrix.rotate(0.5 * Math.PI),
                      (this.resultMatrix.tx = o),
                      (this.resultMatrix.ty = l))
                    : (this.inheritScale,
                      (e = this.resultTransform.getMatrix()),
                      m.TEMP.identity(),
                      (m.TEMP.d = this.d),
                      m.mul(e, m.TEMP, this.resultMatrix),
                      (this.resultMatrix.tx = o),
                      (this.resultMatrix.ty = l));
                }
              else
                (e = this.resultTransform.getMatrix()).copyTo(
                  this.resultMatrix
                );
              var c = 0,
                u = 0;
              for (c = 0, u = this._children.length; c < u; c++)
                this._children[c].update();
            }),
            (e.updateChild = function() {
              var t = 0,
                e = 0;
              for (t = 0, e = this._children.length; t < e; t++)
                this._children[t].update();
            }),
            (e.setRotation = function(t) {
              this._sprite && (this._sprite.rotation = (180 * t) / Math.PI);
            }),
            (e.updateDraw = function(e, n) {
              (t.ShowBones && !t.ShowBones[this.name]) ||
                (this._sprite
                  ? ((this._sprite.x = e + this.resultMatrix.tx),
                    (this._sprite.y = n + this.resultMatrix.ty))
                  : ((this._sprite = new w()),
                    this._sprite.graphics.drawCircle(0, 0, 5, '#ff0000'),
                    this._sprite.graphics.drawLine(
                      0,
                      0,
                      this.length,
                      0,
                      '#00ff00'
                    ),
                    this._sprite.graphics.fillText(
                      this.name,
                      0,
                      0,
                      '20px Arial',
                      '#00ff00',
                      'center'
                    ),
                    i.stage.addChild(this._sprite),
                    (this._sprite.x = e + this.resultMatrix.tx),
                    (this._sprite.y = n + this.resultMatrix.ty)));
              var a = 0,
                r = 0;
              for (a = 0, r = this._children.length; a < r; a++)
                this._children[a].updateDraw(e, n);
            }),
            (e.addChild = function(t) {
              this._children.push(t), (t.parentBone = this);
            }),
            (e.findBone = function(t) {
              if (this.name == t) return this;
              var e,
                i,
                n = 0,
                a = 0;
              for (n = 0, a = this._children.length; n < a; n++)
                if (((e = this._children[n]), (i = e.findBone(t)))) return i;
              return null;
            }),
            (e.localToWorld = function(t) {
              var e = t[0],
                i = t[1];
              (t[0] =
                e * this.resultMatrix.a +
                i * this.resultMatrix.c +
                this.resultMatrix.tx),
                (t[1] =
                  e * this.resultMatrix.b +
                  i * this.resultMatrix.d +
                  this.resultMatrix.ty);
            }),
            (t.ShowBones = {}),
            t
          );
        })()),
      A = (function() {
        function t() {
          (this.name = null),
            (this.parent = null),
            (this.attachmentName = null),
            (this.srcDisplayIndex = -1),
            (this.type = 'src'),
            (this.templet = null),
            (this.currSlotData = null),
            (this.currTexture = null),
            (this.currDisplayData = null),
            (this.displayIndex = -1),
            (this._diyTexture = null),
            (this._parentMatrix = null),
            (this._resultMatrix = null),
            (this._replaceDic = {}),
            (this._curDiyUV = null),
            (this._curDiyVS = null),
            (this._skinSprite = null),
            (this.deformData = null),
            (this._mVerticleArr = null);
        }
        a(t, 'laya.ani.bone.BoneSlot');
        var e = t.prototype;
        return (
          (e.showSlotData = function(t, e) {
            void 0 === e && (e = !0),
              (this.currSlotData = t),
              e && (this.displayIndex = this.srcDisplayIndex),
              (this.currDisplayData = null),
              (this.currTexture = null);
          }),
          (e.showDisplayByName = function(t) {
            this.currSlotData &&
              this.showDisplayByIndex(this.currSlotData.getDisplayByName(t));
          }),
          (e.replaceDisplayByName = function(t, e) {
            if (this.currSlotData) {
              var i = 0;
              i = this.currSlotData.getDisplayByName(t);
              var n = 0;
              (n = this.currSlotData.getDisplayByName(e)),
                this.replaceDisplayByIndex(i, n);
            }
          }),
          (e.replaceDisplayByIndex = function(t, e) {
            this.currSlotData &&
              ((this._replaceDic[t] = e),
              this.displayIndex == t && this.showDisplayByIndex(t));
          }),
          (e.showDisplayByIndex = function(t) {
            if (
              (null != this._replaceDic[t] && (t = this._replaceDic[t]),
              this.currSlotData &&
                t > -1 &&
                t < this.currSlotData.displayArr.length)
            ) {
              if (
                ((this.displayIndex = t),
                (this.currDisplayData = this.currSlotData.displayArr[t]),
                this.currDisplayData)
              ) {
                var e = this.currDisplayData.name;
                (this.currTexture = this.templet.getTexture(e)),
                  this.currTexture &&
                    0 == this.currDisplayData.type &&
                    this.currDisplayData.uvs &&
                    (!y.isConchApp ||
                      (y.isConchApp && w.RUNTIMEVERION > '0.9.15')) &&
                    (this.currTexture = this.currDisplayData.createTexture(
                      this.currTexture
                    ));
              }
            } else
              (this.displayIndex = -1),
                (this.currDisplayData = null),
                (this.currTexture = null);
          }),
          (e.replaceSkin = function(t) {
            (this._diyTexture = t),
              this._curDiyUV && (this._curDiyUV.length = 0),
              this.currDisplayData &&
                this._diyTexture == this.currDisplayData.texture &&
                (this._diyTexture = null);
          }),
          (e.setParentMatrix = function(t) {
            this._parentMatrix = t;
          }),
          (e.draw = function(e, i, n, a) {
            if (
              (void 0 === n && (n = !1),
              void 0 === a && (a = 1),
              ((null != this._diyTexture || null != this.currTexture) &&
                null != this.currDisplayData) ||
                (this.currDisplayData && 3 == this.currDisplayData.type))
            ) {
              var r = this.currTexture;
              this._diyTexture && (r = this._diyTexture);
              var s;
              switch (this.currDisplayData.type) {
                case 0:
                  if (e) {
                    var o = this.getDisplayMatrix();
                    if (this._parentMatrix) {
                      var l = !1;
                      if (o) {
                        m.mul(o, this._parentMatrix, m.TEMP);
                        var h;
                        if (
                          (n
                            ? (null == this._resultMatrix &&
                                (this._resultMatrix = new m()),
                              (h = this._resultMatrix))
                            : (h = new m()),
                          (!y.isWebGL && this.currDisplayData.uvs) ||
                            (y.isWebGL &&
                              this._diyTexture &&
                              this.currDisplayData.uvs))
                        ) {
                          var c = t._tempMatrix;
                          c.identity(),
                            this.currDisplayData.uvs[1] >
                              this.currDisplayData.uvs[5] && (c.d = -1),
                            this.currDisplayData.uvs[0] >
                              this.currDisplayData.uvs[4] &&
                              this.currDisplayData.uvs[1] >
                                this.currDisplayData.uvs[5] &&
                              ((l = !0), c.rotate(-Math.PI / 2)),
                            m.mul(c, m.TEMP, h);
                        } else m.TEMP.copyTo(h);
                        l
                          ? e.drawTexture(
                              r,
                              -this.currDisplayData.height / 2,
                              -this.currDisplayData.width / 2,
                              this.currDisplayData.height,
                              this.currDisplayData.width,
                              h
                            )
                          : e.drawTexture(
                              r,
                              -this.currDisplayData.width / 2,
                              -this.currDisplayData.height / 2,
                              this.currDisplayData.width,
                              this.currDisplayData.height,
                              h
                            );
                      }
                    }
                  }
                  break;
                case 1:
                  if (
                    (n
                      ? (null == this._skinSprite &&
                          (this._skinSprite = t.createSkinMesh()),
                        (s = this._skinSprite))
                      : (s = t.createSkinMesh()),
                    null == s)
                  )
                    return;
                  var u;
                  if (null == this.currDisplayData.bones) {
                    var _ = this.currDisplayData.weights;
                    this.deformData && (_ = this.deformData);
                    var d;
                    this._diyTexture
                      ? (this._curDiyUV || (this._curDiyUV = []),
                        0 == this._curDiyUV.length &&
                          ((this._curDiyUV = K.getRelativeUV(
                            this.currTexture.uv,
                            this.currDisplayData.uvs,
                            this._curDiyUV
                          )),
                          (this._curDiyUV = K.getAbsoluteUV(
                            this._diyTexture.uv,
                            this._curDiyUV,
                            this._curDiyUV
                          ))),
                        (d = this._curDiyUV))
                      : (d = this.currDisplayData.uvs),
                      (this._mVerticleArr = _);
                    this.currDisplayData.triangles.length;
                    (u = this.currDisplayData.triangles),
                      s.init2(r, null, u, this._mVerticleArr, d);
                    var f = this.getDisplayMatrix();
                    if (this._parentMatrix && f) {
                      m.mul(f, this._parentMatrix, m.TEMP);
                      var p;
                      n
                        ? (null == this._resultMatrix &&
                            (this._resultMatrix = new m()),
                          (p = this._resultMatrix))
                        : (p = new m()),
                        m.TEMP.copyTo(p),
                        (s.transform = p);
                    }
                  } else this.skinMesh(i, s, a);
                  e.drawSkin(s);
                  break;
                case 2:
                  if (
                    (n
                      ? (null == this._skinSprite &&
                          (this._skinSprite = t.createSkinMesh()),
                        (s = this._skinSprite))
                      : (s = t.createSkinMesh()),
                    null == s)
                  )
                    return;
                  this.skinMesh(i, s, a), e.drawSkin(s);
              }
            }
          }),
          (e.skinMesh = function(t, e, i) {
            var n,
              a = this.currTexture,
              r = this.currDisplayData.bones;
            this._diyTexture
              ? ((a = this._diyTexture),
                this._curDiyUV || (this._curDiyUV = []),
                0 == this._curDiyUV.length &&
                  ((this._curDiyUV = K.getRelativeUV(
                    this.currTexture.uv,
                    this.currDisplayData.uvs,
                    this._curDiyUV
                  )),
                  (this._curDiyUV = K.getAbsoluteUV(
                    this._diyTexture.uv,
                    this._curDiyUV,
                    this._curDiyUV
                  ))),
                (n = this._curDiyUV))
              : (n = this.currDisplayData.uvs);
            var s,
              o,
              l = this.currDisplayData.weights,
              h = this.currDisplayData.triangles,
              c = 0,
              u = 0,
              _ = 0,
              d = NaN,
              f = NaN,
              p = 0,
              m = 0,
              g = [],
              y = 0,
              v = 0;
            if (this.deformData && this.deformData.length > 0) {
              var b = 0;
              for (y = 0, v = r.length; y < v; ) {
                for (_ = r[y++] + y, c = 0, u = 0; y < _; y++)
                  (o = t[r[y]]),
                    (d = l[p] + this.deformData[b++]),
                    (f = l[p + 1] + this.deformData[b++]),
                    (m = l[p + 2]),
                    (c += (d * o.a + f * o.c + o.tx) * m),
                    (u += (d * o.b + f * o.d + o.ty) * m),
                    (p += 3);
                g.push(c, u);
              }
            } else
              for (y = 0, v = r.length; y < v; ) {
                for (_ = r[y++] + y, c = 0, u = 0; y < _; y++)
                  (o = t[r[y]]),
                    (d = l[p]),
                    (f = l[p + 1]),
                    (m = l[p + 2]),
                    (c += (d * o.a + f * o.c + o.tx) * m),
                    (u += (d * o.b + f * o.d + o.ty) * m),
                    (p += 3);
                g.push(c, u);
              }
            (this._mVerticleArr = g),
              (s = h),
              e.init2(a, null, s, this._mVerticleArr, n);
          }),
          (e.drawBonePoint = function(t) {
            t &&
              this._parentMatrix &&
              t.drawCircle(
                this._parentMatrix.tx,
                this._parentMatrix.ty,
                5,
                '#ff0000'
              );
          }),
          (e.getDisplayMatrix = function() {
            return this.currDisplayData
              ? this.currDisplayData.transform.getMatrix()
              : null;
          }),
          (e.getMatrix = function() {
            return this._resultMatrix;
          }),
          (e.copy = function() {
            var e = new t();
            return (
              (e.type = 'copy'),
              (e.name = this.name),
              (e.attachmentName = this.attachmentName),
              (e.srcDisplayIndex = this.srcDisplayIndex),
              (e.parent = this.parent),
              (e.displayIndex = this.displayIndex),
              (e.templet = this.templet),
              (e.currSlotData = this.currSlotData),
              (e.currTexture = this.currTexture),
              (e.currDisplayData = this.currDisplayData),
              e
            );
          }),
          (t.createSkinMesh = function() {
            return y.isWebGL || y.isConchApp
              ? b.skinAniSprite()
              : y.isWebGL
              ? null
              : at.useSimpleMeshInCanvas
              ? new nt()
              : new et();
          }),
          n(t, [
            '_tempMatrix',
            function() {
              return (this._tempMatrix = new m());
            }
          ]),
          t
        );
      })(),
      N = (function() {
        function t() {
          (this.mesh = null),
            (this.transform = null),
            (this.context = null),
            (this.mode = 0);
        }
        a(t, 'laya.ani.bone.canvasmesh.CanvasMeshRender');
        var e = t.prototype;
        return (
          (e.renderToContext = function(t) {
            (this.context = t.ctx || t),
              this.mesh &&
                (0 == this.mode
                  ? this._renderWithIndexes(this.mesh)
                  : this._renderNoIndexes(this.mesh));
          }),
          (e._renderNoIndexes = function(t) {
            var e = 0,
              i = t.vertices.length / 2,
              n = 0;
            for (e = 0; e < i - 2; e++)
              (n = 2 * e), this._renderDrawTriangle(t, n, n + 2, n + 4);
          }),
          (e._renderWithIndexes = function(t) {
            var e = t.indexes,
              i = 0,
              n = e.length;
            for (i = 0; i < n; i += 3) {
              var a = 2 * e[i],
                r = 2 * e[i + 1],
                s = 2 * e[i + 2];
              this._renderDrawTriangle(t, a, r, s);
            }
          }),
          (e._renderDrawTriangle = function(t, e, i, n) {
            var a = this.context,
              r = t.uvs,
              s = t.vertices,
              o = t.texture,
              l = o.bitmap,
              h = l.source,
              c = o.width,
              u = o.height,
              _ = l.width,
              d = l.height,
              f = NaN,
              p = NaN,
              m = NaN,
              g = NaN,
              y = NaN,
              v = NaN;
            if (t.useUvTransform) {
              var b = t.uvTransform;
              (f = (r[e] * b.a + r[e + 1] * b.c + b.tx) * _),
                (p = (r[i] * b.a + r[i + 1] * b.c + b.tx) * _),
                (m = (r[n] * b.a + r[n + 1] * b.c + b.tx) * _),
                (g = (r[e] * b.b + r[e + 1] * b.d + b.ty) * d),
                (y = (r[i] * b.b + r[i + 1] * b.d + b.ty) * d),
                (v = (r[n] * b.b + r[n + 1] * b.d + b.ty) * d);
            } else
              (f = r[e] * _),
                (p = r[i] * _),
                (m = r[n] * _),
                (g = r[e + 1] * d),
                (y = r[i + 1] * d),
                (v = r[n + 1] * d);
            var w = s[e],
              x = s[i],
              I = s[n],
              C = s[e + 1],
              S = s[i + 1],
              T = s[n + 1];
            if (t.canvasPadding > 0) {
              var M = t.canvasPadding,
                E = t.canvasPadding,
                L = (w + x + I) / 3,
                D = (C + S + T) / 3,
                A = w - L,
                N = C - D,
                R = Math.sqrt(A * A + N * N);
              (w = L + (A / R) * (R + M)),
                (C = D + (N / R) * (R + E)),
                (N = S - D),
                (x =
                  L + ((A = x - L) / (R = Math.sqrt(A * A + N * N))) * (R + M)),
                (S = D + (N / R) * (R + E)),
                (N = T - D),
                (I =
                  L + ((A = I - L) / (R = Math.sqrt(A * A + N * N))) * (R + M)),
                (T = D + (N / R) * (R + E));
            }
            if ((a.save(), this.transform)) {
              var B = this.transform;
              a.transform(B.a, B.b, B.c, B.d, B.tx, B.ty);
            }
            a.beginPath(),
              a.moveTo(w, C),
              a.lineTo(x, S),
              a.lineTo(I, T),
              a.closePath(),
              a.clip();
            var k = 1 / (f * y + g * m + p * v - y * m - g * p - f * v),
              P = w * y + g * I + x * v - y * I - g * x - w * v,
              O = f * x + w * m + p * I - x * m - w * p - f * I,
              U =
                f * y * I +
                g * x * m +
                w * p * v -
                w * y * m -
                g * p * I -
                f * x * v,
              V = C * y + g * T + S * v - y * T - g * S - C * v,
              F = f * S + C * m + p * T - S * m - C * p - f * T,
              H =
                f * y * T +
                g * S * m +
                C * p * v -
                C * y * m -
                g * p * T -
                f * S * v;
            a.transform(P * k, V * k, O * k, F * k, U * k, H * k),
              a.drawImage(
                h,
                o.uv[0] * _,
                o.uv[1] * d,
                c,
                u,
                o.uv[0] * _,
                o.uv[1] * d,
                c,
                u
              ),
              a.restore();
          }),
          t
        );
      })(),
      R = (function() {
        function t() {
          (this.texture = null),
            (this.uvs = [0, 0, 1, 0, 1, 1, 0, 1]),
            (this.vertices = [0, 0, 100, 0, 100, 100, 0, 100]),
            (this.indexes = [0, 1, 3, 3, 1, 2]),
            (this.uvTransform = null),
            (this.useUvTransform = !1),
            (this.canvasPadding = 1);
        }
        a(t, 'laya.ani.bone.canvasmesh.MeshData');
        return (
          (t.prototype.getBounds = function() {
            return g._getWrapRec(this.vertices);
          }),
          t
        );
      })(),
      B = (function() {
        function t() {
          (this.skinName = null), (this.deformSlotDataList = []);
        }
        return a(t, 'laya.ani.bone.DeformAniData'), t;
      })(),
      k = (function() {
        function t() {
          this.deformSlotDisplayList = [];
        }
        return a(t, 'laya.ani.bone.DeformSlotData'), t;
      })(),
      P = (function() {
        function t() {
          (this.boneSlot = null),
            (this.slotIndex = -1),
            (this.attachment = null),
            (this.deformData = null),
            (this.frameIndex = 0),
            (this.timeList = []),
            (this.vectices = []),
            (this.tweenKeyList = []);
        }
        a(t, 'laya.ani.bone.DeformSlotDisplayData');
        var e = t.prototype;
        return (
          (e.binarySearch1 = function(t, e) {
            var i = 0,
              n = t.length - 2;
            if (0 == n) return 1;
            for (var a = n >>> 1; ; ) {
              if ((t[Math.floor(a + 1)] <= e ? (i = a + 1) : (n = a), i == n))
                return i + 1;
              a = (i + n) >>> 1;
            }
            return 0;
          }),
          (e.apply = function(t, e, i) {
            if (
              (void 0 === i && (i = 1),
              (t += 0.05),
              !(this.timeList.length <= 0))
            ) {
              var n = 0;
              if (!(t < this.timeList[0])) {
                var a = this.vectices[0].length,
                  r = [],
                  s = this.binarySearch1(this.timeList, t);
                if (
                  ((this.frameIndex = s),
                  t >= this.timeList[this.timeList.length - 1])
                ) {
                  var o = this.vectices[this.vectices.length - 1];
                  if (i < 1) for (n = 0; n < a; n++) r[n] += (o[n] - r[n]) * i;
                  else for (n = 0; n < a; n++) r[n] = o[n];
                  this.deformData = r;
                } else {
                  this.tweenKeyList[this.frameIndex];
                  var l = this.vectices[this.frameIndex - 1],
                    h = this.vectices[this.frameIndex],
                    c = this.timeList[this.frameIndex - 1],
                    u = this.timeList[this.frameIndex];
                  i = this.tweenKeyList[s - 1] ? (t - c) / (u - c) : 0;
                  var _ = NaN;
                  for (n = 0; n < a; n++)
                    (_ = l[n]), (r[n] = _ + (h[n] - _) * i);
                  this.deformData = r;
                }
              }
            }
          }),
          t
        );
      })(),
      O = (function() {
        function t() {
          (this.time = NaN), (this.drawOrder = []);
        }
        return a(t, 'laya.ani.bone.DrawOrderData'), t;
      })(),
      U = (function() {
        function t() {
          (this.name = null),
            (this.intValue = 0),
            (this.floatValue = NaN),
            (this.stringValue = null),
            (this.time = NaN);
        }
        return a(t, 'laya.ani.bone.EventData'), t;
      })(),
      V = (function() {
        function t(t, e) {
          (this._targetBone = null),
            (this._bones = null),
            (this._data = null),
            (this.name = null),
            (this.mix = NaN),
            (this.bendDirection = NaN),
            (this.isSpine = !0),
            (this._sp = null),
            (this.isDebug = !1),
            (this._data = t),
            (this._targetBone = e[t.targetBoneIndex]),
            (this.isSpine = t.isSpine),
            null == this._bones && (this._bones = []),
            (this._bones.length = 0);
          for (var i = 0, n = t.boneIndexs.length; i < n; i++)
            this._bones.push(e[t.boneIndexs[i]]);
          (this.name = t.name),
            (this.mix = t.mix),
            (this.bendDirection = t.bendDirection);
        }
        a(t, 'laya.ani.bone.IkConstraint');
        var e = t.prototype;
        return (
          (e.apply = function() {
            switch (this._bones.length) {
              case 1:
                this._applyIk1(
                  this._bones[0],
                  this._targetBone.resultMatrix.tx,
                  this._targetBone.resultMatrix.ty,
                  this.mix
                );
                break;
              case 2:
                this.isSpine
                  ? this._applyIk2(
                      this._bones[0],
                      this._bones[1],
                      this._targetBone.resultMatrix.tx,
                      this._targetBone.resultMatrix.ty,
                      this.bendDirection,
                      this.mix
                    )
                  : this._applyIk3(
                      this._bones[0],
                      this._bones[1],
                      this._targetBone.resultMatrix.tx,
                      this._targetBone.resultMatrix.ty,
                      this.bendDirection,
                      this.mix
                    );
            }
          }),
          (e._applyIk1 = function(e, i, n, a) {
            var r = e.parentBone,
              s =
                1 /
                (r.resultMatrix.a * r.resultMatrix.d -
                  r.resultMatrix.b * r.resultMatrix.c),
              o = i - r.resultMatrix.tx,
              l = n - r.resultMatrix.ty,
              h =
                (o * r.resultMatrix.d - l * r.resultMatrix.c) * s -
                e.transform.x,
              c =
                (l * r.resultMatrix.a - o * r.resultMatrix.b) * s -
                e.transform.y,
              u = Math.atan2(c, h) * t.radDeg - 0 - e.transform.skX;
            e.transform.scX < 0 && (u += 180),
              u > 180 ? (u -= 360) : u < -180 && (u += 360),
              (e.transform.skX = e.transform.skY = e.transform.skX + u * a),
              e.update();
          }),
          (e.updatePos = function(t, e) {
            this._sp && this._sp.pos(t, e);
          }),
          (e._applyIk2 = function(e, n, a, r, s, o) {
            if (0 != o) {
              var l = e.resultTransform.x,
                h = e.resultTransform.y,
                c = e.transform.scX,
                u = e.transform.scY,
                _ = n.transform.scX,
                d = 0,
                f = 0,
                p = 0;
              c < 0 ? ((c = -c), (d = 180), (p = -1)) : ((d = 0), (p = 1)),
                u < 0 && ((u = -u), (p = -p)),
                _ < 0 ? ((_ = -_), (f = 180)) : (f = 0);
              var m = n.resultTransform.x,
                g = NaN,
                y = NaN,
                v = NaN,
                b = e.resultMatrix.a,
                x = e.resultMatrix.c,
                I = e.resultMatrix.b,
                C = e.resultMatrix.d,
                S = Math.abs(c - u) <= 1e-4;
              S
                ? ((y =
                    b * m + x * (g = n.resultTransform.y) + e.resultMatrix.tx),
                  (v = I * m + C * g + e.resultMatrix.ty))
                : ((g = 0),
                  (y = b * m + e.resultMatrix.tx),
                  (v = I * m + e.resultMatrix.ty)),
                this.isDebug &&
                  (this._sp ||
                    ((this._sp = new w()), i.stage.addChild(this._sp)),
                  this._sp.graphics.clear(),
                  this._sp.graphics.drawCircle(a, r, 15, '#ffff00'),
                  this._sp.graphics.drawCircle(y, v, 15, '#ff00ff')),
                e.setRotation(
                  Math.atan2(v - e.resultMatrix.ty, y - e.resultMatrix.tx)
                );
              var T = e.parentBone;
              (b = T.resultMatrix.a),
                (x = T.resultMatrix.c),
                (I = T.resultMatrix.b);
              var M = 1 / (b * (C = T.resultMatrix.d) - x * I),
                E = a - T.resultMatrix.tx,
                L = r - T.resultMatrix.ty,
                D = (E * C - L * x) * M - l,
                A = (L * b - E * I) * M - h,
                N =
                  ((E = y - T.resultMatrix.tx) * C -
                    (L = v - T.resultMatrix.ty) * x) *
                    M -
                  l,
                R = (L * b - E * I) * M - h,
                B = Math.sqrt(N * N + R * R),
                k = n.length * _,
                P = NaN,
                O = NaN;
              if (S) {
                var U = (D * D + A * A - B * B - (k *= c) * k) / (2 * B * k);
                U < -1 ? (U = -1) : U > 1 && (U = 1),
                  (O = Math.acos(U) * s),
                  (b = B + k * U),
                  (x = k * Math.sin(O)),
                  (P = Math.atan2(A * b - D * x, D * b + A * x));
              } else {
                var V = (b = c * k) * b,
                  F = (x = u * k) * x,
                  H = D * D + A * A,
                  G = Math.atan2(A, D),
                  z = -2 * F * B,
                  j = F - V;
                if ((C = z * z - 4 * j * (I = F * B * B + V * H - V * F)) > 0) {
                  var W = Math.sqrt(C);
                  z < 0 && (W = -W);
                  var X = (W = -(z + W) / 2) / j,
                    q = I / W,
                    Y = Math.abs(X) < Math.abs(q) ? X : q;
                  Y * Y <= H &&
                    ((L = Math.sqrt(H - Y * Y) * s),
                    (P = G - Math.atan2(L, Y)),
                    (O = Math.atan2(L / u, (Y - B) / c)));
                }
                var J = 0,
                  K = Number.MAX_VALUE,
                  Z = 0,
                  Q = 0,
                  $ = 0,
                  tt = 0,
                  et = 0,
                  it = 0;
                (C = (E = B + b) * E) > tt && (($ = 0), (tt = C), (et = E)),
                  (C = (E = B - b) * E) < K &&
                    ((J = Math.PI), (K = C), (Z = E));
                var nt = Math.acos((-b * B) / (V - F));
                (C =
                  (E = b * Math.cos(nt) + B) * E + (L = x * Math.sin(nt)) * L) <
                  K && ((J = nt), (K = C), (Z = E), (Q = L)),
                  C > tt && (($ = nt), (tt = C), (et = E), (it = L)),
                  H <= (K + tt) / 2
                    ? ((P = G - Math.atan2(Q * s, Z)), (O = J * s))
                    : ((P = G - Math.atan2(it * s, et)), (O = $ * s));
              }
              var at = Math.atan2(g, m) * p,
                rt = e.resultTransform.skX;
              (P = (P - at) * t.radDeg + d - rt) > 180
                ? (P -= 360)
                : P < -180 && (P += 360),
                (e.resultTransform.x = l),
                (e.resultTransform.y = h),
                (e.resultTransform.skX = e.resultTransform.skY = rt + P * o),
                (rt = n.resultTransform.skX),
                (O = ((O + at) * t.radDeg - 0) * p + f - (rt %= 360)) > 180
                  ? (O -= 360)
                  : O < -180 && (O += 360),
                (n.resultTransform.x = m),
                (n.resultTransform.y = g),
                (n.resultTransform.skX = n.resultTransform.skY =
                  n.resultTransform.skY + O * o),
                e.update();
            }
          }),
          (e._applyIk3 = function(e, n, a, r, s, o) {
            if (0 != o) {
              var l = NaN,
                h = NaN,
                c = n.resultMatrix.a * n.length,
                u = n.resultMatrix.b * n.length,
                _ = c * c + u * u,
                d = Math.sqrt(_),
                f = e.resultMatrix.tx,
                p = e.resultMatrix.ty,
                m = n.resultMatrix.tx,
                g = n.resultMatrix.ty,
                y = m - f,
                v = g - p,
                b = y * y + v * v,
                x = Math.sqrt(b),
                I =
                  (y = a - e.resultMatrix.tx) * y +
                  (v = r - e.resultMatrix.ty) * v,
                C = Math.sqrt(I);
              if (d + x <= C || C + d <= x || C + x <= d) {
                var S = NaN;
                (m = f + ((S = d + x <= C ? 1 : -1) * (a - f) * x) / C),
                  (g = p + (S * (r - p) * x) / C);
              } else {
                var T = (b - _ + I) / (2 * I),
                  M = Math.sqrt(b - T * T * I) / C,
                  E = f + y * T,
                  L = p + v * T,
                  D = -v * M,
                  A = y * M;
                s > 0 ? ((m = E - D), (g = L - A)) : ((m = E + D), (g = L + A));
              }
              (l = m),
                (h = g),
                this.isDebug &&
                  (this._sp ||
                    ((this._sp = new w()), i.stage.addChild(this._sp)),
                  this._sp.graphics.clear(),
                  this._sp.graphics.drawCircle(f, p, 15, '#ff00ff'),
                  this._sp.graphics.drawCircle(a, r, 15, '#ffff00'),
                  this._sp.graphics.drawCircle(l, h, 15, '#ff00ff'));
              var N = NaN;
              (N = Math.atan2(h - e.resultMatrix.ty, l - e.resultMatrix.tx)),
                e.setRotation(N);
              var R;
              (R = t._tempMatrix).identity(),
                R.rotate(N),
                R.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY()),
                R.translate(e.resultMatrix.tx, e.resultMatrix.ty),
                R.copyTo(e.resultMatrix),
                e.updateChild();
              var B = NaN;
              (B = Math.atan2(r - h, a - l)), n.setRotation(B);
              var k;
              (k = t._tempMatrix).identity(),
                k.rotate(B),
                k.scale(n.resultMatrix.getScaleX(), n.resultMatrix.getScaleY()),
                k.translate(l, h),
                R.copyTo(n.resultMatrix),
                n.updateChild();
            }
          }),
          n(t, [
            'radDeg',
            function() {
              return (this.radDeg = 180 / Math.PI);
            },
            'degRad',
            function() {
              return (this.degRad = Math.PI / 180);
            },
            '_tempMatrix',
            function() {
              return (this._tempMatrix = new m());
            }
          ]),
          t
        );
      })(),
      F = (function() {
        function t() {
          (this.name = null),
            (this.targetBoneName = null),
            (this.bendDirection = 1),
            (this.mix = 1),
            (this.isSpine = !0),
            (this.targetBoneIndex = -1),
            (this.boneNames = []),
            (this.boneIndexs = []);
        }
        return a(t, 'laya.ani.bone.IkConstraintData'), t;
      })(),
      H = (function() {
        function t() {}
        return (
          a(t, 'laya.ani.bone.MeshTools'),
          (t.findEdge = function(t, e, i) {
            void 0 === e && (e = 0), void 0 === i && (i = !0);
            var n = 0,
              a = 0,
              r = 0;
            for (a = t.length, r = -1, n = 0; n < a; n += 2)
              (r < 0 || i == t[r + e] < t[n + e]) && (r = n);
            return r;
          }),
          (t.findBestTriangle = function(e) {
            var i = 0;
            i = t.findEdge(e, 1, !0);
            var n = 0;
            n = t.findEdge(e, 1, !1);
            var a = 0;
            a = t.findEdge(e, 0, !0);
            var r = 0;
            r = t.findEdge(e, 0, !1);
            var s;
            return (
              (s = t._bestTriangle),
              (s.length = 0),
              s.push(a, r),
              s.indexOf(i) < 0 && s.push(i),
              s.indexOf(n) < 0 && s.push(n),
              s
            );
          }),
          (t.solveMesh = function(e, i) {
            (i = i || []).length = 0;
            var n;
            n = e.uvs;
            var a;
            a = e.vertices;
            var r,
              s,
              o = 0,
              l = 0,
              h = 0;
            (o = (s = t.findBestTriangle(n))[0]),
              (l = s[1]),
              (h = s[2]),
              (t._absArr.length = 0);
            return (
              t.isNormalUV(e.texture.uv) && t.adptTexture(e),
              (r = t.solvePoints(
                e.texture.uv,
                n[o],
                n[o + 1],
                n[l] - n[o],
                n[l + 1] - n[o + 1],
                n[h] - n[o],
                n[h + 1] - n[o + 1],
                t._absArr
              )),
              t.transPoints(
                r,
                a[o],
                a[o + 1],
                a[l] - a[o],
                a[l + 1] - a[o + 1],
                a[h] - a[o],
                a[h + 1] - a[o + 1],
                i
              )
            );
          }),
          (t.findWrapRect = function(e) {
            var i = 0;
            i = t.findEdge(e, 1, !0);
            var n = 0;
            n = t.findEdge(e, 1, !1);
            var a = 0;
            a = t.findEdge(e, 0, !0);
            var r = 0;
            r = t.findEdge(e, 0, !1);
            var s = NaN;
            s = e[a];
            var o = NaN;
            o = e[r];
            var l = NaN;
            l = e[i + 1];
            var h = NaN;
            return [o, (h = e[n + 1]), s - o, l - h];
          }),
          (t.adptTexture = function(e) {
            var i;
            i = t.findWrapRect(e.uvs);
            var n,
              a,
              r = (n = e.texture).width,
              s = n.height;
            (a = I.create(n, i[0] * r, i[1] * s, i[2] * r, i[3] * s)),
              (e.texture = a);
          }),
          (t.isNormalUV = function(t) {
            return 0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5];
          }),
          (t.solvePoints = function(e, i, n, a, r, s, o, l) {
            l = l || [];
            var h = 0,
              c = 0;
            c = e.length;
            var u;
            for (h = 0; h < c; h += 2)
              (u = t.solve2(e[h], e[h + 1], i, n, a, r, s, o)),
                l.push(u[0], u[1]);
            return l;
          }),
          (t.transPoints = function(e, i, n, a, r, s, o, l) {
            l = l || [];
            var h = 0,
              c = 0;
            c = e.length;
            for (h = 0; h < c; h += 2)
              t.transPoint(e[h], e[h + 1], i, n, a, r, s, o, l);
            return l;
          }),
          (t.transPoint = function(t, e, i, n, a, r, s, o, l) {
            var h = NaN,
              c = NaN;
            return (
              (h = i + a * t + s * e),
              (c = n + r * t + o * e),
              (l = l || []).push(h, c),
              l
            );
          }),
          (t.solve2 = function(e, i, n, a, r, s, o, l, h, c) {
            void 0 === h && (h = !1), (c = c || []);
            var u = NaN,
              _ = NaN;
            if (0 == r) return t.solve2(e, i, n, a, o, l, r, s, !0, c);
            var d = NaN,
              f = NaN;
            return (
              (d = e - n),
              (f = i - a),
              (_ = (f - (d * s) / r) / (l - (o * s) / r)),
              (u = (d - _ * o) / r),
              h ? c.push(_, u) : c.push(u, _),
              c
            );
          }),
          (t.solve = function(e, i, n, a) {
            return t.solve2(e.x, e.y, i.x, i.y, n.x, n.y, a.x, a.y);
          }),
          (t._bestTriangle = []),
          (t._absArr = []),
          t
        );
      })(),
      G = (function() {
        function t(t, e) {
          (this.target = null),
            (this.data = null),
            (this.bones = null),
            (this.position = NaN),
            (this.spacing = NaN),
            (this.rotateMix = NaN),
            (this.translateMix = NaN),
            (this._debugKey = !1),
            (this._spaces = null),
            (this._segments = []),
            (this._curves = []),
            (this.data = t),
            (this.position = t.position),
            (this.spacing = t.spacing),
            (this.rotateMix = t.rotateMix),
            (this.translateMix = t.translateMix),
            (this.bones = []);
          for (var i = this.data.bones, n = 0, a = i.length; n < a; n++)
            this.bones.push(e[i[n]]);
        }
        a(t, 'laya.ani.bone.PathConstraint');
        var e = t.prototype;
        return (
          (e.apply = function(t, e) {
            if (this.target) {
              var i = this.translateMix,
                n = this.translateMix,
                a = n > 0,
                r = this.data.spacingMode,
                s = 'length' == r,
                o = this.data.rotateMode,
                l = 'tangent' == o,
                h = 'chainScale' == o,
                c = [],
                u = this.bones.length,
                _ = l ? u : u + 1,
                d = [];
              (this._spaces = d), (d[0] = this.position);
              var f = this.spacing;
              if (h || s)
                for (var p = 0, m = _ - 1; p < m; ) {
                  var g = this.bones[p],
                    y = g.length,
                    v = y * g.resultMatrix.a,
                    b = y * g.resultMatrix.b;
                  (y = Math.sqrt(v * v + b * b)),
                    h && (c[p] = y),
                    (d[++p] = s ? Math.max(0, y + f) : f);
                }
              else for (p = 1; p < _; p++) d[p] = f;
              var w = this.computeWorldPositions(
                this.target,
                t,
                e,
                _,
                l,
                'percent' == this.data.positionMode,
                'percent' == r
              );
              if (this._debugKey) {
                for (p = 0; p < w.length; p++)
                  e.drawCircle(w[p++], w[p++], 5, '#00ff00');
                var x = [];
                for (p = 0; p < w.length; p++) x.push(w[p++], w[p++]);
                e.drawLines(0, 0, x, '#ff0000');
              }
              var I = w[0],
                C = w[1],
                S = this.data.offsetRotation,
                T = 'chain' == o && 0 == S,
                M = NaN;
              for (p = 0, M = 3; p < u; p++, M += 3) {
                ((g = this.bones[p]).resultMatrix.tx +=
                  (I - g.resultMatrix.tx) * i),
                  (g.resultMatrix.ty += (C - g.resultMatrix.ty) * i);
                var E = (v = w[M]) - I,
                  L = (b = w[M + 1]) - C;
                if (h && 0 != (y = c[p])) {
                  var D = (Math.sqrt(E * E + L * L) / y - 1) * n + 1;
                  (g.resultMatrix.a *= D), (g.resultMatrix.c *= D);
                }
                if (((I = v), (C = b), a)) {
                  var A = g.resultMatrix.a,
                    N = g.resultMatrix.c,
                    R = g.resultMatrix.b,
                    B = g.resultMatrix.d,
                    k = NaN,
                    P = NaN,
                    O = NaN;
                  (k = l
                    ? w[M - 1]
                    : 0 == d[p + 1]
                    ? w[M + 2]
                    : Math.atan2(L, E)),
                    (k -= Math.atan2(R, A) - (S / 180) * Math.PI),
                    T &&
                      ((P = Math.cos(k)),
                      (O = Math.sin(k)),
                      (I += ((y = g.length) * (P * A - O * R) - E) * n),
                      (C += (y * (O * A + P * R) - L) * n)),
                    k > Math.PI
                      ? (k -= 2 * Math.PI)
                      : k < -Math.PI && (k += 2 * Math.PI),
                    (k *= n),
                    (P = Math.cos(k)),
                    (O = Math.sin(k)),
                    (g.resultMatrix.a = P * A - O * R),
                    (g.resultMatrix.c = P * N - O * B),
                    (g.resultMatrix.b = O * A + P * R),
                    (g.resultMatrix.d = O * N + P * B);
                }
              }
            }
          }),
          (e.computeWorldVertices2 = function(e, i, n, a, r, s) {
            var o,
              l,
              h = e.currDisplayData.bones,
              c = e.currDisplayData.weights,
              u = e.currDisplayData.triangles,
              _ = 0,
              d = 0,
              f = 0,
              p = 0,
              m = 0,
              g = 0,
              y = 0,
              v = 0,
              b = 0,
              w = 0,
              x = 0;
            if (null != h) {
              for (_ = 0; _ < n; _ += 2) (d += (p = h[d]) + 1), (f += p);
              var I = i;
              for (m = s, g = 3 * f; m < a; m += 2) {
                for (y = 0, v = 0, p = h[d++], p += d; d < p; d++, g += 3) {
                  (o = I[h[d]].resultMatrix), (b = c[g]), (w = c[g + 1]);
                  var C = c[g + 2];
                  (y += (b * o.a + w * o.c + o.tx) * C),
                    (v += (b * o.b + w * o.d + o.ty) * C);
                }
                (r[m] = y), (r[m + 1] = v);
              }
            } else {
              u || (u = c), e.deformData && (u = e.deformData);
              var S;
              if (((S = e.parent), i))
                for (x = i.length, _ = 0; _ < x; _++)
                  if (i[_].name == S) {
                    l = i[_];
                    break;
                  }
              var T;
              l && (T = l.resultMatrix), T || (T = t._tempMt);
              var M = T.tx,
                E = T.ty,
                L = T.a,
                D = T.b,
                A = T.c,
                N = T.d;
              for (l && (N *= l.d), d = n, m = s; m < a; d += 2, m += 2)
                (b = u[d]),
                  (w = u[d + 1]),
                  (r[m] = b * L + w * D + M),
                  (r[m + 1] = -(b * A + w * N + E));
            }
          }),
          (e.computeWorldPositions = function(t, e, i, n, a, r, s) {
            t.currDisplayData.bones,
              t.currDisplayData.weights,
              t.currDisplayData.triangles;
            var o = [],
              l = 0,
              h = t.currDisplayData.verLen,
              c = this.position,
              u = this._spaces,
              _ = [],
              d = [],
              f = h / 6,
              p = -1,
              m = NaN,
              g = 0,
              y = 0,
              v = NaN,
              b = NaN,
              w = NaN,
              x = NaN;
            if (
              (f--,
              (h -= 4),
              this.computeWorldVertices2(t, e, 2, h, o, 0),
              this._debugKey)
            )
              for (l = 0; l < o.length; )
                i.drawCircle(o[l++], o[l++], 10, '#ff0000');
            (_ = o), (this._curves.length = f);
            var I = this._curves;
            m = 0;
            var C = _[0],
              S = _[1],
              T = 0,
              M = 0,
              E = 0,
              L = 0,
              D = 0,
              A = 0,
              N = NaN,
              R = NaN,
              B = NaN,
              k = NaN,
              P = NaN,
              O = NaN,
              U = NaN,
              V = NaN,
              F = 0;
            for (l = 0, F = 2; l < f; l++, F += 6)
              (T = _[F]),
                (M = _[F + 1]),
                (E = _[F + 2]),
                (L = _[F + 3]),
                (P =
                  2 * (N = 0.1875 * (C - 2 * T + E)) +
                  (B = 0.09375 * (3 * (T - E) - C + (D = _[F + 4])))),
                (O =
                  2 * (R = 0.1875 * (S - 2 * M + L)) +
                  (k = 0.09375 * (3 * (M - L) - S + (A = _[F + 5])))),
                (U = 0.75 * (T - C) + N + 0.16666667 * B),
                (V = 0.75 * (M - S) + R + 0.16666667 * k),
                (m += Math.sqrt(U * U + V * V)),
                (U += P),
                (V += O),
                (P += B),
                (O += k),
                (m += Math.sqrt(U * U + V * V)),
                (U += P),
                (V += O),
                (m += Math.sqrt(U * U + V * V)),
                (U += P + B),
                (V += O + k),
                (m += Math.sqrt(U * U + V * V)),
                (I[l] = m),
                (C = D),
                (S = A);
            if ((r && (c *= m), s)) for (l = 0; l < n; l++) u[l] *= m;
            var H = this._segments,
              G = 0,
              z = 0;
            for (l = 0, g = 0, y = 0, z = 0; l < n; l++, g += 3)
              if (((b = u[l]), (c += b), (v = c) < 0))
                this.addBeforePosition(v, _, 0, d, g);
              else if (v > m) this.addAfterPosition(v - m, _, h - 4, d, g);
              else {
                for (; ; y++)
                  if (((x = I[y]), !(v > x))) {
                    0 == y ? (v /= x) : (v = (v - (w = I[y - 1])) / (x - w));
                    break;
                  }
                if (y != p) {
                  p = y;
                  var j = 6 * y;
                  for (
                    C = _[j],
                      S = _[j + 1],
                      T = _[j + 2],
                      M = _[j + 3],
                      E = _[j + 4],
                      L = _[j + 5],
                      P =
                        2 * (N = 0.03 * (C - 2 * T + E)) +
                        (B = 0.006 * (3 * (T - E) - C + (D = _[j + 6]))),
                      O =
                        2 * (R = 0.03 * (S - 2 * M + L)) +
                        (k = 0.006 * (3 * (M - L) - S + (A = _[j + 7]))),
                      U = 0.3 * (T - C) + N + 0.16666667 * B,
                      V = 0.3 * (M - S) + R + 0.16666667 * k,
                      G = Math.sqrt(U * U + V * V),
                      H[0] = G,
                      j = 1;
                    j < 8;
                    j++
                  )
                    (U += P),
                      (V += O),
                      (P += B),
                      (O += k),
                      (G += Math.sqrt(U * U + V * V)),
                      (H[j] = G);
                  (U += P),
                    (V += O),
                    (G += Math.sqrt(U * U + V * V)),
                    (H[8] = G),
                    (U += P + B),
                    (V += O + k),
                    (G += Math.sqrt(U * U + V * V)),
                    (H[9] = G),
                    (z = 0);
                }
                for (v *= G; ; z++)
                  if (((x = H[z]), !(v > x))) {
                    0 == z
                      ? (v /= x)
                      : (v = z + (v - (w = H[z - 1])) / (x - w));
                    break;
                  }
                this.addCurvePosition(
                  0.1 * v,
                  C,
                  S,
                  T,
                  M,
                  E,
                  L,
                  D,
                  A,
                  d,
                  g,
                  a || (l > 0 && 0 == b)
                );
              }
            return d;
          }),
          (e.addBeforePosition = function(t, e, i, n, a) {
            var r = e[i],
              s = e[i + 1],
              o = e[i + 2] - r,
              l = e[i + 3] - s,
              h = Math.atan2(l, o);
            (n[a] = r + t * Math.cos(h)),
              (n[a + 1] = s + t * Math.sin(h)),
              (n[a + 2] = h);
          }),
          (e.addAfterPosition = function(t, e, i, n, a) {
            var r = e[i + 2],
              s = e[i + 3],
              o = r - e[i],
              l = s - e[i + 1],
              h = Math.atan2(l, o);
            (n[a] = r + t * Math.cos(h)),
              (n[a + 1] = s + t * Math.sin(h)),
              (n[a + 2] = h);
          }),
          (e.addCurvePosition = function(t, e, i, n, a, r, s, o, l, h, c, u) {
            0 == t && (t = 1e-4);
            var _ = t * t,
              d = _ * t,
              f = 1 - t,
              p = f * f,
              m = p * f,
              g = f * t,
              y = 3 * g,
              v = f * y,
              b = y * t,
              w = e * m + n * v + r * b + o * d,
              x = i * m + a * v + s * b + l * d;
            (h[c] = w),
              (h[c + 1] = x),
              (h[c + 2] = u
                ? Math.atan2(
                    x - (i * p + a * g * 2 + s * _),
                    w - (e * p + n * g * 2 + r * _)
                  )
                : 0);
          }),
          (t.NONE = -1),
          (t.BEFORE = -2),
          (t.AFTER = -3),
          n(t, [
            '_tempMt',
            function() {
              return (this._tempMt = new m());
            }
          ]),
          t
        );
      })(),
      z = (function() {
        function t() {
          (this.name = null),
            (this.target = null),
            (this.positionMode = null),
            (this.spacingMode = null),
            (this.rotateMode = null),
            (this.offsetRotation = NaN),
            (this.position = NaN),
            (this.spacing = NaN),
            (this.rotateMix = NaN),
            (this.translateMix = NaN),
            (this.bones = []);
        }
        return a(t, 'laya.ani.bone.PathConstraintData'), t;
      })(),
      j = (function() {
        function t() {
          (this.name = null), (this.slotArr = []);
        }
        return a(t, 'laya.ani.bone.SkinData'), t;
      })(),
      W = (function() {
        function t() {
          (this.name = null),
            (this.attachmentName = null),
            (this.type = 0),
            (this.transform = null),
            (this.width = NaN),
            (this.height = NaN),
            (this.texture = null),
            (this.bones = null),
            (this.uvs = null),
            (this.weights = null),
            (this.triangles = null),
            (this.vertices = null),
            (this.lengths = null),
            (this.verLen = 0);
        }
        a(t, 'laya.ani.bone.SkinSlotDisplayData');
        var e = t.prototype;
        return (
          (e.createTexture = function(t) {
            return this.texture
              ? this.texture
              : ((this.texture = new I(t.bitmap, this.uvs)),
                this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5]
                  ? ((this.texture.width = t.height),
                    (this.texture.height = t.width),
                    (this.texture.offsetX = -t.offsetX),
                    (this.texture.offsetY = -t.offsetY),
                    (this.texture.sourceWidth = t.sourceHeight),
                    (this.texture.sourceHeight = t.sourceWidth))
                  : ((this.texture.width = t.width),
                    (this.texture.height = t.height),
                    (this.texture.offsetX = -t.offsetX),
                    (this.texture.offsetY = -t.offsetY),
                    (this.texture.sourceWidth = t.sourceWidth),
                    (this.texture.sourceHeight = t.sourceHeight)),
                y.isWebGL ||
                  (this.uvs[1] > this.uvs[5] &&
                    (this.texture.offsetY =
                      this.texture.sourceHeight -
                      this.texture.height -
                      this.texture.offsetY)),
                this.texture);
          }),
          (e.destory = function() {
            this.texture && this.texture.destroy();
          }),
          t
        );
      })(),
      X = (function() {
        function t() {
          (this.name = null), (this.displayArr = []);
        }
        a(t, 'laya.ani.bone.SlotData');
        return (
          (t.prototype.getDisplayByName = function(t) {
            for (var e = 0, i = this.displayArr.length; e < i; e++)
              if (this.displayArr[e].attachmentName == t) return e;
            return -1;
          }),
          t
        );
      })(),
      q = (function() {
        function t(t, e) {
          (this._data = null),
            (this._bones = null),
            (this.target = null),
            (this.rotateMix = NaN),
            (this.translateMix = NaN),
            (this.scaleMix = NaN),
            (this.shearMix = NaN),
            (this._temp = s(2, 0)),
            (this._data = t),
            null == this._bones && (this._bones = []),
            (this.target = e[t.targetIndex]);
          var i = 0,
            n = 0;
          for (i = 0, n = t.boneIndexs.length; i < n; i++)
            this._bones.push(e[t.boneIndexs[i]]);
          (this.rotateMix = t.rotateMix),
            (this.translateMix = t.translateMix),
            (this.scaleMix = t.scaleMix),
            (this.shearMix = t.shearMix);
        }
        a(t, 'laya.ani.bone.TfConstraint');
        return (
          (t.prototype.apply = function() {
            for (
              var t,
                e = this.target.resultMatrix.a,
                i = this.target.resultMatrix.b,
                n = this.target.resultMatrix.c,
                a = this.target.resultMatrix.d,
                r = 0,
                s = this._bones.length;
              r < s;
              r++
            ) {
              if (((t = this._bones[r]), this.rotateMix > 0)) {
                var o = t.resultMatrix.a,
                  l = t.resultMatrix.b,
                  h = t.resultMatrix.c,
                  c = t.resultMatrix.d,
                  u =
                    Math.atan2(n, e) -
                    Math.atan2(h, o) +
                    (this._data.offsetRotation * Math.PI) / 180;
                u > Math.PI
                  ? (u -= 2 * Math.PI)
                  : u < -Math.PI && (u += 2 * Math.PI),
                  (u *= this.rotateMix);
                var _ = Math.cos(u),
                  d = Math.sin(u);
                (t.resultMatrix.a = _ * o - d * h),
                  (t.resultMatrix.b = _ * l - d * c),
                  (t.resultMatrix.c = d * o + _ * h),
                  (t.resultMatrix.d = d * l + _ * c);
              }
              if (
                (this.translateMix &&
                  ((this._temp[0] = this._data.offsetX),
                  (this._temp[1] = this._data.offsetY),
                  this.target.localToWorld(this._temp),
                  (t.resultMatrix.tx +=
                    (this._temp[0] - t.resultMatrix.tx) * this.translateMix),
                  (t.resultMatrix.ty +=
                    (this._temp[1] - t.resultMatrix.ty) * this.translateMix),
                  t.updateChild()),
                this.scaleMix > 0)
              ) {
                var f = Math.sqrt(
                    t.resultMatrix.a * t.resultMatrix.a +
                      t.resultMatrix.c * t.resultMatrix.c
                  ),
                  p = Math.sqrt(e * e + n * n),
                  m =
                    f > 1e-5
                      ? (f +
                          (p - f + this._data.offsetScaleX) * this.scaleMix) /
                        f
                      : 0;
                (t.resultMatrix.a *= m),
                  (t.resultMatrix.c *= m),
                  (f = Math.sqrt(
                    t.resultMatrix.b * t.resultMatrix.b +
                      t.resultMatrix.d * t.resultMatrix.d
                  )),
                  (p = Math.sqrt(i * i + a * a)),
                  (m =
                    f > 1e-5
                      ? (f +
                          (p - f + this._data.offsetScaleY) * this.scaleMix) /
                        f
                      : 0),
                  (t.resultMatrix.b *= m),
                  (t.resultMatrix.d *= m);
              }
              if (this.shearMix > 0) {
                (l = t.resultMatrix.b), (c = t.resultMatrix.d);
                var g = Math.atan2(c, l);
                (u =
                  Math.atan2(a, i) -
                  Math.atan2(n, e) -
                  (g - Math.atan2(t.resultMatrix.c, t.resultMatrix.a))) >
                Math.PI
                  ? (u -= 2 * Math.PI)
                  : u < -Math.PI && (u += 2 * Math.PI),
                  (u =
                    g +
                    (u + (this._data.offsetShearY * Math.PI) / 180) *
                      this.shearMix),
                  (m = Math.sqrt(l * l + c * c)),
                  (t.resultMatrix.b = Math.cos(u) * m),
                  (t.resultMatrix.d = Math.sin(u) * m);
              }
            }
          }),
          t
        );
      })(),
      Y = (function() {
        function t() {
          (this.name = null),
            (this.targetIndex = 0),
            (this.rotateMix = NaN),
            (this.translateMix = NaN),
            (this.scaleMix = NaN),
            (this.shearMix = NaN),
            (this.offsetRotation = NaN),
            (this.offsetX = NaN),
            (this.offsetY = NaN),
            (this.offsetScaleX = NaN),
            (this.offsetScaleY = NaN),
            (this.offsetShearY = NaN),
            (this.boneIndexs = []);
        }
        return a(t, 'laya.ani.bone.TfConstraintData'), t;
      })(),
      J = (function() {
        function t() {
          (this.skX = 0),
            (this.skY = 0),
            (this.scX = 1),
            (this.scY = 1),
            (this.x = 0),
            (this.y = 0),
            (this.skewX = 0),
            (this.skewY = 0),
            (this.mMatrix = null);
        }
        a(t, 'laya.ani.bone.Transform');
        var e = t.prototype;
        return (
          (e.initData = function(t) {
            void 0 != t.x && (this.x = t.x),
              void 0 != t.y && (this.y = t.y),
              void 0 != t.skX && (this.skX = t.skX),
              void 0 != t.skY && (this.skY = t.skY),
              void 0 != t.scX && (this.scX = t.scX),
              void 0 != t.scY && (this.scY = t.scY);
          }),
          (e.getMatrix = function() {
            var t;
            return (
              (t = this.mMatrix
                ? this.mMatrix
                : (this.mMatrix = new m())).identity(),
              t.scale(this.scX, this.scY),
              (this.skewX || this.skewY) &&
                this.skew(
                  t,
                  (this.skewX * Math.PI) / 180,
                  (this.skewY * Math.PI) / 180
                ),
              t.rotate((this.skX * Math.PI) / 180),
              t.translate(this.x, this.y),
              t
            );
          }),
          (e.skew = function(t, e, i) {
            var n = Math.sin(i),
              a = Math.cos(i),
              r = Math.sin(e),
              s = Math.cos(e);
            return (
              t.setTo(
                t.a * s - t.b * n,
                t.a * r + t.b * a,
                t.c * s - t.d * n,
                t.c * r + t.d * a,
                t.tx * s - t.ty * n,
                t.tx * r + t.ty * a
              ),
              t
            );
          }),
          t
        );
      })(),
      K = (function() {
        function t() {}
        return (
          a(t, 'laya.ani.bone.UVTools'),
          (t.getRelativeUV = function(t, e, i) {
            var n = t[0],
              a = t[2] - t[0],
              r = t[1],
              s = t[5] - t[1];
            i || (i = []), (i.length = e.length);
            var o = 0,
              l = 0;
            l = i.length;
            var h = 1 / a,
              c = 1 / s;
            for (o = 0; o < l; o += 2)
              (i[o] = (e[o] - n) * h), (i[o + 1] = (e[o + 1] - r) * c);
            return i;
          }),
          (t.getAbsoluteUV = function(t, e, i) {
            if (0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5])
              return i ? (S.copyArray(i, e), i) : e;
            var n = t[0],
              a = t[2] - t[0],
              r = t[1],
              s = t[5] - t[1];
            i || (i = []), (i.length = e.length);
            var o = 0,
              l = 0;
            for (l = i.length, o = 0; o < l; o += 2)
              (i[o] = e[o] * a + n), (i[o + 1] = e[o + 1] * s + r);
            return i;
          }),
          t
        );
      })(),
      Z = (function() {
        function t() {
          (this.startTime = NaN),
            (this.duration = NaN),
            (this.interpolationData = null),
            (this.data = null),
            (this.nextData = null);
        }
        return a(t, 'laya.ani.KeyFramesContent'), t;
      })(),
      Q = (function() {
        function t() {}
        return (
          a(t, 'laya.ani.math.BezierLerp'),
          (t.getBezierRate = function(e, i, n, a, r) {
            var s = t._getBezierParamKey(i, n, a, r),
              o = 100 * s + e;
            if (t._bezierResultCache[o]) return t._bezierResultCache[o];
            var l = t._getBezierPoints(i, n, a, r, s),
              h = 0,
              c = 0;
            for (c = l.length, h = 0; h < c; h += 2)
              if (e <= l[h])
                return (t._bezierResultCache[o] = l[h + 1]), l[h + 1];
            return (t._bezierResultCache[o] = 1), 1;
          }),
          (t._getBezierParamKey = function(t, e, i, n) {
            return 100 * (100 * (100 * (100 * t + e) + i) + n);
          }),
          (t._getBezierPoints = function(e, i, n, a, r) {
            if (t._bezierPointsCache[r]) return t._bezierPointsCache[r];
            var s;
            s = [0, 0, e, i, n, a, 1, 1];
            var l;
            return (
              (l = new o().getBezierPoints(s, 100, 3)),
              (t._bezierPointsCache[r] = l),
              l
            );
          }),
          (t._bezierResultCache = {}),
          (t._bezierPointsCache = {}),
          t
        );
      })(),
      $ = (function(t) {
        function e() {
          (this._destroyed = !1),
            (this._templet = null),
            (this._currentTime = NaN),
            (this._currentFrameTime = NaN),
            (this._playStart = NaN),
            (this._playEnd = NaN),
            (this._playDuration = NaN),
            (this._overallDuration = NaN),
            (this._stopWhenCircleFinish = !1),
            (this._elapsedPlaybackTime = NaN),
            (this._startUpdateLoopCount = NaN),
            (this._currentAnimationClipIndex = 0),
            (this._currentKeyframeIndex = 0),
            (this._paused = !1),
            (this._cacheFrameRate = 0),
            (this._cacheFrameRateInterval = NaN),
            (this._cachePlayRate = NaN),
            (this._fullFrames = null),
            (this.isCache = !0),
            (this.playbackRate = 1),
            (this.returnToZeroStopped = !1),
            e.__super.call(this),
            (this._destroyed = !1),
            (this._currentAnimationClipIndex = -1),
            (this._currentKeyframeIndex = -1),
            (this._currentTime = 0),
            (this._overallDuration = Number.MAX_VALUE),
            (this._stopWhenCircleFinish = !1),
            (this._elapsedPlaybackTime = 0),
            (this._startUpdateLoopCount = -1),
            (this._cachePlayRate = 1),
            (this.cacheFrameRate = 60),
            (this.returnToZeroStopped = !1);
        }
        a(e, 'laya.ani.AnimationPlayer', c);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.resource.IDestroy': !0 }),
          (n._onTempletLoadedComputeFullKeyframeIndices = function(t, e, i) {
            this._templet === i &&
              this._cachePlayRate === t &&
              this._cacheFrameRate === e &&
              this._computeFullKeyframeIndices();
          }),
          (n._computeFullKeyframeIndices = function() {
            for (
              var t = (this._fullFrames = []),
                e = this._templet,
                i = this._cacheFrameRateInterval * this._cachePlayRate,
                n = 0,
                a = e.getAnimationCount();
              n < a;
              n++
            ) {
              for (
                var r = [], s = 0, o = e.getAnimation(n).nodes.length;
                s < o;
                s++
              ) {
                for (
                  var l = e.getAnimation(n).nodes[s],
                    h = Math.floor(l.playTime / i + 0.01),
                    c = new Uint16Array(h + 1),
                    u = -1,
                    _ = 0,
                    d = l.keyFrame.length;
                  _ < d;
                  _++
                ) {
                  var f = l.keyFrame[_],
                    p = f.startTime,
                    m = p + f.duration + i;
                  do {
                    for (var g = Math.floor(p / i + 0.5), y = u + 1; y < g; y++)
                      c[y] = _;
                    (u = g), (c[g] = _), (p += i);
                  } while (p <= m);
                }
                r.push(c);
              }
              t.push(r);
            }
          }),
          (n._onAnimationTempletLoaded = function() {
            this.destroyed || this._calculatePlayDuration();
          }),
          (n._calculatePlayDuration = function() {
            if (0 !== this.state) {
              var t = this._templet.getAniDuration(
                this._currentAnimationClipIndex
              );
              0 === this._playEnd && (this._playEnd = t),
                this._playEnd > t && (this._playEnd = t),
                (this._playDuration = this._playEnd - this._playStart);
            }
          }),
          (n._setPlayParams = function(t, e) {
            (this._currentTime = t),
              (this._currentKeyframeIndex = Math.max(
                Math.floor(this.currentPlayTime / e + 0.01),
                0
              )),
              (this._currentFrameTime = this._currentKeyframeIndex * e);
          }),
          (n._setPlayParamsWhenStop = function(t, e) {
            (this._currentTime = t),
              (this._currentKeyframeIndex = Math.max(
                Math.floor(t / e + 0.01),
                0
              )),
              (this._currentFrameTime = this._currentKeyframeIndex * e),
              (this._currentAnimationClipIndex = -1);
          }),
          (n._update = function(t) {
            if (
              -1 !== this._currentAnimationClipIndex &&
              !this._paused &&
              this._templet &&
              this._templet.loaded
            ) {
              var e = this._cacheFrameRateInterval * this._cachePlayRate,
                i = 0;
              this._startUpdateLoopCount !== x.loopCount &&
                ((i = t * this.playbackRate), (this._elapsedPlaybackTime += i));
              var n = this.playDuration;
              if (
                (0 !== this._overallDuration &&
                  this._elapsedPlaybackTime >= this._overallDuration) ||
                (0 === this._overallDuration && this._elapsedPlaybackTime >= n)
              )
                return (
                  this._setPlayParamsWhenStop(n, e), void this.event('stopped')
                );
              if (((i += this._currentTime), n > 0))
                if (i >= n)
                  do {
                    if (((i -= n), this._stopWhenCircleFinish))
                      return (
                        this._setPlayParamsWhenStop(n, e),
                        (this._stopWhenCircleFinish = !1),
                        void this.event('stopped')
                      );
                    i < n &&
                      (this._setPlayParams(i, e), this.event('complete'));
                  } while (i >= n);
                else this._setPlayParams(i, e);
              else {
                if (this._stopWhenCircleFinish)
                  return (
                    this._setPlayParamsWhenStop(n, e),
                    (this._stopWhenCircleFinish = !1),
                    void this.event('stopped')
                  );
                (this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0),
                  this.event('complete');
              }
            }
          }),
          (n._destroy = function() {
            this.offAll(),
              (this._templet = null),
              (this._fullFrames = null),
              (this._destroyed = !0);
          }),
          (n.play = function(t, e, i, n, a) {
            if (
              (void 0 === t && (t = 0),
              void 0 === e && (e = 1),
              void 0 === i && (i = 2147483647),
              void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              !this._templet)
            )
              throw new Error(
                'AnimationPlayer:templet must not be null,maybe you need to set url.'
              );
            if (i < 0 || n < 0 || a < 0)
              throw new Error(
                'AnimationPlayer:overallDuration,playStart and playEnd must large than zero.'
              );
            if (0 !== a && n > a)
              throw new Error('AnimationPlayer:start must less than end.');
            (this._currentTime = 0),
              (this._currentFrameTime = 0),
              (this._elapsedPlaybackTime = 0),
              (this.playbackRate = e),
              (this._overallDuration = i),
              (this._playStart = n),
              (this._playEnd = a),
              (this._paused = !1),
              (this._currentAnimationClipIndex = t),
              (this._currentKeyframeIndex = 0),
              (this._startUpdateLoopCount = x.loopCount),
              this.event('played'),
              this._templet.loaded
                ? this._calculatePlayDuration()
                : this._templet.once(
                    'loaded',
                    this,
                    this._onAnimationTempletLoaded
                  ),
              this._update(0);
          }),
          (n.playByFrame = function(t, e, i, n, a, r) {
            void 0 === t && (t = 0),
              void 0 === e && (e = 1),
              void 0 === i && (i = 2147483647),
              void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              void 0 === r && (r = 30);
            var s = 1e3 / r;
            this.play(t, e, i, n * s, a * s);
          }),
          (n.stop = function(t) {
            void 0 === t && (t = !0),
              t
                ? ((this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0),
                  (this._currentAnimationClipIndex = -1),
                  this.event('stopped'))
                : (this._stopWhenCircleFinish = !0);
          }),
          r(0, n, 'playEnd', function() {
            return this._playEnd;
          }),
          r(
            0,
            n,
            'templet',
            function() {
              return this._templet;
            },
            function(t) {
              0 === !this.state && this.stop(!0),
                this._templet !== t &&
                  ((this._templet = t),
                  t.loaded
                    ? this._computeFullKeyframeIndices()
                    : t.once(
                        'loaded',
                        this,
                        this._onTempletLoadedComputeFullKeyframeIndices,
                        [this._cachePlayRate, this._cacheFrameRate]
                      ));
            }
          ),
          r(0, n, 'playStart', function() {
            return this._playStart;
          }),
          r(0, n, 'playDuration', function() {
            return this._playDuration;
          }),
          r(0, n, 'state', function() {
            return -1 === this._currentAnimationClipIndex
              ? 0
              : this._paused
              ? 1
              : 2;
          }),
          r(0, n, 'currentKeyframeIndex', function() {
            return this._currentKeyframeIndex;
          }),
          r(0, n, 'overallDuration', function() {
            return this._overallDuration;
          }),
          r(0, n, 'currentFrameTime', function() {
            return this._currentFrameTime;
          }),
          r(0, n, 'currentAnimationClipIndex', function() {
            return this._currentAnimationClipIndex;
          }),
          r(0, n, 'currentPlayTime', function() {
            return this._currentTime + this._playStart;
          }),
          r(
            0,
            n,
            'cachePlayRate',
            function() {
              return this._cachePlayRate;
            },
            function(t) {
              this._cachePlayRate !== t &&
                ((this._cachePlayRate = t),
                this._templet &&
                  (this._templet.loaded
                    ? this._computeFullKeyframeIndices()
                    : this._templet.once(
                        'loaded',
                        this,
                        this._onTempletLoadedComputeFullKeyframeIndices,
                        [t, this._cacheFrameRate]
                      )));
            }
          ),
          r(
            0,
            n,
            'cacheFrameRate',
            function() {
              return this._cacheFrameRate;
            },
            function(t) {
              this._cacheFrameRate !== t &&
                ((this._cacheFrameRate = t),
                (this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate),
                this._templet &&
                  (this._templet.loaded
                    ? this._computeFullKeyframeIndices()
                    : this._templet.once(
                        'loaded',
                        this,
                        this._onTempletLoadedComputeFullKeyframeIndices,
                        [this._cachePlayRate, t]
                      )));
            }
          ),
          r(0, n, 'currentTime', null, function(t) {
            if (
              -1 !== this._currentAnimationClipIndex &&
              this._templet &&
              this._templet.loaded
            ) {
              if (t < this._playStart || t > this._playEnd)
                throw new Error(
                  'AnimationPlayer:value must large than playStartTime,small than playEndTime.'
                );
              this._startUpdateLoopCount = x.loopCount;
              var e = this._cacheFrameRateInterval * this._cachePlayRate;
              (this._currentTime = t),
                (this._currentKeyframeIndex = Math.max(
                  Math.floor(this.currentPlayTime / e),
                  0
                )),
                (this._currentFrameTime = this._currentKeyframeIndex * e);
            }
          }),
          r(
            0,
            n,
            'paused',
            function() {
              return this._paused;
            },
            function(t) {
              (this._paused = t), t && this.event('paused');
            }
          ),
          r(0, n, 'cacheFrameRateInterval', function() {
            return this._cacheFrameRateInterval;
          }),
          r(0, n, 'destroyed', function() {
            return this._destroyed;
          }),
          e
        );
      })(),
      tt = (function(t) {
        function e() {
          e.__super.call(this),
            y.isConchNode &&
              (this.drawSkin = function(t) {
                t.transform || (t.transform = m.EMPTY),
                  this._addCmd([t]),
                  this.setSkinMesh &&
                    this.setSkinMesh(
                      t._ps,
                      t.mVBData,
                      t.mEleNum,
                      0,
                      t.mTexture,
                      t.transform
                    );
              });
        }
        a(e, 'laya.ani.GraphicsAni', u);
        return (
          (e.prototype.drawSkin = function(t) {
            var e = [t];
            this._saveToCmd(y._context._drawSkin, e);
          }),
          (e.create = function() {
            return e._caches.pop() || new e();
          }),
          (e.recycle = function(t) {
            t.clear(), e._caches.push(t);
          }),
          (e._caches = []),
          e
        );
      })(),
      et = (function(t) {
        function e() {
          e.__super.call(this), (this.mesh = new R());
        }
        a(e, 'laya.ani.bone.canvasmesh.SkinMeshCanvas', N);
        var i = e.prototype;
        return (
          (i.init2 = function(t, e, i, n, a) {
            this.transform && (this.transform = null);
            var r;
            i ? (r = i) : (r = []).push(0, 1, 3, 3, 1, 2),
              (this.mesh.texture = t),
              (this.mesh.indexes = r),
              (this.mesh.vertices = n),
              (this.mesh.uvs = a);
          }),
          (i.render = function(t, i, n) {
            this.mesh.texture &&
              (this.transform
                ? (this.transform.translate(i, n),
                  this.renderToContext(t),
                  this.transform.translate(-i, -n))
                : ((this.transform = e._tempMatrix),
                  this.transform.identity(),
                  this.transform.translate(i, n),
                  this.renderToContext(t),
                  this.transform.translate(-i, -n),
                  (this.transform = null)));
          }),
          n(e, [
            '_tempMatrix',
            function() {
              return (this._tempMatrix = new m());
            }
          ]),
          e
        );
      })(),
      it = (function(t) {
        function e() {
          (this._aniMap = {}),
            (this.unfixedLastAniIndex = -1),
            e.__super.call(this),
            (this._anis = new Array());
        }
        a(e, 'laya.ani.AnimationTemplet', v);
        var n = e.prototype;
        return (
          (n.parse = function(t) {
            var e = new h(t);
            (this._aniVersion = e.readUTFString()), E.parse(this, e);
          }),
          (n._calculateKeyFrame = function(t, e, i) {
            var n = t.keyFrame;
            n[e] = n[0];
            for (var a = 0; a < e; a++) {
              var r = n[a];
              r.nextData = 0 === r.duration ? r.data : n[a + 1].data;
            }
            n.length--;
          }),
          (n.onAsynLoaded = function(t, e, i) {
            var n = new h(e);
            switch (
              ((this._aniVersion = n.readUTFString()), this._aniVersion)
            ) {
              case 'LAYAANIMATION:02':
                L.parse(this, n);
                break;
              default:
                E.parse(this, n);
            }
            this._endLoaded();
          }),
          (n.disposeResource = function() {
            (this._aniVersion = null),
              (this._anis = null),
              (this._aniMap = null),
              (this._publicExtData = null),
              (this.unfixedCurrentFrameIndexes = null),
              (this.unfixedCurrentTimes = null),
              (this.unfixedKeyframes = null),
              (this._aniClassName = null),
              (this._animationDatasCache = null);
          }),
          (n.getAnimationCount = function() {
            return this._anis.length;
          }),
          (n.getAnimation = function(t) {
            return this._anis[t];
          }),
          (n.getAniDuration = function(t) {
            return this._anis[t].playTime;
          }),
          (n.getNodes = function(t) {
            return this._anis[t].nodes;
          }),
          (n.getNodeIndexWithName = function(t, e) {
            return this._anis[t].bone3DMap[e];
          }),
          (n.getNodeCount = function(t) {
            return this._anis[t].nodes.length;
          }),
          (n.getTotalkeyframesLength = function(t) {
            return this._anis[t].totalKeyframeDatasLength;
          }),
          (n.getPublicExtData = function() {
            return this._publicExtData;
          }),
          (n.getAnimationDataWithCache = function(t, e, i, n) {
            var a = e[i];
            if (a) {
              var r = a[t];
              return r ? r[n] : null;
            }
            return null;
          }),
          (n.setAnimationDataWithCache = function(t, e, i, n, a) {
            var r = e[i] || (e[i] = {});
            (r[t] || (r[t] = []))[n] = a;
          }),
          (n.getOriginalData = function(t, i, n, a, r) {
            for (
              var s = this._anis[t].nodes, o = 0, l = 0, h = s.length, c = 0;
              l < h;
              l++
            ) {
              var u,
                _ = s[l];
              (u = _.keyFrame[n[l][a]]), (_.dataOffset = c);
              var d = r - u.startTime,
                f = _.lerpType;
              if (f)
                switch (f) {
                  case 0:
                  case 1:
                    for (o = 0; o < _.keyframeWidth; )
                      o += _.interpolationMethod[o](
                        _,
                        o,
                        i,
                        c + o,
                        u.data,
                        d,
                        null,
                        u.duration,
                        u.nextData
                      );
                    break;
                  case 2:
                    var p = u.interpolationData,
                      m = p.length,
                      g = 0;
                    for (o = 0; o < m; ) {
                      var y = p[o];
                      switch (y) {
                        case 6:
                        case 7:
                          o += e.interpolation[y](
                            _,
                            g,
                            i,
                            c + g,
                            u.data,
                            d,
                            null,
                            u.duration,
                            u.nextData,
                            p,
                            o + 1
                          );
                          break;
                        default:
                          o += e.interpolation[y](
                            _,
                            g,
                            i,
                            c + g,
                            u.data,
                            d,
                            null,
                            u.duration,
                            u.nextData
                          );
                      }
                      g++;
                    }
                }
              else
                for (o = 0; o < _.keyframeWidth; )
                  o += _.interpolationMethod[o](
                    _,
                    o,
                    i,
                    c + o,
                    u.data,
                    d,
                    null,
                    u.duration,
                    u.nextData
                  );
              c += _.keyframeWidth;
            }
          }),
          (n.getNodesCurrentFrameIndex = function(t, e) {
            var i = this._anis[t].nodes;
            t !== this.unfixedLastAniIndex &&
              ((this.unfixedCurrentFrameIndexes = new Uint32Array(i.length)),
              (this.unfixedCurrentTimes = new Float32Array(i.length)),
              (this.unfixedLastAniIndex = t));
            for (var n = 0, a = i.length; n < a; n++) {
              var r = i[n];
              for (
                e < this.unfixedCurrentTimes[n] &&
                  (this.unfixedCurrentFrameIndexes[n] = 0),
                  this.unfixedCurrentTimes[n] = e;
                this.unfixedCurrentFrameIndexes[n] < r.keyFrame.length &&
                !(
                  r.keyFrame[this.unfixedCurrentFrameIndexes[n]].startTime >
                  this.unfixedCurrentTimes[n]
                );

              )
                this.unfixedCurrentFrameIndexes[n]++;
              this.unfixedCurrentFrameIndexes[n]--;
            }
            return this.unfixedCurrentFrameIndexes;
          }),
          (n.getOriginalDataUnfixedRate = function(t, i, n) {
            var a = this._anis[t].nodes;
            t !== this.unfixedLastAniIndex &&
              ((this.unfixedCurrentFrameIndexes = new Uint32Array(a.length)),
              (this.unfixedCurrentTimes = new Float32Array(a.length)),
              (this.unfixedKeyframes = s(a.length)),
              (this.unfixedLastAniIndex = t));
            for (var r = 0, o = 0, l = a.length, h = 0; o < l; o++) {
              var c = a[o];
              for (
                n < this.unfixedCurrentTimes[o] &&
                  (this.unfixedCurrentFrameIndexes[o] = 0),
                  this.unfixedCurrentTimes[o] = n;
                this.unfixedCurrentFrameIndexes[o] < c.keyFrame.length &&
                !(
                  c.keyFrame[this.unfixedCurrentFrameIndexes[o]].startTime >
                  this.unfixedCurrentTimes[o]
                );

              )
                (this.unfixedKeyframes[o] =
                  c.keyFrame[this.unfixedCurrentFrameIndexes[o]]),
                  this.unfixedCurrentFrameIndexes[o]++;
              var u = this.unfixedKeyframes[o];
              c.dataOffset = h;
              var _ = n - u.startTime;
              if (c.lerpType)
                switch (c.lerpType) {
                  case 0:
                  case 1:
                    for (r = 0; r < c.keyframeWidth; )
                      r += c.interpolationMethod[r](
                        c,
                        r,
                        i,
                        h + r,
                        u.data,
                        _,
                        null,
                        u.duration,
                        u.nextData
                      );
                    break;
                  case 2:
                    var d = u.interpolationData,
                      f = d.length,
                      p = 0;
                    for (r = 0; r < f; ) {
                      var m = d[r];
                      switch (m) {
                        case 6:
                        case 7:
                          r += e.interpolation[m](
                            c,
                            p,
                            i,
                            h + p,
                            u.data,
                            _,
                            null,
                            u.duration,
                            u.nextData,
                            d,
                            r + 1
                          );
                          break;
                        default:
                          r += e.interpolation[m](
                            c,
                            p,
                            i,
                            h + p,
                            u.data,
                            _,
                            null,
                            u.duration,
                            u.nextData
                          );
                      }
                      p++;
                    }
                }
              else
                for (r = 0; r < c.keyframeWidth; )
                  r += c.interpolationMethod[r](
                    c,
                    r,
                    i,
                    h + r,
                    u.data,
                    _,
                    null,
                    u.duration,
                    u.nextData
                  );
              h += c.keyframeWidth;
            }
          }),
          (e._LinearInterpolation_0 = function(t, e, i, n, a, r, s, o, l, h) {
            var c = 0 === o ? 0 : r / o;
            return (i[n] = (1 - c) * a[e] + c * l[e]), 1;
          }),
          (e._QuaternionInterpolation_1 = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h
          ) {
            var c = 0 === o ? 0 : r / o;
            return p.slerpQuaternionArray(a, e, l, e, c, i, n), 4;
          }),
          (e._AngleInterpolation_2 = function(t, e, i, n, a, r, s, o, l, h) {
            return 0;
          }),
          (e._RadiansInterpolation_3 = function(t, e, i, n, a, r, s, o, l, h) {
            return 0;
          }),
          (e._Matrix4x4Interpolation_4 = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h
          ) {
            for (var c = 0; c < 16; c++, e++) i[n + c] = a[e] + r * s[e];
            return 16;
          }),
          (e._NoInterpolation_5 = function(t, e, i, n, a, r, s, o, l, h) {
            return (i[n] = a[e]), 1;
          }),
          (e._BezierInterpolation_6 = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h,
            c
          ) {
            return (
              void 0 === c && (c = 0),
              (i[n] =
                a[e] +
                (l[e] - a[e]) *
                  Q.getBezierRate(r / o, h[c], h[c + 1], h[c + 2], h[c + 3])),
              5
            );
          }),
          (e._BezierInterpolation_7 = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h,
            c
          ) {
            return (
              void 0 === c && (c = 0),
              (i[n] =
                h[c + 4] +
                h[c + 5] *
                  Q.getBezierRate(
                    (0.001 * r + h[c + 6]) / h[c + 7],
                    h[c],
                    h[c + 1],
                    h[c + 2],
                    h[c + 3]
                  )),
              9
            );
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.interpolation = [
            e._LinearInterpolation_0,
            e._QuaternionInterpolation_1,
            e._AngleInterpolation_2,
            e._RadiansInterpolation_3,
            e._Matrix4x4Interpolation_4,
            e._NoInterpolation_5,
            e._BezierInterpolation_6,
            e._BezierInterpolation_7
          ]),
          e
        );
      })(),
      nt =
        ((function(t) {
          function e() {
            (this.isCached = !1),
              (this.canvas = null),
              (this.tex = null),
              (this.rec = null),
              e.__super.call(this);
          }
          a(e, 'laya.ani.bone.canvasmesh.CacheAbleSkinMesh', et);
          var i = e.prototype;
          (i.getCanvasPic = function() {
            var t = new _('2D'),
              i = t.getContext('2d');
            (this.rec = this.mesh.getBounds()),
              t.size(this.rec.width, this.rec.height);
            var n;
            return (
              (n = this.transform),
              (this.transform = e.tempMt),
              this.transform.identity(),
              this.transform.translate(-this.rec.x, -this.rec.y),
              this.renderToContext(i),
              this.transform.translate(+this.rec.x, +this.rec.y),
              (this.transform = n),
              new I(t)
            );
          }),
            (i.render = function(t, e, i) {
              this.mesh.texture &&
                (this.isCached ||
                  ((this.isCached = !0), (this.tex = this.getCanvasPic())),
                this.transform
                  ? (this.transform.translate(e, i),
                    this._renderTextureToContext(t),
                    this.transform.translate(-e, -i))
                  : ((this.transform = et._tempMatrix),
                    this.transform.identity(),
                    this.transform.translate(e, i),
                    this._renderTextureToContext(t),
                    this.transform.translate(-e, -i),
                    (this.transform = null)));
            }),
            (i._renderTextureToContext = function(t) {
              (this.context = t.ctx || t), t.save();
              var e;
              if (((e = this.tex), this.transform)) {
                var i = this.transform;
                t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
              }
              (this.rec = this.mesh.getBounds()),
                t.translate(this.rec.x, this.rec.y),
                t.drawTexture(e, 0, 0, e.width, e.height, 0, 0),
                t.restore();
            }),
            n(e, [
              'tempMt',
              function() {
                return (this.tempMt = new m());
              }
            ]);
        })(),
        (function(t) {
          function e() {
            (this.cacheOK = !1),
              (this.cacheCmdOK = !1),
              (this.transformCmds = []),
              (this.drawCmds = []),
              e.__super.call(this),
              (this.tempMesh = new R());
          }
          a(e, 'laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas', t);
          var i = e.prototype;
          return (
            (i.init2 = function(e, i, n, a, r) {
              t.prototype.init2.call(this, e, i, n, a, r),
                (this.cacheOK = !1),
                (this.cacheCmdOK = !1),
                (this.transformCmds.length = 6),
                (this.drawCmds.length = 9);
            }),
            (i.renderToContext = function(t) {
              if (((this.context = t.ctx || t), this.mesh)) {
                if (this.mesh.uvs.length <= 8)
                  return void (0 == this.mode
                    ? this._renderWithIndexes(this.mesh)
                    : this._renderNoIndexes(this.mesh));
                this.cacheOK ||
                  ((this.tempMesh.texture = this.mesh.texture),
                  (this.tempMesh.uvs = this.mesh.texture.uv),
                  (this.tempMesh.vertices = H.solveMesh(
                    this.mesh,
                    this.tempMesh.vertices
                  )),
                  (this.cacheOK = !0)),
                  0 == this.mode
                    ? this._renderWithIndexes(this.tempMesh)
                    : this._renderNoIndexes(this.tempMesh);
              }
            }),
            (i._renderWithIndexes = function(t) {
              if (this.cacheCmdOK) this.renderByCache(t);
              else {
                var e = t.indexes,
                  i = 0,
                  n = e.length;
                for (n > 1 && (n = 1), i = 0; i < n; i += 3) {
                  var a = 2 * e[i],
                    r = 2 * e[i + 1],
                    s = 2 * e[i + 2];
                  this._renderDrawTriangle(t, a, r, s);
                }
                this.cacheCmdOK = !0;
              }
            }),
            (i._renderDrawTriangle = function(t, e, i, n) {
              var a = this.context,
                r = t.uvs,
                s = t.vertices,
                o = t.texture,
                l = o.bitmap,
                h = l.source,
                c = o.width,
                u = o.height,
                _ = l.width,
                d = l.height,
                f = NaN,
                p = NaN,
                m = NaN,
                g = NaN,
                y = NaN,
                v = NaN;
              if (t.useUvTransform) {
                var b = t.uvTransform;
                (f = (r[e] * b.a + r[e + 1] * b.c + b.tx) * _),
                  (p = (r[i] * b.a + r[i + 1] * b.c + b.tx) * _),
                  (m = (r[n] * b.a + r[n + 1] * b.c + b.tx) * _),
                  (g = (r[e] * b.b + r[e + 1] * b.d + b.ty) * d),
                  (y = (r[i] * b.b + r[i + 1] * b.d + b.ty) * d),
                  (v = (r[n] * b.b + r[n + 1] * b.d + b.ty) * d);
              } else
                (f = r[e] * _),
                  (p = r[i] * _),
                  (m = r[n] * _),
                  (g = r[e + 1] * d),
                  (y = r[i + 1] * d),
                  (v = r[n + 1] * d);
              var w = s[e],
                x = s[i],
                I = s[n],
                C = s[e + 1],
                S = s[i + 1],
                T = s[n + 1],
                M = 1 / (f * y + g * m + p * v - y * m - g * p - f * v),
                E = w * y + g * I + x * v - y * I - g * x - w * v,
                L = f * x + w * m + p * I - x * m - w * p - f * I,
                D =
                  f * y * I +
                  g * x * m +
                  w * p * v -
                  w * y * m -
                  g * p * I -
                  f * x * v,
                A = C * y + g * T + S * v - y * T - g * S - C * v,
                N = f * S + C * m + p * T - S * m - C * p - f * T,
                R =
                  f * y * T +
                  g * S * m +
                  C * p * v -
                  C * y * m -
                  g * p * T -
                  f * S * v;
              if (
                ((this.transformCmds[0] = E * M),
                (this.transformCmds[1] = A * M),
                (this.transformCmds[2] = L * M),
                (this.transformCmds[3] = N * M),
                (this.transformCmds[4] = D * M),
                (this.transformCmds[5] = R * M),
                (this.drawCmds[0] = h),
                (this.drawCmds[1] = o.uv[0] * _),
                (this.drawCmds[2] = o.uv[1] * d),
                (this.drawCmds[3] = c),
                (this.drawCmds[4] = u),
                (this.drawCmds[5] = o.uv[0] * _),
                (this.drawCmds[6] = o.uv[1] * d),
                (this.drawCmds[7] = c),
                (this.drawCmds[8] = u),
                a.save(),
                this.transform)
              ) {
                var B = this.transform;
                a.transform(B.a, B.b, B.c, B.d, B.tx, B.ty);
              }
              a.transform.apply(a, this.transformCmds),
                a.drawImage.apply(a, this.drawCmds),
                a.restore();
            }),
            (i.renderByCache = function(t) {
              var e = this.context;
              if ((e.save(), this.transform)) {
                var i = this.transform;
                e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
              }
              e.transform.apply(e, this.transformCmds),
                e.drawImage.apply(e, this.drawCmds),
                e.restore();
            }),
            e
          );
        })(et)),
      at = (function(t) {
        function e(t, i) {
          (this._templet = null),
            (this._player = null),
            (this._curOriginalData = null),
            (this._boneMatrixArray = []),
            (this._lastTime = 0),
            (this._currAniName = null),
            (this._currAniIndex = -1),
            (this._pause = !0),
            (this._aniClipIndex = -1),
            (this._clipIndex = -1),
            (this._skinIndex = 0),
            (this._skinName = 'default'),
            (this._aniMode = 0),
            (this._graphicsCache = null),
            (this._boneSlotDic = null),
            (this._bindBoneBoneSlotDic = null),
            (this._boneSlotArray = null),
            (this._index = -1),
            (this._total = -1),
            (this._indexControl = !1),
            (this._aniPath = null),
            (this._texturePath = null),
            (this._complete = null),
            (this._loadAniMode = 0),
            (this._yReverseMatrix = null),
            (this._ikArr = null),
            (this._tfArr = null),
            (this._pathDic = null),
            (this._rootBone = null),
            (this._boneList = null),
            (this._aniSectionDic = null),
            (this._eventIndex = 0),
            (this._drawOrderIndex = 0),
            (this._drawOrder = null),
            (this._lastAniClipIndex = -1),
            (this._lastUpdateAniClipIndex = -1),
            e.__super.call(this),
            void 0 === i && (i = 0),
            t && this.init(t, i);
        }
        a(e, 'laya.ani.bone.Skeleton', t);
        var n = e.prototype;
        return (
          (n.init = function(t, e) {
            void 0 === e && (e = 0);
            var i = 0,
              n = 0;
            if (1 == e)
              for (
                this._graphicsCache = [], i = 0, n = t.getAnimationCount();
                i < n;
                i++
              )
                this._graphicsCache.push([]);
            if (
              ((this._yReverseMatrix = t.yReverseMatrix),
              (this._aniMode = e),
              (this._templet = t),
              (this._player = new $()),
              (this._player.cacheFrameRate = t.rate),
              (this._player.templet = t),
              this._player.play(),
              this._parseSrcBoneMatrix(),
              (this._boneList = t.mBoneArr),
              (this._rootBone = t.mRootBone),
              (this._aniSectionDic = t.aniSectionDic),
              t.ikArr.length > 0)
            )
              for (this._ikArr = [], i = 0, n = t.ikArr.length; i < n; i++)
                this._ikArr.push(new V(t.ikArr[i], this._boneList));
            if (t.pathArr.length > 0) {
              var a, r;
              null == this._pathDic && (this._pathDic = {});
              var s;
              for (i = 0, n = t.pathArr.length; i < n; i++)
                (a = t.pathArr[i]),
                  (r = new G(a, this._boneList)),
                  (s = this._boneSlotDic[a.name]) &&
                    ((r = new G(a, this._boneList)).target = s),
                  (this._pathDic[a.name] = r);
            }
            if (t.tfArr.length > 0)
              for (this._tfArr = [], i = 0, n = t.tfArr.length; i < n; i++)
                this._tfArr.push(new q(t.tfArr[i], this._boneList));
            if (t.skinDataArray.length > 0) {
              var o = this._templet.skinDataArray[this._skinIndex];
              this._skinName = o.name;
            }
            this._player.on('played', this, this._onPlay),
              this._player.on('stopped', this, this._onStop),
              this._player.on('paused', this, this._onPause);
          }),
          (n.load = function(t, e, n) {
            void 0 === n && (n = 0),
              (this._aniPath = t),
              (this._complete = e),
              (this._loadAniMode = n),
              i.loader.load(
                [{ url: t, type: 'arraybuffer' }],
                d.create(this, this._onLoaded)
              );
          }),
          (n._onLoaded = function() {
            var t = f.getRes(this._aniPath);
            if (null != t) {
              null == rt.TEMPLET_DICTIONARY && (rt.TEMPLET_DICTIONARY = {});
              var e;
              (e = rt.TEMPLET_DICTIONARY[this._aniPath])
                ? e.isParseFail
                  ? this._parseFail()
                  : e.isParserComplete
                  ? this._parseComplete()
                  : (e.on('complete', this, this._parseComplete),
                    e.on('error', this, this._parseFail))
                : ((e = new rt())._setUrl(this._aniPath),
                  (rt.TEMPLET_DICTIONARY[this._aniPath] = e),
                  e.on('complete', this, this._parseComplete),
                  e.on('error', this, this._parseFail),
                  (e.isParserComplete = !1),
                  e.parseData(null, t));
            }
          }),
          (n._parseComplete = function() {
            var t = rt.TEMPLET_DICTIONARY[this._aniPath];
            t && (this.init(t, this._loadAniMode), this.play(0, !0)),
              this._complete && this._complete.runWith(this);
          }),
          (n._parseFail = function() {
            console.log('[Error]:' + this._aniPath + '解析失败');
          }),
          (n._onPlay = function() {
            this.event('played');
          }),
          (n._onStop = function() {
            var t,
              e = this._templet.eventAniArr[this._aniClipIndex];
            if (e && this._eventIndex < e.length)
              for (; this._eventIndex < e.length; this._eventIndex++)
                (t = e[this._eventIndex]).time >= this._player.playStart &&
                  t.time <= this._player.playEnd &&
                  this.event('label', t);
            (this._eventIndex = 0),
              (this._drawOrder = null),
              this.event('stopped');
          }),
          (n._onPause = function() {
            this.event('paused');
          }),
          (n._parseSrcBoneMatrix = function() {
            var t = 0,
              e = 0;
            for (e = this._templet.srcBoneMatrixArr.length, t = 0; t < e; t++)
              this._boneMatrixArray.push(new m());
            if (0 == this._aniMode)
              (this._boneSlotDic = this._templet.boneSlotDic),
                (this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic),
                (this._boneSlotArray = this._templet.boneSlotArray);
            else {
              null == this._boneSlotDic && (this._boneSlotDic = {}),
                null == this._bindBoneBoneSlotDic &&
                  (this._bindBoneBoneSlotDic = {}),
                null == this._boneSlotArray && (this._boneSlotArray = []);
              var i,
                n,
                a = this._templet.boneSlotArray;
              for (t = 0, e = a.length; t < e; t++)
                (i = a[t]),
                  null == (n = this._bindBoneBoneSlotDic[i.parent]) &&
                    (this._bindBoneBoneSlotDic[i.parent] = n = []),
                  (this._boneSlotDic[i.name] = i = i.copy()),
                  n.push(i),
                  this._boneSlotArray.push(i);
            }
          }),
          (n._emitMissedEvents = function(t, e, i) {
            void 0 === i && (i = 0);
            var n = this._templet.eventAniArr[
              this._player.currentAnimationClipIndex
            ];
            if (n) {
              var a,
                r = 0,
                s = 0;
              for (s = n.length, r = i; r < s; r++)
                (a = n[r]).time >= this._player.playStart &&
                  a.time <= this._player.playEnd &&
                  this.event('label', a);
            }
          }),
          (n._update = function(t) {
            if (
              (void 0 === t && (t = !0),
              !(this._pause || (t && this._indexControl)))
            ) {
              var e = this.timer.currTimer,
                i = this._player.currentKeyframeIndex,
                n = e - this._lastTime;
              if (
                (t ? this._player._update(n) : (i = -1),
                (this._lastTime = e),
                this._player &&
                  ((this._index = this._clipIndex = this._player.currentKeyframeIndex),
                  !(
                    this._index < 0 ||
                    (n > 0 &&
                      this._clipIndex == i &&
                      this._lastUpdateAniClipIndex == this._aniClipIndex)
                  )))
              ) {
                (this._lastUpdateAniClipIndex = this._aniClipIndex),
                  i > this._clipIndex &&
                    0 != this._eventIndex &&
                    (this._emitMissedEvents(
                      this._player.playStart,
                      this._player.playEnd,
                      this._eventIndex
                    ),
                    (this._eventIndex = 0));
                var a,
                  r = this._templet.eventAniArr[this._aniClipIndex];
                r &&
                  this._eventIndex < r.length &&
                  ((a = r[this._eventIndex]).time >= this._player.playStart &&
                  a.time <= this._player.playEnd
                    ? this._player.currentPlayTime >= a.time &&
                      (this.event('label', a), this._eventIndex++)
                    : this._eventIndex++);
                var s;
                if (0 == this._aniMode) {
                  if (
                    (s = this._templet.getGrahicsDataWithCache(
                      this._aniClipIndex,
                      this._clipIndex
                    ))
                  )
                    return void (this.graphics != s && (this.graphics = s));
                  var o = 0,
                    l = 0;
                  for (
                    l = this._clipIndex;
                    !this._templet.getGrahicsDataWithCache(
                      this._aniClipIndex,
                      l - 1
                    ) && l > 0;

                  )
                    l--;
                  if (l < this._clipIndex)
                    for (o = l; o < this._clipIndex; o++)
                      this._createGraphics(o);
                } else if (1 == this._aniMode) {
                  if (
                    (s = this._getGrahicsDataWithCache(
                      this._aniClipIndex,
                      this._clipIndex
                    ))
                  )
                    return void (this.graphics != s && (this.graphics = s));
                  for (
                    l = this._clipIndex;
                    !this._getGrahicsDataWithCache(this._aniClipIndex, l - 1) &&
                    l > 0;

                  )
                    l--;
                  if (l < this._clipIndex)
                    for (o = l; o < this._clipIndex; o++)
                      this._createGraphics(o);
                }
                this._createGraphics();
              }
            }
          }),
          (n._createGraphics = function(t) {
            void 0 === t && (t = -1), -1 == t && (t = this._clipIndex);
            var e,
              i = t * this._player.cacheFrameRateInterval,
              n = this._templet.drawOrderAniArr[this._aniClipIndex];
            if (n && n.length > 0)
              for (
                this._drawOrderIndex = 0, e = n[this._drawOrderIndex];
                i >= e.time &&
                ((this._drawOrder = e.drawOrder),
                this._drawOrderIndex++,
                !(this._drawOrderIndex >= n.length));

              )
                e = n[this._drawOrderIndex];
            var a;
            0 == this._aniMode || 1 == this._aniMode
              ? (this.graphics = tt.create())
              : this.graphics instanceof laya.ani.GraphicsAni
              ? this.graphics.clear()
              : (this.graphics = tt.create()),
              (a = this.graphics);
            var r = this._templet.getNodes(this._aniClipIndex);
            this._templet.getOriginalData(
              this._aniClipIndex,
              this._curOriginalData,
              this._player._fullFrames[this._aniClipIndex],
              t,
              i
            );
            var s,
              o,
              l,
              c,
              u = this._aniSectionDic[this._aniClipIndex],
              _ = 0,
              d = 0,
              f = 0,
              p = 0,
              g = 0,
              y = this._templet.srcBoneMatrixArr.length;
            for (d = 0, g = u[0]; d < y; d++)
              (c = this._boneList[d]),
                (l = this._templet.srcBoneMatrixArr[d]),
                (c.resultTransform.scX = l.scX * this._curOriginalData[_++]),
                (c.resultTransform.skX = l.skX + this._curOriginalData[_++]),
                (c.resultTransform.skY = l.skY + this._curOriginalData[_++]),
                (c.resultTransform.scY = l.scY * this._curOriginalData[_++]),
                (c.resultTransform.x = l.x + this._curOriginalData[_++]),
                (c.resultTransform.y = l.y + this._curOriginalData[_++]),
                8 === this._templet.tMatrixDataLen &&
                  ((c.resultTransform.skewX =
                    l.skewX + this._curOriginalData[_++]),
                  (c.resultTransform.skewY =
                    l.skewY + this._curOriginalData[_++]));
            var v,
              b = {},
              w = {};
            for (g += u[1]; d < g; d++)
              (b[(v = r[d]).name] = this._curOriginalData[_++]),
                (w[v.name] = this._curOriginalData[_++]),
                this._curOriginalData[_++],
                this._curOriginalData[_++],
                this._curOriginalData[_++],
                this._curOriginalData[_++];
            var x = {},
              I = {};
            for (g += u[2]; d < g; d++)
              (x[(v = r[d]).name] = this._curOriginalData[_++]),
                (I[v.name] = this._curOriginalData[_++]),
                this._curOriginalData[_++],
                this._curOriginalData[_++],
                this._curOriginalData[_++],
                this._curOriginalData[_++];
            if (this._pathDic) {
              var C;
              for (g += u[3]; d < g; d++)
                if (((v = r[d]), (C = this._pathDic[v.name]))) {
                  switch (new h(v.extenData).getByte()) {
                    case 1:
                      C.position = this._curOriginalData[_++];
                      break;
                    case 2:
                      C.spacing = this._curOriginalData[_++];
                      break;
                    case 3:
                      (C.rotateMix = this._curOriginalData[_++]),
                        (C.translateMix = this._curOriginalData[_++]);
                  }
                }
            }
            if (
              (this._yReverseMatrix
                ? this._rootBone.update(this._yReverseMatrix)
                : this._rootBone.update(m.TEMP.identity()),
              this._ikArr)
            ) {
              var S;
              for (d = 0, g = this._ikArr.length; d < g; d++)
                (S = this._ikArr[d]),
                  x.hasOwnProperty(S.name) && (S.bendDirection = x[S.name]),
                  I.hasOwnProperty(S.name) && (S.mix = I[S.name]),
                  S.apply();
            }
            if (this._pathDic)
              for (var T in this._pathDic)
                (C = this._pathDic[T]).apply(this._boneList, a);
            if (this._tfArr) {
              for (d = 0, p = this._tfArr.length; d < p; d++)
                this._tfArr[d].apply();
            }
            for (d = 0, p = this._boneList.length; d < p; d++)
              if (
                ((c = this._boneList[d]),
                (o = this._bindBoneBoneSlotDic[c.name]),
                c.resultMatrix.copyTo(this._boneMatrixArray[d]),
                o)
              )
                for (f = 0, g = o.length; f < g; f++)
                  (s = o[f]) && s.setParentMatrix(c.resultMatrix);
            var M,
              E = {},
              L = this._templet.deformAniArr;
            if (L && L.length > 0) {
              if (this._lastAniClipIndex != this._aniClipIndex)
                for (
                  this._lastAniClipIndex = this._aniClipIndex,
                    d = 0,
                    g = this._boneSlotArray.length;
                  d < g;
                  d++
                )
                  (s = this._boneSlotArray[d]).deformData = null;
              var D = L[this._aniClipIndex];
              (M = D.default), this._setDeform(M, E, this._boneSlotArray, i);
              var A;
              for (A in D)
                'default' != A &&
                  A != this._skinName &&
                  ((M = D[A]), this._setDeform(M, E, this._boneSlotArray, i));
              (M = D[this._skinName]),
                this._setDeform(M, E, this._boneSlotArray, i);
            }
            var N, R, B;
            if (this._drawOrder)
              for (d = 0, g = this._drawOrder.length; d < g; d++)
                (N = b[(s = this._boneSlotArray[this._drawOrder[d]]).name]),
                  (R = w[s.name]),
                  isNaN(R) || (a.save(), a.alpha(R)),
                  isNaN(N) ||
                    -2 == N ||
                    (this._templet.attachmentNames
                      ? s.showDisplayByName(this._templet.attachmentNames[N])
                      : s.showDisplayByIndex(N)),
                  E[this._drawOrder[d]]
                    ? ((B = E[this._drawOrder[d]]),
                      s.currDisplayData && B[s.currDisplayData.attachmentName]
                        ? (s.deformData = B[s.currDisplayData.attachmentName])
                        : (s.deformData = null))
                    : (s.deformData = null),
                  isNaN(R)
                    ? s.draw(a, this._boneMatrixArray, 2 == this._aniMode)
                    : s.draw(a, this._boneMatrixArray, 2 == this._aniMode, R),
                  isNaN(R) || a.restore();
            else
              for (d = 0, g = this._boneSlotArray.length; d < g; d++)
                (N = b[(s = this._boneSlotArray[d]).name]),
                  (R = w[s.name]),
                  isNaN(R) || (a.save(), a.alpha(R)),
                  isNaN(N) ||
                    -2 == N ||
                    (this._templet.attachmentNames
                      ? s.showDisplayByName(this._templet.attachmentNames[N])
                      : s.showDisplayByIndex(N)),
                  E[d]
                    ? ((B = E[d]),
                      s.currDisplayData && B[s.currDisplayData.attachmentName]
                        ? (s.deformData = B[s.currDisplayData.attachmentName])
                        : (s.deformData = null))
                    : (s.deformData = null),
                  isNaN(R)
                    ? s.draw(a, this._boneMatrixArray, 2 == this._aniMode)
                    : s.draw(a, this._boneMatrixArray, 2 == this._aniMode, R),
                  isNaN(R) || a.restore();
            0 == this._aniMode
              ? this._templet.setGrahicsDataWithCache(this._aniClipIndex, t, a)
              : 1 == this._aniMode &&
                this._setGrahicsDataWithCache(this._aniClipIndex, t, a);
          }),
          (n._setDeform = function(t, e, i, n) {
            if (t) {
              var a,
                r,
                s,
                o = 0,
                l = 0,
                h = 0;
              if (t)
                for (o = 0, l = t.deformSlotDataList.length; o < l; o++)
                  for (
                    a = t.deformSlotDataList[o], h = 0;
                    h < a.deformSlotDisplayList.length;
                    h++
                  )
                    (s = i[(r = a.deformSlotDisplayList[h]).slotIndex]),
                      r.apply(n, s),
                      e[r.slotIndex] || (e[r.slotIndex] = {}),
                      (e[r.slotIndex][r.attachment] = r.deformData);
            }
          }),
          (n.getAnimNum = function() {
            return this._templet.getAnimationCount();
          }),
          (n.getAniNameByIndex = function(t) {
            return this._templet.getAniNameByIndex(t);
          }),
          (n.getSlotByName = function(t) {
            return this._boneSlotDic[t];
          }),
          (n.showSkinByName = function(t, e) {
            void 0 === e && (e = !0),
              this.showSkinByIndex(this._templet.getSkinIndexByName(t), e);
          }),
          (n.showSkinByIndex = function(t, e) {
            void 0 === e && (e = !0);
            for (var i = 0; i < this._boneSlotArray.length; i++)
              this._boneSlotArray[i].showSlotData(null, e);
            if (this._templet.showSkinByIndex(this._boneSlotDic, t, e)) {
              var n = this._templet.skinDataArray[t];
              (this._skinIndex = t), (this._skinName = n.name);
            }
            this._clearCache();
          }),
          (n.showSlotSkinByIndex = function(t, e) {
            if (0 != this._aniMode) {
              var i = this.getSlotByName(t);
              i && i.showDisplayByIndex(e), this._clearCache();
            }
          }),
          (n.showSlotSkinByName = function(t, e) {
            if (0 != this._aniMode) {
              var i = this.getSlotByName(t);
              i && i.showDisplayByName(e), this._clearCache();
            }
          }),
          (n.replaceSlotSkinName = function(t, e, i) {
            if (0 != this._aniMode) {
              var n = this.getSlotByName(t);
              n && n.replaceDisplayByName(e, i), this._clearCache();
            }
          }),
          (n.replaceSlotSkinByIndex = function(t, e, i) {
            if (0 != this._aniMode) {
              var n = this.getSlotByName(t);
              n && n.replaceDisplayByIndex(e, i), this._clearCache();
            }
          }),
          (n.setSlotSkin = function(t, e) {
            if (0 != this._aniMode) {
              var i = this.getSlotByName(t);
              i && i.replaceSkin(e), this._clearCache();
            }
          }),
          (n._clearCache = function() {
            if (1 == this._aniMode)
              for (var t = 0, e = this._graphicsCache.length; t < e; t++) {
                for (var i = 0, n = this._graphicsCache[t].length; i < n; i++) {
                  var a = this._graphicsCache[t][i];
                  a != this.graphics && tt.recycle(a);
                }
                this._graphicsCache[t].length = 0;
              }
          }),
          (n.play = function(t, e, i, n, a, r) {
            void 0 === i && (i = !0),
              void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              void 0 === r && (r = !0),
              (this._indexControl = !1);
            var s = -1,
              o = NaN;
            if (((o = e ? 2147483647 : 0), 'string' == typeof t))
              for (
                var h = 0, c = this._templet.getAnimationCount();
                h < c;
                h++
              ) {
                var u = this._templet.getAnimation(h);
                if (u && t == u.name) {
                  s = h;
                  break;
                }
              }
            else s = t;
            s > -1 &&
              s < this.getAnimNum() &&
              ((this._aniClipIndex = s),
              (i || this._pause || this._currAniIndex != s) &&
                ((this._currAniIndex = s),
                (this._curOriginalData = new Float32Array(
                  this._templet.getTotalkeyframesLength(s)
                )),
                (this._drawOrder = null),
                (this._eventIndex = 0),
                this._player.play(s, this._player.playbackRate, o, n, a),
                r &&
                  this._templet.showSkinByIndex(
                    this._boneSlotDic,
                    this._skinIndex
                  ),
                this._pause &&
                  ((this._pause = !1),
                  (this._lastTime = l.now()),
                  this.timer.frameLoop(1, this, this._update, null, !0)),
                this._update()));
          }),
          (n.stop = function() {
            this._pause ||
              ((this._pause = !0),
              this._player && this._player.stop(!0),
              this.timer.clear(this, this._update));
          }),
          (n.playbackRate = function(t) {
            this._player && (this._player.playbackRate = t);
          }),
          (n.paused = function() {
            this._pause ||
              ((this._pause = !0),
              this._player && (this._player.paused = !0),
              this.timer.clear(this, this._update));
          }),
          (n.resume = function() {
            (this._indexControl = !1),
              this._pause &&
                ((this._pause = !1),
                this._player && (this._player.paused = !1),
                (this._lastTime = l.now()),
                this.timer.frameLoop(1, this, this._update, null, !0));
          }),
          (n._getGrahicsDataWithCache = function(t, e) {
            return this._graphicsCache[t][e];
          }),
          (n._setGrahicsDataWithCache = function(t, e, i) {
            this._graphicsCache[t][e] = i;
          }),
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              (this._templet = null),
              this._player && this._player.offAll(),
              (this._player = null),
              (this._curOriginalData = null),
              (this._boneMatrixArray.length = 0),
              (this._lastTime = 0),
              this.timer.clear(this, this._update);
          }),
          r(
            0,
            n,
            'url',
            function() {
              return this._aniPath;
            },
            function(t) {
              this.load(t);
            }
          ),
          r(
            0,
            n,
            'index',
            function() {
              return this._index;
            },
            function(t) {
              this.player &&
                ((this._index = t),
                (this._player.currentTime =
                  (1e3 * this._index) / this._player.cacheFrameRate),
                (this._indexControl = !0),
                this._update(!1));
            }
          ),
          r(0, n, 'total', function() {
            return (
              this._templet && this._player
                ? (this._total = Math.floor(
                    (this._templet.getAniDuration(
                      this._player.currentAnimationClipIndex
                    ) /
                      1e3) *
                      this._player.cacheFrameRate
                  ))
                : (this._total = -1),
              this._total
            );
          }),
          r(0, n, 'templet', function() {
            return this._templet;
          }),
          r(0, n, 'player', function() {
            return this._player;
          }),
          (e.useSimpleMeshInCanvas = !1),
          e
        );
      })(w),
      rt =
        ((function(t) {
          function e(t) {
            (this._start = 0),
              (this._Pos = 0),
              (this._data = null),
              (this._curIndex = 0),
              (this._preIndex = 0),
              (this._playIndex = 0),
              (this._playing = !1),
              (this._ended = !0),
              (this._count = 0),
              (this._ids = null),
              (this._loadedImage = {}),
              (this._idOfSprite = null),
              (this._parentMovieClip = null),
              (this._movieClipList = null),
              (this._labels = null),
              (this.basePath = null),
              (this._atlasPath = null),
              (this._url = null),
              (this._isRoot = !1),
              (this._completeHandler = null),
              (this._endFrame = -1),
              (this.interval = 30),
              (this.loop = !1),
              e.__super.call(this),
              (this._ids = {}),
              (this._idOfSprite = []),
              this._reset(),
              (this._playing = !1),
              (this._parentMovieClip = t),
              t
                ? ((this._isRoot = !1),
                  (this._movieClipList = t._movieClipList),
                  this._movieClipList.push(this))
                : ((this._movieClipList = [this]),
                  (this._isRoot = !0),
                  this._setUpNoticeType(1));
          }
          a(e, 'laya.ani.swf.MovieClip', t);
          var n = e.prototype;
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              this._clear(),
              t.prototype.destroy.call(this, e);
          }),
            (n._setDisplay = function(e) {
              t.prototype._setDisplay.call(this, e),
                this._isRoot && this._$3__onDisplay(e);
            }),
            (n._$3__onDisplay = function(t) {
              t
                ? this.timer.loop(this.interval, this, this.updates, null, !0)
                : this.timer.clear(this, this.updates);
            }),
            (n.updates = function() {
              if (!this._parentMovieClip) {
                var t = 0,
                  e = 0;
                for (e = this._movieClipList.length, t = 0; t < e; t++)
                  this._movieClipList[t] && this._movieClipList[t]._update();
              }
            }),
            (n.addLabel = function(t, e) {
              this._labels || (this._labels = {}), (this._labels[e] = t);
            }),
            (n.removeLabel = function(t) {
              if (t) {
                if (!this._labels)
                  for (var e in this._labels)
                    if (this._labels[e] === t) {
                      delete this._labels[e];
                      break;
                    }
              } else this._labels = null;
            }),
            (n._update = function() {
              if (this._data && this._playing) {
                if ((this._playIndex++, this._playIndex >= this._count)) {
                  if (!this.loop) return this._playIndex--, void this.stop();
                  this._playIndex = 0;
                }
                if (
                  (this._parse(this._playIndex),
                  this._labels &&
                    this._labels[this._playIndex] &&
                    this.event('label', this._labels[this._playIndex]),
                  -1 != this._endFrame && this._endFrame == this._playIndex)
                ) {
                  if (((this._endFrame = -1), null != this._completeHandler)) {
                    var t = this._completeHandler;
                    (this._completeHandler = null), t.run();
                  }
                  this.stop();
                }
              }
            }),
            (n.stop = function() {
              this._playing = !1;
            }),
            (n.gotoAndStop = function(t) {
              (this.index = t), this.stop();
            }),
            (n._clear = function() {
              if (
                (this.stop(),
                (this._idOfSprite.length = 0),
                !this._parentMovieClip)
              ) {
                this.timer.clear(this, this.updates);
                var t = 0,
                  e = 0;
                for (e = this._movieClipList.length, t = 0; t < e; t++)
                  this._movieClipList[t] != this &&
                    this._movieClipList[t]._clear();
                this._movieClipList.length = 0;
              }
              this._atlasPath && f.clearRes(this._atlasPath);
              var i;
              for (i in this._loadedImage)
                this._loadedImage[i] &&
                  (f.clearRes(i), (this._loadedImage[i] = !1));
              this.removeChildren(),
                (this.graphics = null),
                (this._parentMovieClip = null);
            }),
            (n.play = function(t, e) {
              void 0 === t && (t = 0),
                void 0 === e && (e = !0),
                (this.loop = e),
                (this._playing = !0),
                this._data && this._displayFrame(t);
            }),
            (n._displayFrame = function(t) {
              void 0 === t && (t = -1),
                -1 != t &&
                  (this._curIndex > t && this._reset(), this._parse(t));
            }),
            (n._reset = function(t) {
              void 0 === t && (t = !0),
                t && 1 != this._curIndex && this.removeChildren(),
                (this._preIndex = this._curIndex = -1),
                (this._Pos = this._start);
            }),
            (n._parse = function(t) {
              var i,
                n,
                a,
                r = 0,
                s = 0,
                o = 0,
                l = !1,
                h = this._idOfSprite,
                c = this._data;
              for (
                this._ended && this._reset(),
                  c.pos = this._Pos,
                  this._ended = !1,
                  this._playIndex = t,
                  this._curIndex > t &&
                    t < this._preIndex &&
                    (this._reset(!0), (c.pos = this._Pos));
                this._curIndex <= t && !this._ended;

              )
                switch (c.getUint16()) {
                  case 12:
                    if (
                      ((r = c.getUint16()),
                      (s = this._ids[c.getUint16()]),
                      (this._Pos = c.pos),
                      (c.pos = s),
                      0 == (o = c.getUint8()))
                    ) {
                      var u = c.getUint16();
                      if (!(n = h[r])) {
                        n = h[r] = new w();
                        var _ = new w();
                        _.loadImage(this.basePath + u + '.png'),
                          (this._loadedImage[this.basePath + u + '.png'] = !0),
                          n.addChild(_),
                          _.size(c.getFloat32(), c.getFloat32());
                        var d = c._getMatrix();
                        _.transform = d;
                      }
                      n.alpha = 1;
                    } else
                      1 == o &&
                        ((i = h[r]) ||
                          ((h[r] = i = new e(this)),
                          (i.interval = this.interval),
                          (i._ids = this._ids),
                          (i.basePath = this.basePath),
                          i._setData(c, s),
                          i._initState(),
                          i.play(0)),
                        (i.alpha = 1));
                    c.pos = this._Pos;
                    break;
                  case 3:
                    var f = h[c.getUint16()];
                    f &&
                      (this.addChild(f), (f.zOrder = c.getUint16()), (l = !0));
                    break;
                  case 4:
                    (f = h[c.getUint16()]) && f.removeSelf();
                    break;
                  case 5:
                    h[c.getUint16()][
                      e._ValueList[c.getUint16()]
                    ] = c.getFloat32();
                    break;
                  case 6:
                    h[c.getUint16()].visible = c.getUint8() > 0;
                    break;
                  case 7:
                    var p = (n = h[c.getUint16()]).transform || m.create();
                    p.setTo(
                      c.getFloat32(),
                      c.getFloat32(),
                      c.getFloat32(),
                      c.getFloat32(),
                      c.getFloat32(),
                      c.getFloat32()
                    ),
                      (n.transform = p);
                    break;
                  case 8:
                    h[c.getUint16()].setPos(c.getFloat32(), c.getFloat32());
                    break;
                  case 9:
                    h[c.getUint16()].setSize(c.getFloat32(), c.getFloat32());
                    break;
                  case 10:
                    h[c.getUint16()].alpha = c.getFloat32();
                    break;
                  case 11:
                    h[c.getUint16()].setScale(c.getFloat32(), c.getFloat32());
                    break;
                  case 98:
                    (a = c.getString()),
                      this.event(a),
                      'stop' == a && this.stop();
                    break;
                  case 99:
                    (this._curIndex = c.getUint16()), l && this.updateZOrder();
                    break;
                  case 100:
                    (this._count = this._curIndex + 1),
                      (this._ended = !0),
                      this._playing &&
                        (this.event('enterframe'),
                        this.event('end'),
                        this.event('complete')),
                      this._reset(!1);
                }
              this._playing && !this._ended && this.event('enterframe'),
                (this._Pos = c.pos);
            }),
            (n._setData = function(t, e) {
              (this._data = t), (this._start = e + 3);
            }),
            (n.load = function(t, e, n) {
              void 0 === e && (e = !1),
                (this._url = t = C.formatURL(t)),
                e && (this._atlasPath = n || t.split('.swf')[0] + '.json'),
                this.stop(),
                this._clear(),
                (this._movieClipList = [this]);
              var a;
              (a = [{ url: t, type: 'arraybuffer' }]),
                this._atlasPath &&
                  a.push({ url: this._atlasPath, type: 'atlas' }),
                i.loader.load(a, d.create(this, this._onLoaded));
            }),
            (n._onLoaded = function() {
              var t;
              (t = f.getRes(this._url))
                ? ((this.basePath = this._atlasPath
                    ? f.getAtlas(this._atlasPath).dir
                    : this._url.split('.swf')[0] + '/image/'),
                  this._initData(t))
                : this.event('error', 'file not find');
            }),
            (n._initState = function() {
              this._reset(), (this._ended = !1);
              var t = this._playing;
              for (this._playing = !1, this._curIndex = 0; !this._ended; )
                this._parse(++this._curIndex);
              this._playing = t;
            }),
            (n._initData = function(t) {
              this._data = new h(t);
              var e = 0,
                i = this._data.getUint16();
              for (e = 0; e < i; e++)
                this._ids[this._data.getInt16()] = this._data.getInt32();
              (this.interval = 1e3 / this._data.getUint16()),
                this._setData(this._data, this._ids[32767]),
                this._initState(),
                this.play(0),
                this.event('loaded'),
                this._parentMovieClip ||
                  this.timer.loop(this.interval, this, this.updates, null, !0);
            }),
            (n.playTo = function(t, e, i) {
              (this._completeHandler = i),
                (this._endFrame = e),
                this.play(t, !1);
            }),
            r(
              0,
              n,
              'index',
              function() {
                return this._playIndex;
              },
              function(t) {
                (this._playIndex = t),
                  this._data && this._displayFrame(this._playIndex),
                  this._labels &&
                    this._labels[t] &&
                    this.event('label', this._labels[t]);
              }
            ),
            r(0, n, 'count', function() {
              return this._count;
            }),
            r(0, n, 'playing', function() {
              return this._playing;
            }),
            r(0, n, 'url', null, function(t) {
              this.load(t);
            }),
            (e._ValueList = [
              'x',
              'y',
              'width',
              'height',
              'scaleX',
              'scaleY',
              'rotation',
              'alpha'
            ]);
        })(w),
        (function(t) {
          function e() {
            (this._mainTexture = null),
              (this._textureJson = null),
              (this._graphicsCache = []),
              (this.srcBoneMatrixArr = []),
              (this.ikArr = []),
              (this.tfArr = []),
              (this.pathArr = []),
              (this.boneSlotDic = {}),
              (this.bindBoneBoneSlotDic = {}),
              (this.boneSlotArray = []),
              (this.skinDataArray = []),
              (this.skinDic = {}),
              (this.subTextureDic = {}),
              (this.isParseFail = !1),
              (this.yReverseMatrix = null),
              (this.drawOrderAniArr = []),
              (this.eventAniArr = []),
              (this.attachmentNames = null),
              (this.deformAniArr = []),
              (this._isDestroyed = !1),
              (this._rate = 30),
              (this.isParserComplete = !1),
              (this.aniSectionDic = {}),
              (this._skBufferUrl = null),
              (this._textureDic = {}),
              (this._loadList = null),
              (this._path = null),
              (this.tMatrixDataLen = 0),
              (this.mRootBone = null),
              e.__super.call(this),
              (this.skinSlotDisplayDataArr = []),
              (this.mBoneArr = []);
          }
          a(e, 'laya.ani.bone.Templet', t);
          var n = e.prototype;
          return (
            (n.loadAni = function(t) {
              (this._skBufferUrl = t),
                i.loader.load(
                  t,
                  d.create(this, this.onComplete),
                  null,
                  'arraybuffer'
                );
            }),
            (n.onComplete = function(t) {
              if (this._isDestroyed) this.destroy();
              else {
                var e = f.getRes(this._skBufferUrl);
                e
                  ? ((this._path =
                      this._skBufferUrl.slice(
                        0,
                        this._skBufferUrl.lastIndexOf('/')
                      ) + '/'),
                    this.parseData(null, e))
                  : this.event('error', 'load failed:' + this._skBufferUrl);
              }
            }),
            (n.parseData = function(t, e, i) {
              void 0 === i && (i = 30),
                !this._path &&
                  this.url &&
                  (this._path =
                    this.url.slice(0, this.url.lastIndexOf('/')) + '/'),
                (this._mainTexture = t),
                this._mainTexture &&
                  y.isWebGL &&
                  t.bitmap &&
                  (t.bitmap.enableMerageInAtlas = !1),
                (this._rate = i),
                this.parse(e);
            }),
            (n.buildArmature = function(t) {
              return void 0 === t && (t = 0), new at(this, t);
            }),
            (n.parse = function(i) {
              t.prototype.parse.call(this, i),
                this._endLoaded(),
                this._aniVersion != e.LAYA_ANIMATION_VISION &&
                  (console.log(
                    '[Error] 版本不一致，请使用IDE版本配套的重新导出' +
                      this._aniVersion +
                      '->' +
                      e.LAYA_ANIMATION_VISION
                  ),
                  (this._loaded = !1)),
                this.loaded
                  ? this._mainTexture
                    ? this._parsePublicExtData()
                    : this._parseTexturePath()
                  : (this.event('error', this), (this.isParseFail = !0));
            }),
            (n._parseTexturePath = function() {
              if (this._isDestroyed) this.destroy();
              else {
                var t = 0;
                this._loadList = [];
                var e,
                  n = new h(this.getPublicExtData()),
                  a = 0,
                  r = 0,
                  s = 0,
                  o = n.getInt32(),
                  l = n.readUTFString(),
                  c = l.split('\n');
                for (t = 0; t < o; t++)
                  (e = this._path + c[2 * t]),
                    (l = c[2 * t + 1]),
                    n.getFloat32(),
                    n.getFloat32(),
                    (a = n.getFloat32()),
                    (r = n.getFloat32()),
                    (s = n.getFloat32()),
                    isNaN(s) ? 0 : s,
                    (s = n.getFloat32()),
                    isNaN(s) ? 0 : s,
                    (s = n.getFloat32()),
                    isNaN(s) ? a : s,
                    (s = n.getFloat32()),
                    isNaN(s) ? r : s,
                    -1 == this._loadList.indexOf(e) && this._loadList.push(e);
                i.loader.load(
                  this._loadList,
                  d.create(this, this._textureComplete)
                );
              }
            }),
            (n._textureComplete = function() {
              for (var t, e, i = 0, n = this._loadList.length; i < n; i++)
                (e = this._loadList[i]),
                  (t = this._textureDic[e] = f.getRes(e)),
                  y.isWebGL &&
                    t &&
                    t.bitmap &&
                    (t.bitmap.enableMerageInAtlas = !1);
              this._parsePublicExtData();
            }),
            (n._parsePublicExtData = function() {
              var t = 0,
                e = 0,
                i = 0,
                n = 0,
                a = 0;
              for (t = 0, a = this.getAnimationCount(); t < a; t++)
                this._graphicsCache.push([]);
              var r = !1;
              r = 'Dragon' != this._aniClassName;
              var s,
                o,
                l = new h(this.getPublicExtData()),
                c = 0,
                u = 0,
                _ = 0,
                d = 0,
                f = 0,
                p = 0,
                g = 0,
                y = 0,
                v = 0,
                b = l.getInt32(),
                w = l.readUTFString(),
                x = w.split('\n');
              for (t = 0; t < b; t++) {
                if (
                  ((s = this._mainTexture),
                  (o = this._path + x[2 * t]),
                  (w = x[2 * t + 1]),
                  null == this._mainTexture && (s = this._textureDic[o]),
                  !s)
                )
                  return (
                    this.event('error', this), void (this.isParseFail = !0)
                  );
                (c = l.getFloat32()),
                  (u = l.getFloat32()),
                  (_ = l.getFloat32()),
                  (d = l.getFloat32()),
                  (v = l.getFloat32()),
                  (f = isNaN(v) ? 0 : v),
                  (v = l.getFloat32()),
                  (p = isNaN(v) ? 0 : v),
                  (v = l.getFloat32()),
                  (g = isNaN(v) ? _ : v),
                  (v = l.getFloat32()),
                  (y = isNaN(v) ? d : v),
                  (this.subTextureDic[w] = I.create(
                    s,
                    c,
                    u,
                    _,
                    d,
                    -f,
                    -p,
                    g,
                    y
                  ));
              }
              this._mainTexture = s;
              var C,
                S = l.getUint16();
              for (t = 0; t < S; t++)
                (C = []).push(l.getUint16()),
                  C.push(l.getUint16()),
                  C.push(l.getUint16()),
                  C.push(l.getUint16()),
                  (this.aniSectionDic[t] = C);
              var T,
                M,
                E,
                L,
                N,
                R = l.getInt16(),
                V = {};
              for (t = 0; t < R; t++)
                (T = new D()),
                  0 == t ? (N = T) : (T.root = N),
                  (T.d = r ? -1 : 1),
                  (E = l.readUTFString()),
                  (L = l.readUTFString()),
                  (T.length = l.getFloat32()),
                  1 == l.getByte() && (T.inheritRotation = !1),
                  1 == l.getByte() && (T.inheritScale = !1),
                  (T.name = E),
                  L && ((M = V[L]) ? M.addChild(T) : (this.mRootBone = T)),
                  (V[E] = T),
                  this.mBoneArr.push(T);
              this.tMatrixDataLen = l.getUint16();
              var H,
                G = l.getUint16(),
                q = Math.floor(G / this.tMatrixDataLen),
                K = this.srcBoneMatrixArr;
              for (t = 0; t < q; t++)
                ((H = new J()).scX = l.getFloat32()),
                  (H.skX = l.getFloat32()),
                  (H.skY = l.getFloat32()),
                  (H.scY = l.getFloat32()),
                  (H.x = l.getFloat32()),
                  (H.y = l.getFloat32()),
                  8 === this.tMatrixDataLen &&
                    ((H.skewX = l.getFloat32()), (H.skewY = l.getFloat32())),
                  K.push(H),
                  ((T = this.mBoneArr[t]).transform = H);
              var Z,
                Q = l.getUint16(),
                $ = 0;
              for (t = 0; t < Q; t++) {
                for (Z = new F(), $ = l.getUint16(), e = 0; e < $; e++)
                  Z.boneNames.push(l.readUTFString()),
                    Z.boneIndexs.push(l.getInt16());
                (Z.name = l.readUTFString()),
                  (Z.targetBoneName = l.readUTFString()),
                  (Z.targetBoneIndex = l.getInt16()),
                  (Z.bendDirection = l.getFloat32()),
                  (Z.mix = l.getFloat32()),
                  (Z.isSpine = r),
                  this.ikArr.push(Z);
              }
              var tt,
                et = l.getUint16(),
                it = 0;
              for (t = 0; t < et; t++) {
                for (tt = new Y(), it = l.getUint16(), e = 0; e < it; e++)
                  tt.boneIndexs.push(l.getInt16());
                (tt.name = l.getUTFString()),
                  (tt.targetIndex = l.getInt16()),
                  (tt.rotateMix = l.getFloat32()),
                  (tt.translateMix = l.getFloat32()),
                  (tt.scaleMix = l.getFloat32()),
                  (tt.shearMix = l.getFloat32()),
                  (tt.offsetRotation = l.getFloat32()),
                  (tt.offsetX = l.getFloat32()),
                  (tt.offsetY = l.getFloat32()),
                  (tt.offsetScaleX = l.getFloat32()),
                  (tt.offsetScaleY = l.getFloat32()),
                  (tt.offsetShearY = l.getFloat32()),
                  this.tfArr.push(tt);
              }
              var nt,
                at = l.getUint16(),
                rt = 0;
              for (t = 0; t < at; t++) {
                for (
                  (nt = new z()).name = l.readUTFString(),
                    rt = l.getUint16(),
                    e = 0;
                  e < rt;
                  e++
                )
                  nt.bones.push(l.getInt16());
                (nt.target = l.readUTFString()),
                  (nt.positionMode = l.readUTFString()),
                  (nt.spacingMode = l.readUTFString()),
                  (nt.rotateMode = l.readUTFString()),
                  (nt.offsetRotation = l.getFloat32()),
                  (nt.position = l.getFloat32()),
                  (nt.spacing = l.getFloat32()),
                  (nt.rotateMix = l.getFloat32()),
                  (nt.translateMix = l.getFloat32()),
                  this.pathArr.push(nt);
              }
              var st,
                ot,
                lt,
                ht,
                ct = 0,
                ut = 0,
                _t = 0,
                dt = NaN,
                ft = 0,
                pt = l.getInt16();
              for (t = 0; t < pt; t++) {
                var mt = l.getUint8(),
                  gt = {};
                this.deformAniArr.push(gt);
                for (var yt = 0; yt < mt; yt++)
                  for (
                    (st = new B()).skinName = l.getUTFString(),
                      gt[st.skinName] = st,
                      ct = l.getInt16(),
                      e = 0;
                    e < ct;
                    e++
                  )
                    for (
                      ot = new k(),
                        st.deformSlotDataList.push(ot),
                        ut = l.getInt16(),
                        i = 0;
                      i < ut;
                      i++
                    )
                      for (
                        lt = new P(),
                          ot.deformSlotDisplayList.push(lt),
                          lt.slotIndex = l.getInt16(),
                          lt.attachment = l.getUTFString(),
                          _t = l.getInt16(),
                          n = 0;
                        n < _t;
                        n++
                      )
                        for (
                          1 == l.getByte()
                            ? lt.tweenKeyList.push(!0)
                            : lt.tweenKeyList.push(!1),
                            dt = l.getFloat32(),
                            lt.timeList.push(dt),
                            ht = [],
                            lt.vectices.push(ht),
                            ft = l.getInt16(),
                            a = 0;
                          a < ft;
                          a++
                        )
                          ht.push(l.getFloat32());
              }
              var vt,
                bt,
                wt = l.getInt16(),
                xt = 0,
                It = 0;
              for (t = 0; t < wt; t++) {
                for (xt = l.getInt16(), vt = [], e = 0; e < xt; e++) {
                  for (
                    (bt = new O()).time = l.getFloat32(),
                      It = l.getInt16(),
                      i = 0;
                    i < It;
                    i++
                  )
                    bt.drawOrder.push(l.getInt16());
                  vt.push(bt);
                }
                this.drawOrderAniArr.push(vt);
              }
              var Ct,
                St,
                Tt = l.getInt16(),
                Mt = 0;
              for (t = 0; t < Tt; t++) {
                for (Mt = l.getInt16(), Ct = [], e = 0; e < Mt; e++)
                  ((St = new U()).name = l.getUTFString()),
                    (St.intValue = l.getInt32()),
                    (St.floatValue = l.getFloat32()),
                    (St.stringValue = l.getUTFString()),
                    (St.time = l.getFloat32()),
                    Ct.push(St);
                this.eventAniArr.push(Ct);
              }
              var Et = l.getInt16();
              if (Et > 0)
                for (this.attachmentNames = [], t = 0; t < Et; t++)
                  this.attachmentNames.push(l.getUTFString());
              var Lt,
                Dt,
                At = l.getInt16();
              for (t = 0; t < At; t++)
                ((Lt = new A()).name = l.readUTFString()),
                  (Lt.parent = l.readUTFString()),
                  (Lt.attachmentName = l.readUTFString()),
                  (Lt.srcDisplayIndex = Lt.displayIndex = l.getInt16()),
                  (Lt.templet = this),
                  (this.boneSlotDic[Lt.name] = Lt),
                  null == (Dt = this.bindBoneBoneSlotDic[Lt.parent]) &&
                    (this.bindBoneBoneSlotDic[Lt.parent] = Dt = []),
                  Dt.push(Lt),
                  this.boneSlotArray.push(Lt);
              var Nt,
                Rt,
                Bt,
                kt = l.readUTFString().split('\n'),
                Pt = 0,
                Ot = l.getUint8(),
                Ut = 0,
                Vt = 0,
                Ft = 0,
                Ht = 0,
                Gt = 0,
                zt = 0,
                jt = 0;
              for (t = 0; t < Ot; t++) {
                for (
                  (Nt = new j()).name = kt[Pt++], Ut = l.getUint8(), e = 0;
                  e < Ut;
                  e++
                ) {
                  for (
                    (Rt = new X()).name = kt[Pt++],
                      Lt = this.boneSlotDic[Rt.name],
                      Vt = l.getUint8(),
                      i = 0;
                    i < Vt;
                    i++
                  ) {
                    if (
                      ((Bt = new W()),
                      this.skinSlotDisplayDataArr.push(Bt),
                      (Bt.name = kt[Pt++]),
                      (Bt.attachmentName = kt[Pt++]),
                      (Bt.transform = new J()),
                      (Bt.transform.scX = l.getFloat32()),
                      (Bt.transform.skX = l.getFloat32()),
                      (Bt.transform.skY = l.getFloat32()),
                      (Bt.transform.scY = l.getFloat32()),
                      (Bt.transform.x = l.getFloat32()),
                      (Bt.transform.y = l.getFloat32()),
                      Rt.displayArr.push(Bt),
                      (Bt.width = l.getFloat32()),
                      (Bt.height = l.getFloat32()),
                      (Bt.type = l.getUint8()),
                      (Bt.verLen = l.getUint16()),
                      (R = l.getUint16()) > 0)
                    )
                      for (Bt.bones = [], n = 0; n < R; n++) {
                        var Wt = l.getUint16();
                        Bt.bones.push(Wt);
                      }
                    if ((Ft = l.getUint16()) > 0)
                      for (Bt.uvs = [], n = 0; n < Ft; n++)
                        Bt.uvs.push(l.getFloat32());
                    if ((Ht = l.getUint16()) > 0)
                      for (Bt.weights = [], n = 0; n < Ht; n++)
                        Bt.weights.push(l.getFloat32());
                    if ((Gt = l.getUint16()) > 0)
                      for (Bt.triangles = [], n = 0; n < Gt; n++)
                        Bt.triangles.push(l.getUint16());
                    if ((zt = l.getUint16()) > 0)
                      for (Bt.vertices = [], n = 0; n < zt; n++)
                        Bt.vertices.push(l.getFloat32());
                    if ((jt = l.getUint16()) > 0)
                      for (Bt.lengths = [], n = 0; n < jt; n++)
                        Bt.lengths.push(l.getFloat32());
                  }
                  Nt.slotArr.push(Rt);
                }
                (this.skinDic[Nt.name] = Nt), this.skinDataArray.push(Nt);
              }
              1 == l.getUint8()
                ? ((this.yReverseMatrix = new m(1, 0, 0, -1, 0, 0)),
                  N && N.setTempMatrix(this.yReverseMatrix))
                : N && N.setTempMatrix(new m()),
                this.showSkinByIndex(this.boneSlotDic, 0),
                (this.isParserComplete = !0),
                this.event('complete', this);
            }),
            (n.getTexture = function(t) {
              var e = this.subTextureDic[t];
              return (
                e || (e = this.subTextureDic[t.substr(0, t.length - 1)]),
                null == e ? this._mainTexture : e
              );
            }),
            (n.showSkinByIndex = function(t, e, i) {
              if (
                (void 0 === i && (i = !0),
                e < 0 && e >= this.skinDataArray.length)
              )
                return !1;
              var n,
                a,
                r = 0,
                s = 0,
                o = this.skinDataArray[e];
              if (o) {
                for (r = 0, s = o.slotArr.length; r < s; r++)
                  (a = o.slotArr[r]) &&
                    (n = t[a.name]) &&
                    (n.showSlotData(a, i),
                    i &&
                    'undefined' != n.attachmentName &&
                    'null' != n.attachmentName
                      ? n.showDisplayByName(n.attachmentName)
                      : n.showDisplayByIndex(n.displayIndex));
                return !0;
              }
              return !1;
            }),
            (n.getSkinIndexByName = function(t) {
              for (var e = 0, i = this.skinDataArray.length; e < i; e++)
                if (this.skinDataArray[e].name == t) return e;
              return -1;
            }),
            (n.getGrahicsDataWithCache = function(t, e) {
              return this._graphicsCache[t][e];
            }),
            (n.setGrahicsDataWithCache = function(t, e, i) {
              this._graphicsCache[t][e] = i;
            }),
            (n.destroy = function() {
              this._isDestroyed = !0;
              var t;
              for (var i in this.subTextureDic)
                (t = this.subTextureDic[i]) && t.destroy();
              for (i in this._textureDic)
                (t = this._textureDic[i]) && t.destroy();
              for (
                var n = 0, a = this.skinSlotDisplayDataArr.length;
                n < a;
                n++
              )
                this.skinSlotDisplayDataArr[n].destory();
              (this.skinSlotDisplayDataArr.length = 0),
                this.url && delete e.TEMPLET_DICTIONARY[this.url],
                laya.resource.Resource.prototype.destroy.call(this);
            }),
            (n.getAniNameByIndex = function(t) {
              var e = this.getAnimation(t);
              return e ? e.name : null;
            }),
            r(
              0,
              n,
              'rate',
              function() {
                return this._rate;
              },
              function(t) {
                this._rate = t;
              }
            ),
            (e.LAYA_ANIMATION_VISION = 'LAYAANIMATION:1.6.0'),
            (e.TEMPLET_DICTIONARY = null),
            e
          );
        })(it));
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset,
      s = (i.__newvec, laya.utils.Browser, laya.display.css.CSSStyle),
      o = laya.utils.ClassUtils,
      l = (laya.events.Event, laya.utils.HTMLChar),
      h = laya.net.Loader,
      c = (laya.display.Node, laya.maths.Rectangle),
      u = laya.renders.Render,
      _ =
        (laya.renders.RenderContext,
        laya.renders.RenderSprite,
        laya.display.Sprite),
      d = laya.utils.Stat,
      f = laya.display.Text,
      p = laya.resource.Texture,
      m = laya.net.URL,
      g = laya.utils.Utils,
      y = (function() {
        function t() {}
        return (
          a(t, 'laya.html.utils.HTMLParse'),
          (t.parse = function(e, i, n) {
            i = (i =
              '<root>' + (i = i.replace(/<br>/g, '<br/>')) + '</root>').replace(
              t.spacePattern,
              t.char255
            );
            var a = g.parseXMLFromString(i);
            t._parseXML(e, a.childNodes[0].childNodes, n);
          }),
          (t._parseXML = function(e, i, n, a) {
            var r = 0,
              s = 0;
            if (i.join || i.item)
              for (r = 0, s = i.length; r < s; ++r) t._parseXML(e, i[r], n, a);
            else {
              var l, h;
              if (3 == i.nodeType) {
                var c;
                return void (e instanceof laya.html.dom.HTMLDivElement
                  ? (null == i.nodeName && (i.nodeName = '#text'),
                    (h = i.nodeName.toLowerCase()),
                    (c = i.textContent.replace(/^\s+|\s+$/g, '')).length > 0 &&
                      (l = o.getInstance(h)) &&
                      (e.addChild(l),
                      (l.innerTEXT = c.replace(
                        t.char255AndOneSpacePattern,
                        ' '
                      ))))
                  : (c = i.textContent.replace(/^\s+|\s+$/g, '')).length > 0 &&
                    (e.innerTEXT = c.replace(
                      t.char255AndOneSpacePattern,
                      ' '
                    )));
              }
              if ('#comment' == (h = i.nodeName.toLowerCase())) return;
              if ((l = o.getInstance(h))) {
                ((l = e.addChild(l)).URI = n), (l.href = a);
                var u = i.attributes;
                if (u && u.length > 0)
                  for (r = 0, s = u.length; r < s; ++r) {
                    var _ = u[r],
                      d = _.nodeName,
                      f = _.value;
                    l._setAttributes(d, f);
                  }
                t._parseXML(l, i.childNodes, n, l.href);
              } else t._parseXML(e, i.childNodes, n, a);
            }
          }),
          (t.char255 = String.fromCharCode(255)),
          (t.spacePattern = /&nbsp;|&#160;/g),
          (t.char255AndOneSpacePattern = new RegExp(
            String.fromCharCode(255) + '|(\\s+)',
            'g'
          )),
          t
        );
      })(),
      v = (function() {
        function t() {}
        return (
          a(t, 'laya.html.utils.Layout'),
          (t.later = function(e) {
            null == t._will &&
              ((t._will = []),
              i.stage.frameLoop(1, null, function() {
                if (!(t._will.length < 1)) {
                  for (var e = 0; e < t._will.length; e++)
                    laya.html.utils.Layout.layout(t._will[e]);
                  t._will.length = 0;
                }
              })),
              t._will.push(e);
          }),
          (t.layout = function(e) {
            if (!e || !e._style) return null;
            if (0 == (512 & e._style._type)) return null;
            e.getStyle()._type &= -513;
            var i = t._multiLineLayout(e);
            return (
              u.isConchApp && e.layaoutCallNative && e.layaoutCallNative(), i
            );
          }),
          (t._multiLineLayout = function(e) {
            function i() {
              (L.y = S),
                (S += L.h + d),
                0 == L.h && (S += p),
                (L.mWidth = N),
                (N = 0),
                (L = new b()),
                E.push(L),
                (L.h = 0),
                (C = 0),
                (R = !0),
                (D = !1);
            }
            if (f.RightToLeft) return t._multiLineLayout2(e);
            var n = new Array();
            e._addChildsToLayout(n);
            var a,
              r,
              s,
              o,
              l,
              h = 0,
              c = n.length,
              u = e._getCSSStyle(),
              _ = u.letterSpacing,
              d = u.leading,
              p = u.lineHeight,
              m = u._widthAuto() || !u.wordWrap,
              g = m ? 999999 : e.width,
              y = (e.height, 0),
              v = u.italic ? u.fontSize / 3 : 0,
              w = u._getAlign(),
              x = u._getValign(),
              I = 0 !== x || 0 !== w || 0 != p,
              C = 0,
              S = 0,
              T = 0,
              M = 0,
              E = new Array(),
              L = (E[0] = new b()),
              D = !1,
              A = !1;
            (L.h = 0), u.italic && (g -= u.fontSize / 3);
            var N = 0,
              R = !0;
            for (h = 0; h < c; h++)
              if (null != (a = n[h]))
                if (((R = !1), a instanceof laya.html.dom.HTMLBrElement))
                  i(), (L.y = S);
                else {
                  if (a._isChar()) {
                    if ((o = a).isWord)
                      (D = A || '\n' === o.char),
                        (L.wordStartIndex = L.elements.length);
                    else {
                      if (E.length > 0 && C + T > g && L.wordStartIndex > 0) {
                        var B = 0;
                        (B = L.elements.length - L.wordStartIndex + 1),
                          (L.elements.length = L.wordStartIndex),
                          (h -= B),
                          i();
                        continue;
                      }
                      (D = !1), (N += o.width);
                    }
                    (T = o.width + _),
                      (M = o.height),
                      (A = !1),
                      (D = D || C + T > g) && i(),
                      (L.minTextHeight = Math.min(L.minTextHeight, a.height));
                  } else
                    (l = a),
                      (s = (r = a._getCSSStyle()).padding),
                      0 === r._getCssFloat() || (I = !0),
                      (D = A || r.lineElement),
                      (T = l.width * l._style._tf.scaleX + s[1] + s[3] + _),
                      (M = l.height * l._style._tf.scaleY + s[0] + s[2]),
                      (A = r.lineElement),
                      (D = D || (C + T > g && r.wordWrap)) && i();
                  L.elements.push(a),
                    (L.h = Math.max(L.h, M)),
                    (a.x = C),
                    (a.y = S),
                    (C += T),
                    (L.w = C - _),
                    (L.y = S),
                    (y = Math.max(C + v, y));
                }
              else
                R || (C += t.DIV_ELEMENT_PADDING),
                  (L.wordStartIndex = L.elements.length);
            if (((S = L.y + L.h), I)) {
              var k = 0,
                P = g;
              for (
                m && e.width > 0 && (P = e.width), h = 0, c = E.length;
                h < c;
                h++
              )
                E[h].updatePos(0, P, h, k, w, x, p),
                  (k += Math.max(p, E[h].h + d));
              S = k;
            }
            return m && (e.width = y), S > e.height && (e.height = S), [y, S];
          }),
          (t._multiLineLayout2 = function(e) {
            function i() {
              (E.y = C),
                (C += E.h + d),
                0 == E.h && (C += f),
                (E.mWidth = A),
                (A = 0),
                (E = new b()),
                M.push(E),
                (E.h = 0),
                (I = 0),
                (N = !0),
                (L = !1);
            }
            var n = new Array();
            e._addChildsToLayout(n);
            var a,
              r,
              s,
              o,
              l,
              h = 0,
              c = n.length,
              u = e._getCSSStyle(),
              _ = u.letterSpacing,
              d = u.leading,
              f = u.lineHeight,
              p = u._widthAuto() || !u.wordWrap,
              m = p ? 999999 : e.width,
              g = (e.height, 0),
              y = u.italic ? u.fontSize / 3 : 0,
              v = 2 - u._getAlign(),
              w = u._getValign(),
              x = 0 !== w || 0 !== v || 0 != f,
              I = 0,
              C = 0,
              S = 0,
              T = 0,
              M = new Array(),
              E = (M[0] = new b()),
              L = !1,
              D = !1;
            (E.h = 0), u.italic && (m -= u.fontSize / 3);
            var A = 0,
              N = !0;
            for (h = 0; h < c; h++)
              if (null != (a = n[h]))
                if (((N = !1), a instanceof laya.html.dom.HTMLBrElement))
                  i(), (E.y = C);
                else {
                  if (a._isChar()) {
                    if ((o = a).isWord)
                      (L = D || '\n' === o.char),
                        (E.wordStartIndex = E.elements.length);
                    else {
                      if (M.length > 0 && I + S > m && E.wordStartIndex > 0) {
                        var R = 0;
                        (R = E.elements.length - E.wordStartIndex + 1),
                          (E.elements.length = E.wordStartIndex),
                          (h -= R),
                          i();
                        continue;
                      }
                      (L = !1), (A += o.width);
                    }
                    (S = o.width + _),
                      (T = o.height),
                      (D = !1),
                      (L = L || I + S > m) && i(),
                      (E.minTextHeight = Math.min(E.minTextHeight, a.height));
                  } else
                    (l = a),
                      (s = (r = a._getCSSStyle()).padding),
                      0 === r._getCssFloat() || (x = !0),
                      (L = D || r.lineElement),
                      (S = l.width * l._style._tf.scaleX + s[1] + s[3] + _),
                      (T = l.height * l._style._tf.scaleY + s[0] + s[2]),
                      (D = r.lineElement),
                      (L = L || (I + S > m && r.wordWrap)) && i();
                  E.elements.push(a),
                    (E.h = Math.max(E.h, T)),
                    (a.x = I),
                    (a.y = C),
                    (I += S),
                    (E.w = I - _),
                    (E.y = C),
                    (g = Math.max(I + y, g));
                }
              else
                N || (I += t.DIV_ELEMENT_PADDING),
                  (E.wordStartIndex = E.elements.length);
            if (((C = E.y + E.h), x)) {
              var B = 0,
                k = m;
              for (h = 0, c = M.length; h < c; h++)
                M[h].updatePos(0, k, h, B, v, w, f),
                  (B += Math.max(f, M[h].h + d));
              C = B;
            }
            for (
              p && (e.width = g),
                C > e.height && (e.height = C),
                h = 0,
                c = M.length;
              h < c;
              h++
            )
              M[h].revertOrder(m);
            return [g, C];
          }),
          (t._will = null),
          (t.DIV_ELEMENT_PADDING = 0),
          t
        );
      })(),
      b = (function() {
        function t() {
          (this.x = 0),
            (this.y = 0),
            (this.w = 0),
            (this.h = 0),
            (this.wordStartIndex = 0),
            (this.minTextHeight = 99999),
            (this.mWidth = 0),
            (this.elements = new Array());
        }
        a(t, 'laya.html.utils.LayoutLine');
        var e = t.prototype;
        return (
          (e.updatePos = function(t, e, i, n, a, r, s) {
            var o,
              l = 0;
            this.elements.length > 0 &&
              (l =
                (o = this.elements[this.elements.length - 1]).x +
                o.width -
                this.elements[0].x);
            var h = 0,
              c = NaN;
            1 === a && (h = (e - l) / 2),
              2 === a && (h = e - l),
              0 === s || 0 != r || (r = 1);
            for (var u = 0, _ = this.elements.length; u < _; u++) {
              var d = (o = this.elements[u])._getCSSStyle();
              switch ((0 !== h && (o.x += h), d._getValign())) {
                case 0:
                  o.y = n;
                  break;
                case 1:
                  var f = 0;
                  99999 != this.minTextHeight && (f = this.minTextHeight);
                  var p = (f + s) / 2;
                  (p = Math.max(p, this.h)),
                    (c = (laya.html.dom.HTMLImageElement, n + p - o.height)),
                    (o.y = c);
                  break;
                case 2:
                  o.y = n + (s - o.height);
              }
            }
          }),
          (e.revertOrder = function(t) {
            var e;
            if (this.elements.length > 0) {
              var i = 0,
                n = 0;
              for (n = this.elements.length, i = 0; i < n; i++)
                (e = this.elements[i]).x = t - e.x - e.width;
            }
          }),
          t
        );
      })(),
      w = (function(t) {
        function e() {
          (this.URI = null),
            (this._href = null),
            e.__super.call(this),
            (this._text = e._EMPTYTEXT),
            this.setStyle(new s(this)),
            (this._getCSSStyle().valign = 'middle'),
            (this.mouseEnabled = !0);
        }
        a(e, 'laya.html.dom.HTMLElement', t);
        var n = e.prototype;
        return (
          (n.layaoutCallNative = function() {
            var t = 0;
            if (this._childs && (t = this._childs.length) > 0)
              for (var e = 0; e < t; e++)
                this._childs[e].layaoutCallNative &&
                  this._childs[e].layaoutCallNative();
            var i = this._getWords();
            i
              ? laya.html.dom.HTMLElement.fillWords(
                  this,
                  i,
                  0,
                  0,
                  this.style.font,
                  this.style.color,
                  this.style.underLine
                )
              : this.graphics.clear();
          }),
          (n.appendChild = function(t) {
            return this.addChild(t);
          }),
          (n._getWords2 = function() {
            var t = this._text.text;
            if (!t || 0 === t.length) return null;
            var e,
              i,
              n = 0,
              a = 0;
            if (this._text.drawWords) i = this._text.drawWords;
            else {
              for (a = (e = t.split(' ')).length - 1, i = [], n = 0; n < a; n++)
                i.push(e[n], ' ');
              a >= 0 && i.push(e[a]), (this._text.drawWords = i);
            }
            var r = this._text.words;
            if (r && r.length === i.length) return r;
            null === r && (this._text.words = r = []), (r.length = i.length);
            var s,
              o = this.style,
              h = o.font;
            for (n = 0, a = i.length; n < a; n++) {
              s = g.measureText(i[n], h);
              var c = (r[n] = new l(i[n], s.width, s.height || o.fontSize, o));
              if ((c.char.length > 1 && (c.charNum = c.char), this.href)) {
                var u = new _();
                this.addChild(u), c.setSprite(u);
              }
            }
            return r;
          }),
          (n._getWords = function() {
            if (!f.CharacterCache) return this._getWords2();
            var t = this._text.text;
            if (!t || 0 === t.length) return null;
            var e = this._text.words;
            if (e && e.length === t.length) return e;
            null === e && (this._text.words = e = []), (e.length = t.length);
            for (
              var i, n = this.style, a = n.font, r = 0, s = t.length;
              r < s;
              r++
            ) {
              i = g.measureText(t.charAt(r), a);
              var o = (e[r] = new l(
                t.charAt(r),
                i.width,
                i.height || n.fontSize,
                n
              ));
              if (this.href) {
                var h = new _();
                this.addChild(h), o.setSprite(h);
              }
            }
            return e;
          }),
          (n.showLinkSprite = function() {
            var t = this._text.words;
            if (t)
              for (var e, i, n = [], a = 0; a < t.length; a++)
                (i = t[a]),
                  (e = new _()).graphics.drawRect(
                    0,
                    0,
                    i.width,
                    i.height,
                    '#ff0000'
                  ),
                  (e.width = i.width),
                  (e.height = i.height),
                  this.addChild(e),
                  n.push(e);
          }),
          (n._layoutLater = function() {
            var t = this.style;
            512 & t._type ||
              (t.widthed(this) &&
              (this._childs.length > 0 || null != this._getWords()) &&
              t.block
                ? (v.later(this), (t._type |= 512))
                : this.parent && this.parent._layoutLater());
          }),
          (n._setAttributes = function(e, i) {
            switch (e) {
              case 'style':
                return void this.style.cssText(i);
              case 'class':
                return void (this.className = i);
            }
            t.prototype._setAttributes.call(this, e, i);
          }),
          (n.updateHref = function() {
            if (null != this._href) {
              var t = this._getWords();
              if (t)
                for (var e, i, n = 0; n < t.length; n++)
                  (i = (e = t[n]).getSprite()) &&
                    (i.size(e.width, e.height),
                    i.on('click', this, this.onLinkHandler));
            }
          }),
          (n.onLinkHandler = function(t) {
            switch (t.type) {
              case 'click':
                for (var e = this; e; )
                  e.event('link', [this.href]), (e = e.parent);
            }
          }),
          (n.formatURL = function(t) {
            return this.URI
              ? m.formatURL(t, this.URI ? this.URI.path : null)
              : t;
          }),
          r(
            0,
            n,
            'href',
            function() {
              return this._href;
            },
            function(t) {
              (this._href = t),
                null != t &&
                  ((this._getCSSStyle().underLine = 1), this.updateHref());
            }
          ),
          r(0, n, 'color', null, function(t) {
            this.style.color = t;
          }),
          r(0, n, 'onClick', null, function(t) {
            i._runScript('fn=function(event){' + t + ';}'),
              this.on('click', this, void 0);
          }),
          r(0, n, 'id', null, function(t) {
            I.document.setElementById(t, this);
          }),
          r(
            0,
            n,
            'innerTEXT',
            function() {
              return this._text.text;
            },
            function(t) {
              this.text = t;
            }
          ),
          r(0, n, 'style', function() {
            return this._style;
          }),
          r(
            0,
            n,
            'text',
            function() {
              return this._text.text;
            },
            function(t) {
              this._text == e._EMPTYTEXT
                ? (this._text = { text: t, words: null })
                : ((this._text.text = t),
                  this._text.words && (this._text.words.length = 0)),
                u.isConchApp && this.layaoutCallNative(),
                (this._renderType |= 2048),
                this.repaint(),
                this.updateHref();
            }
          ),
          r(0, n, 'parent', t.prototype._$get_parent, function(t) {
            if (t instanceof laya.html.dom.HTMLElement) {
              var e = t;
              this.URI || (this.URI = e.URI), this.style.inherit(e.style);
            }
            i.superSet(_, this, 'parent', t);
          }),
          r(0, n, 'className', null, function(t) {
            this.style.attrs(I.document.styleSheets['.' + t]);
          }),
          (e.fillWords = function(t, e, i, n, a, r, s) {
            t.graphics.clear();
            for (var o = 0, l = e.length; o < l; o++) {
              var h = e[o];
              t.graphics.fillText(h.char, h.x + i, h.y + n, a, r, 'left', s);
            }
          }),
          (e._EMPTYTEXT = { text: null, words: null }),
          e
        );
      })(_),
      x =
        ((function(t) {
          function e() {
            e.__super.call(this),
              (this.style.lineElement = !0),
              (this.style.block = !0);
          }
          a(e, 'laya.html.dom.HTMLBrElement', w);
        })(),
        (function(t) {
          function e() {
            (this.contextHeight = NaN),
              (this.contextWidth = NaN),
              e.__super.call(this),
              (this.style.block = !0),
              (this.style.lineElement = !0),
              (this.style.width = 200),
              (this.style.height = 200);
          }
          a(e, 'laya.html.dom.HTMLDivElement', t);
          var n = e.prototype;
          return (
            (n.appendHTML = function(t) {
              y.parse(this, t, this.URI), this.layout();
            }),
            (n._addChildsToLayout = function(t) {
              var e = this._getWords();
              if (null == e && 0 == this._childs.length) return !1;
              e &&
                e.forEach(function(e) {
                  t.push(e);
                });
              for (var i = !0, n = 0, a = this._childs.length; n < a; n++) {
                var r = this._childs[n];
                i ? (i = !1) : t.push(null), r._addToLayout(t);
              }
              return !0;
            }),
            (n._addToLayout = function(t) {
              this.layout();
            }),
            (n.layout = function() {
              if (this.style) {
                this.style._type |= 512;
                var t = v.layout(this);
                if (t) {
                  this._$P.mHtmlBounds || this._set$P('mHtmlBounds', new c());
                  var e = this._$P.mHtmlBounds;
                  (e.x = e.y = 0),
                    (e.width = this.contextWidth = t[0]),
                    (e.height = this.contextHeight = t[1]),
                    this.setBounds(e);
                }
              }
            }),
            r(
              0,
              n,
              'height',
              function() {
                return this._height ? this._height : this.contextHeight;
              },
              t.prototype._$set_height
            ),
            r(0, n, 'innerHTML', null, function(t) {
              this.destroyChildren(), this.appendHTML(t);
            }),
            r(
              0,
              n,
              'width',
              function() {
                return this._width ? this._width : this.contextWidth;
              },
              function(t) {
                var e = !1;
                (e = 0 === t ? t != this._width : t != this.width),
                  i.superSet(w, this, 'width', t),
                  e && this.layout();
              }
            ),
            e
          );
        })(w)),
      I = (function(t) {
        function e() {
          (this.all = new Array()),
            (this.styleSheets = s.styleSheets),
            e.__super.call(this);
        }
        a(e, 'laya.html.dom.HTMLDocument', w);
        var i = e.prototype;
        return (
          (i.getElementById = function(t) {
            return this.all[t];
          }),
          (i.setElementById = function(t, e) {
            this.all[t] = e;
          }),
          n(e, [
            'document',
            function() {
              return (this.document = new e());
            }
          ]),
          e
        );
      })();
    (function(t) {
      function e() {
        (this._tex = null),
          (this._url = null),
          (this._renderArgs = []),
          e.__super.call(this),
          (this.style.block = !0);
      }
      a(e, 'laya.html.dom.HTMLImageElement', w);
      var i = e.prototype;
      (i._addToLayout = function(t) {
        !this._style.absolute && t.push(this);
      }),
        (i.render = function(t, e, i) {
          !this._tex ||
            !this._tex.loaded ||
            !this._tex.loaded ||
            this._width < 1 ||
            this._height < 1 ||
            (d.spriteCount++,
            (this._renderArgs[0] = this._tex),
            (this._renderArgs[1] = this.x),
            (this._renderArgs[2] = this.y),
            (this._renderArgs[3] = this.width || this._tex.width),
            (this._renderArgs[4] = this.height || this._tex.height),
            t.ctx.drawTexture2(
              e,
              i,
              this.style.translateX,
              this.style.translateY,
              this.transform,
              this.style.alpha,
              this.style.blendMode,
              this._renderArgs
            ));
        }),
        (i.layaoutCallNative = function() {
          var t = 0;
          if (this._childs && (t = this._childs.length) > 0)
            for (var e = 0; e < t; e++)
              this._childs[e].layaoutCallNative &&
                this._childs[e].layaoutCallNative();
        }),
        r(0, i, 'src', null, function(t) {
          function e() {
            var t = i._style;
            t.widthed(i) || i._tex.width, t.heighted(i) || i._tex.height;
            t.widthed(i) ||
              i._width == i._tex.width ||
              ((i.width = i._tex.width), i.parent && i.parent._layoutLater()),
              t.heighted(i) ||
                i._height == i._tex.height ||
                ((i.height = i._tex.height),
                i.parent && i.parent._layoutLater()),
              u.isConchApp &&
                ((i._renderArgs[0] = i._tex),
                (i._renderArgs[1] = i.x),
                (i._renderArgs[2] = i.y),
                (i._renderArgs[3] = i.width || i._tex.width),
                (i._renderArgs[4] = i.height || i._tex.height),
                i.graphics.drawTexture(
                  i._tex,
                  0,
                  0,
                  i._renderArgs[3],
                  i._renderArgs[4]
                )),
              i.repaint(),
              i.parentRepaint();
          }
          var i = this;
          if (((t = this.formatURL(t)), this._url != t)) {
            this._url = t;
            var n = (this._tex = h.getRes(t));
            n || ((this._tex = n = new p()), n.load(t), h.cacheRes(t, n)),
              n.loaded ? e() : n.on('loaded', null, e);
          }
        });
    })(),
      (function(t) {
        function e() {
          (this.type = null), e.__super.call(this), (this.visible = !1);
        }
        a(e, 'laya.html.dom.HTMLLinkElement', t);
        var i = e.prototype;
        (i._onload = function(t) {
          switch (this.type) {
            case 'text/css':
              s.parseCSS(t, this.URI);
          }
        }),
          r(0, i, 'href', t.prototype._$get_href, function(t) {
            var e = this;
            (t = this.formatURL(t)), (this.URI = new m(t));
            var i = new h();
            i.once('complete', null, function(t) {
              e._onload(t);
            }),
              i.load(t, 'text');
          }),
          (e._cuttingStyle = new RegExp(
            '((@keyframes[\\s\\t]+|)(.+))[\\t\\n\\r\\s]*{',
            'g'
          ));
      })(w),
      (function(t) {
        function e() {
          e.__super.call(this), (this.visible = !1);
        }
        a(e, 'laya.html.dom.HTMLStyleElement', t);
        r(0, e.prototype, 'text', t.prototype._$get_text, function(t) {
          s.parseCSS(t, null);
        });
      })(w),
      (function(t) {
        function e() {
          e.__super.call(this), (this._getCSSStyle().valign = 'middle');
        }
        a(e, 'laya.html.dom.HTMLIframeElement', t);
        r(0, e.prototype, 'href', t.prototype._$get_href, function(t) {
          var e = this;
          t = this.formatURL(t);
          var i = new h();
          i.once('complete', null, function(i) {
            var n = e.URI;
            (e.URI = new m(t)), (e.innerHTML = i), !n || (e.URI = n);
          }),
            i.load(t, 'text');
        });
      })(x);
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset,
      s = (i.__newvec, laya.webgl.canvas.BlendMode),
      o = (laya.events.Event, laya.resource.HTMLCanvas),
      l = laya.utils.Handler,
      h = laya.webgl.utils.IndexBuffer2D,
      c = (laya.net.Loader, laya.maths.MathUtil),
      u = laya.maths.Matrix,
      _ = laya.renders.Render,
      d =
        (laya.renders.RenderContext,
        laya.renders.RenderSprite,
        laya.webgl.shader.Shader),
      f = laya.display.Sprite,
      p = laya.utils.Stat,
      m = laya.resource.Texture,
      g = laya.utils.Utils,
      y = laya.webgl.shader.d2.value.Value2D,
      v = laya.webgl.utils.VertexBuffer2D,
      b = laya.webgl.WebGL,
      w =
        (laya.webgl.WebGLContext,
        (function() {
          function t() {
            (this._frameTime = 0),
              (this._emissionRate = 60),
              (this._emissionTime = 0),
              (this.minEmissionTime = 1 / 60),
              (this._particleTemplate = null);
          }
          a(t, 'laya.particle.emitter.EmitterBase');
          var e = t.prototype;
          return (
            (e.start = function(t) {
              void 0 === t && (t = 2147483647),
                0 != this._emissionRate && (this._emissionTime = t);
            }),
            (e.stop = function() {
              this._emissionTime = 0;
            }),
            (e.clear = function() {
              this._emissionTime = 0;
            }),
            (e.emit = function() {}),
            (e.advanceTime = function(t) {
              if (
                (void 0 === t && (t = 1),
                (this._emissionTime -= t),
                !(
                  this._emissionTime < 0 ||
                  ((this._frameTime += t),
                  this._frameTime < this.minEmissionTime)
                ))
              )
                for (; this._frameTime > this.minEmissionTime; )
                  (this._frameTime -= this.minEmissionTime), this.emit();
            }),
            r(0, e, 'particleTemplate', null, function(t) {
              this._particleTemplate = t;
            }),
            r(
              0,
              e,
              'emissionRate',
              function() {
                return this._emissionRate;
              },
              function(t) {
                t <= 0 ||
                  ((this._emissionRate = t),
                  t > 0 && (this.minEmissionTime = 1 / t));
              }
            ),
            t
          );
        })()),
      x = (function() {
        function t() {
          (this.position = null),
            (this.velocity = null),
            (this.startColor = null),
            (this.endColor = null),
            (this.sizeRotation = null),
            (this.radius = null),
            (this.radian = null),
            (this.durationAddScale = NaN),
            (this.time = NaN);
        }
        return (
          a(t, 'laya.particle.ParticleData'),
          (t.Create = function(e, i, n, a) {
            var r = new t();
            (r.position = i),
              c.scaleVector3(n, e.emitterVelocitySensitivity, t._tempVelocity);
            var s = c.lerp(
                e.minHorizontalVelocity,
                e.maxHorizontalVelocity,
                Math.random()
              ),
              o = Math.random() * Math.PI * 2;
            (t._tempVelocity[0] += s * Math.cos(o)),
              (t._tempVelocity[2] += s * Math.sin(o)),
              (t._tempVelocity[1] += c.lerp(
                e.minVerticalVelocity,
                e.maxVerticalVelocity,
                Math.random()
              )),
              (r.velocity = t._tempVelocity),
              (r.startColor = t._tempStartColor),
              (r.endColor = t._tempEndColor);
            var l = 0;
            if (e.disableColor)
              for (l = 0; l < 4; l++)
                (r.startColor[l] = 1), (r.endColor[l] = 1);
            else if (e.colorComponentInter)
              for (l = 0; l < 4; l++)
                (r.startColor[l] = c.lerp(
                  e.minStartColor[l],
                  e.maxStartColor[l],
                  Math.random()
                )),
                  (r.endColor[l] = c.lerp(
                    e.minEndColor[l],
                    e.maxEndColor[l],
                    Math.random()
                  ));
            else
              c.lerpVector4(
                e.minStartColor,
                e.maxStartColor,
                Math.random(),
                r.startColor
              ),
                c.lerpVector4(
                  e.minEndColor,
                  e.maxEndColor,
                  Math.random(),
                  r.endColor
                );
            r.sizeRotation = t._tempSizeRotation;
            var h = Math.random();
            (r.sizeRotation[0] = c.lerp(e.minStartSize, e.maxStartSize, h)),
              (r.sizeRotation[1] = c.lerp(e.minEndSize, e.maxEndSize, h)),
              (r.sizeRotation[2] = c.lerp(
                e.minRotateSpeed,
                e.maxRotateSpeed,
                Math.random()
              )),
              (r.radius = t._tempRadius);
            var u = Math.random();
            (r.radius[0] = c.lerp(e.minStartRadius, e.maxStartRadius, u)),
              (r.radius[1] = c.lerp(e.minEndRadius, e.maxEndRadius, u)),
              (r.radian = t._tempRadian),
              (r.radian[0] = c.lerp(
                e.minHorizontalStartRadian,
                e.maxHorizontalStartRadian,
                Math.random()
              )),
              (r.radian[1] = c.lerp(
                e.minVerticalStartRadian,
                e.maxVerticalStartRadian,
                Math.random()
              ));
            var _ = e.useEndRadian;
            return (
              (r.radian[2] = _
                ? c.lerp(
                    e.minHorizontalEndRadian,
                    e.maxHorizontalEndRadian,
                    Math.random()
                  )
                : r.radian[0]),
              (r.radian[3] = _
                ? c.lerp(
                    e.minVerticalEndRadian,
                    e.maxVerticalEndRadian,
                    Math.random()
                  )
                : r.radian[1]),
              (r.durationAddScale = e.ageAddScale * Math.random()),
              (r.time = a),
              r
            );
          }),
          n(t, [
            '_tempVelocity',
            function() {
              return (this._tempVelocity = new Float32Array(3));
            },
            '_tempStartColor',
            function() {
              return (this._tempStartColor = new Float32Array(4));
            },
            '_tempEndColor',
            function() {
              return (this._tempEndColor = new Float32Array(4));
            },
            '_tempSizeRotation',
            function() {
              return (this._tempSizeRotation = new Float32Array(3));
            },
            '_tempRadius',
            function() {
              return (this._tempRadius = new Float32Array(2));
            },
            '_tempRadian',
            function() {
              return (this._tempRadian = new Float32Array(4));
            }
          ]),
          t
        );
      })(),
      I =
        ((function() {
          function t(t, e, i) {
            (this._templet = null),
              (this._timeBetweenParticles = NaN),
              (this._previousPosition = null),
              (this._timeLeftOver = 0),
              (this._tempVelocity = new Float32Array([0, 0, 0])),
              (this._tempPosition = new Float32Array([0, 0, 0])),
              (this._templet = t),
              (this._timeBetweenParticles = 1 / e),
              (this._previousPosition = i);
          }
          a(t, 'laya.particle.ParticleEmitter');
          t.prototype.update = function(t, e) {
            if ((t /= 1e3) > 0) {
              c.subtractVector3(e, this._previousPosition, this._tempVelocity),
                c.scaleVector3(this._tempVelocity, 1 / t, this._tempVelocity);
              for (
                var i = this._timeLeftOver + t, n = -this._timeLeftOver;
                i > this._timeBetweenParticles;

              )
                (n += this._timeBetweenParticles),
                  (i -= this._timeBetweenParticles),
                  c.lerpVector3(
                    this._previousPosition,
                    e,
                    n / t,
                    this._tempPosition
                  ),
                  this._templet.addParticleArray(
                    this._tempPosition,
                    this._tempVelocity
                  );
              this._timeLeftOver = i;
            }
            (this._previousPosition[0] = e[0]),
              (this._previousPosition[1] = e[1]),
              (this._previousPosition[2] = e[2]);
          };
        })(),
        (function() {
          function t() {
            (this.textureName = null),
              (this.textureCount = 1),
              (this.maxPartices = 100),
              (this.duration = 1),
              (this.ageAddScale = 0),
              (this.emitterVelocitySensitivity = 1),
              (this.minStartSize = 100),
              (this.maxStartSize = 100),
              (this.minEndSize = 100),
              (this.maxEndSize = 100),
              (this.minHorizontalVelocity = 0),
              (this.maxHorizontalVelocity = 0),
              (this.minVerticalVelocity = 0),
              (this.maxVerticalVelocity = 0),
              (this.endVelocity = 1),
              (this.minRotateSpeed = 0),
              (this.maxRotateSpeed = 0),
              (this.minStartRadius = 0),
              (this.maxStartRadius = 0),
              (this.minEndRadius = 0),
              (this.maxEndRadius = 0),
              (this.minHorizontalStartRadian = 0),
              (this.maxHorizontalStartRadian = 0),
              (this.minVerticalStartRadian = 0),
              (this.maxVerticalStartRadian = 0),
              (this.useEndRadian = !0),
              (this.minHorizontalEndRadian = 0),
              (this.maxHorizontalEndRadian = 0),
              (this.minVerticalEndRadian = 0),
              (this.maxVerticalEndRadian = 0),
              (this.colorComponentInter = !1),
              (this.disableColor = !1),
              (this.blendState = 0),
              (this.emitterType = 'null'),
              (this.emissionRate = 0),
              (this.sphereEmitterRadius = 1),
              (this.sphereEmitterVelocity = 0),
              (this.sphereEmitterVelocityAddVariance = 0),
              (this.ringEmitterRadius = 30),
              (this.ringEmitterVelocity = 0),
              (this.ringEmitterVelocityAddVariance = 0),
              (this.ringEmitterUp = 2),
              (this.gravity = new Float32Array([0, 0, 0])),
              (this.minStartColor = new Float32Array([1, 1, 1, 1])),
              (this.maxStartColor = new Float32Array([1, 1, 1, 1])),
              (this.minEndColor = new Float32Array([1, 1, 1, 1])),
              (this.maxEndColor = new Float32Array([1, 1, 1, 1])),
              (this.pointEmitterPosition = new Float32Array([0, 0, 0])),
              (this.pointEmitterPositionVariance = new Float32Array([0, 0, 0])),
              (this.pointEmitterVelocity = new Float32Array([0, 0, 0])),
              (this.pointEmitterVelocityAddVariance = new Float32Array([
                0,
                0,
                0
              ])),
              (this.boxEmitterCenterPosition = new Float32Array([0, 0, 0])),
              (this.boxEmitterSize = new Float32Array([0, 0, 0])),
              (this.boxEmitterVelocity = new Float32Array([0, 0, 0])),
              (this.boxEmitterVelocityAddVariance = new Float32Array([
                0,
                0,
                0
              ])),
              (this.sphereEmitterCenterPosition = new Float32Array([0, 0, 0])),
              (this.ringEmitterCenterPosition = new Float32Array([0, 0, 0])),
              (this.positionVariance = new Float32Array([0, 0, 0]));
          }
          return (
            a(t, 'laya.particle.ParticleSetting'),
            (t.checkSetting = function(e) {
              var i;
              for (i in t._defaultSetting)
                e.hasOwnProperty(i) || (e[i] = t._defaultSetting[i]);
            }),
            n(t, [
              '_defaultSetting',
              function() {
                return (this._defaultSetting = new t());
              }
            ]),
            t
          );
        })()),
      C = (function() {
        function t() {
          (this.settings = null), (this.texture = null);
        }
        a(t, 'laya.particle.ParticleTemplateBase');
        return (t.prototype.addParticleArray = function(t, e) {}), t;
      })(),
      S = (function() {
        function t() {
          (this.u_Duration = NaN),
            (this.u_EndVelocity = NaN),
            (this.u_Gravity = null),
            (this.a_Position = null),
            (this.a_Velocity = null),
            (this.a_StartColor = null),
            (this.a_EndColor = null),
            (this.a_SizeRotation = null),
            (this.a_Radius = null),
            (this.a_Radian = null),
            (this.a_AgeAddScale = NaN),
            (this.gl_Position = null),
            (this.v_Color = null),
            (this.oSize = NaN),
            (this._color = new Float32Array(4)),
            (this._position = new Float32Array(3));
        }
        a(t, 'laya.particle.particleUtils.CanvasShader');
        var e = t.prototype;
        return (
          (e.getLen = function(t) {
            return Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
          }),
          (e.ComputeParticlePosition = function(t, e, i, n) {
            (this._position[0] = t[0]),
              (this._position[1] = t[1]),
              (this._position[2] = t[2]);
            var a = this.getLen(e),
              r = a * n + ((a * this.u_EndVelocity - a) * n * n) / 2,
              s = NaN;
            s = this.getLen(e);
            var o = 0;
            for (3, o = 0; o < 3; o++)
              (this._position[o] =
                this._position[o] + (e[o] / s) * r * this.u_Duration),
                (this._position[o] += this.u_Gravity[o] * i * n);
            var l = c.lerp(this.a_Radius[0], this.a_Radius[1], n),
              h = c.lerp(this.a_Radian[0], this.a_Radian[2], n),
              u = c.lerp(this.a_Radian[1], this.a_Radian[3], n),
              _ = Math.cos(u) * l;
            return (
              (this._position[1] += Math.sin(u) * l),
              (this._position[0] += Math.cos(h) * _),
              (this._position[2] += Math.sin(h) * _),
              new Float32Array([this._position[0], this._position[1], 0, 1])
            );
          }),
          (e.ComputeParticleSize = function(t, e, i) {
            return c.lerp(t, e, i);
          }),
          (e.ComputeParticleRotation = function(t, e) {
            return t * e;
          }),
          (e.ComputeParticleColor = function(t, e, i) {
            var n = this._color;
            return (
              c.lerpVector4(t, e, i, n),
              (n[3] = n[3] * i * (1 - i) * (1 - i) * 6.7),
              n
            );
          }),
          (e.clamp = function(t, e, i) {
            return t < e ? e : t > i ? i : t;
          }),
          (e.getData = function(t) {
            t *= 1 + this.a_AgeAddScale;
            var e = this.clamp(t / this.u_Duration, 0, 1);
            this.gl_Position = this.ComputeParticlePosition(
              this.a_Position,
              this.a_Velocity,
              t,
              e
            );
            var i = this.ComputeParticleSize(
                this.a_SizeRotation[0],
                this.a_SizeRotation[1],
                e
              ),
              n = this.ComputeParticleRotation(this.a_SizeRotation[2], t);
            this.v_Color = this.ComputeParticleColor(
              this.a_StartColor,
              this.a_EndColor,
              e
            );
            var a = new u(),
              r = NaN;
            (r = (i / this.oSize) * 2),
              a.scale(r, r),
              a.rotate(n),
              a.setTranslate(this.gl_Position[0], -this.gl_Position[1]);
            var s = NaN;
            return (
              (s = this.v_Color[3]),
              [
                this.v_Color,
                s,
                a,
                this.v_Color[0] * s,
                this.v_Color[1] * s,
                this.v_Color[2] * s
              ]
            );
          }),
          t
        );
      })(),
      T = (function() {
        function t() {
          (this.maxIndex = 0), (this.cmds = null), (this.id = 0);
        }
        a(t, 'laya.particle.particleUtils.CMDParticle');
        return (
          (t.prototype.setCmds = function(t) {
            (this.cmds = t), (this.maxIndex = t.length - 1);
          }),
          t
        );
      })(),
      M = (function() {
        function t() {}
        return (
          a(t, 'laya.particle.particleUtils.PicTool'),
          (t.getCanvasPic = function(t, e) {
            t = t.bitmap;
            var i = new o('2D'),
              n = i.getContext('2d');
            i.size(t.width, t.height);
            var a = (e >> 16) & 255,
              r = (e >> 8) & 255,
              s = 255 & e;
            if (
              (_.isConchApp && n.setFilter(a / 255, r / 255, s / 255, 0),
              n.drawImage(t.source, 0, 0),
              !_.isConchApp)
            ) {
              for (
                var l = n.getImageData(0, 0, i.width, i.height),
                  h = l.data,
                  c = 0,
                  u = h.length;
                c < u;
                c += 4
              )
                0 != h[c + 3] &&
                  ((h[c] *= a / 255),
                  (h[c + 1] *= r / 255),
                  (h[c + 2] *= s / 255));
              n.putImageData(l, 0, 0);
            }
            return i;
          }),
          (t.getRGBPic = function(e) {
            return [
              new m(t.getCanvasPic(e, 16711680)),
              new m(t.getCanvasPic(e, 65280)),
              new m(t.getCanvasPic(e, 255))
            ];
          }),
          t
        );
      })(),
      E = (function(t) {
        function e(t) {
          (this.setting = null),
            (this._posRange = null),
            (this._canvasTemplate = null),
            (this._emitFun = null),
            e.__super.call(this),
            (this.template = t);
        }
        a(e, 'laya.particle.emitter.Emitter2D', t);
        var i = e.prototype;
        return (
          (i.emit = function() {
            t.prototype.emit.call(this),
              null != this._emitFun && this._emitFun();
          }),
          (i.getRandom = function(t) {
            return (2 * Math.random() - 1) * t;
          }),
          (i.webGLEmit = function() {
            var t = new Float32Array(3);
            (t[0] = this.getRandom(this._posRange[0])),
              (t[1] = this.getRandom(this._posRange[1])),
              (t[2] = this.getRandom(this._posRange[2]));
            var e = new Float32Array(3);
            (e[0] = 0),
              (e[1] = 0),
              (e[2] = 0),
              this._particleTemplate.addParticleArray(t, e);
          }),
          (i.canvasEmit = function() {
            var t = new Float32Array(3);
            (t[0] = this.getRandom(this._posRange[0])),
              (t[1] = this.getRandom(this._posRange[1])),
              (t[2] = this.getRandom(this._posRange[2]));
            var e = new Float32Array(3);
            (e[0] = 0),
              (e[1] = 0),
              (e[2] = 0),
              this._particleTemplate.addParticleArray(t, e);
          }),
          r(
            0,
            i,
            'template',
            function() {
              return this._particleTemplate;
            },
            function(t) {
              (this._particleTemplate = t),
                t ||
                  ((this._emitFun = null),
                  (this.setting = null),
                  (this._posRange = null)),
                (this.setting = t.settings),
                (this._posRange = this.setting.positionVariance),
                this._particleTemplate instanceof
                laya.particle.ParticleTemplate2D
                  ? (this._emitFun = this.webGLEmit)
                  : this._particleTemplate instanceof
                      laya.particle.ParticleTemplateCanvas &&
                    ((this._canvasTemplate = t),
                    (this._emitFun = this.canvasEmit));
            }
          ),
          e
        );
      })(w),
      L = (function(t) {
        function e(t) {
          (this._vertices = null),
            (this._vertexBuffer = null),
            (this._indexBuffer = null),
            (this._floatCountPerVertex = 29),
            (this._firstActiveElement = 0),
            (this._firstNewElement = 0),
            (this._firstFreeElement = 0),
            (this._firstRetiredElement = 0),
            (this._currentTime = 0),
            (this._drawCounter = 0),
            e.__super.call(this),
            (this.settings = t);
        }
        a(e, 'laya.particle.ParticleTemplateWebGL', C);
        var i = e.prototype;
        return (
          (i.initialize = function() {
            this._vertices = new Float32Array(
              this.settings.maxPartices * this._floatCountPerVertex * 4
            );
            for (var t = 0, e = 0; e < this.settings.maxPartices; e++) {
              var i = Math.random(),
                n = this.settings.textureCount
                  ? 1 / this.settings.textureCount
                  : 1,
                a = NaN;
              for (
                a = 0;
                a < this.settings.textureCount && !(i < a + n);
                a += n
              );
              (t = e * this._floatCountPerVertex * 4),
                (this._vertices[t + 0 * this._floatCountPerVertex + 0] = -1),
                (this._vertices[t + 0 * this._floatCountPerVertex + 1] = -1),
                (this._vertices[t + 0 * this._floatCountPerVertex + 2] = 0),
                (this._vertices[t + 0 * this._floatCountPerVertex + 3] = a),
                (this._vertices[t + 1 * this._floatCountPerVertex + 0] = 1),
                (this._vertices[t + 1 * this._floatCountPerVertex + 1] = -1),
                (this._vertices[t + 1 * this._floatCountPerVertex + 2] = 1),
                (this._vertices[t + 1 * this._floatCountPerVertex + 3] = a),
                (this._vertices[t + 2 * this._floatCountPerVertex + 0] = 1),
                (this._vertices[t + 2 * this._floatCountPerVertex + 1] = 1),
                (this._vertices[t + 2 * this._floatCountPerVertex + 2] = 1),
                (this._vertices[t + 2 * this._floatCountPerVertex + 3] = a + n),
                (this._vertices[t + 3 * this._floatCountPerVertex + 0] = -1),
                (this._vertices[t + 3 * this._floatCountPerVertex + 1] = 1),
                (this._vertices[t + 3 * this._floatCountPerVertex + 2] = 0),
                (this._vertices[t + 3 * this._floatCountPerVertex + 3] = a + n);
            }
          }),
          (i.loadContent = function() {}),
          (i.update = function(t) {
            (this._currentTime += t / 1e3),
              this.retireActiveParticles(),
              this.freeRetiredParticles(),
              this._firstActiveElement == this._firstFreeElement &&
                (this._currentTime = 0),
              this._firstRetiredElement == this._firstActiveElement &&
                (this._drawCounter = 0);
          }),
          (i.retireActiveParticles = function() {
            for (
              var t = this.settings.duration;
              this._firstActiveElement != this._firstNewElement;

            ) {
              var e = this._firstActiveElement * this._floatCountPerVertex * 4,
                i = e + 28,
                n = this._currentTime - this._vertices[i];
              if ((n *= 1 + this._vertices[e + 27]) + 1e-4 < t) break;
              (this._vertices[i] = this._drawCounter),
                this._firstActiveElement++,
                this._firstActiveElement >= this.settings.maxPartices &&
                  (this._firstActiveElement = 0);
            }
          }),
          (i.freeRetiredParticles = function() {
            for (; this._firstRetiredElement != this._firstActiveElement; ) {
              if (
                this._drawCounter -
                  this._vertices[
                    this._firstRetiredElement * this._floatCountPerVertex * 4 +
                      28
                  ] <
                3
              )
                break;
              this._firstRetiredElement++,
                this._firstRetiredElement >= this.settings.maxPartices &&
                  (this._firstRetiredElement = 0);
            }
          }),
          (i.addNewParticlesToVertexBuffer = function() {}),
          (i.addParticleArray = function(t, e) {
            var i = this._firstFreeElement + 1;
            if (
              (i >= this.settings.maxPartices && (i = 0),
              i !== this._firstRetiredElement)
            ) {
              for (
                var n = x.Create(this.settings, t, e, this._currentTime),
                  a = this._firstFreeElement * this._floatCountPerVertex * 4,
                  r = 0;
                r < 4;
                r++
              ) {
                var s = 0,
                  o = 0;
                for (s = 0, o = 4; s < 3; s++)
                  this._vertices[a + r * this._floatCountPerVertex + o + s] =
                    n.position[s];
                for (s = 0, o = 7; s < 3; s++)
                  this._vertices[a + r * this._floatCountPerVertex + o + s] =
                    n.velocity[s];
                for (s = 0, o = 10; s < 4; s++)
                  this._vertices[a + r * this._floatCountPerVertex + o + s] =
                    n.startColor[s];
                for (s = 0, o = 14; s < 4; s++)
                  this._vertices[a + r * this._floatCountPerVertex + o + s] =
                    n.endColor[s];
                for (s = 0, o = 18; s < 3; s++)
                  this._vertices[a + r * this._floatCountPerVertex + o + s] =
                    n.sizeRotation[s];
                for (s = 0, o = 21; s < 2; s++)
                  this._vertices[a + r * this._floatCountPerVertex + o + s] =
                    n.radius[s];
                for (s = 0, o = 23; s < 4; s++)
                  this._vertices[a + r * this._floatCountPerVertex + o + s] =
                    n.radian[s];
                (this._vertices[a + r * this._floatCountPerVertex + 27] =
                  n.durationAddScale),
                  (this._vertices[a + r * this._floatCountPerVertex + 28] =
                    n.time);
              }
              this._firstFreeElement = i;
            }
          }),
          e
        );
      })(),
      D = (function(t) {
        function e(t) {
          (this._ready = !1),
            (this.textureList = []),
            (this.particleList = []),
            (this.pX = 0),
            (this.pY = 0),
            (this.activeParticles = []),
            (this.deadParticles = []),
            (this.iList = []),
            (this._maxNumParticles = 0),
            (this.textureWidth = NaN),
            (this.dTextureWidth = NaN),
            (this.colorChange = !0),
            (this.step = 1 / 60),
            (this.canvasShader = new S()),
            e.__super.call(this),
            (this.settings = t),
            (this._maxNumParticles = t.maxPartices),
            (this.texture = new m()),
            this.texture.on('loaded', this, this._textureLoaded),
            this.texture.load(t.textureName);
        }
        a(e, 'laya.particle.ParticleTemplateCanvas', C);
        var i = e.prototype;
        return (
          (i._textureLoaded = function(t) {
            this.setTexture(this.texture), (this._ready = !0);
          }),
          (i.clear = function(t) {
            void 0 === t && (t = !0),
              (this.deadParticles.length = 0),
              (this.activeParticles.length = 0),
              (this.textureList.length = 0);
          }),
          (i.setTexture = function(t) {
            (this.texture = t),
              (this.textureWidth = t.width),
              (this.dTextureWidth = 1 / this.textureWidth),
              (this.pX = 0.5 * -t.width),
              (this.pY = 0.5 * -t.height),
              (this.textureList = e.changeTexture(t, this.textureList)),
              (this.particleList.length = 0),
              (this.deadParticles.length = 0),
              (this.activeParticles.length = 0);
          }),
          (i._createAParticleData = function(t, e) {
            (this.canvasShader.u_EndVelocity = this.settings.endVelocity),
              (this.canvasShader.u_Gravity = this.settings.gravity),
              (this.canvasShader.u_Duration = this.settings.duration);
            var i;
            (i = x.Create(this.settings, t, e, 0)),
              (this.canvasShader.a_Position = i.position),
              (this.canvasShader.a_Velocity = i.velocity),
              (this.canvasShader.a_StartColor = i.startColor),
              (this.canvasShader.a_EndColor = i.endColor),
              (this.canvasShader.a_SizeRotation = i.sizeRotation),
              (this.canvasShader.a_Radius = i.radius),
              (this.canvasShader.a_Radian = i.radian),
              (this.canvasShader.a_AgeAddScale = i.durationAddScale),
              (this.canvasShader.oSize = this.textureWidth);
            var n = new T(),
              a = 0,
              r = this.settings.duration / (1 + i.durationAddScale),
              s = [];
            for (a = 0; a < r; a += this.step)
              s.push(this.canvasShader.getData(a));
            return (
              (n.id = this.particleList.length),
              this.particleList.push(n),
              n.setCmds(s),
              n
            );
          }),
          (i.addParticleArray = function(t, e) {
            if (this._ready) {
              var i;
              this.particleList.length < this._maxNumParticles
                ? ((i = this._createAParticleData(t, e)),
                  (this.iList[i.id] = 0),
                  this.activeParticles.push(i))
                : this.deadParticles.length > 0 &&
                  ((i = this.deadParticles.pop()),
                  (this.iList[i.id] = 0),
                  this.activeParticles.push(i));
            }
          }),
          (i.advanceTime = function(t) {
            if ((void 0 === t && (t = 1), this._ready)) {
              var e,
                i = this.activeParticles,
                n = this.deadParticles,
                a = 0,
                r = i.length,
                s = 0,
                o = this.iList;
              for (a = r - 1; a > -1; a--)
                (s = o[(e = i[a]).id]) >= e.maxIndex
                  ? ((s = 0), i.splice(a, 1), n.push(e))
                  : (s += 1),
                  (o[e.id] = s);
            }
          }),
          (i.render = function(t, e, i) {
            this._ready &&
              (this.activeParticles.length < 1 ||
                this.textureList.length < 2 ||
                (this.settings.disableColor
                  ? this.noColorRender(t, e, i)
                  : this.canvasRender(t, e, i)));
          }),
          (i.noColorRender = function(t, e, i) {
            var n,
              a,
              r = this.activeParticles,
              s = 0,
              o = r.length,
              l = NaN,
              h = this.pX,
              c = this.pY,
              u = 2 * -h,
              _ = 2 * -c,
              d = 0,
              f = (this.textureList, this.iList),
              p = NaN;
            for (t.translate(e, i), p = t.ctx.globalAlpha, s = 0; s < o; s++)
              (d = f[(n = r[s]).id]),
                (a = n.cmds[d]) &&
                  ((l = a[1]) <= 0.01 ||
                    (t.setAlpha(p * l),
                    t.drawTextureWithTransform(
                      this.texture,
                      h,
                      c,
                      u,
                      _,
                      a[2],
                      1
                    )));
            t.setAlpha(p), t.translate(-e, -i);
          }),
          (i.canvasRender = function(t, e, i) {
            var n,
              a,
              r,
              s = this.activeParticles,
              o = 0,
              l = s.length,
              h = this.pX,
              c = this.pY,
              u = 2 * -h,
              _ = 2 * -c,
              d = 0,
              f = this.textureList,
              p = this.iList,
              m = NaN;
            for (
              t.translate(e, i),
                m = t.ctx.globalAlpha,
                r = t.ctx.globalCompositeOperation,
                t.blendMode('lighter'),
                o = 0;
              o < l;
              o++
            )
              (d = p[(n = s[o]).id]),
                (a = n.cmds[d]) &&
                  (a[1] <= 0.01 ||
                    (t.save(),
                    t.transformByMatrix(a[2]),
                    a[3] > 0.01 &&
                      (t.setAlpha(m * a[3]), t.drawTexture(f[0], h, c, u, _)),
                    a[4] > 0.01 &&
                      (t.setAlpha(m * a[4]), t.drawTexture(f[1], h, c, u, _)),
                    a[5] > 0.01 &&
                      (t.setAlpha(m * a[5]), t.drawTexture(f[2], h, c, u, _)),
                    t.restore()));
            t.setAlpha(m), t.translate(-e, -i), t.blendMode(r);
          }),
          (e.changeTexture = function(t, e, i) {
            return (
              e || (e = []),
              (e.length = 0),
              i && i.disableColor
                ? e.push(t, t, t)
                : g.copyArray(e, M.getRGBPic(t)),
              e
            );
          }),
          e
        );
      })(),
      A = (function(t) {
        function e(t) {
          (this._vertexBuffer2D = null),
            (this._indexBuffer2D = null),
            (this.x = 0),
            (this.y = 0),
            (this._blendFn = null),
            (this._startTime = 0),
            (this.sv = new N()),
            e.__super.call(this, t);
          var n = this;
          i.loader.load(
            this.settings.textureName,
            l.create(null, function(t) {
              (t.bitmap.enableMerageInAtlas = !1), (n.texture = t);
            })
          ),
            (this.sv.u_Duration = this.settings.duration),
            (this.sv.u_Gravity = this.settings.gravity),
            (this.sv.u_EndVelocity = this.settings.endVelocity),
            (this._blendFn = s.fns[t.blendState]),
            this.initialize(),
            (this._vertexBuffer = this._vertexBuffer2D = v.create(-1, 35048)),
            (this._indexBuffer = this._indexBuffer2D = h.create(35044)),
            this.loadContent();
        }
        a(e, 'laya.particle.ParticleTemplate2D', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.webgl.submit.ISubmit': !0 }),
          (n.getRenderType = function() {
            return -111;
          }),
          (n.releaseRender = function() {}),
          (n.addParticleArray = function(e, i) {
            (e[0] += this.x),
              (e[1] += this.y),
              t.prototype.addParticleArray.call(this, e, i);
          }),
          (n.loadContent = function() {
            for (
              var t = new Uint16Array(6 * this.settings.maxPartices), e = 0;
              e < this.settings.maxPartices;
              e++
            )
              (t[6 * e + 0] = 4 * e + 0),
                (t[6 * e + 1] = 4 * e + 1),
                (t[6 * e + 2] = 4 * e + 2),
                (t[6 * e + 3] = 4 * e + 0),
                (t[6 * e + 4] = 4 * e + 2),
                (t[6 * e + 5] = 4 * e + 3);
            this._indexBuffer2D.clear(),
              this._indexBuffer2D.append(t),
              this._indexBuffer2D.upload();
          }),
          (n.addNewParticlesToVertexBuffer = function() {
            this._vertexBuffer2D.clear(),
              this._vertexBuffer2D.append(this._vertices);
            var t = 0;
            this._firstNewElement < this._firstFreeElement
              ? ((t =
                  4 * this._firstNewElement * this._floatCountPerVertex * 4),
                this._vertexBuffer2D.subUpload(
                  t,
                  t,
                  t +
                    4 *
                      (this._firstFreeElement - this._firstNewElement) *
                      this._floatCountPerVertex *
                      4
                ))
              : ((t =
                  4 * this._firstNewElement * this._floatCountPerVertex * 4),
                this._vertexBuffer2D.subUpload(
                  t,
                  t,
                  t +
                    4 *
                      (this.settings.maxPartices - this._firstNewElement) *
                      this._floatCountPerVertex *
                      4
                ),
                this._firstFreeElement > 0 &&
                  (this._vertexBuffer2D.setNeedUpload(),
                  this._vertexBuffer2D.subUpload(
                    0,
                    0,
                    4 * this._firstFreeElement * this._floatCountPerVertex * 4
                  ))),
              (this._firstNewElement = this._firstFreeElement);
          }),
          (n.renderSubmit = function() {
            if (this.texture && this.texture.loaded) {
              if (
                (this.update(i.timer.delta),
                (this.sv.u_CurrentTime = this._currentTime),
                this._firstNewElement != this._firstFreeElement &&
                  this.addNewParticlesToVertexBuffer(),
                this.blend(),
                this._firstActiveElement != this._firstFreeElement)
              ) {
                b.mainContext;
                this._vertexBuffer2D.bind(this._indexBuffer2D),
                  (this.sv.u_texture = this.texture.source),
                  this.sv.upload(),
                  this._firstActiveElement < this._firstFreeElement
                    ? b.mainContext.drawElements(
                        4,
                        6 * (this._firstFreeElement - this._firstActiveElement),
                        5123,
                        6 * this._firstActiveElement * 2
                      )
                    : (b.mainContext.drawElements(
                        4,
                        6 *
                          (this.settings.maxPartices -
                            this._firstActiveElement),
                        5123,
                        6 * this._firstActiveElement * 2
                      ),
                      this._firstFreeElement > 0 &&
                        b.mainContext.drawElements(
                          4,
                          6 * this._firstFreeElement,
                          5123,
                          0
                        )),
                  p.drawCall++;
              }
              this._drawCounter++;
            }
            return 1;
          }),
          (n.blend = function() {
            if (s.activeBlendFunction !== this._blendFn) {
              var t = b.mainContext;
              t.enable(3042),
                this._blendFn(t),
                (s.activeBlendFunction = this._blendFn);
            }
          }),
          (n.dispose = function() {
            this._vertexBuffer2D.dispose(), this._indexBuffer2D.dispose();
          }),
          (e.activeBlendType = -1),
          e
        );
      })(L),
      N = (function(t) {
        function e() {
          (this.a_CornerTextureCoordinate = [4, 5126, !1, 116, 0]),
            (this.a_Position = [3, 5126, !1, 116, 16]),
            (this.a_Velocity = [3, 5126, !1, 116, 28]),
            (this.a_StartColor = [4, 5126, !1, 116, 40]),
            (this.a_EndColor = [4, 5126, !1, 116, 56]),
            (this.a_SizeRotation = [3, 5126, !1, 116, 72]),
            (this.a_Radius = [2, 5126, !1, 116, 84]),
            (this.a_Radian = [4, 5126, !1, 116, 92]),
            (this.a_AgeAddScale = [1, 5126, !1, 116, 108]),
            (this.a_Time = [1, 5126, !1, 116, 112]),
            (this.u_CurrentTime = NaN),
            (this.u_Duration = NaN),
            (this.u_Gravity = null),
            (this.u_EndVelocity = NaN),
            (this.u_texture = null),
            e.__super.call(this, 0, 0);
        }
        a(e, 'laya.particle.shader.value.ParticleShaderValue', y);
        return (
          (e.prototype.upload = function() {
            this.refresh(), e.pShader.upload(this);
          }),
          n(e, [
            'pShader',
            function() {
              return (this.pShader = new R());
            }
          ]),
          e
        );
      })(),
      R =
        ((function(e) {
          function n(t) {
            (this._matrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
              (this._particleTemplate = null),
              (this._canvasTemplate = null),
              (this._emitter = null),
              (this.autoPlay = !0),
              n.__super.call(this),
              t && this.setParticleSetting(t);
          }
          a(n, 'laya.particle.Particle2D', e);
          var s = n.prototype;
          (s.load = function(t) {
            i.loader.load(
              t,
              l.create(this, this.setParticleSetting),
              null,
              'json'
            );
          }),
            (s.setParticleSetting = function(e) {
              var n = this;
              if (!e) return this.stop();
              if (
                (I.checkSetting(e),
                (t.ConchParticleTemplate2D && !_.isWebGL) ||
                  (this.customRenderEnable = !0),
                _.isWebGL)
              )
                (this._particleTemplate = new A(e)),
                  this.graphics._saveToCmd(_.context._drawParticle, [
                    this._particleTemplate
                  ]);
              else {
                if (_.isConchApp && t.ConchParticleTemplate2D) {
                  this._particleTemplate = new ConchParticleTemplate2D();
                  var a = this;
                  return (
                    i.loader.load(
                      e.textureName,
                      l.create(null, function(t) {
                        (a._particleTemplate.texture = t),
                          (a._particleTemplate.settings = e),
                          _.isConchNode
                            ? a.graphics.drawParticle(a._particleTemplate)
                            : a.graphics._saveToCmd(_.context._drawParticle, [
                                n._particleTemplate
                              ]);
                      })
                    ),
                    (this._emitter = { start: function() {} }),
                    (this.play = this._particleTemplate.play.bind(
                      this._particleTemplate
                    )),
                    (this.stop = this._particleTemplate.stop.bind(
                      this._particleTemplate
                    )),
                    void (this.autoPlay && this.play())
                  );
                }
                this._particleTemplate = this._canvasTemplate = new D(e);
              }
              this._emitter
                ? (this._emitter.template = this._particleTemplate)
                : (this._emitter = new E(this._particleTemplate)),
                this.autoPlay && (this.emitter.start(), this.play());
            }),
            (s.play = function() {
              this.timer.frameLoop(1, this, this._loop);
            }),
            (s.stop = function() {
              this.timer.clear(this, this._loop);
            }),
            (s._loop = function() {
              this.advanceTime(1 / 60);
            }),
            (s.advanceTime = function(t) {
              void 0 === t && (t = 1),
                this._canvasTemplate && this._canvasTemplate.advanceTime(t),
                this._emitter && this._emitter.advanceTime(t);
            }),
            (s.customRender = function(t, e, i) {
              if (_.isWebGL) {
                (this._matrix4[0] = t.ctx._curMat.a),
                  (this._matrix4[1] = t.ctx._curMat.b),
                  (this._matrix4[4] = t.ctx._curMat.c),
                  (this._matrix4[5] = t.ctx._curMat.d),
                  (this._matrix4[12] = t.ctx._curMat.tx),
                  (this._matrix4[13] = t.ctx._curMat.ty);
                this._particleTemplate.sv.u_mmat = this._matrix4;
              }
              this._canvasTemplate && this._canvasTemplate.render(t, e, i);
            }),
            (s.destroy = function(t) {
              void 0 === t && (t = !0),
                this._particleTemplate instanceof
                  laya.particle.ParticleTemplate2D &&
                  this._particleTemplate.dispose(),
                e.prototype.destroy.call(this, t);
            }),
            r(0, s, 'url', null, function(t) {
              this.load(t);
            }),
            r(0, s, 'emitter', function() {
              return this._emitter;
            });
        })(f),
        (function(t) {
          function e() {
            e.__super.call(this, e.vs, e.ps, 'ParticleShader');
          }
          return (
            a(e, 'laya.particle.shader.ParticleShader', d),
            n(e, [
              'vs',
              function() {
                return (this.vs =
                  'attribute vec4 a_CornerTextureCoordinate;\nattribute vec3 a_Position;\nattribute vec3 a_Velocity;\nattribute vec4 a_StartColor;\nattribute vec4 a_EndColor;\nattribute vec3 a_SizeRotation;\nattribute vec2 a_Radius;\nattribute vec4 a_Radian;\nattribute float a_AgeAddScale;\nattribute float a_Time;\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\nuniform float u_CurrentTime;\nuniform float u_Duration;\nuniform float u_EndVelocity;\nuniform vec3 u_Gravity;\n\n#ifdef PARTICLE3D\n uniform mat4 u_WorldMat;\n uniform mat4 u_View;\n uniform mat4 u_Projection;\n uniform vec2 u_ViewportScale;\n#else\n uniform vec2 size;\n uniform mat4 mmat;\n uniform mat4 u_mmat;\n#endif\n\nvec4 ComputeParticlePosition(in vec3 position, in vec3 velocity,in float age,in float normalizedAge)\n{\n\n   float startVelocity = length(velocity);//起始标量速度\n   float endVelocity = startVelocity * u_EndVelocity;//结束标量速度\n\n   float velocityIntegral = startVelocity * normalizedAge +(endVelocity - startVelocity) * normalizedAge *normalizedAge/2.0;//计算当前速度的标量（单位空间），vt=v0*t+(1/2)*a*(t^2)\n   \n   vec3 addPosition = normalize(velocity) * velocityIntegral * u_Duration;//计算受自身速度影响的位置，转换标量到矢量    \n   addPosition += u_Gravity * age * normalizedAge;//计算受重力影响的位置\n   \n   float radius=mix(a_Radius.x, a_Radius.y, normalizedAge); //计算粒子受半径和角度影响（无需计算角度和半径时，可用宏定义优化屏蔽此计算）\n   float radianHorizontal =mix(a_Radian.x,a_Radian.z,normalizedAge);\n   float radianVertical =mix(a_Radian.y,a_Radian.w,normalizedAge);\n   \n   float r =cos(radianVertical)* radius;\n   addPosition.y += sin(radianVertical) * radius;\n\t\n   addPosition.x += cos(radianHorizontal) *r;\n   addPosition.z += sin(radianHorizontal) *r;\n  \n   #ifdef PARTICLE3D\n   position+=addPosition;\n    return  u_Projection*u_View*u_WorldMat*(vec4(position, 1.0));\n   #else\n   addPosition.y=-addPosition.y;//2D粒子位置更新需要取负，2D粒子坐标系Y轴正向朝上\n   position+=addPosition;\n    return  vec4(position,1.0);\n   #endif\n}\n\nfloat ComputeParticleSize(in float startSize,in float endSize, in float normalizedAge)\n{    \n    float size = mix(startSize, endSize, normalizedAge);\n    \n\t#ifdef PARTICLE3D\n    //Project the size into screen coordinates.\n     return size * u_Projection[1][1];\n\t#else\n\t return size;\n\t#endif\n}\n\nmat2 ComputeParticleRotation(in float rot,in float age)\n{    \n    float rotation =rot * age;\n    //计算2x2旋转矩阵.\n    float c = cos(rotation);\n    float s = sin(rotation);\n    return mat2(c, -s, s, c);\n}\n\nvec4 ComputeParticleColor(in vec4 startColor,in vec4 endColor,in float normalizedAge)\n{\n\tvec4 color=mix(startColor,endColor,normalizedAge);\n    //硬编码设置，使粒子淡入很快，淡出很慢,6.7的缩放因子把置归一在0到1之间，可以谷歌x*(1-x)*(1-x)*6.7的制图表\n    color.a *= normalizedAge * (1.0-normalizedAge) * (1.0-normalizedAge) * 6.7;\n   \n    return color;\n}\n\nvoid main()\n{\n   float age = u_CurrentTime - a_Time;\n   age *= 1.0 + a_AgeAddScale;\n   float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   gl_Position = ComputeParticlePosition(a_Position, a_Velocity, age, normalizedAge);//计算粒子位置\n   float pSize = ComputeParticleSize(a_SizeRotation.x,a_SizeRotation.y, normalizedAge);\n   mat2 rotation = ComputeParticleRotation(a_SizeRotation.z, age);\n\t\n   #ifdef PARTICLE3D\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize * u_ViewportScale;\n   #else\n    mat4 mat=u_mmat*mmat;\n    gl_Position=vec4((mat*gl_Position).xy,0.0,1.0);\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize*vec2(mat[0][0],mat[1][1]);\n    gl_Position=vec4((gl_Position.x/size.x-0.5)*2.0,(0.5-gl_Position.y/size.y)*2.0,0.0,1.0);\n   #endif\n   \n   v_Color = ComputeParticleColor(a_StartColor,a_EndColor, normalizedAge);\n   v_TextureCoordinate =a_CornerTextureCoordinate.zw;\n}\n\n');
              },
              'ps',
              function() {
                return (this.ps =
                  '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\n\nvoid main()\n{\t\n\tgl_FragColor=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\tgl_FragColor.xyz *= v_Color.w;\n}');
              }
            ]),
            e
          );
        })());
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(global, undefined) {
    'use strict';
    !(function(t, e, i) {
      function n(i) {
        var a = e[i];
        return (
          a || t[i][0].call((a = e[i] = { exports: {} }), n, a, a.exports),
          a.exports
        );
      }
      var a = (global.protobuf = n(i[0]));
      'function' == typeof define &&
        define.amd &&
        define(['long'], function(t) {
          return (a.util.Long = t), a.configure(), a;
        }),
        'object' == typeof module &&
          module &&
          module.exports &&
          (module.exports = a);
    })(
      {
        1: [
          function(t, e, i) {
            e.exports = function(t, e) {
              for (var i = [], n = 2; n < arguments.length; )
                i.push(arguments[n++]);
              var a = !0;
              return new Promise(function(n, r) {
                i.push(function(t) {
                  if (a)
                    if (((a = !1), t)) r(t);
                    else {
                      for (var e = [], i = 1; i < arguments.length; )
                        e.push(arguments[i++]);
                      n.apply(null, e);
                    }
                });
                try {
                  t.apply(e || this, i);
                } catch (t) {
                  a && ((a = !1), r(t));
                }
              });
            };
          },
          {}
        ],
        2: [
          function(t, e, i) {
            var n = i;
            n.length = function(t) {
              var e = t.length;
              if (!e) return 0;
              for (var i = 0; --e % 4 > 1 && '=' === t.charAt(e); ) ++i;
              return Math.ceil(3 * t.length) / 4 - i;
            };
            for (var a = new Array(64), r = new Array(123), s = 0; s < 64; )
              r[
                (a[s] =
                  s < 26
                    ? s + 65
                    : s < 52
                    ? s + 71
                    : s < 62
                    ? s - 4
                    : (s - 59) | 43)
              ] = s++;
            n.encode = function(t, e, i) {
              for (var n, r = [], s = 0, o = 0; e < i; ) {
                var l = t[e++];
                switch (o) {
                  case 0:
                    (r[s++] = a[l >> 2]), (n = (3 & l) << 4), (o = 1);
                    break;
                  case 1:
                    (r[s++] = a[n | (l >> 4)]), (n = (15 & l) << 2), (o = 2);
                    break;
                  case 2:
                    (r[s++] = a[n | (l >> 6)]), (r[s++] = a[63 & l]), (o = 0);
                }
              }
              return (
                o && ((r[s++] = a[n]), (r[s] = 61), 1 === o && (r[s + 1] = 61)),
                String.fromCharCode.apply(String, r)
              );
            };
            (n.decode = function(t, e, i) {
              for (var n, a = i, s = 0, o = 0; o < t.length; ) {
                var l = t.charCodeAt(o++);
                if (61 === l && s > 1) break;
                if ((l = r[l]) === undefined) throw Error('invalid encoding');
                switch (s) {
                  case 0:
                    (n = l), (s = 1);
                    break;
                  case 1:
                    (e[i++] = (n << 2) | ((48 & l) >> 4)), (n = l), (s = 2);
                    break;
                  case 2:
                    (e[i++] = ((15 & n) << 4) | ((60 & l) >> 2)),
                      (n = l),
                      (s = 3);
                    break;
                  case 3:
                    (e[i++] = ((3 & n) << 6) | l), (s = 0);
                }
              }
              if (1 === s) throw Error('invalid encoding');
              return i - a;
            }),
              (n.test = function(t) {
                return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(
                  t
                );
              });
          },
          {}
        ],
        3: [
          function(t, e, i) {
            function n() {
              function t() {
                for (var e = [], n = 0; n < arguments.length; )
                  e.push(arguments[n++]);
                var _ = a.apply(null, e),
                  d = c;
                if (i.length) {
                  var f = i[i.length - 1];
                  r.test(f) ? (d = ++c) : l.test(f) && ++d,
                    o.test(f) && !o.test(_)
                      ? ((d = ++c), (u = !0))
                      : u && h.test(f) && ((d = --c), (u = !1)),
                    s.test(_) && (d = --c);
                }
                for (n = 0; n < d; ++n) _ = '\t' + _;
                return i.push(_), t;
              }
              for (
                var e = [], i = [], c = 1, u = !1, _ = 0;
                _ < arguments.length;

              )
                e.push(arguments[_++]);
              return (
                (t.str = function(t) {
                  return (
                    'function' +
                    (t ? ' ' + t.replace(/[^\w_$]/g, '_') : '') +
                    '(' +
                    e.join(',') +
                    ') {\n' +
                    i.join('\n') +
                    '\n}'
                  );
                }),
                (t.eof = function(e, i) {
                  'object' == typeof e && ((i = e), (e = undefined));
                  var a = t.str(e);
                  n.verbose &&
                    console.log(
                      '--- codegen ---\n' +
                        a.replace(/^/gm, '> ').replace(/\t/g, '  ')
                    );
                  var r = Object.keys(i || (i = {}));
                  return Function.apply(null, r.concat('return ' + a)).apply(
                    null,
                    r.map(function(t) {
                      return i[t];
                    })
                  );
                }),
                t
              );
            }
            function a(t) {
              for (var e = [], i = 1; i < arguments.length; )
                e.push(arguments[i++]);
              if (
                ((i = 0),
                (t = t.replace(/%([dfjs])/g, function(t, n) {
                  switch (n) {
                    case 'd':
                      return Math.floor(e[i++]);
                    case 'f':
                      return Number(e[i++]);
                    case 'j':
                      return JSON.stringify(e[i++]);
                    default:
                      return e[i++];
                  }
                })),
                i !== e.length)
              )
                throw Error('argument count mismatch');
              return t;
            }
            e.exports = n;
            var r = /[{[]$/,
              s = /^[}\]]/,
              o = /:$/,
              l = /^\s*(?:if|}?else if|while|for)\b|\b(?:else)\s*$/,
              h = /\b(?:break|continue)(?: \w+)?;?$|^\s*return\b/;
            (n.sprintf = a), (n.supported = !1);
            try {
              n.supported = 1 === n('a', 'b')('return a-b').eof()(2, 1);
            } catch (t) {}
            n.verbose = !1;
          },
          {}
        ],
        4: [
          function(t, e, i) {
            function n() {
              this._listeners = {};
            }
            (e.exports = n),
              (n.prototype.on = function(t, e, i) {
                return (
                  (this._listeners[t] || (this._listeners[t] = [])).push({
                    fn: e,
                    ctx: i || this
                  }),
                  this
                );
              }),
              (n.prototype.off = function(t, e) {
                if (t === undefined) this._listeners = {};
                else if (e === undefined) this._listeners[t] = [];
                else
                  for (var i = this._listeners[t], n = 0; n < i.length; )
                    i[n].fn === e ? i.splice(n, 1) : ++n;
                return this;
              }),
              (n.prototype.emit = function(t) {
                var e = this._listeners[t];
                if (e) {
                  for (var i = [], n = 1; n < arguments.length; )
                    i.push(arguments[n++]);
                  for (n = 0; n < e.length; ) e[n].fn.apply(e[n++].ctx, i);
                }
                return this;
              });
          },
          {}
        ],
        5: [
          function(t, e, i) {
            function n(t, e, i) {
              return (
                'function' == typeof e ? ((i = e), (e = {})) : e || (e = {}),
                i
                  ? !e.xhr && r && r.readFile
                    ? r.readFile(t, function(a, r) {
                        return a && 'undefined' != typeof XMLHttpRequest
                          ? n.xhr(t, e, i)
                          : a
                          ? i(a)
                          : i(null, e.binary ? r : r.toString('utf8'));
                      })
                    : n.xhr(t, e, i)
                  : a(n, this, t, e)
              );
            }
            e.exports = n;
            var a = t(1),
              r = t(6)('fs');
            n.xhr = function(t, e, i) {
              var n = new XMLHttpRequest();
              (n.onreadystatechange = function() {
                if (4 !== n.readyState) return undefined;
                if (0 !== n.status && 200 !== n.status)
                  return i(Error('status ' + n.status));
                if (e.binary) {
                  var t = n.response;
                  if (!t) {
                    t = [];
                    for (var a = 0; a < n.responseText.length; ++a)
                      t.push(255 & n.responseText.charCodeAt(a));
                  }
                  return i(
                    null,
                    'undefined' != typeof Uint8Array ? new Uint8Array(t) : t
                  );
                }
                return i(null, n.responseText);
              }),
                e.binary &&
                  ('overrideMimeType' in n &&
                    n.overrideMimeType('text/plain; charset=x-user-defined'),
                  (n.responseType = 'arraybuffer')),
                n.open('GET', t),
                n.send();
            };
          },
          { 1: 1, 6: 6 }
        ],
        6: [
          function(require, module, exports) {
            function inquire(moduleName) {
              try {
                var mod = eval('quire'.replace(/^/, 're'))(moduleName);
                if (mod && (mod.length || Object.keys(mod).length)) return mod;
              } catch (t) {}
              return null;
            }
            module.exports = inquire;
          },
          {}
        ],
        7: [
          function(t, e, i) {
            var n = i,
              a = (n.isAbsolute = function(t) {
                return /^(?:\/|\w+:)/.test(t);
              }),
              r = (n.normalize = function(t) {
                var e = (t = t
                    .replace(/\\/g, '/')
                    .replace(/\/{2,}/g, '/')).split('/'),
                  i = a(t),
                  n = '';
                i && (n = e.shift() + '/');
                for (var r = 0; r < e.length; )
                  '..' === e[r]
                    ? r > 0 && '..' !== e[r - 1]
                      ? e.splice(--r, 2)
                      : i
                      ? e.splice(r, 1)
                      : ++r
                    : '.' === e[r]
                    ? e.splice(r, 1)
                    : ++r;
                return n + e.join('/');
              });
            n.resolve = function(t, e, i) {
              return (
                i || (e = r(e)),
                a(e)
                  ? e
                  : (i || (t = r(t)),
                    (t = t.replace(/(?:\/|^)[^/]+$/, '')).length
                      ? r(t + '/' + e)
                      : e)
              );
            };
          },
          {}
        ],
        8: [
          function(t, e, i) {
            e.exports = function(t, e, i) {
              var n = i || 8192,
                a = n >>> 1,
                r = null,
                s = n;
              return function(i) {
                if (i < 1 || i > a) return t(i);
                s + i > n && ((r = t(n)), (s = 0));
                var o = e.call(r, s, (s += i));
                return 7 & s && (s = 1 + (7 | s)), o;
              };
            };
          },
          {}
        ],
        9: [
          function(t, e, i) {
            var n = i;
            (n.length = function(t) {
              for (var e = 0, i = 0, n = 0; n < t.length; ++n)
                (i = t.charCodeAt(n)) < 128
                  ? (e += 1)
                  : i < 2048
                  ? (e += 2)
                  : 55296 == (64512 & i) &&
                    56320 == (64512 & t.charCodeAt(n + 1))
                  ? (++n, (e += 4))
                  : (e += 3);
              return e;
            }),
              (n.read = function(t, e, i) {
                if (i - e < 1) return '';
                for (var n, a = null, r = [], s = 0; e < i; )
                  (n = t[e++]) < 128
                    ? (r[s++] = n)
                    : n > 191 && n < 224
                    ? (r[s++] = ((31 & n) << 6) | (63 & t[e++]))
                    : n > 239 && n < 365
                    ? ((n =
                        (((7 & n) << 18) |
                          ((63 & t[e++]) << 12) |
                          ((63 & t[e++]) << 6) |
                          (63 & t[e++])) -
                        65536),
                      (r[s++] = 55296 + (n >> 10)),
                      (r[s++] = 56320 + (1023 & n)))
                    : (r[s++] =
                        ((15 & n) << 12) |
                        ((63 & t[e++]) << 6) |
                        (63 & t[e++])),
                    s > 8191 &&
                      ((a || (a = [])).push(
                        String.fromCharCode.apply(String, r)
                      ),
                      (s = 0));
                return a
                  ? (s &&
                      a.push(String.fromCharCode.apply(String, r.slice(0, s))),
                    a.join(''))
                  : String.fromCharCode.apply(String, r.slice(0, s));
              }),
              (n.write = function(t, e, i) {
                for (var n, a, r = i, s = 0; s < t.length; ++s)
                  (n = t.charCodeAt(s)) < 128
                    ? (e[i++] = n)
                    : n < 2048
                    ? ((e[i++] = (n >> 6) | 192), (e[i++] = (63 & n) | 128))
                    : 55296 == (64512 & n) &&
                      56320 == (64512 & (a = t.charCodeAt(s + 1)))
                    ? ((n = 65536 + ((1023 & n) << 10) + (1023 & a)),
                      ++s,
                      (e[i++] = (n >> 18) | 240),
                      (e[i++] = ((n >> 12) & 63) | 128),
                      (e[i++] = ((n >> 6) & 63) | 128),
                      (e[i++] = (63 & n) | 128))
                    : ((e[i++] = (n >> 12) | 224),
                      (e[i++] = ((n >> 6) & 63) | 128),
                      (e[i++] = (63 & n) | 128));
                return i - r;
              });
          },
          {}
        ],
        10: [
          function(t, e, i) {
            function n(e, i) {
              if ((a || (a = t(34)), !(e instanceof a)))
                throw TypeError('type must be a Type');
              if (i) {
                if ('function' != typeof i)
                  throw TypeError('ctor must be a function');
              } else i = n.generate(e).eof(e.name);
              (i.constructor = n),
                ((i.prototype = new r()).constructor = i),
                s.merge(i, r, !0),
                (i.$type = e),
                (i.prototype.$type = e);
              for (var o = 0; o < e.fieldsArray.length; ++o)
                i.prototype[e._fieldsArray[o].name] = Array.isArray(
                  e._fieldsArray[o].resolve().defaultValue
                )
                  ? s.emptyArray
                  : s.isObject(e._fieldsArray[o].defaultValue) &&
                    !e._fieldsArray[o].long
                  ? s.emptyObject
                  : e._fieldsArray[o].defaultValue;
              var l = {};
              for (o = 0; o < e.oneofsArray.length; ++o)
                l[e._oneofsArray[o].resolve().name] = {
                  get: s.oneOfGetter(e._oneofsArray[o].oneof),
                  set: s.oneOfSetter(e._oneofsArray[o].oneof)
                };
              return (
                o && Object.defineProperties(i.prototype, l),
                (e.ctor = i),
                i.prototype
              );
            }
            e.exports = n;
            var a,
              r = t(21),
              s = t(36);
            (n.generate = function(t) {
              return s.codegen('p')('if(p){')(
                'for(var ks=Object.keys(p),i=0;i<ks.length;++i)'
              )('this[ks[i]]=p[ks[i]];')('}');
            }),
              (n.create = n),
              (n.prototype = r);
          },
          { 21: 21, 34: 34, 36: 36 }
        ],
        11: [
          function(t, e, i) {
            function n(t, e) {
              a.test(t) ||
                ((t = 'google/protobuf/' + t + '.proto'),
                (e = {
                  nested: { google: { nested: { protobuf: { nested: e } } } }
                })),
                (n[t] = e);
            }
            e.exports = n;
            var a = /\/|\./;
            n('any', {
              Any: {
                fields: {
                  type_url: { type: 'string', id: 1 },
                  value: { type: 'bytes', id: 2 }
                }
              }
            });
            var r;
            n('duration', {
              Duration: (r = {
                fields: {
                  seconds: { type: 'int64', id: 1 },
                  nanos: { type: 'int32', id: 2 }
                }
              })
            }),
              n('timestamp', { Timestamp: r }),
              n('empty', { Empty: { fields: {} } }),
              n('struct', {
                Struct: {
                  fields: {
                    fields: { keyType: 'string', type: 'Value', id: 1 }
                  }
                },
                Value: {
                  oneofs: {
                    kind: {
                      oneof: [
                        'nullValue',
                        'numberValue',
                        'stringValue',
                        'boolValue',
                        'structValue',
                        'listValue'
                      ]
                    }
                  },
                  fields: {
                    nullValue: { type: 'NullValue', id: 1 },
                    numberValue: { type: 'double', id: 2 },
                    stringValue: { type: 'string', id: 3 },
                    boolValue: { type: 'bool', id: 4 },
                    structValue: { type: 'Struct', id: 5 },
                    listValue: { type: 'ListValue', id: 6 }
                  }
                },
                NullValue: { values: { NULL_VALUE: 0 } },
                ListValue: {
                  fields: { values: { rule: 'repeated', type: 'Value', id: 1 } }
                }
              }),
              n('wrappers', {
                DoubleValue: { fields: { value: { type: 'double', id: 1 } } },
                FloatValue: { fields: { value: { type: 'float', id: 1 } } },
                Int64Value: { fields: { value: { type: 'int64', id: 1 } } },
                UInt64Value: { fields: { value: { type: 'uint64', id: 1 } } },
                Int32Value: { fields: { value: { type: 'int32', id: 1 } } },
                UInt32Value: { fields: { value: { type: 'uint32', id: 1 } } },
                BoolValue: { fields: { value: { type: 'bool', id: 1 } } },
                StringValue: { fields: { value: { type: 'string', id: 1 } } },
                BytesValue: { fields: { value: { type: 'bytes', id: 1 } } }
              });
          },
          {}
        ],
        12: [
          function(t, e, i) {
            function n(t, e, i, n) {
              if (e.resolvedType)
                if (e.resolvedType instanceof s) {
                  t('switch(d%s){', n);
                  for (
                    var a = e.resolvedType.values, r = Object.keys(a), o = 0;
                    o < r.length;
                    ++o
                  )
                    e.repeated && a[r[o]] === e.typeDefault && t('default:'),
                      t('case%j:', r[o])('case %j:', a[r[o]])(
                        'm%s=%j',
                        n,
                        a[r[o]]
                      )('break');
                  t('}');
                } else
                  t('if(typeof d%s!=="object")', n)(
                    'throw TypeError(%j)',
                    e.fullName + ': object expected'
                  )('m%s=types[%d].fromObject(d%s)', n, i, n);
              else {
                var l = !1;
                switch (e.type) {
                  case 'double':
                  case 'float':
                    t('m%s=Number(d%s)', n, n);
                    break;
                  case 'uint32':
                  case 'fixed32':
                    t('m%s=d%s>>>0', n, n);
                    break;
                  case 'int32':
                  case 'sint32':
                  case 'sfixed32':
                    t('m%s=d%s|0', n, n);
                    break;
                  case 'uint64':
                    l = !0;
                  case 'int64':
                  case 'sint64':
                  case 'fixed64':
                  case 'sfixed64':
                    t('if(util.Long)')(
                      '(m%s=util.Long.fromValue(d%s)).unsigned=%j',
                      n,
                      n,
                      l
                    )('else if(typeof d%s==="string")', n)(
                      'm%s=parseInt(d%s,10)',
                      n,
                      n
                    )('else if(typeof d%s==="number")', n)('m%s=d%s', n, n)(
                      'else if(typeof d%s==="object")',
                      n
                    )(
                      'm%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)',
                      n,
                      n,
                      n,
                      l ? 'true' : ''
                    );
                    break;
                  case 'bytes':
                    t('if(typeof d%s==="string")', n)(
                      'util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)',
                      n,
                      n,
                      n
                    )('else if(d%s.length)', n)('m%s=d%s', n, n);
                    break;
                  case 'string':
                    t('m%s=String(d%s)', n, n);
                    break;
                  case 'bool':
                    t('m%s=Boolean(d%s)', n, n);
                }
              }
              return t;
            }
            function a(t, e, i, n) {
              if (e.resolvedType)
                e.resolvedType instanceof s
                  ? t(
                      'd%s=o.enums===String?types[%d].values[m%s]:m%s',
                      n,
                      i,
                      n,
                      n
                    )
                  : t('d%s=types[%d].toObject(m%s,o)', n, i, n);
              else {
                var a = !1;
                switch (e.type) {
                  case 'uint64':
                    a = !0;
                  case 'int64':
                  case 'sint64':
                  case 'fixed64':
                  case 'sfixed64':
                    t('if(typeof m%s==="number")', n)(
                      'd%s=o.longs===String?String(m%s):m%s',
                      n,
                      n,
                      n
                    )('else')(
                      'd%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s',
                      n,
                      n,
                      n,
                      n,
                      a ? 'true' : '',
                      n
                    );
                    break;
                  case 'bytes':
                    t(
                      'd%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s',
                      n,
                      n,
                      n,
                      n,
                      n
                    );
                    break;
                  default:
                    t('d%s=m%s', n, n);
                }
              }
              return t;
            }
            var r = i,
              s = t(15),
              o = t(36);
            (r.fromObject = function(t) {
              var e = t.fieldsArray,
                i = o.codegen('d')('if(d instanceof this.ctor)')('return d');
              if (!e.length) return i('return new this.ctor');
              i('var m=new this.ctor');
              for (var a = 0; a < e.length; ++a) {
                var r = e[a].resolve(),
                  l = o.safeProp(r.name);
                r.map
                  ? (i('if(d%s){', l)('if(typeof d%s!=="object")', l)(
                      'throw TypeError(%j)',
                      r.fullName + ': object expected'
                    )('m%s={}', l)(
                      'for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){',
                      l
                    ),
                    n(i, r, a, l + '[ks[i]]')('}')('}'))
                  : r.repeated
                  ? (i('if(d%s){', l)('if(!Array.isArray(d%s))', l)(
                      'throw TypeError(%j)',
                      r.fullName + ': array expected'
                    )('m%s=[]', l)('for(var i=0;i<d%s.length;++i){', l),
                    n(i, r, a, l + '[i]')('}')('}'))
                  : (r.resolvedType instanceof s ||
                      i('if(d%s!==undefined&&d%s!==null){', l, l),
                    n(i, r, a, l),
                    r.resolvedType instanceof s || i('}'));
              }
              return i('return m');
            }),
              (r.toObject = function(t) {
                var e = t.fieldsArray;
                if (!e.length) return o.codegen()('return {}');
                for (
                  var i = o.codegen('m', 'o')('if(!o)')('o={}')('var d={}'),
                    n = [],
                    r = [],
                    l = [],
                    h = 0;
                  h < e.length;
                  ++h
                )
                  e[h].resolve().repeated
                    ? n.push(e[h])
                    : e[h].map
                    ? r.push(e[h])
                    : l.push(e[h]);
                if (n.length) {
                  for (i('if(o.arrays||o.defaults){'), h = 0; h < n.length; ++h)
                    i('d%s=[]', o.safeProp(n[h].name));
                  i('}');
                }
                if (r.length) {
                  for (
                    i('if(o.objects||o.defaults){'), h = 0;
                    h < r.length;
                    ++h
                  )
                    i('d%s={}', o.safeProp(r[h].name));
                  i('}');
                }
                if (l.length) {
                  for (i('if(o.defaults){'), h = 0, c; h < l.length; ++h) {
                    var c = l[h],
                      u = o.safeProp(c.name);
                    c.resolvedType instanceof s
                      ? i(
                          'd%s=o.enums===String?%j:%j',
                          u,
                          c.resolvedType.valuesById[c.typeDefault],
                          c.typeDefault
                        )
                      : c.long
                      ? i('if(util.Long){')(
                          'var n=new util.Long(%d,%d,%j)',
                          c.typeDefault.low,
                          c.typeDefault.high,
                          c.typeDefault.unsigned
                        )(
                          'd%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n',
                          u
                        )('}else')(
                          'd%s=o.longs===String?%j:%d',
                          u,
                          c.typeDefault.toString(),
                          c.typeDefault.toNumber()
                        )
                      : c.bytes
                      ? i(
                          'd%s=o.bytes===String?%j:%s',
                          u,
                          String.fromCharCode.apply(String, c.typeDefault),
                          '[' +
                            Array.prototype.slice
                              .call(c.typeDefault)
                              .join(',') +
                            ']'
                        )
                      : i('d%s=%j', u, c.typeDefault);
                  }
                  i('}');
                }
                for (h = 0, c; h < e.length; ++h) {
                  c = e[h];
                  i(
                    'if(m%s!==undefined&&m%s!==null&&m.hasOwnProperty(%j)){',
                    (u = o.safeProp(c.name)),
                    u,
                    c.name
                  ),
                    c.map
                      ? (i('d%s={}', u)(
                          'for(var ks2=Object.keys(m%s),j=0;j<ks2.length;++j){',
                          u
                        ),
                        a(i, c, h, u + '[ks2[j]]')('}'))
                      : c.repeated
                      ? (i('d%s=[]', u)('for(var j=0;j<m%s.length;++j){', u),
                        a(i, c, h, u + '[j]')('}'))
                      : a(i, c, h, u),
                    i('}');
                }
                return i('return d');
              });
          },
          { 15: 15, 36: 36 }
        ],
        13: [
          function(t, e, i) {
            function n(t) {
              return "missing required '" + t.name + "'";
            }
            function a(t) {
              var e = o.codegen('r', 'l')('if(!(r instanceof Reader))')(
                'r=Reader.create(r)'
              )('var c=l===undefined?r.len:r.pos+l,m=new this.ctor')(
                'while(r.pos<c){'
              )('var t=r.uint32()');
              t.group && e('if((t&7)===4)')('break'), e('switch(t>>>3){');
              for (var i = 0; i < t.fieldsArray.length; ++i) {
                var l = t._fieldsArray[i].resolve(),
                  h = l.resolvedType instanceof r ? 'uint32' : l.type,
                  c = 'm' + o.safeProp(l.name);
                e('case %d:', l.id),
                  l.map
                    ? (e('r.skip().pos++')('if(%s===util.emptyObject)', c)(
                        '%s={}',
                        c
                      )('var k=r.%s()', l.keyType)('r.pos++'),
                      s.basic[h] === undefined
                        ? e(
                            '%s[typeof k==="object"?util.longToHash(k):k]=types[%d].decode(r,r.uint32())',
                            c,
                            i
                          )
                        : e(
                            '%s[typeof k==="object"?util.longToHash(k):k]=r.%s()',
                            c,
                            h
                          ))
                    : l.repeated
                    ? (e('if(!(%s&&%s.length))', c, c)('%s=[]', c),
                      (a.compat || l.packed) &&
                        s.packed[h] !== undefined &&
                        e('if((t&7)===2){')('var c2=r.uint32()+r.pos')(
                          'while(r.pos<c2)'
                        )('%s.push(r.%s())', c, h)('}else'),
                      s.basic[h] === undefined
                        ? e(
                            l.resolvedType.group
                              ? '%s.push(types[%d].decode(r))'
                              : '%s.push(types[%d].decode(r,r.uint32()))',
                            c,
                            i
                          )
                        : e('%s.push(r.%s())', c, h))
                    : s.basic[h] === undefined
                    ? e(
                        l.resolvedType.group
                          ? '%s=types[%d].decode(r)'
                          : '%s=types[%d].decode(r,r.uint32())',
                        c,
                        i
                      )
                    : e('%s=r.%s()', c, h),
                  e('break');
              }
              for (
                e('default:')('r.skipType(t&7)')('break')('}')('}'), i = 0;
                i < t._fieldsArray.length;
                ++i
              ) {
                var u = t._fieldsArray[i];
                u.required &&
                  e('if(!m.hasOwnProperty(%j))', u.name)(
                    'throw util.ProtocolError(%j,{instance:m})',
                    n(u)
                  );
              }
              return e('return m');
            }
            (e.exports = a), (a.compat = !0);
            var r = t(15),
              s = t(35),
              o = t(36);
          },
          { 15: 15, 35: 35, 36: 36 }
        ],
        14: [
          function(t, e, i) {
            function n(t, e, i, n) {
              return e.resolvedType.group
                ? t(
                    'types[%d].encode(%s,w.uint32(%d)).uint32(%d)',
                    i,
                    n,
                    ((e.id << 3) | 3) >>> 0,
                    ((e.id << 3) | 4) >>> 0
                  )
                : t(
                    'types[%d].encode(%s,w.uint32(%d).fork()).ldelim()',
                    i,
                    n,
                    ((e.id << 3) | 2) >>> 0
                  );
            }
            function a(t, e) {
              return t.id - e.id;
            }
            function r(t) {
              var e,
                i = l.codegen('m', 'w')('if(!w)')('w=Writer.create()'),
                h = t.fieldsArray;
              r.compat && (h = h.slice().sort(a));
              for (f = 0; f < h.length; ++f) {
                var c = h[f].resolve(),
                  u = r.compat ? t._fieldsArray.indexOf(c) : f;
                if (!c.partOf) {
                  var _ = c.resolvedType instanceof s ? 'uint32' : c.type,
                    d = o.basic[_];
                  (e = 'm' + l.safeProp(c.name)),
                    c.map
                      ? (i('if(%s&&m.hasOwnProperty(%j)){', e, c.name)(
                          'for(var ks=Object.keys(%s),i=0;i<ks.length;++i){',
                          e
                        )(
                          'w.uint32(%d).fork().uint32(%d).%s(ks[i])',
                          ((c.id << 3) | 2) >>> 0,
                          8 | o.mapKey[c.keyType],
                          c.keyType
                        ),
                        d === undefined
                          ? i(
                              'types[%d].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()',
                              u,
                              e
                            )
                          : i(
                              '.uint32(%d).%s(%s[ks[i]]).ldelim()',
                              16 | d,
                              _,
                              e
                            ),
                        i('}')('}'))
                      : c.repeated
                      ? c.packed && o.packed[_] !== undefined
                        ? i(
                            'if(%s&&%s.length&&m.hasOwnProperty(%j)){',
                            e,
                            e,
                            c.name
                          )('w.uint32(%d).fork()', ((c.id << 3) | 2) >>> 0)(
                            'for(var i=0;i<%s.length;++i)',
                            e
                          )('w.%s(%s[i])', _, e)('w.ldelim()')('}')
                        : (i(
                            'if(%s!==undefined&&m.hasOwnProperty(%j)){',
                            e,
                            c.name
                          )('for(var i=0;i<%s.length;++i)', e),
                          d === undefined
                            ? n(i, c, u, e + '[i]')
                            : i(
                                'w.uint32(%d).%s(%s[i])',
                                ((c.id << 3) | d) >>> 0,
                                _,
                                e
                              ),
                          i('}'))
                      : (c.required ||
                          (c.long
                            ? i(
                                'if(%s!==undefined&&%s!==null&&m.hasOwnProperty(%j))',
                                e,
                                e,
                                c.name
                              )
                            : c.bytes ||
                              (c.resolvedType && !(c.resolvedType instanceof s))
                            ? i('if(%s&&m.hasOwnProperty(%j))', e, c.name)
                            : i(
                                'if(%s!==undefined&&m.hasOwnProperty(%j))',
                                e,
                                c.name
                              )),
                        d === undefined
                          ? n(i, c, u, e)
                          : i(
                              'w.uint32(%d).%s(%s)',
                              ((c.id << 3) | d) >>> 0,
                              _,
                              e
                            ));
                }
              }
              for (var f = 0; f < t.oneofsArray.length; ++f) {
                var p = t._oneofsArray[f];
                i('switch(%s){', 'm' + l.safeProp(p.name));
                for (var m = 0; m < p.fieldsArray.length; ++m) {
                  var _ =
                      (c = p.fieldsArray[m]).resolvedType instanceof s
                        ? 'uint32'
                        : c.type,
                    d = o.basic[_];
                  (e = 'm' + l.safeProp(c.name)),
                    i('case%j:', c.name),
                    d === undefined
                      ? n(i, c, t._fieldsArray.indexOf(c), e)
                      : i('w.uint32(%d).%s(%s)', ((c.id << 3) | d) >>> 0, _, e),
                    i('break');
                }
                i('}');
              }
              return i('return w');
            }
            (e.exports = r), (r.compat = !0);
            var s = t(15),
              o = t(35),
              l = t(36);
          },
          { 15: 15, 35: 35, 36: 36 }
        ],
        15: [
          function(t, e, i) {
            function n(t, e, i) {
              if ((a.call(this, t, i), e && 'object' != typeof e))
                throw TypeError('values must be an object');
              if (
                ((this.valuesById = {}),
                (this.values = Object.create(this.valuesById)),
                (this.comments = {}),
                e)
              )
                for (var n = Object.keys(e), r = 0; r < n.length; ++r)
                  this.valuesById[(this.values[n[r]] = e[n[r]])] = n[r];
            }
            e.exports = n;
            var a = t(24);
            ((n.prototype = Object.create(
              a.prototype
            )).constructor = n).className = 'Enum';
            var r = t(36);
            (n.fromJSON = function(t, e) {
              return new n(t, e.values, e.options);
            }),
              (n.prototype.toJSON = function() {
                return { options: this.options, values: this.values };
              }),
              (n.prototype.add = function(t, e, i) {
                if (!r.isString(t)) throw TypeError('name must be a string');
                if (!r.isInteger(e)) throw TypeError('id must be an integer');
                if (this.values[t] !== undefined) throw Error('duplicate name');
                if (this.valuesById[e] !== undefined) {
                  if (!this.options || !this.options.allow_alias)
                    throw Error('duplicate id');
                  this.values[t] = e;
                } else this.valuesById[(this.values[t] = e)] = t;
                return (this.comments[t] = i || null), this;
              }),
              (n.prototype.remove = function(t) {
                if (!r.isString(t)) throw TypeError('name must be a string');
                var e = this.values[t];
                if (e === undefined) throw Error('name does not exist');
                return (
                  delete this.valuesById[e],
                  delete this.values[t],
                  delete this.comments[t],
                  this
                );
              });
          },
          { 24: 24, 36: 36 }
        ],
        16: [
          function(t, e, i) {
            function n(t, e, i, n, r, s) {
              if (
                (l.isObject(n)
                  ? ((s = n), (n = r = undefined))
                  : l.isObject(r) && ((s = r), (r = undefined)),
                a.call(this, t, s),
                !l.isInteger(e) || e < 0)
              )
                throw TypeError('id must be a non-negative integer');
              if (!l.isString(i)) throw TypeError('type must be a string');
              if (n !== undefined && !h.test((n = n.toString().toLowerCase())))
                throw TypeError('rule must be a string rule');
              if (r !== undefined && !l.isString(r))
                throw TypeError('extend must be a string');
              (this.rule = n && 'optional' !== n ? n : undefined),
                (this.type = i),
                (this.id = e),
                (this.extend = r || undefined),
                (this.required = 'required' === n),
                (this.optional = !this.required),
                (this.repeated = 'repeated' === n),
                (this.map = !1),
                (this.message = null),
                (this.partOf = null),
                (this.typeDefault = null),
                (this.defaultValue = null),
                (this.long = !!l.Long && o.long[i] !== undefined),
                (this.bytes = 'bytes' === i),
                (this.resolvedType = null),
                (this.extensionField = null),
                (this.declaringField = null),
                (this._packed = null);
            }
            e.exports = n;
            var a = t(24);
            ((n.prototype = Object.create(
              a.prototype
            )).constructor = n).className = 'Field';
            var r,
              s = t(15),
              o = t(35),
              l = t(36),
              h = /^required|optional|repeated$/;
            Object.defineProperty(n.prototype, 'packed', {
              get: function() {
                return (
                  null === this._packed &&
                    (this._packed = !1 !== this.getOption('packed')),
                  this._packed
                );
              }
            }),
              (n.prototype.setOption = function(t, e, i) {
                return (
                  'packed' === t && (this._packed = null),
                  a.prototype.setOption.call(this, t, e, i)
                );
              }),
              (n.fromJSON = function(t, e) {
                return new n(t, e.id, e.type, e.rule, e.extend, e.options);
              }),
              (n.prototype.toJSON = function() {
                return {
                  rule: ('optional' !== this.rule && this.rule) || undefined,
                  type: this.type,
                  id: this.id,
                  extend: this.extend,
                  options: this.options
                };
              }),
              (n.prototype.resolve = function() {
                if (this.resolved) return this;
                if ((this.typeDefault = o.defaults[this.type]) === undefined) {
                  r || (r = t(34));
                  var e = this.declaringField
                    ? this.declaringField.parent
                    : this.parent;
                  if ((this.resolvedType = e.lookup(this.type, r)))
                    this.typeDefault = null;
                  else {
                    if (!(this.resolvedType = e.lookup(this.type, s)))
                      throw Error(
                        'unresolvable field type: ' + this.type + ' in ' + e
                      );
                    this.typeDefault = this.resolvedType.values[
                      Object.keys(this.resolvedType.values)[0]
                    ];
                  }
                }
                if (
                  (this.options &&
                    this.options.default !== undefined &&
                    ((this.typeDefault = this.options.default),
                    this.resolvedType instanceof s &&
                      'string' == typeof this.typeDefault &&
                      (this.typeDefault = this.resolvedType.values[
                        this.typeDefault
                      ])),
                  !this.options ||
                    this.options.packed === undefined ||
                    !this.resolvedType ||
                    this.resolvedType instanceof s ||
                    delete this.options.packed,
                  this.long)
                )
                  (this.typeDefault = l.Long.fromNumber(
                    this.typeDefault,
                    'u' === this.type.charAt(0)
                  )),
                    Object.freeze && Object.freeze(this.typeDefault);
                else if (this.bytes && 'string' == typeof this.typeDefault) {
                  var i;
                  l.base64.test(this.typeDefault)
                    ? l.base64.decode(
                        this.typeDefault,
                        (i = l.newBuffer(l.base64.length(this.typeDefault))),
                        0
                      )
                    : l.utf8.write(
                        this.typeDefault,
                        (i = l.newBuffer(l.utf8.length(this.typeDefault))),
                        0
                      ),
                    (this.typeDefault = i);
                }
                return (
                  this.map
                    ? (this.defaultValue = l.emptyObject)
                    : this.repeated
                    ? (this.defaultValue = l.emptyArray)
                    : (this.defaultValue = this.typeDefault),
                  a.prototype.resolve.call(this)
                );
              });
          },
          { 15: 15, 24: 24, 34: 34, 35: 35, 36: 36 }
        ],
        17: [
          function(t, e, i) {
            var n = (e.exports = t(18));
            (n.build = 'light'),
              (n.load = function(t, e, i) {
                return (
                  'function' == typeof e
                    ? ((i = e), (e = new n.Root()))
                    : e || (e = new n.Root()),
                  e.load(t, i)
                );
              }),
              (n.loadSync = function(t, e) {
                return e || (e = new n.Root()), e.loadSync(t);
              }),
              (n.encoder = t(14)),
              (n.decoder = t(13)),
              (n.verifier = t(39)),
              (n.converter = t(12)),
              (n.ReflectionObject = t(24)),
              (n.Namespace = t(23)),
              (n.Root = t(29)),
              (n.Enum = t(15)),
              (n.Type = t(34)),
              (n.Field = t(16)),
              (n.OneOf = t(25)),
              (n.MapField = t(20)),
              (n.Service = t(32)),
              (n.Method = t(22)),
              (n.Class = t(10)),
              (n.Message = t(21)),
              (n.types = t(35)),
              (n.util = t(36)),
              n.ReflectionObject._configure(n.Root),
              n.Namespace._configure(n.Type, n.Service),
              n.Root._configure(n.Type);
          },
          {
            10: 10,
            12: 12,
            13: 13,
            14: 14,
            15: 15,
            16: 16,
            18: 18,
            20: 20,
            21: 21,
            22: 22,
            23: 23,
            24: 24,
            25: 25,
            29: 29,
            32: 32,
            34: 34,
            35: 35,
            36: 36,
            39: 39
          }
        ],
        18: [
          function(t, e, i) {
            function n() {
              a.Reader._configure(a.BufferReader), a.util._configure();
            }
            var a = i;
            (a.build = 'minimal'),
              (a.roots = {}),
              (a.Writer = t(40)),
              (a.BufferWriter = t(41)),
              (a.Reader = t(27)),
              (a.BufferReader = t(28)),
              (a.util = t(38)),
              (a.rpc = t(30)),
              (a.configure = n),
              a.Writer._configure(a.BufferWriter),
              n();
          },
          { 27: 27, 28: 28, 30: 30, 38: 38, 40: 40, 41: 41 }
        ],
        19: [
          function(t, e, i) {
            var n = (e.exports = t(17));
            (n.build = 'full'),
              (n.tokenize = t(33)),
              (n.parse = t(26)),
              (n.common = t(11)),
              n.Root._configure(n.Type, n.parse, n.common);
          },
          { 11: 11, 17: 17, 26: 26, 33: 33 }
        ],
        20: [
          function(t, e, i) {
            function n(t, e, i, n, r) {
              if ((a.call(this, t, e, n, r), !s.isString(i)))
                throw TypeError('keyType must be a string');
              (this.keyType = i),
                (this.resolvedKeyType = null),
                (this.map = !0);
            }
            e.exports = n;
            var a = t(16);
            ((n.prototype = Object.create(
              a.prototype
            )).constructor = n).className = 'MapField';
            var r = t(35),
              s = t(36);
            (n.fromJSON = function(t, e) {
              return new n(t, e.id, e.keyType, e.type, e.options);
            }),
              (n.prototype.toJSON = function() {
                return {
                  keyType: this.keyType,
                  type: this.type,
                  id: this.id,
                  extend: this.extend,
                  options: this.options
                };
              }),
              (n.prototype.resolve = function() {
                if (this.resolved) return this;
                if (r.mapKey[this.keyType] === undefined)
                  throw Error('invalid key type: ' + this.keyType);
                return a.prototype.resolve.call(this);
              });
          },
          { 16: 16, 35: 35, 36: 36 }
        ],
        21: [
          function(t, e, i) {
            function n(t) {
              if (t)
                for (var e = Object.keys(t), i = 0; i < e.length; ++i)
                  this[e[i]] = t[e[i]];
            }
            e.exports = n;
            var a = t(36);
            (n.encode = function(t, e) {
              return this.$type.encode(t, e);
            }),
              (n.encodeDelimited = function(t, e) {
                return this.$type.encodeDelimited(t, e);
              }),
              (n.decode = function(t) {
                return this.$type.decode(t);
              }),
              (n.decodeDelimited = function(t) {
                return this.$type.decodeDelimited(t);
              }),
              (n.verify = function(t) {
                return this.$type.verify(t);
              }),
              (n.from = n.fromObject = function(t) {
                return this.$type.fromObject(t);
              }),
              (n.toObject = function(t, e) {
                return this.$type.toObject(t, e);
              }),
              (n.prototype.toObject = function(t) {
                return this.$type.toObject(this, t);
              }),
              (n.prototype.toJSON = function() {
                return this.$type.toObject(this, a.toJSONOptions);
              });
          },
          { 36: 36 }
        ],
        22: [
          function(t, e, i) {
            function n(t, e, i, n, s, o, l) {
              if (
                (r.isObject(s)
                  ? ((l = s), (s = o = undefined))
                  : r.isObject(o) && ((l = o), (o = undefined)),
                e !== undefined && !r.isString(e))
              )
                throw TypeError('type must be a string');
              if (!r.isString(i))
                throw TypeError('requestType must be a string');
              if (!r.isString(n))
                throw TypeError('responseType must be a string');
              a.call(this, t, l),
                (this.type = e || 'rpc'),
                (this.requestType = i),
                (this.requestStream = !!s || undefined),
                (this.responseType = n),
                (this.responseStream = !!o || undefined),
                (this.resolvedRequestType = null),
                (this.resolvedResponseType = null);
            }
            e.exports = n;
            var a = t(24);
            ((n.prototype = Object.create(
              a.prototype
            )).constructor = n).className = 'Method';
            var r = t(36);
            (n.fromJSON = function(t, e) {
              return new n(
                t,
                e.type,
                e.requestType,
                e.responseType,
                e.requestStream,
                e.responseStream,
                e.options
              );
            }),
              (n.prototype.toJSON = function() {
                return {
                  type: ('rpc' !== this.type && this.type) || undefined,
                  requestType: this.requestType,
                  requestStream: this.requestStream,
                  responseType: this.responseType,
                  responseStream: this.responseStream,
                  options: this.options
                };
              }),
              (n.prototype.resolve = function() {
                return this.resolved
                  ? this
                  : ((this.resolvedRequestType = this.parent.lookupType(
                      this.requestType
                    )),
                    (this.resolvedResponseType = this.parent.lookupType(
                      this.responseType
                    )),
                    a.prototype.resolve.call(this));
              });
          },
          { 24: 24, 36: 36 }
        ],
        23: [
          function(t, e, i) {
            function n(t) {
              if (!t || !t.length) return undefined;
              for (var e = {}, i = 0; i < t.length; ++i)
                e[t[i].name] = t[i].toJSON();
              return e;
            }
            function a(t, e) {
              s.call(this, t, e),
                (this.nested = undefined),
                (this._nestedArray = null);
            }
            function r(t) {
              return (t._nestedArray = null), t;
            }
            e.exports = a;
            var s = t(24);
            ((a.prototype = Object.create(
              s.prototype
            )).constructor = a).className = 'Namespace';
            var o,
              l,
              h = t(15),
              c = t(16),
              u = t(36);
            (a.fromJSON = function(t, e) {
              return new a(t, e.options).addJSON(e.nested);
            }),
              (a.arrayToJSON = n),
              Object.defineProperty(a.prototype, 'nestedArray', {
                get: function() {
                  return (
                    this._nestedArray ||
                    (this._nestedArray = u.toArray(this.nested))
                  );
                }
              }),
              (a.prototype.toJSON = function() {
                return { options: this.options, nested: n(this.nestedArray) };
              }),
              (a.prototype.addJSON = function(t) {
                if (t)
                  for (var e, i = Object.keys(t), n = 0; n < i.length; ++n)
                    (e = t[i[n]]),
                      this.add(
                        (e.fields !== undefined
                          ? o.fromJSON
                          : e.values !== undefined
                          ? h.fromJSON
                          : e.methods !== undefined
                          ? l.fromJSON
                          : e.id !== undefined
                          ? c.fromJSON
                          : a.fromJSON)(i[n], e)
                      );
                return this;
              }),
              (a.prototype.get = function(t) {
                return (this.nested && this.nested[t]) || null;
              }),
              (a.prototype.getEnum = function(t) {
                if (this.nested && this.nested[t] instanceof h)
                  return this.nested[t].values;
                throw Error('no such enum');
              }),
              (a.prototype.add = function(t) {
                if (
                  !(
                    (t instanceof c && t.extend !== undefined) ||
                    t instanceof o ||
                    t instanceof h ||
                    t instanceof l ||
                    t instanceof a
                  )
                )
                  throw TypeError('object must be a valid nested object');
                if (this.nested) {
                  var e = this.get(t.name);
                  if (e) {
                    if (
                      !(e instanceof a && t instanceof a) ||
                      e instanceof o ||
                      e instanceof l
                    )
                      throw Error("duplicate name '" + t.name + "' in " + this);
                    for (var i = e.nestedArray, n = 0; n < i.length; ++n)
                      t.add(i[n]);
                    this.remove(e),
                      this.nested || (this.nested = {}),
                      t.setOptions(e.options, !0);
                  }
                } else this.nested = {};
                return (this.nested[t.name] = t), t.onAdd(this), r(this);
              }),
              (a.prototype.remove = function(t) {
                if (!(t instanceof s))
                  throw TypeError('object must be a ReflectionObject');
                if (t.parent !== this)
                  throw Error(t + ' is not a member of ' + this);
                return (
                  delete this.nested[t.name],
                  Object.keys(this.nested).length || (this.nested = undefined),
                  t.onRemove(this),
                  r(this)
                );
              }),
              (a.prototype.define = function(t, e) {
                if (u.isString(t)) t = t.split('.');
                else if (!Array.isArray(t)) throw TypeError('illegal path');
                if (t && t.length && '' === t[0])
                  throw Error('path must be relative');
                for (var i = this; t.length > 0; ) {
                  var n = t.shift();
                  if (i.nested && i.nested[n]) {
                    if (!((i = i.nested[n]) instanceof a))
                      throw Error('path conflicts with non-namespace objects');
                  } else i.add((i = new a(n)));
                }
                return e && i.addJSON(e), i;
              }),
              (a.prototype.resolveAll = function() {
                for (var t = this.nestedArray, e = 0; e < t.length; )
                  t[e] instanceof a ? t[e++].resolveAll() : t[e++].resolve();
                return this.resolve();
              }),
              (a.prototype.lookup = function(t, e, i) {
                if (
                  ('boolean' == typeof e && ((i = e), (e = undefined)),
                  u.isString(t) && t.length)
                ) {
                  if ('.' === t) return this.root;
                  t = t.split('.');
                } else if (!t.length) return this;
                if ('' === t[0]) return this.root.lookup(t.slice(1), e);
                var n = this.get(t[0]);
                if (n)
                  if (1 === t.length) {
                    if (!e || n instanceof e) return n;
                  } else if (
                    n instanceof a &&
                    (n = n.lookup(t.slice(1), e, !0))
                  )
                    return n;
                return null === this.parent || i
                  ? null
                  : this.parent.lookup(t, e);
              }),
              (a.prototype.lookupType = function(t) {
                var e = this.lookup(t, o);
                if (!e) throw Error('no such type');
                return e;
              }),
              (a.prototype.lookupService = function(t) {
                var e = this.lookup(t, l);
                if (!e) throw Error('no such service');
                return e;
              }),
              (a.prototype.lookupEnum = function(t) {
                var e = this.lookup(t, h);
                if (!e) throw Error('no such enum');
                return e.values;
              }),
              (a._configure = function(t, e) {
                (o = t), (l = e);
              });
          },
          { 15: 15, 16: 16, 24: 24, 36: 36 }
        ],
        24: [
          function(t, e, i) {
            function n(t, e) {
              if (!r.isString(t)) throw TypeError('name must be a string');
              if (e && !r.isObject(e))
                throw TypeError('options must be an object');
              (this.options = e),
                (this.name = t),
                (this.parent = null),
                (this.resolved = !1),
                (this.comment = null),
                (this.filename = null);
            }
            (e.exports = n), (n.className = 'ReflectionObject');
            var a,
              r = t(36);
            Object.defineProperties(n.prototype, {
              root: {
                get: function() {
                  for (var t = this; null !== t.parent; ) t = t.parent;
                  return t;
                }
              },
              fullName: {
                get: function() {
                  for (var t = [this.name], e = this.parent; e; )
                    t.unshift(e.name), (e = e.parent);
                  return t.join('.');
                }
              }
            }),
              (n.prototype.toJSON = function() {
                throw Error();
              }),
              (n.prototype.onAdd = function(t) {
                this.parent && this.parent !== t && this.parent.remove(this),
                  (this.parent = t),
                  (this.resolved = !1);
                var e = t.root;
                e instanceof a && e._handleAdd(this);
              }),
              (n.prototype.onRemove = function(t) {
                var e = t.root;
                e instanceof a && e._handleRemove(this),
                  (this.parent = null),
                  (this.resolved = !1);
              }),
              (n.prototype.resolve = function() {
                return this.resolved
                  ? this
                  : (this.root instanceof a && (this.resolved = !0), this);
              }),
              (n.prototype.getOption = function(t) {
                return this.options ? this.options[t] : undefined;
              }),
              (n.prototype.setOption = function(t, e, i) {
                return (
                  (i && this.options && this.options[t] !== undefined) ||
                    ((this.options || (this.options = {}))[t] = e),
                  this
                );
              }),
              (n.prototype.setOptions = function(t, e) {
                if (t)
                  for (var i = Object.keys(t), n = 0; n < i.length; ++n)
                    this.setOption(i[n], t[i[n]], e);
                return this;
              }),
              (n.prototype.toString = function() {
                var t = this.constructor.className,
                  e = this.fullName;
                return e.length ? t + ' ' + e : t;
              }),
              (n._configure = function(t) {
                a = t;
              });
          },
          { 36: 36 }
        ],
        25: [
          function(t, e, i) {
            function n(t, e, i) {
              if (
                (Array.isArray(e) || ((i = e), (e = undefined)),
                r.call(this, t, i),
                e !== undefined && !Array.isArray(e))
              )
                throw TypeError('fieldNames must be an Array');
              (this.oneof = e || []), (this.fieldsArray = []);
            }
            function a(t) {
              if (t.parent)
                for (var e = 0; e < t.fieldsArray.length; ++e)
                  t.fieldsArray[e].parent || t.parent.add(t.fieldsArray[e]);
            }
            e.exports = n;
            var r = t(24);
            ((n.prototype = Object.create(
              r.prototype
            )).constructor = n).className = 'OneOf';
            var s = t(16);
            (n.fromJSON = function(t, e) {
              return new n(t, e.oneof, e.options);
            }),
              (n.prototype.toJSON = function() {
                return { oneof: this.oneof, options: this.options };
              }),
              (n.prototype.add = function(t) {
                if (!(t instanceof s)) throw TypeError('field must be a Field');
                return (
                  t.parent && t.parent !== this.parent && t.parent.remove(t),
                  this.oneof.push(t.name),
                  this.fieldsArray.push(t),
                  (t.partOf = this),
                  a(this),
                  this
                );
              }),
              (n.prototype.remove = function(t) {
                if (!(t instanceof s)) throw TypeError('field must be a Field');
                var e = this.fieldsArray.indexOf(t);
                if (e < 0) throw Error(t + ' is not a member of ' + this);
                return (
                  this.fieldsArray.splice(e, 1),
                  (e = this.oneof.indexOf(t.name)) > -1 &&
                    this.oneof.splice(e, 1),
                  (t.partOf = null),
                  this
                );
              }),
              (n.prototype.onAdd = function(t) {
                r.prototype.onAdd.call(this, t);
                for (var e = 0; e < this.oneof.length; ++e) {
                  var i = t.get(this.oneof[e]);
                  i &&
                    !i.partOf &&
                    ((i.partOf = this), this.fieldsArray.push(i));
                }
                a(this);
              }),
              (n.prototype.onRemove = function(t) {
                for (var e, i = 0; i < this.fieldsArray.length; ++i)
                  (e = this.fieldsArray[i]).parent && e.parent.remove(e);
                r.prototype.onRemove.call(this, t);
              });
          },
          { 16: 16, 24: 24 }
        ],
        26: [
          function(t, e, i) {
            function n(t) {
              return null === t ? null : t.toLowerCase();
            }
            function a(t, e, i) {
              function M(t, e, i) {
                var n = a.filename;
                return (
                  i || (a.filename = null),
                  Error(
                    'illegal ' +
                      (e || 'token') +
                      " '" +
                      t +
                      "' (" +
                      (n ? n + ', ' : '') +
                      'line ' +
                      X.line() +
                      ')'
                  )
                );
              }
              function E() {
                var t,
                  e = [];
                do {
                  if ('"' !== (t = q()) && "'" !== t) throw M(t);
                  e.push(q()), K(t), (t = J());
                } while ('"' === t || "'" === t);
                return e.join('');
              }
              function L(t) {
                var e = q();
                switch (n(e)) {
                  case "'":
                  case '"':
                    return Y(e), E();
                  case 'true':
                    return !0;
                  case 'false':
                    return !1;
                }
                try {
                  return (function(t, e) {
                    var i = 1;
                    '-' === t.charAt(0) && ((i = -1), (t = t.substring(1)));
                    var a = n(t);
                    switch (a) {
                      case 'inf':
                        return i * (1 / 0);
                      case 'nan':
                        return NaN;
                      case '0':
                        return 0;
                    }
                    if (m.test(t)) return i * parseInt(t, 10);
                    if (y.test(a)) return i * parseInt(t, 16);
                    if (b.test(t)) return i * parseInt(t, 8);
                    if (x.test(a)) return i * parseFloat(t);
                    throw M(t, 'number', e);
                  })(e, !0);
                } catch (i) {
                  if (t && C.test(e)) return e;
                  throw M(e, 'value');
                }
              }
              function D(t, e) {
                var i, n;
                do {
                  !e || ('"' !== (i = J()) && "'" !== i)
                    ? t.push([(n = A(q())), K('to', !0) ? A(q()) : n])
                    : t.push(E());
                } while (K(',', !0));
                K(';');
              }
              function A(t, e) {
                var i = n(t);
                switch (i) {
                  case 'max':
                    return 536870911;
                  case '0':
                    return 0;
                }
                if ('-' === t.charAt(0) && !e) throw M(t, 'id');
                if (g.test(t)) return parseInt(t, 10);
                if (v.test(i)) return parseInt(t, 16);
                if (w.test(t)) return parseInt(t, 8);
                throw M(t, 'id');
              }
              function N() {
                if (H !== undefined) throw M('package');
                if (((H = q()), !C.test(H))) throw M(H, 'name');
                (tt = tt.define(H)), K(';');
              }
              function R() {
                var t,
                  e = J();
                switch (e) {
                  case 'weak':
                    (t = z || (z = [])), q();
                    break;
                  case 'public':
                    q();
                  default:
                    t = G || (G = []);
                }
                (e = E()), K(';'), t.push(e);
              }
              function B() {
                if (
                  (K('='),
                  (j = n(E())),
                  !($ = 'proto3' === j) && 'proto2' !== j)
                )
                  throw M(j, 'syntax');
                K(';');
              }
              function k(t, e) {
                switch (e) {
                  case 'option':
                    return O(t, e), K(';'), !0;
                  case 'message':
                    return (
                      (function(t, e) {
                        var i = q();
                        if (!I.test(i)) throw M(i, 'type name');
                        var r = new o(i);
                        if (
                          ((r.comment = Z()),
                          (r.filename = a.filename),
                          K('{', !0))
                        ) {
                          for (; '}' !== (e = q()); ) {
                            var s = n(e);
                            if (!k(r, e))
                              switch (s) {
                                case 'map':
                                  !(function(t) {
                                    K('<');
                                    var e = q();
                                    if (f.mapKey[e] === undefined)
                                      throw M(e, 'type');
                                    K(',');
                                    var i = q();
                                    if (!C.test(i)) throw M(i, 'type');
                                    K('>');
                                    var n = q();
                                    if (!I.test(n)) throw M(n, 'name');
                                    (n = et(n)), K('=');
                                    var r = new h(n, A(q()), e, i),
                                      s = X.line();
                                    (r.comment = Z()),
                                      (r.filename = a.filename),
                                      F(r),
                                      r.comment || (r.comment = Z(s));
                                    t.add(r);
                                  })(r);
                                  break;
                                case 'required':
                                case 'optional':
                                case 'repeated':
                                  P(r, s);
                                  break;
                                case 'oneof':
                                  !(function(t, e) {
                                    var i = q();
                                    if (!I.test(i)) throw M(i, 'name');
                                    i = et(i);
                                    var n = new c(i),
                                      r = X.line();
                                    if (
                                      ((n.comment = Z()),
                                      (n.filename = a.filename),
                                      K('{', !0))
                                    ) {
                                      for (; '}' !== (e = q()); )
                                        'option' === e
                                          ? (O(n, e), K(';'))
                                          : (Y(e), P(n, 'optional'));
                                      K(';', !0);
                                    } else
                                      K(';'), n.comment || (n.comment = Z(r));
                                    t.add(n);
                                  })(r, s);
                                  break;
                                case 'extensions':
                                  D(r.extensions || (r.extensions = []));
                                  break;
                                case 'reserved':
                                  D(r.reserved || (r.reserved = []), !0);
                                  break;
                                default:
                                  if (!$ || !C.test(e)) throw M(e);
                                  Y(e), P(r, 'optional');
                              }
                          }
                          K(';', !0);
                        } else K(';');
                        t.add(r);
                      })(t, e),
                      !0
                    );
                  case 'enum':
                    return (
                      (function(t, e) {
                        var i = q();
                        if (!I.test(i)) throw M(i, 'name');
                        var r = new u(i);
                        if (
                          ((r.comment = Z()),
                          (r.filename = a.filename),
                          K('{', !0))
                        ) {
                          for (; '}' !== (e = q()); )
                            'option' === n(e)
                              ? (O(r, e), K(';'))
                              : (function(t, e) {
                                  if (!I.test(e)) throw M(e, 'name');
                                  var i = e;
                                  K('=');
                                  var n = A(q(), !0),
                                    a = X.line();
                                  t.add(i, n, Z()),
                                    F({}),
                                    t.comments[i] || (t.comments[i] = Z(a));
                                })(r, e);
                          K(';', !0);
                        } else K(';');
                        t.add(r);
                      })(t, e),
                      !0
                    );
                  case 'service':
                    return (
                      (function(t, e) {
                        if (((e = q()), !I.test(e))) throw M(e, 'service name');
                        var i = new _(e);
                        if (
                          ((i.comment = Z()),
                          (i.filename = a.filename),
                          K('{', !0))
                        ) {
                          for (; '}' !== (e = q()); ) {
                            var r = n(e);
                            switch (r) {
                              case 'option':
                                O(i, r), K(';');
                                break;
                              case 'rpc':
                                !(function(t, e) {
                                  var i = e,
                                    r = q();
                                  if (!I.test(r)) throw M(r, 'name');
                                  var s, o, l, h;
                                  K('('), K('stream', !0) && (o = !0);
                                  if (!C.test((e = q()))) throw M(e);
                                  (s = e),
                                    K(')'),
                                    K('returns'),
                                    K('('),
                                    K('stream', !0) && (h = !0);
                                  if (!C.test((e = q()))) throw M(e);
                                  (l = e), K(')');
                                  var c = new d(r, i, s, l, o, h),
                                    u = X.line();
                                  if (
                                    ((c.comment = Z()),
                                    (c.filename = a.filename),
                                    K('{', !0))
                                  ) {
                                    for (; '}' !== (e = q()); ) {
                                      var _ = n(e);
                                      switch (_) {
                                        case 'option':
                                          O(c, _), K(';');
                                          break;
                                        default:
                                          throw M(e);
                                      }
                                    }
                                    K(';', !0);
                                  } else
                                    K(';'), c.comment || (c.comment = Z(u));
                                  t.add(c);
                                })(i, r);
                                break;
                              default:
                                throw M(e);
                            }
                          }
                          K(';', !0);
                        } else K(';');
                        t.add(i);
                      })(t, e),
                      !0
                    );
                  case 'extend':
                    return (
                      (function(t, e) {
                        var i = q();
                        if (!C.test(i)) throw M(i, 'reference');
                        if (K('{', !0)) {
                          for (; '}' !== (e = q()); ) {
                            var a = n(e);
                            switch (a) {
                              case 'required':
                              case 'repeated':
                              case 'optional':
                                P(t, a, i);
                                break;
                              default:
                                if (!$ || !C.test(e)) throw M(e);
                                Y(e), P(t, 'optional', i);
                            }
                          }
                          K(';', !0);
                        } else K(';');
                      })(t, e),
                      !0
                    );
                }
                return !1;
              }
              function P(t, e, i) {
                var r = q();
                if ('group' !== r) {
                  if (!C.test(r)) throw M(r, 'type');
                  var s = q();
                  if (!I.test(s)) throw M(s, 'name');
                  (s = et(s)), K('=');
                  var h = new l(s, A(q()), r, e, i),
                    c = X.line();
                  (h.comment = Z()),
                    (h.filename = a.filename),
                    F(h),
                    h.comment || (h.comment = Z(c)),
                    !$ && h.repeated && h.setOption('packed', !1, !0),
                    t.add(h);
                } else
                  !(function(t, e) {
                    var i = q();
                    if (!I.test(i)) throw M(i, 'name');
                    var r = p.lcFirst(i);
                    i === r && (i = p.ucFirst(i));
                    K('=');
                    var s = A(q()),
                      h = new o(i);
                    (h.group = !0), (h.comment = Z());
                    var c = new l(r, s, i, e);
                    (h.filename = c.filename = a.filename), K('{');
                    for (; '}' !== (W = q()); )
                      switch ((W = n(W))) {
                        case 'option':
                          O(h, W), K(';');
                          break;
                        case 'required':
                        case 'optional':
                        case 'repeated':
                          P(h, W);
                          break;
                        default:
                          throw M(W);
                      }
                    K(';', !0), t.add(h).add(c);
                  })(t, e);
              }
              function O(t, e) {
                var i = K('(', !0),
                  n = q();
                if (!C.test(n)) throw M(n, 'name');
                i &&
                  (K(')'),
                  (n = '(' + n + ')'),
                  (e = J()),
                  S.test(e) && ((n += e), q())),
                  K('='),
                  U(t, n);
              }
              function U(t, e) {
                if (K('{', !0))
                  do {
                    if (!I.test((W = q()))) throw M(W, 'name');
                    '{' === J()
                      ? U(t, e + '.' + W)
                      : (K(':'), V(t, e + '.' + W, L(!0)));
                  } while (!K('}', !0));
                else V(t, e, L(!0));
              }
              function V(t, e, i) {
                t.setOption && t.setOption(e, i);
              }
              function F(t) {
                if (K('[', !0)) {
                  do {
                    O(t, 'option');
                  } while (K(',', !0));
                  K(']');
                }
                return K(';'), t;
              }
              e instanceof s || ((i = e), (e = new s())), i || (i = a.defaults);
              for (
                var H,
                  G,
                  z,
                  j,
                  W,
                  X = r(t),
                  q = X.next,
                  Y = X.push,
                  J = X.peek,
                  K = X.skip,
                  Z = X.cmnt,
                  Q = !0,
                  $ = !1,
                  tt = e,
                  et = i.keepCase
                    ? function(t) {
                        return t;
                      }
                    : function(t) {
                        return (
                          t.substring(0, 1) +
                          t.substring(1).replace(T, function(t, e) {
                            return e.toUpperCase();
                          })
                        );
                      };
                null !== (W = q());

              ) {
                switch (n(W)) {
                  case 'package':
                    if (!Q) throw M(W);
                    N();
                    break;
                  case 'import':
                    if (!Q) throw M(W);
                    R();
                    break;
                  case 'syntax':
                    if (!Q) throw M(W);
                    B();
                    break;
                  case 'option':
                    if (!Q) throw M(W);
                    O(tt, W), K(';');
                    break;
                  default:
                    if (k(tt, W)) {
                      Q = !1;
                      continue;
                    }
                    throw M(W);
                }
              }
              return (
                (a.filename = null),
                { package: H, imports: G, weakImports: z, syntax: j, root: e }
              );
            }
            (e.exports = a),
              (a.filename = null),
              (a.defaults = { keepCase: !1 });
            var r = t(33),
              s = t(29),
              o = t(34),
              l = t(16),
              h = t(20),
              c = t(25),
              u = t(15),
              _ = t(32),
              d = t(22),
              f = t(35),
              p = t(36),
              m = /^[1-9][0-9]*$/,
              g = /^-?[1-9][0-9]*$/,
              y = /^0[x][0-9a-f]+$/,
              v = /^-?0[x][0-9a-f]+$/,
              b = /^0[0-7]+$/,
              w = /^-?0[0-7]+$/,
              x = /^(?!e)[0-9]*(?:\.[0-9]*)?(?:[e][+-]?[0-9]+)?$/,
              I = /^[a-zA-Z_][a-zA-Z_0-9]*$/,
              C = /^(?:\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,
              S = /^(?:\.[a-zA-Z][a-zA-Z_0-9]*)+$/,
              T = /_([a-z])(?=[a-z]|$)/g;
          },
          {
            15: 15,
            16: 16,
            20: 20,
            22: 22,
            25: 25,
            29: 29,
            32: 32,
            33: 33,
            34: 34,
            35: 35,
            36: 36
          }
        ],
        27: [
          function(t, e, i) {
            function n(t, e) {
              return RangeError(
                'index out of range: ' +
                  t.pos +
                  ' + ' +
                  (e || 1) +
                  ' > ' +
                  t.len
              );
            }
            function a(t) {
              (this.buf = t), (this.pos = 0), (this.len = t.length);
            }
            function r() {
              var t = new c(0, 0),
                e = 0;
              if (!(this.len - this.pos > 4)) {
                for (; e < 3; ++e) {
                  if (this.pos >= this.len) throw n(this);
                  if (
                    ((t.lo =
                      (t.lo | ((127 & this.buf[this.pos]) << (7 * e))) >>> 0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
                }
                return (
                  (t.lo =
                    (t.lo | ((127 & this.buf[this.pos++]) << (7 * e))) >>> 0),
                  t
                );
              }
              for (; e < 4; ++e)
                if (
                  ((t.lo =
                    (t.lo | ((127 & this.buf[this.pos]) << (7 * e))) >>> 0),
                  this.buf[this.pos++] < 128)
                )
                  return t;
              if (
                ((t.lo = (t.lo | ((127 & this.buf[this.pos]) << 28)) >>> 0),
                (t.hi = (t.hi | ((127 & this.buf[this.pos]) >> 4)) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
              if (((e = 0), this.len - this.pos > 4)) {
                for (; e < 5; ++e)
                  if (
                    ((t.hi =
                      (t.hi | ((127 & this.buf[this.pos]) << (7 * e + 3))) >>>
                      0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
              } else
                for (; e < 5; ++e) {
                  if (this.pos >= this.len) throw n(this);
                  if (
                    ((t.hi =
                      (t.hi | ((127 & this.buf[this.pos]) << (7 * e + 3))) >>>
                      0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
                }
              throw Error('invalid varint encoding');
            }
            function s(t, e) {
              return (
                (t[e - 4] |
                  (t[e - 3] << 8) |
                  (t[e - 2] << 16) |
                  (t[e - 1] << 24)) >>>
                0
              );
            }
            function o() {
              if (this.pos + 8 > this.len) throw n(this, 8);
              return new c(
                s(this.buf, (this.pos += 4)),
                s(this.buf, (this.pos += 4))
              );
            }
            e.exports = a;
            var l,
              h = t(38),
              c = h.LongBits,
              u = h.utf8,
              _ =
                'undefined' != typeof Uint8Array
                  ? function(t) {
                      if (t instanceof Uint8Array || Array.isArray(t))
                        return new a(t);
                      throw Error('illegal buffer');
                    }
                  : function(t) {
                      if (Array.isArray(t)) return new a(t);
                      throw Error('illegal buffer');
                    };
            (a.create = h.Buffer
              ? function(t) {
                  return (a.create = function(t) {
                    return h.Buffer.isBuffer(t) ? new l(t) : _(t);
                  })(t);
                }
              : _),
              (a.prototype._slice =
                h.Array.prototype.subarray || h.Array.prototype.slice),
              (a.prototype.uint32 = (function() {
                var t = 4294967295;
                return function() {
                  if (
                    ((t = (127 & this.buf[this.pos]) >>> 0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
                  if (
                    ((t = (t | ((127 & this.buf[this.pos]) << 7)) >>> 0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
                  if (
                    ((t = (t | ((127 & this.buf[this.pos]) << 14)) >>> 0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
                  if (
                    ((t = (t | ((127 & this.buf[this.pos]) << 21)) >>> 0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
                  if (
                    ((t = (t | ((15 & this.buf[this.pos]) << 28)) >>> 0),
                    this.buf[this.pos++] < 128)
                  )
                    return t;
                  if ((this.pos += 5) > this.len)
                    throw ((this.pos = this.len), n(this, 10));
                  return t;
                };
              })()),
              (a.prototype.int32 = function() {
                return 0 | this.uint32();
              }),
              (a.prototype.sint32 = function() {
                var t = this.uint32();
                return ((t >>> 1) ^ -(1 & t)) | 0;
              }),
              (a.prototype.bool = function() {
                return 0 !== this.uint32();
              }),
              (a.prototype.fixed32 = function() {
                if (this.pos + 4 > this.len) throw n(this, 4);
                return s(this.buf, (this.pos += 4));
              }),
              (a.prototype.sfixed32 = function() {
                if (this.pos + 4 > this.len) throw n(this, 4);
                return 0 | s(this.buf, (this.pos += 4));
              });
            var d =
              'undefined' != typeof Float32Array
                ? (function() {
                    var t = new Float32Array(1),
                      e = new Uint8Array(t.buffer);
                    return (
                      (t[0] = -0),
                      e[3]
                        ? function(i, n) {
                            return (
                              (e[0] = i[n]),
                              (e[1] = i[n + 1]),
                              (e[2] = i[n + 2]),
                              (e[3] = i[n + 3]),
                              t[0]
                            );
                          }
                        : function(i, n) {
                            return (
                              (e[0] = i[n + 3]),
                              (e[1] = i[n + 2]),
                              (e[2] = i[n + 1]),
                              (e[3] = i[n]),
                              t[0]
                            );
                          }
                    );
                  })()
                : function(t, e) {
                    var i = s(t, e + 4),
                      n = 2 * (i >> 31) + 1,
                      a = (i >>> 23) & 255,
                      r = 8388607 & i;
                    return 255 === a
                      ? r
                        ? NaN
                        : n * (1 / 0)
                      : 0 === a
                      ? 1.401298464324817e-45 * n * r
                      : n * Math.pow(2, a - 150) * (r + 8388608);
                  };
            a.prototype.float = function() {
              if (this.pos + 4 > this.len) throw n(this, 4);
              var t = d(this.buf, this.pos);
              return (this.pos += 4), t;
            };
            var f =
              'undefined' != typeof Float64Array
                ? (function() {
                    var t = new Float64Array(1),
                      e = new Uint8Array(t.buffer);
                    return (
                      (t[0] = -0),
                      e[7]
                        ? function(i, n) {
                            return (
                              (e[0] = i[n]),
                              (e[1] = i[n + 1]),
                              (e[2] = i[n + 2]),
                              (e[3] = i[n + 3]),
                              (e[4] = i[n + 4]),
                              (e[5] = i[n + 5]),
                              (e[6] = i[n + 6]),
                              (e[7] = i[n + 7]),
                              t[0]
                            );
                          }
                        : function(i, n) {
                            return (
                              (e[0] = i[n + 7]),
                              (e[1] = i[n + 6]),
                              (e[2] = i[n + 5]),
                              (e[3] = i[n + 4]),
                              (e[4] = i[n + 3]),
                              (e[5] = i[n + 2]),
                              (e[6] = i[n + 1]),
                              (e[7] = i[n]),
                              t[0]
                            );
                          }
                    );
                  })()
                : function(t, e) {
                    var i = s(t, e + 4),
                      n = s(t, e + 8),
                      a = 2 * (n >> 31) + 1,
                      r = (n >>> 20) & 2047,
                      o = 4294967296 * (1048575 & n) + i;
                    return 2047 === r
                      ? o
                        ? NaN
                        : a * (1 / 0)
                      : 0 === r
                      ? 5e-324 * a * o
                      : a * Math.pow(2, r - 1075) * (o + 4503599627370496);
                  };
            (a.prototype.double = function() {
              if (this.pos + 8 > this.len) throw n(this, 4);
              var t = f(this.buf, this.pos);
              return (this.pos += 8), t;
            }),
              (a.prototype.bytes = function() {
                var t = this.uint32(),
                  e = this.pos,
                  i = this.pos + t;
                if (i > this.len) throw n(this, t);
                return (
                  (this.pos += t),
                  e === i
                    ? new this.buf.constructor(0)
                    : this._slice.call(this.buf, e, i)
                );
              }),
              (a.prototype.string = function() {
                var t = this.bytes();
                return u.read(t, 0, t.length);
              }),
              (a.prototype.skip = function(t) {
                if ('number' == typeof t) {
                  if (this.pos + t > this.len) throw n(this, t);
                  this.pos += t;
                } else
                  do {
                    if (this.pos >= this.len) throw n(this);
                  } while (128 & this.buf[this.pos++]);
                return this;
              }),
              (a.prototype.skipType = function(t) {
                switch (t) {
                  case 0:
                    this.skip();
                    break;
                  case 1:
                    this.skip(8);
                    break;
                  case 2:
                    this.skip(this.uint32());
                    break;
                  case 3:
                    for (;;) {
                      if (4 == (t = 7 & this.uint32())) break;
                      this.skipType(t);
                    }
                    break;
                  case 5:
                    this.skip(4);
                    break;
                  default:
                    throw Error(
                      'invalid wire type ' + t + ' at offset ' + this.pos
                    );
                }
                return this;
              }),
              (a._configure = function(t) {
                l = t;
                var e = h.Long ? 'toLong' : 'toNumber';
                h.merge(a.prototype, {
                  int64: function() {
                    return r.call(this)[e](!1);
                  },
                  uint64: function() {
                    return r.call(this)[e](!0);
                  },
                  sint64: function() {
                    return r
                      .call(this)
                      .zzDecode()
                      [e](!1);
                  },
                  fixed64: function() {
                    return o.call(this)[e](!0);
                  },
                  sfixed64: function() {
                    return o.call(this)[e](!1);
                  }
                });
              });
          },
          { 38: 38 }
        ],
        28: [
          function(t, e, i) {
            function n(t) {
              a.call(this, t);
            }
            e.exports = n;
            var a = t(27);
            (n.prototype = Object.create(a.prototype)).constructor = n;
            var r = t(38);
            r.Buffer && (n.prototype._slice = r.Buffer.prototype.slice),
              (n.prototype.string = function() {
                var t = this.uint32();
                return this.buf.utf8Slice(
                  this.pos,
                  (this.pos = Math.min(this.pos + t, this.len))
                );
              });
          },
          { 27: 27, 38: 38 }
        ],
        29: [
          function(t, e, i) {
            function n(t) {
              s.call(this, '', t), (this.deferred = []), (this.files = []);
            }
            function a() {}
            function r(t, e) {
              var i = e.parent.lookup(e.extend);
              if (i) {
                var n = new c(
                  e.fullName,
                  e.id,
                  e.type,
                  e.rule,
                  undefined,
                  e.options
                );
                return (
                  (n.declaringField = e), (e.extensionField = n), i.add(n), !0
                );
              }
              return !1;
            }
            e.exports = n;
            var s = t(23);
            ((n.prototype = Object.create(
              s.prototype
            )).constructor = n).className = 'Root';
            var o,
              l,
              h,
              c = t(16),
              u = t(15),
              _ = t(36);
            (n.fromJSON = function(t, e) {
              return (
                e || (e = new n()),
                t.options && e.setOptions(t.options),
                e.addJSON(t.nested)
              );
            }),
              (n.prototype.resolvePath = _.path.resolve),
              (n.prototype.load = function t(e, i, n) {
                function r(t, e) {
                  if (n) {
                    var i = n;
                    if (((n = null), u)) throw t;
                    i(t, e);
                  }
                }
                function s(t, e) {
                  try {
                    if (
                      (_.isString(e) &&
                        '{' === e.charAt(0) &&
                        (e = JSON.parse(e)),
                      _.isString(e))
                    ) {
                      l.filename = t;
                      var n,
                        a = l(e, c, i),
                        s = 0;
                      if (a.imports)
                        for (; s < a.imports.length; ++s)
                          (n = c.resolvePath(t, a.imports[s])) && o(n);
                      if (a.weakImports)
                        for (s = 0; s < a.weakImports.length; ++s)
                          (n = c.resolvePath(t, a.weakImports[s])) && o(n, !0);
                    } else c.setOptions(e.options).addJSON(e.nested);
                  } catch (t) {
                    r(t);
                  }
                  u || d || r(null, c);
                }
                function o(t, e) {
                  var i = t.lastIndexOf('google/protobuf/');
                  if (i > -1) {
                    var a = t.substring(i);
                    a in h && (t = a);
                  }
                  if (!(c.files.indexOf(t) > -1))
                    if ((c.files.push(t), t in h))
                      u
                        ? s(t, h[t])
                        : (++d,
                          setTimeout(function() {
                            --d, s(t, h[t]);
                          }));
                    else if (u) {
                      var o;
                      try {
                        o = _.fs.readFileSync(t).toString('utf8');
                      } catch (t) {
                        return void (e || r(t));
                      }
                      s(t, o);
                    } else
                      ++d,
                        _.fetch(t, function(i, a) {
                          --d,
                            n && (i ? (e ? d || r(null, c) : r(i)) : s(t, a));
                        });
                }
                'function' == typeof i && ((n = i), (i = undefined));
                var c = this;
                if (!n) return _.asPromise(t, c, e, i);
                var u = n === a,
                  d = 0;
                _.isString(e) && (e = [e]);
                for (var f, p = 0; p < e.length; ++p)
                  (f = c.resolvePath('', e[p])) && o(f);
                return u ? c : (d || r(null, c), undefined);
              }),
              (n.prototype.loadSync = function(t, e) {
                if (!_.isNode) throw Error('not supported');
                return this.load(t, e, a);
              }),
              (n.prototype.resolveAll = function() {
                if (this.deferred.length)
                  throw Error(
                    'unresolvable extensions: ' +
                      this.deferred
                        .map(function(t) {
                          return (
                            "'extend " + t.extend + "' in " + t.parent.fullName
                          );
                        })
                        .join(', ')
                  );
                return s.prototype.resolveAll.call(this);
              });
            var d = /^[A-Z]/;
            (n.prototype._handleAdd = function(t) {
              if (t instanceof c)
                t.extend === undefined ||
                  t.extensionField ||
                  r(0, t) ||
                  this.deferred.push(t);
              else if (t instanceof u)
                d.test(t.name) && (t.parent[t.name] = t.values);
              else {
                if (t instanceof o)
                  for (var e = 0; e < this.deferred.length; )
                    r(0, this.deferred[e]) ? this.deferred.splice(e, 1) : ++e;
                for (var i = 0; i < t.nestedArray.length; ++i)
                  this._handleAdd(t._nestedArray[i]);
                d.test(t.name) && (t.parent[t.name] = t);
              }
            }),
              (n.prototype._handleRemove = function(t) {
                if (t instanceof c) {
                  if (t.extend !== undefined)
                    if (t.extensionField)
                      t.extensionField.parent.remove(t.extensionField),
                        (t.extensionField = null);
                    else {
                      var e = this.deferred.indexOf(t);
                      e > -1 && this.deferred.splice(e, 1);
                    }
                } else if (t instanceof u)
                  d.test(t.name) && delete t.parent[t.name];
                else if (t instanceof s) {
                  for (var i = 0; i < t.nestedArray.length; ++i)
                    this._handleRemove(t._nestedArray[i]);
                  d.test(t.name) && delete t.parent[t.name];
                }
              }),
              (n._configure = function(t, e, i) {
                (o = t), (l = e), (h = i);
              });
          },
          { 15: 15, 16: 16, 23: 23, 36: 36 }
        ],
        30: [
          function(t, e, i) {
            i.Service = t(31);
          },
          { 31: 31 }
        ],
        31: [
          function(t, e, i) {
            function n(t, e, i) {
              if ('function' != typeof t)
                throw TypeError('rpcImpl must be a function');
              a.EventEmitter.call(this),
                (this.rpcImpl = t),
                (this.requestDelimited = Boolean(e)),
                (this.responseDelimited = Boolean(i));
            }
            e.exports = n;
            var a = t(38);
            ((n.prototype = Object.create(
              a.EventEmitter.prototype
            )).constructor = n),
              (n.prototype.rpcCall = function t(e, i, n, r, s) {
                if (!r) throw TypeError('request must be specified');
                var o = this;
                if (!s) return a.asPromise(t, o, e, i, n, r);
                if (!o.rpcImpl)
                  return (
                    setTimeout(function() {
                      s(Error('already ended'));
                    }, 0),
                    undefined
                  );
                try {
                  return o.rpcImpl(
                    e,
                    i[o.requestDelimited ? 'encodeDelimited' : 'encode'](
                      r
                    ).finish(),
                    function(t, i) {
                      if (t) return o.emit('error', t, e), s(t);
                      if (null === i) return o.end(!0), undefined;
                      if (!(i instanceof n))
                        try {
                          i = n[
                            o.responseDelimited ? 'decodeDelimited' : 'decode'
                          ](i);
                        } catch (t) {
                          return o.emit('error', t, e), s(t);
                        }
                      return o.emit('data', i, e), s(null, i);
                    }
                  );
                } catch (t) {
                  return (
                    o.emit('error', t, e),
                    setTimeout(function() {
                      s(t);
                    }, 0),
                    undefined
                  );
                }
              }),
              (n.prototype.end = function(t) {
                return (
                  this.rpcImpl &&
                    (t || this.rpcImpl(null, null, null),
                    (this.rpcImpl = null),
                    this.emit('end').off()),
                  this
                );
              });
          },
          { 38: 38 }
        ],
        32: [
          function(t, e, i) {
            function n(t, e) {
              r.call(this, t, e),
                (this.methods = {}),
                (this._methodsArray = null);
            }
            function a(t) {
              return (t._methodsArray = null), t;
            }
            e.exports = n;
            var r = t(23);
            ((n.prototype = Object.create(
              r.prototype
            )).constructor = n).className = 'Service';
            var s = t(22),
              o = t(36),
              l = t(30);
            (n.fromJSON = function(t, e) {
              var i = new n(t, e.options);
              if (e.methods)
                for (var a = Object.keys(e.methods), r = 0; r < a.length; ++r)
                  i.add(s.fromJSON(a[r], e.methods[a[r]]));
              return i;
            }),
              Object.defineProperty(n.prototype, 'methodsArray', {
                get: function() {
                  return (
                    this._methodsArray ||
                    (this._methodsArray = o.toArray(this.methods))
                  );
                }
              }),
              (n.prototype.toJSON = function() {
                var t = r.prototype.toJSON.call(this);
                return {
                  options: (t && t.options) || undefined,
                  methods: r.arrayToJSON(this.methodsArray) || {},
                  nested: (t && t.nested) || undefined
                };
              }),
              (n.prototype.get = function(t) {
                return this.methods[t] || r.prototype.get.call(this, t);
              }),
              (n.prototype.resolveAll = function() {
                for (var t = this.methodsArray, e = 0; e < t.length; ++e)
                  t[e].resolve();
                return r.prototype.resolve.call(this);
              }),
              (n.prototype.add = function(t) {
                if (this.get(t.name))
                  throw Error("duplicate name '" + t.name + "' in " + this);
                return t instanceof s
                  ? ((this.methods[t.name] = t), (t.parent = this), a(this))
                  : r.prototype.add.call(this, t);
              }),
              (n.prototype.remove = function(t) {
                if (t instanceof s) {
                  if (this.methods[t.name] !== t)
                    throw Error(t + ' is not a member of ' + this);
                  return (
                    delete this.methods[t.name], (t.parent = null), a(this)
                  );
                }
                return r.prototype.remove.call(this, t);
              }),
              (n.prototype.create = function(t, e, i) {
                for (
                  var n = new l.Service(t, e, i), a = 0;
                  a < this.methodsArray.length;
                  ++a
                )
                  n[o.lcFirst(this._methodsArray[a].resolve().name)] = o
                    .codegen('r', 'c')('return this.rpcCall(m,q,s,r,c)')
                    .eof(o.lcFirst(this._methodsArray[a].name), {
                      m: this._methodsArray[a],
                      q: this._methodsArray[a].resolvedRequestType.ctor,
                      s: this._methodsArray[a].resolvedResponseType.ctor
                    });
                return n;
              });
          },
          { 22: 22, 23: 23, 30: 30, 36: 36 }
        ],
        33: [
          function(t, e, i) {
            function n(t) {
              return t.replace(u, function(t, e) {
                switch (e) {
                  case '\\':
                  case '':
                    return e;
                  default:
                    return _[e] || '';
                }
              });
            }
            function a(t) {
              function e(t) {
                return Error('illegal ' + t + ' (line ' + m + ')');
              }
              function i(e) {
                return t.charAt(e);
              }
              function a(e, i) {
                (g = t.charAt(e++)), (v = m);
                for (
                  var n = t.substring(e, i).split(h), a = 0;
                  a < n.length;
                  ++a
                )
                  n[a] = n[a].replace(l, '').trim();
                y = n.join('\n').trim();
              }
              function u() {
                if (b.length > 0) return b.shift();
                if (w)
                  return (function() {
                    var i = "'" === w ? o : s;
                    i.lastIndex = f - 1;
                    var a = i.exec(t);
                    if (!a) throw e('string');
                    return (f = i.lastIndex), _(w), (w = null), n(a[1]);
                  })();
                var l, h, u, d, g;
                do {
                  if (f === p) return null;
                  for (l = !1; c.test((u = i(f))); )
                    if (('\n' === u && ++m, ++f === p)) return null;
                  if ('/' === i(f)) {
                    if (++f === p) throw e('comment');
                    if ('/' === i(f)) {
                      for (g = '/' === i((d = f + 1)); '\n' !== i(++f); )
                        if (f === p) return null;
                      ++f, g && a(d, f - 1), ++m, (l = !0);
                    } else {
                      if ('*' !== (u = i(f))) return '/';
                      g = '*' === i((d = f + 1));
                      do {
                        if (('\n' === u && ++m, ++f === p)) throw e('comment');
                        (h = u), (u = i(f));
                      } while ('*' !== h || '/' !== u);
                      ++f, g && a(d, f - 2), (l = !0);
                    }
                  }
                } while (l);
                var y = f;
                r.lastIndex = 0;
                if (!r.test(i(y++))) for (; y < p && !r.test(i(y)); ) ++y;
                var v = t.substring(f, (f = y));
                return ('"' !== v && "'" !== v) || (w = v), v;
              }
              function _(t) {
                b.push(t);
              }
              function d() {
                if (!b.length) {
                  var t = u();
                  if (null === t) return null;
                  _(t);
                }
                return b[0];
              }
              var f = 0,
                p = (t = t.toString()).length,
                m = 1,
                g = null,
                y = null,
                v = 0,
                b = [],
                w = null;
              return {
                next: u,
                peek: d,
                push: _,
                skip: function(t, i) {
                  var n = d();
                  if (n === t) return u(), !0;
                  if (!i) throw e("token '" + n + "', '" + t + "' expected");
                  return !1;
                },
                line: function() {
                  return m;
                },
                cmnt: function(t) {
                  var e;
                  return (
                    t === undefined
                      ? (e = (v === m - 1 && y) || null)
                      : (y || d(), (e = (v === t && '/' === g && y) || null)),
                    e && ((g = y = null), (v = 0)),
                    e
                  );
                }
              };
            }
            e.exports = a;
            var r = /[\s{}=;:[\],'"()<>]/g,
              s = /(?:"([^"\\]*(?:\\.[^"\\]*)*)")/g,
              o = /(?:'([^'\\]*(?:\\.[^'\\]*)*)')/g,
              l = /^ *[*/]+ */,
              h = /\n/g,
              c = /\s/,
              u = /\\(.?)/g,
              _ = { 0: '\0', r: '\r', n: '\n', t: '\t' };
            a.unescape = n;
          },
          {}
        ],
        34: [
          function(t, e, i) {
            function n(t, e) {
              r.call(this, t, e),
                (this.fields = {}),
                (this.oneofs = undefined),
                (this.extensions = undefined),
                (this.reserved = undefined),
                (this.group = undefined),
                (this._fieldsById = null),
                (this._fieldsArray = null),
                (this._oneofsArray = null),
                (this._ctor = null);
            }
            function a(t) {
              return (
                (t._fieldsById = t._fieldsArray = t._oneofsArray = t._ctor = null),
                delete t.encode,
                delete t.decode,
                delete t.verify,
                t
              );
            }
            e.exports = n;
            var r = t(23);
            ((n.prototype = Object.create(
              r.prototype
            )).constructor = n).className = 'Type';
            var s = t(15),
              o = t(25),
              l = t(16),
              h = t(20),
              c = t(32),
              u = t(10),
              _ = t(21),
              d = t(27),
              f = t(40),
              p = t(36),
              m = t(14),
              g = t(13),
              y = t(39),
              v = t(12);
            (n.fromJSON = function(t, e) {
              var i = new n(t, e.options);
              (i.extensions = e.extensions), (i.reserved = e.reserved);
              for (var a = Object.keys(e.fields), u = 0; u < a.length; ++u)
                i.add(
                  (void 0 !== e.fields[a[u]].keyType ? h.fromJSON : l.fromJSON)(
                    a[u],
                    e.fields[a[u]]
                  )
                );
              if (e.oneofs)
                for (a = Object.keys(e.oneofs), u = 0; u < a.length; ++u)
                  i.add(o.fromJSON(a[u], e.oneofs[a[u]]));
              if (e.nested)
                for (a = Object.keys(e.nested), u = 0; u < a.length; ++u) {
                  var _ = e.nested[a[u]];
                  i.add(
                    (_.id !== undefined
                      ? l.fromJSON
                      : _.fields !== undefined
                      ? n.fromJSON
                      : _.values !== undefined
                      ? s.fromJSON
                      : _.methods !== undefined
                      ? c.fromJSON
                      : r.fromJSON)(a[u], _)
                  );
                }
              return (
                e.extensions &&
                  e.extensions.length &&
                  (i.extensions = e.extensions),
                e.reserved && e.reserved.length && (i.reserved = e.reserved),
                e.group && (i.group = !0),
                i
              );
            }),
              Object.defineProperties(n.prototype, {
                fieldsById: {
                  get: function() {
                    if (this._fieldsById) return this._fieldsById;
                    this._fieldsById = {};
                    for (
                      var t = Object.keys(this.fields), e = 0;
                      e < t.length;
                      ++e
                    ) {
                      var i = this.fields[t[e]],
                        n = i.id;
                      if (this._fieldsById[n])
                        throw Error('duplicate id ' + n + ' in ' + this);
                      this._fieldsById[n] = i;
                    }
                    return this._fieldsById;
                  }
                },
                fieldsArray: {
                  get: function() {
                    return (
                      this._fieldsArray ||
                      (this._fieldsArray = p.toArray(this.fields))
                    );
                  }
                },
                oneofsArray: {
                  get: function() {
                    return (
                      this._oneofsArray ||
                      (this._oneofsArray = p.toArray(this.oneofs))
                    );
                  }
                },
                ctor: {
                  get: function() {
                    return this._ctor || (this._ctor = u(this).constructor);
                  },
                  set: function(t) {
                    if (t && !(t.prototype instanceof _))
                      throw TypeError('ctor must be a Message constructor');
                    t.from || (t.from = _.from), (this._ctor = t);
                  }
                }
              }),
              (n.prototype.toJSON = function() {
                var t = r.prototype.toJSON.call(this);
                return {
                  options: (t && t.options) || undefined,
                  oneofs: r.arrayToJSON(this.oneofsArray),
                  fields:
                    r.arrayToJSON(
                      this.fieldsArray.filter(function(t) {
                        return !t.declaringField;
                      })
                    ) || {},
                  extensions:
                    this.extensions && this.extensions.length
                      ? this.extensions
                      : undefined,
                  reserved:
                    this.reserved && this.reserved.length
                      ? this.reserved
                      : undefined,
                  group: this.group || undefined,
                  nested: (t && t.nested) || undefined
                };
              }),
              (n.prototype.resolveAll = function() {
                for (var t = this.fieldsArray, e = 0; e < t.length; )
                  t[e++].resolve();
                var i = this.oneofsArray;
                for (e = 0; e < i.length; ) i[e++].resolve();
                return r.prototype.resolve.call(this);
              }),
              (n.prototype.get = function(t) {
                return (
                  this.fields[t] ||
                  (this.oneofs && this.oneofs[t]) ||
                  (this.nested && this.nested[t]) ||
                  null
                );
              }),
              (n.prototype.add = function(t) {
                if (this.get(t.name))
                  throw Error("duplicate name '" + t.name + "' in " + this);
                if (t instanceof l && t.extend === undefined) {
                  if (
                    this._fieldsById
                      ? this._fieldsById[t.id]
                      : this.fieldsById[t.id]
                  )
                    throw Error('duplicate id ' + t.id + ' in ' + this);
                  if (this.isReservedId(t.id))
                    throw Error('id ' + t.id + ' is reserved in ' + this);
                  if (this.isReservedName(t.name))
                    throw Error("name '" + t.name + "' is reserved in " + this);
                  return (
                    t.parent && t.parent.remove(t),
                    (this.fields[t.name] = t),
                    (t.message = this),
                    t.onAdd(this),
                    a(this)
                  );
                }
                return t instanceof o
                  ? (this.oneofs || (this.oneofs = {}),
                    (this.oneofs[t.name] = t),
                    t.onAdd(this),
                    a(this))
                  : r.prototype.add.call(this, t);
              }),
              (n.prototype.remove = function(t) {
                if (t instanceof l && t.extend === undefined) {
                  if (!this.fields || this.fields[t.name] !== t)
                    throw Error(t + ' is not a member of ' + this);
                  return (
                    delete this.fields[t.name],
                    (t.parent = null),
                    t.onRemove(this),
                    a(this)
                  );
                }
                if (t instanceof o) {
                  if (!this.oneofs || this.oneofs[t.name] !== t)
                    throw Error(t + ' is not a member of ' + this);
                  return (
                    delete this.oneofs[t.name],
                    (t.parent = null),
                    t.onRemove(this),
                    a(this)
                  );
                }
                return r.prototype.remove.call(this, t);
              }),
              (n.prototype.isReservedId = function(t) {
                if (this.reserved)
                  for (var e = 0; e < this.reserved.length; ++e)
                    if (
                      'string' != typeof this.reserved[e] &&
                      this.reserved[e][0] <= t &&
                      this.reserved[e][1] >= t
                    )
                      return !0;
                return !1;
              }),
              (n.prototype.isReservedName = function(t) {
                if (this.reserved)
                  for (var e = 0; e < this.reserved.length; ++e)
                    if (this.reserved[e] === t) return !0;
                return !1;
              }),
              (n.prototype.create = function(t) {
                return new this.ctor(t);
              }),
              (n.prototype.setup = function() {
                for (
                  var t = this.fullName, e = [], i = 0;
                  i < this.fieldsArray.length;
                  ++i
                )
                  e.push(this._fieldsArray[i].resolve().resolvedType);
                return (
                  (this.encode = m(this).eof(t + '$encode', {
                    Writer: f,
                    types: e,
                    util: p
                  })),
                  (this.decode = g(this).eof(t + '$decode', {
                    Reader: d,
                    types: e,
                    util: p
                  })),
                  (this.verify = y(this).eof(t + '$verify', {
                    types: e,
                    util: p
                  })),
                  (this.fromObject = this.from = v
                    .fromObject(this)
                    .eof(t + '$fromObject', { types: e, util: p })),
                  (this.toObject = v
                    .toObject(this)
                    .eof(t + '$toObject', { types: e, util: p })),
                  this
                );
              }),
              (n.prototype.encode = function(t, e) {
                return this.setup().encode(t, e);
              }),
              (n.prototype.encodeDelimited = function(t, e) {
                return this.encode(t, e && e.len ? e.fork() : e).ldelim();
              }),
              (n.prototype.decode = function(t, e) {
                return this.setup().decode(t, e);
              }),
              (n.prototype.decodeDelimited = function(t) {
                return (
                  t instanceof d || (t = d.create(t)),
                  this.decode(t, t.uint32())
                );
              }),
              (n.prototype.verify = function(t) {
                return this.setup().verify(t);
              }),
              (n.prototype.fromObject = function(t) {
                return this.setup().fromObject(t);
              }),
              (n.prototype.from = n.prototype.fromObject),
              (n.prototype.toObject = function(t, e) {
                return this.setup().toObject(t, e);
              });
          },
          {
            10: 10,
            12: 12,
            13: 13,
            14: 14,
            15: 15,
            16: 16,
            20: 20,
            21: 21,
            23: 23,
            25: 25,
            27: 27,
            32: 32,
            36: 36,
            39: 39,
            40: 40
          }
        ],
        35: [
          function(t, e, i) {
            function n(t, e) {
              var i = 0,
                n = {};
              for (e |= 0; i < t.length; ) n[s[i + e]] = t[i++];
              return n;
            }
            var a = i,
              r = t(36),
              s = [
                'double',
                'float',
                'int32',
                'uint32',
                'sint32',
                'fixed32',
                'sfixed32',
                'int64',
                'uint64',
                'sint64',
                'fixed64',
                'sfixed64',
                'bool',
                'string',
                'bytes'
              ];
            (a.basic = n([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2])),
              (a.defaults = n([
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                !1,
                '',
                r.emptyArray,
                null
              ])),
              (a.long = n([0, 0, 0, 1, 1], 7)),
              (a.mapKey = n([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2)),
              (a.packed = n([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0]));
          },
          { 36: 36 }
        ],
        36: [
          function(t, e, i) {
            var n = (e.exports = t(38));
            (n.codegen = t(3)),
              (n.fetch = t(5)),
              (n.path = t(7)),
              (n.fs = n.inquire('fs')),
              (n.toArray = function(t) {
                var e = [];
                if (t)
                  for (var i = Object.keys(t), n = 0; n < i.length; ++n)
                    e.push(t[i[n]]);
                return e;
              });
            var a = /\\/g,
              r = /"/g;
            (n.safeProp = function(t) {
              return '["' + t.replace(a, '\\\\').replace(r, '\\"') + '"]';
            }),
              (n.ucFirst = function(t) {
                return t.charAt(0).toUpperCase() + t.substring(1);
              });
          },
          { 3: 3, 38: 38, 5: 5, 7: 7 }
        ],
        37: [
          function(t, e, i) {
            function n(t, e) {
              (this.lo = t >>> 0), (this.hi = e >>> 0);
            }
            e.exports = n;
            var a = t(38),
              r = (n.zero = new n(0, 0));
            (r.toNumber = function() {
              return 0;
            }),
              (r.zzEncode = r.zzDecode = function() {
                return this;
              }),
              (r.length = function() {
                return 1;
              });
            var s = (n.zeroHash = '\0\0\0\0\0\0\0\0');
            (n.fromNumber = function(t) {
              if (0 === t) return r;
              var e = t < 0;
              e && (t = -t);
              var i = t >>> 0,
                a = ((t - i) / 4294967296) >>> 0;
              return (
                e &&
                  ((a = ~a >>> 0),
                  (i = ~i >>> 0),
                  ++i > 4294967295 && ((i = 0), ++a > 4294967295 && (a = 0))),
                new n(i, a)
              );
            }),
              (n.from = function(t) {
                if ('number' == typeof t) return n.fromNumber(t);
                if (a.isString(t)) {
                  if (!a.Long) return n.fromNumber(parseInt(t, 10));
                  t = a.Long.fromString(t);
                }
                return t.low || t.high ? new n(t.low >>> 0, t.high >>> 0) : r;
              }),
              (n.prototype.toNumber = function(t) {
                if (!t && this.hi >>> 31) {
                  var e = (1 + ~this.lo) >>> 0,
                    i = ~this.hi >>> 0;
                  return e || (i = (i + 1) >>> 0), -(e + 4294967296 * i);
                }
                return this.lo + 4294967296 * this.hi;
              }),
              (n.prototype.toLong = function(t) {
                return a.Long
                  ? new a.Long(0 | this.lo, 0 | this.hi, Boolean(t))
                  : {
                      low: 0 | this.lo,
                      high: 0 | this.hi,
                      unsigned: Boolean(t)
                    };
              });
            var o = String.prototype.charCodeAt;
            (n.fromHash = function(t) {
              return t === s
                ? r
                : new n(
                    (o.call(t, 0) |
                      (o.call(t, 1) << 8) |
                      (o.call(t, 2) << 16) |
                      (o.call(t, 3) << 24)) >>>
                      0,
                    (o.call(t, 4) |
                      (o.call(t, 5) << 8) |
                      (o.call(t, 6) << 16) |
                      (o.call(t, 7) << 24)) >>>
                      0
                  );
            }),
              (n.prototype.toHash = function() {
                return String.fromCharCode(
                  255 & this.lo,
                  (this.lo >>> 8) & 255,
                  (this.lo >>> 16) & 255,
                  this.lo >>> 24,
                  255 & this.hi,
                  (this.hi >>> 8) & 255,
                  (this.hi >>> 16) & 255,
                  this.hi >>> 24
                );
              }),
              (n.prototype.zzEncode = function() {
                var t = this.hi >> 31;
                return (
                  (this.hi = (((this.hi << 1) | (this.lo >>> 31)) ^ t) >>> 0),
                  (this.lo = ((this.lo << 1) ^ t) >>> 0),
                  this
                );
              }),
              (n.prototype.zzDecode = function() {
                var t = -(1 & this.lo);
                return (
                  (this.lo = (((this.lo >>> 1) | (this.hi << 31)) ^ t) >>> 0),
                  (this.hi = ((this.hi >>> 1) ^ t) >>> 0),
                  this
                );
              }),
              (n.prototype.length = function() {
                var t = this.lo,
                  e = ((this.lo >>> 28) | (this.hi << 4)) >>> 0,
                  i = this.hi >>> 24;
                return 0 === i
                  ? 0 === e
                    ? t < 16384
                      ? t < 128
                        ? 1
                        : 2
                      : t < 2097152
                      ? 3
                      : 4
                    : e < 16384
                    ? e < 128
                      ? 5
                      : 6
                    : e < 2097152
                    ? 7
                    : 8
                  : i < 128
                  ? 9
                  : 10;
              });
          },
          { 38: 38 }
        ],
        38: [
          function(t, e, i) {
            function n(t, e, i) {
              for (var n = Object.keys(e), a = 0; a < n.length; ++a)
                (t[n[a]] !== undefined && i) || (t[n[a]] = e[n[a]]);
              return t;
            }
            function a(t) {
              function e(t, i) {
                if (!(this instanceof e)) return new e(t, i);
                Object.defineProperty(this, 'message', {
                  get: function() {
                    return t;
                  }
                }),
                  Error.captureStackTrace
                    ? Error.captureStackTrace(this, e)
                    : Object.defineProperty(this, 'stack', {
                        value: new Error().stack || ''
                      }),
                  i && n(this, i);
              }
              return (
                ((e.prototype = Object.create(
                  Error.prototype
                )).constructor = e),
                Object.defineProperty(e.prototype, 'name', {
                  get: function() {
                    return t;
                  }
                }),
                (e.prototype.toString = function() {
                  return this.name + ': ' + this.message;
                }),
                e
              );
            }
            var r = i;
            (r.asPromise = t(1)),
              (r.base64 = t(2)),
              (r.EventEmitter = t(4)),
              (r.inquire = t(6)),
              (r.utf8 = t(9)),
              (r.pool = t(8)),
              (r.LongBits = t(37)),
              (r.emptyArray = Object.freeze ? Object.freeze([]) : []),
              (r.emptyObject = Object.freeze ? Object.freeze({}) : {}),
              (r.isNode = Boolean(
                global.process &&
                  global.process.versions &&
                  global.process.versions.node
              )),
              (r.isInteger =
                Number.isInteger ||
                function(t) {
                  return (
                    'number' == typeof t && isFinite(t) && Math.floor(t) === t
                  );
                }),
              (r.isString = function(t) {
                return 'string' == typeof t || t instanceof String;
              }),
              (r.isObject = function(t) {
                return t && 'object' == typeof t;
              }),
              (r.Buffer = (function() {
                try {
                  var t = r.inquire('buffer').Buffer;
                  return t.prototype.utf8Write ? t : null;
                } catch (t) {
                  return null;
                }
              })()),
              (r._Buffer_from = null),
              (r._Buffer_allocUnsafe = null),
              (r.newBuffer = function(t) {
                return 'number' == typeof t
                  ? r.Buffer
                    ? r._Buffer_allocUnsafe(t)
                    : new r.Array(t)
                  : r.Buffer
                  ? r._Buffer_from(t)
                  : 'undefined' == typeof Uint8Array
                  ? t
                  : new Uint8Array(t);
              }),
              (r.Array = 'undefined' != typeof Uint8Array ? Uint8Array : Array),
              (r.Long =
                (global.dcodeIO && global.dcodeIO.Long) || r.inquire('long')),
              (r.key2Re = /^true|false|0|1$/),
              (r.key32Re = /^-?(?:0|[1-9][0-9]*)$/),
              (r.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/),
              (r.longToHash = function(t) {
                return t ? r.LongBits.from(t).toHash() : r.LongBits.zeroHash;
              }),
              (r.longFromHash = function(t, e) {
                var i = r.LongBits.fromHash(t);
                return r.Long
                  ? r.Long.fromBits(i.lo, i.hi, e)
                  : i.toNumber(Boolean(e));
              }),
              (r.merge = n),
              (r.lcFirst = function(t) {
                return t.charAt(0).toLowerCase() + t.substring(1);
              }),
              (r.newError = a),
              (r.ProtocolError = a('ProtocolError')),
              (r.oneOfGetter = function(t) {
                for (var e = {}, i = 0; i < t.length; ++i) e[t[i]] = 1;
                return function() {
                  for (var t = Object.keys(this), i = t.length - 1; i > -1; --i)
                    if (
                      1 === e[t[i]] &&
                      this[t[i]] !== undefined &&
                      null !== this[t[i]]
                    )
                      return t[i];
                };
              }),
              (r.oneOfSetter = function(t) {
                return function(e) {
                  for (var i = 0; i < t.length; ++i)
                    t[i] !== e && delete this[t[i]];
                };
              }),
              (r.lazyResolve = function(t, e) {
                for (var i = 0; i < e.length; ++i)
                  for (var n = Object.keys(e[i]), a = 0; a < n.length; ++a) {
                    for (var r = e[i][n[a]].split('.'), s = t; r.length; )
                      s = s[r.shift()];
                    e[i][n[a]] = s;
                  }
              }),
              (r.toJSONOptions = {
                longs: String,
                enums: String,
                bytes: String
              }),
              (r._configure = function() {
                var t = r.Buffer;
                t
                  ? ((r._Buffer_from =
                      (t.from !== Uint8Array.from && t.from) ||
                      function(e, i) {
                        return new t(e, i);
                      }),
                    (r._Buffer_allocUnsafe =
                      t.allocUnsafe ||
                      function(e) {
                        return new t(e);
                      }))
                  : (r._Buffer_from = r._Buffer_allocUnsafe = null);
              });
          },
          { 1: 1, 2: 2, 37: 37, 4: 4, 6: 6, 8: 8, 9: 9 }
        ],
        39: [
          function(t, e, i) {
            function n(t, e) {
              return (
                t.name +
                ': ' +
                e +
                (t.repeated && 'array' !== e
                  ? '[]'
                  : t.map && 'object' !== e
                  ? '{k:' + t.keyType + '}'
                  : '') +
                ' expected'
              );
            }
            function a(t, e, i, a) {
              if (e.resolvedType)
                if (e.resolvedType instanceof s) {
                  t('switch(%s){', a)('default:')(
                    'return%j',
                    n(e, 'enum value')
                  );
                  for (
                    var r = Object.keys(e.resolvedType.values), o = 0;
                    o < r.length;
                    ++o
                  )
                    t('case %d:', e.resolvedType.values[r[o]]);
                  t('break')('}');
                } else
                  t('var e=types[%d].verify(%s);', i, a)('if(e)')(
                    'return%j+e',
                    e.name + '.'
                  );
              else
                switch (e.type) {
                  case 'int32':
                  case 'uint32':
                  case 'sint32':
                  case 'fixed32':
                  case 'sfixed32':
                    t('if(!util.isInteger(%s))', a)(
                      'return%j',
                      n(e, 'integer')
                    );
                    break;
                  case 'int64':
                  case 'uint64':
                  case 'sint64':
                  case 'fixed64':
                  case 'sfixed64':
                    t(
                      'if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))',
                      a,
                      a,
                      a,
                      a
                    )('return%j', n(e, 'integer|Long'));
                    break;
                  case 'float':
                  case 'double':
                    t('if(typeof %s!=="number")', a)(
                      'return%j',
                      n(e, 'number')
                    );
                    break;
                  case 'bool':
                    t('if(typeof %s!=="boolean")', a)(
                      'return%j',
                      n(e, 'boolean')
                    );
                    break;
                  case 'string':
                    t('if(!util.isString(%s))', a)('return%j', n(e, 'string'));
                    break;
                  case 'bytes':
                    t(
                      'if(!(%s&&typeof %s.length==="number"||util.isString(%s)))',
                      a,
                      a,
                      a
                    )('return%j', n(e, 'buffer'));
                }
              return t;
            }
            function r(t, e, i) {
              switch (e.keyType) {
                case 'int32':
                case 'uint32':
                case 'sint32':
                case 'fixed32':
                case 'sfixed32':
                  t('if(!util.key32Re.test(%s))', i)(
                    'return%j',
                    n(e, 'integer key')
                  );
                  break;
                case 'int64':
                case 'uint64':
                case 'sint64':
                case 'fixed64':
                case 'sfixed64':
                  t('if(!util.key64Re.test(%s))', i)(
                    'return%j',
                    n(e, 'integer|Long key')
                  );
                  break;
                case 'bool':
                  t('if(!util.key2Re.test(%s))', i)(
                    'return%j',
                    n(e, 'boolean key')
                  );
              }
              return t;
            }
            e.exports = function(t) {
              for (
                var e = o.codegen('m')('if(typeof m!=="object"||m===null)')(
                    'return%j',
                    'object expected'
                  ),
                  i = 0;
                i < t.fieldsArray.length;
                ++i
              ) {
                var l = t._fieldsArray[i].resolve(),
                  h = 'm' + o.safeProp(l.name);
                l.map
                  ? (e('if(%s!==undefined){', h)('if(!util.isObject(%s))', h)(
                      'return%j',
                      n(l, 'object')
                    )('var k=Object.keys(%s)', h)(
                      'for(var i=0;i<k.length;++i){'
                    ),
                    r(e, l, 'k[i]'),
                    a(e, l, i, h + '[k[i]]')('}')('}'))
                  : l.repeated
                  ? (e('if(%s!==undefined){', h)('if(!Array.isArray(%s))', h)(
                      'return%j',
                      n(l, 'array')
                    )('for(var i=0;i<%s.length;++i){', h),
                    a(e, l, i, h + '[i]')('}')('}'))
                  : (l.required ||
                      (!l.resolvedType || l.resolvedType instanceof s
                        ? e('if(%s!==undefined){', h)
                        : e('if(%s!==undefined&&%s!==null){', h, h)),
                    a(e, l, i, h),
                    l.required || e('}'));
              }
              return e('return null');
            };
            var s = t(15),
              o = t(36);
          },
          { 15: 15, 36: 36 }
        ],
        40: [
          function(t, e, i) {
            function n(t, e, i) {
              (this.fn = t),
                (this.len = e),
                (this.next = undefined),
                (this.val = i);
            }
            function a() {}
            function r() {
              (this.len = 0),
                (this.head = new n(a, 0, 0)),
                (this.tail = this.head),
                (this.states = null);
            }
            function s(t, e, i) {
              e[i] = 255 & t;
            }
            function o(t, e) {
              (this.len = t), (this.next = undefined), (this.val = e);
            }
            function l(t, e, i) {
              for (; t.hi; )
                (e[i++] = (127 & t.lo) | 128),
                  (t.lo = ((t.lo >>> 7) | (t.hi << 25)) >>> 0),
                  (t.hi >>>= 7);
              for (; t.lo > 127; )
                (e[i++] = (127 & t.lo) | 128), (t.lo = t.lo >>> 7);
              e[i++] = t.lo;
            }
            function h(t, e, i) {
              (e[i++] = 255 & t),
                (e[i++] = (t >>> 8) & 255),
                (e[i++] = (t >>> 16) & 255),
                (e[i] = t >>> 24);
            }
            e.exports = r;
            var c,
              u = t(38),
              _ = u.LongBits,
              d = u.base64,
              f = u.utf8;
            (r.create = u.Buffer
              ? function() {
                  return (r.create = function() {
                    return new c();
                  })();
                }
              : function() {
                  return new r();
                }),
              (r.alloc = function(t) {
                return new u.Array(t);
              }),
              u.Array !== Array &&
                (r.alloc = u.pool(r.alloc, u.Array.prototype.subarray)),
              (r.prototype.push = function(t, e, i) {
                return (
                  (this.tail = this.tail.next = new n(t, e, i)),
                  (this.len += e),
                  this
                );
              }),
              ((o.prototype = Object.create(n.prototype)).fn = function(
                t,
                e,
                i
              ) {
                for (; t > 127; ) (e[i++] = (127 & t) | 128), (t >>>= 7);
                e[i] = t;
              }),
              (r.prototype.uint32 = function(t) {
                return (
                  (this.len += (this.tail = this.tail.next = new o(
                    (t >>>= 0) < 128
                      ? 1
                      : t < 16384
                      ? 2
                      : t < 2097152
                      ? 3
                      : t < 268435456
                      ? 4
                      : 5,
                    t
                  )).len),
                  this
                );
              }),
              (r.prototype.int32 = function(t) {
                return t < 0
                  ? this.push(l, 10, _.fromNumber(t))
                  : this.uint32(t);
              }),
              (r.prototype.sint32 = function(t) {
                return this.uint32(((t << 1) ^ (t >> 31)) >>> 0);
              }),
              (r.prototype.uint64 = function(t) {
                var e = _.from(t);
                return this.push(l, e.length(), e);
              }),
              (r.prototype.int64 = r.prototype.uint64),
              (r.prototype.sint64 = function(t) {
                var e = _.from(t).zzEncode();
                return this.push(l, e.length(), e);
              }),
              (r.prototype.bool = function(t) {
                return this.push(s, 1, t ? 1 : 0);
              }),
              (r.prototype.fixed32 = function(t) {
                return this.push(h, 4, t >>> 0);
              }),
              (r.prototype.sfixed32 = r.prototype.fixed32),
              (r.prototype.fixed64 = function(t) {
                var e = _.from(t);
                return this.push(h, 4, e.lo).push(h, 4, e.hi);
              }),
              (r.prototype.sfixed64 = r.prototype.fixed64);
            var p =
              'undefined' != typeof Float32Array
                ? (function() {
                    var t = new Float32Array(1),
                      e = new Uint8Array(t.buffer);
                    return (
                      (t[0] = -0),
                      e[3]
                        ? function(i, n, a) {
                            (t[0] = i),
                              (n[a++] = e[0]),
                              (n[a++] = e[1]),
                              (n[a++] = e[2]),
                              (n[a] = e[3]);
                          }
                        : function(i, n, a) {
                            (t[0] = i),
                              (n[a++] = e[3]),
                              (n[a++] = e[2]),
                              (n[a++] = e[1]),
                              (n[a] = e[0]);
                          }
                    );
                  })()
                : function(t, e, i) {
                    var n = t < 0 ? 1 : 0;
                    if ((n && (t = -t), 0 === t))
                      h(1 / t > 0 ? 0 : 2147483648, e, i);
                    else if (isNaN(t)) h(2147483647, e, i);
                    else if (t > 3.4028234663852886e38)
                      h(((n << 31) | 2139095040) >>> 0, e, i);
                    else if (t < 1.1754943508222875e-38)
                      h(
                        ((n << 31) | Math.round(t / 1.401298464324817e-45)) >>>
                          0,
                        e,
                        i
                      );
                    else {
                      var a = Math.floor(Math.log(t) / Math.LN2);
                      h(
                        ((n << 31) |
                          ((a + 127) << 23) |
                          (8388607 &
                            Math.round(t * Math.pow(2, -a) * 8388608))) >>>
                          0,
                        e,
                        i
                      );
                    }
                  };
            r.prototype.float = function(t) {
              return this.push(p, 4, t);
            };
            var m =
              'undefined' != typeof Float64Array
                ? (function() {
                    var t = new Float64Array(1),
                      e = new Uint8Array(t.buffer);
                    return (
                      (t[0] = -0),
                      e[7]
                        ? function(i, n, a) {
                            (t[0] = i),
                              (n[a++] = e[0]),
                              (n[a++] = e[1]),
                              (n[a++] = e[2]),
                              (n[a++] = e[3]),
                              (n[a++] = e[4]),
                              (n[a++] = e[5]),
                              (n[a++] = e[6]),
                              (n[a] = e[7]);
                          }
                        : function(i, n, a) {
                            (t[0] = i),
                              (n[a++] = e[7]),
                              (n[a++] = e[6]),
                              (n[a++] = e[5]),
                              (n[a++] = e[4]),
                              (n[a++] = e[3]),
                              (n[a++] = e[2]),
                              (n[a++] = e[1]),
                              (n[a] = e[0]);
                          }
                    );
                  })()
                : function(t, e, i) {
                    var n = t < 0 ? 1 : 0;
                    if ((n && (t = -t), 0 === t))
                      h(0, e, i), h(1 / t > 0 ? 0 : 2147483648, e, i + 4);
                    else if (isNaN(t))
                      h(4294967295, e, i), h(2147483647, e, i + 4);
                    else if (t > 1.7976931348623157e308)
                      h(0, e, i), h(((n << 31) | 2146435072) >>> 0, e, i + 4);
                    else {
                      var a;
                      if (t < 2.2250738585072014e-308)
                        h((a = t / 5e-324) >>> 0, e, i),
                          h(((n << 31) | (a / 4294967296)) >>> 0, e, i + 4);
                      else {
                        var r = Math.floor(Math.log(t) / Math.LN2);
                        1024 === r && (r = 1023),
                          h(
                            (4503599627370496 * (a = t * Math.pow(2, -r))) >>>
                              0,
                            e,
                            i
                          ),
                          h(
                            ((n << 31) |
                              ((r + 1023) << 20) |
                              ((1048576 * a) & 1048575)) >>>
                              0,
                            e,
                            i + 4
                          );
                      }
                    }
                  };
            r.prototype.double = function(t) {
              return this.push(m, 8, t);
            };
            var g = u.Array.prototype.set
              ? function(t, e, i) {
                  e.set(t, i);
                }
              : function(t, e, i) {
                  for (var n = 0; n < t.length; ++n) e[i + n] = t[n];
                };
            (r.prototype.bytes = function(t) {
              var e = t.length >>> 0;
              if (!e) return this.push(s, 1, 0);
              if (u.isString(t)) {
                var i = r.alloc((e = d.length(t)));
                d.decode(t, i, 0), (t = i);
              }
              return this.uint32(e).push(g, e, t);
            }),
              (r.prototype.string = function(t) {
                var e = f.length(t);
                return e
                  ? this.uint32(e).push(f.write, e, t)
                  : this.push(s, 1, 0);
              }),
              (r.prototype.fork = function() {
                return (
                  (this.states = new (function(t) {
                    (this.head = t.head),
                      (this.tail = t.tail),
                      (this.len = t.len),
                      (this.next = t.states);
                  })(this)),
                  (this.head = this.tail = new n(a, 0, 0)),
                  (this.len = 0),
                  this
                );
              }),
              (r.prototype.reset = function() {
                return (
                  this.states
                    ? ((this.head = this.states.head),
                      (this.tail = this.states.tail),
                      (this.len = this.states.len),
                      (this.states = this.states.next))
                    : ((this.head = this.tail = new n(a, 0, 0)),
                      (this.len = 0)),
                  this
                );
              }),
              (r.prototype.ldelim = function() {
                var t = this.head,
                  e = this.tail,
                  i = this.len;
                return (
                  this.reset().uint32(i),
                  i &&
                    ((this.tail.next = t.next),
                    (this.tail = e),
                    (this.len += i)),
                  this
                );
              }),
              (r.prototype.finish = function() {
                for (
                  var t = this.head.next,
                    e = this.constructor.alloc(this.len),
                    i = 0;
                  t;

                )
                  t.fn(t.val, e, i), (i += t.len), (t = t.next);
                return e;
              }),
              (r._configure = function(t) {
                c = t;
              });
          },
          { 38: 38 }
        ],
        41: [
          function(t, e, i) {
            function n() {
              r.call(this);
            }
            function a(t, e, i) {
              t.length < 40 ? s.utf8.write(t, e, i) : e.utf8Write(t, i);
            }
            e.exports = n;
            var r = t(40);
            (n.prototype = Object.create(r.prototype)).constructor = n;
            var s = t(38),
              o = s.Buffer;
            n.alloc = function(t) {
              return (n.alloc = s._Buffer_allocUnsafe)(t);
            };
            var l =
              o &&
              o.prototype instanceof Uint8Array &&
              'set' === o.prototype.set.name
                ? function(t, e, i) {
                    e.set(t, i);
                  }
                : function(t, e, i) {
                    if (t.copy) t.copy(e, i, 0, t.length);
                    else for (var n = 0; n < t.length; ) e[i++] = t[n++];
                  };
            (n.prototype.bytes = function(t) {
              s.isString(t) && (t = s._Buffer_from(t, 'base64'));
              var e = t.length >>> 0;
              return this.uint32(e), e && this.push(l, e, t), this;
            }),
              (n.prototype.string = function(t) {
                var e = o.byteLength(t);
                return this.uint32(e), e && this.push(a, e, t), this;
              });
          },
          { 38: 38, 40: 40 }
        ]
      },
      {},
      [19]
    );
  })(
    ('object' == typeof window && window) ||
      ('object' == typeof self && self) ||
      this
  ),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset,
      s = (i.__newvec, laya.display.Animation),
      o = (laya.utils.Browser, laya.utils.ClassUtils),
      l = laya.filters.ColorFilter,
      h = laya.utils.Ease,
      c = laya.events.Event,
      u = (laya.events.EventDispatcher, laya.display.css.Font),
      _ = laya.display.FrameAnimation,
      d = laya.display.Graphics,
      f = laya.utils.Handler,
      p = laya.display.Input,
      m = laya.net.Loader,
      g = (laya.display.Node, laya.maths.Point),
      y = laya.maths.Rectangle,
      v = laya.renders.Render,
      b = laya.display.Sprite,
      w = laya.display.Text,
      x = laya.resource.Texture,
      I = laya.utils.Tween,
      C = laya.utils.Utils,
      S = laya.utils.WeakObject;
    i.interface('laya.ui.IItem'),
      i.interface('laya.ui.ISelect'),
      i.interface('laya.ui.IRender'),
      i.interface('laya.ui.IComponent'),
      i.interface('laya.ui.IBox', 'IComponent');
    var T = (function() {
        function t() {
          (this.enable = !1),
            (this.top = NaN),
            (this.bottom = NaN),
            (this.left = NaN),
            (this.right = NaN),
            (this.centerX = NaN),
            (this.centerY = NaN),
            (this.anchorX = NaN),
            (this.anchorY = NaN);
        }
        return (
          a(t, 'laya.ui.LayoutStyle'),
          n(t, [
            'EMPTY',
            function() {
              return (this.EMPTY = new t());
            }
          ]),
          t
        );
      })(),
      M = (function() {
        function t() {}
        return (
          a(t, 'laya.ui.Styles'),
          (t.labelColor = '#000000'),
          (t.buttonStateNum = 3),
          (t.scrollBarMinNum = 15),
          (t.scrollBarDelayTime = 500),
          n(t, [
            'defaultSizeGrid',
            function() {
              return (this.defaultSizeGrid = [4, 4, 4, 4, 0]);
            },
            'labelPadding',
            function() {
              return (this.labelPadding = [2, 2, 2, 2]);
            },
            'inputLabelPadding',
            function() {
              return (this.inputLabelPadding = [1, 1, 1, 3]);
            },
            'buttonLabelColors',
            function() {
              return (this.buttonLabelColors = [
                '#32556b',
                '#32cc6b',
                '#ff0000',
                '#C0C0C0'
              ]);
            },
            'comboBoxItemColors',
            function() {
              return (this.comboBoxItemColors = [
                '#5e95b6',
                '#ffffff',
                '#000000',
                '#8fa4b1',
                '#ffffff'
              ]);
            }
          ]),
          t
        );
      })(),
      E = (function() {
        function t() {}
        return (
          a(t, 'laya.ui.UIUtils'),
          (t.fillArray = function(t, e, i) {
            var n = t.concat();
            if (e)
              for (
                var a = e.split(','), r = 0, s = Math.min(n.length, a.length);
                r < s;
                r++
              ) {
                var o = a[r];
                (n[r] = 'true' == o || ('false' != o && o)),
                  null != i && (n[r] = i(o));
              }
            return n;
          }),
          (t.toColor = function(t) {
            return C.toHexColor(t);
          }),
          (t.gray = function(e, i) {
            void 0 === i && (i = !0),
              i ? t.addFilter(e, t.grayFilter) : t.clearFilter(e, l);
          }),
          (t.addFilter = function(t, e) {
            var i = t.filters || [];
            i.push(e), (t.filters = i);
          }),
          (t.clearFilter = function(t, e) {
            var n = t.filters;
            if (null != n && n.length > 0) {
              for (var a = n.length - 1; a > -1; a--) {
                var r = n[a];
                i.__typeof(r, e) && n.splice(a, 1);
              }
              t.filters = n;
            }
          }),
          (t._getReplaceStr = function(e) {
            return t.escapeSequence[e];
          }),
          (t.adptString = function(e) {
            return e.replace(/\\(\w)/g, t._getReplaceStr);
          }),
          (t.getBindFun = function(e) {
            var n = t._funMap.get(e);
            if (null == n) {
              var a = '"' + e + '"',
                r =
                  '(function(data){if(data==null)return;with(data){try{\nreturn ' +
                  (a = a
                    .replace(/^"\${|}"$/g, '')
                    .replace(/\${/g, '"+')
                    .replace(/}/g, '+"')) +
                  '\n}catch(e){}}})';
              (n = i._runScript(r)), t._funMap.set(e, n);
            }
            return n;
          }),
          n(t, [
            'grayFilter',
            function() {
              return (this.grayFilter = new l([
                0.3086,
                0.6094,
                0.082,
                0,
                0,
                0.3086,
                0.6094,
                0.082,
                0,
                0,
                0.3086,
                0.6094,
                0.082,
                0,
                0,
                0,
                0,
                0,
                1,
                0
              ]));
            },
            'escapeSequence',
            function() {
              return (this.escapeSequence = { '\\n': '\n', '\\t': '\t' });
            },
            '_funMap',
            function() {
              return (this._funMap = new S());
            }
          ]),
          t
        );
      })(),
      L = (function() {
        function t() {}
        return (
          a(t, 'UIConfig'),
          (t.touchScrollEnable = !0),
          (t.mouseWheelEnable = !0),
          (t.showButtons = !0),
          (t.popupBgColor = '#000000'),
          (t.popupBgAlpha = 0.5),
          (t.closeDialogOnSide = !0),
          t
        );
      })(),
      D = (function(t) {
        function e() {
          (this.autoCacheCmd = !0),
            (this._width = 0),
            (this._height = 0),
            (this._source = null),
            (this._sizeGrid = null),
            (this._isChanged = !1),
            (this._offset = null),
            e.__super.call(this);
        }
        a(e, 'laya.ui.AutoBitmap', t);
        var n = e.prototype;
        return (
          (n.destroy = function() {
            t.prototype.destroy.call(this),
              (this._source = null),
              (this._sizeGrid = null),
              (this._offset = null);
          }),
          (n._setChanged = function() {
            this._isChanged ||
              ((this._isChanged = !0),
              i.timer.callLater(this, this.changeSource));
          }),
          (n.changeSource = function() {
            this._isChanged = !1;
            var t = this._source;
            if (t && t.bitmap) {
              var i = this.width,
                n = this.height,
                a = this._sizeGrid,
                r = t.sourceWidth,
                s = t.sourceHeight;
              if (!a || (r === i && s === n))
                this.cleanByTexture(
                  t,
                  this._offset ? this._offset[0] : 0,
                  this._offset ? this._offset[1] : 0,
                  i,
                  n
                );
              else {
                t.$_GID || (t.$_GID = C.getGID());
                var o = t.$_GID + '.' + i + '.' + n + '.' + a.join('.');
                if (C.isOKCmdList(S.I.get(o)))
                  return void (this.cmds = S.I.get(o));
                this.clear();
                var l = a[0],
                  h = a[1],
                  c = a[2],
                  u = a[3],
                  _ = a[4],
                  d = !1;
                if ((i == r && (u = h = 0), n == s && (l = c = 0), u + h > i)) {
                  var f = i;
                  (d = !0), (i = u + h), this.save(), this.clipRect(0, 0, f, n);
                }
                u &&
                  l &&
                  this.drawTexture(e.getTexture(t, 0, 0, u, l), 0, 0, u, l),
                  h &&
                    l &&
                    this.drawTexture(
                      e.getTexture(t, r - h, 0, h, l),
                      i - h,
                      0,
                      h,
                      l
                    ),
                  u &&
                    c &&
                    this.drawTexture(
                      e.getTexture(t, 0, s - c, u, c),
                      0,
                      n - c,
                      u,
                      c
                    ),
                  h &&
                    c &&
                    this.drawTexture(
                      e.getTexture(t, r - h, s - c, h, c),
                      i - h,
                      n - c,
                      h,
                      c
                    ),
                  l &&
                    this.drawBitmap(
                      _,
                      e.getTexture(t, u, 0, r - u - h, l),
                      u,
                      0,
                      i - u - h,
                      l
                    ),
                  c &&
                    this.drawBitmap(
                      _,
                      e.getTexture(t, u, s - c, r - u - h, c),
                      u,
                      n - c,
                      i - u - h,
                      c
                    ),
                  u &&
                    this.drawBitmap(
                      _,
                      e.getTexture(t, 0, l, u, s - l - c),
                      0,
                      l,
                      u,
                      n - l - c
                    ),
                  h &&
                    this.drawBitmap(
                      _,
                      e.getTexture(t, r - h, l, h, s - l - c),
                      i - h,
                      l,
                      h,
                      n - l - c
                    ),
                  this.drawBitmap(
                    _,
                    e.getTexture(t, u, l, r - u - h, s - l - c),
                    u,
                    l,
                    i - u - h,
                    n - l - c
                  ),
                  d && this.restore(),
                  this.autoCacheCmd && !v.isConchApp && S.I.set(o, this.cmds);
              }
              this._repaint();
            }
          }),
          (n.drawBitmap = function(t, e, i, n, a, r) {
            void 0 === a && (a = 0),
              void 0 === r && (r = 0),
              a < 0.1 ||
                r < 0.1 ||
                (!t || (e.width == a && e.height == r)
                  ? this.drawTexture(e, i, n, a, r)
                  : this.fillTexture(e, i, n, a, r));
          }),
          (n.clear = function(e) {
            void 0 === e && (e = !0), t.prototype.clear.call(this, !1);
          }),
          r(
            0,
            n,
            'sizeGrid',
            function() {
              return this._sizeGrid;
            },
            function(t) {
              (this._sizeGrid = t), this._setChanged();
            }
          ),
          r(
            0,
            n,
            'width',
            function() {
              return this._width
                ? this._width
                : this._source
                ? this._source.sourceWidth
                : 0;
            },
            function(t) {
              this._width != t && ((this._width = t), this._setChanged());
            }
          ),
          r(
            0,
            n,
            'height',
            function() {
              return this._height
                ? this._height
                : this._source
                ? this._source.sourceHeight
                : 0;
            },
            function(t) {
              this._height != t && ((this._height = t), this._setChanged());
            }
          ),
          r(
            0,
            n,
            'source',
            function() {
              return this._source;
            },
            function(t) {
              t
                ? ((this._source = t), this._setChanged())
                : ((this._source = null), this.clear());
            }
          ),
          (e.getTexture = function(t, e, i, n, a) {
            n <= 0 && (n = 1),
              a <= 0 && (a = 1),
              t.$_GID || (t.$_GID = C.getGID());
            var r = t.$_GID + '.' + e + '.' + i + '.' + n + '.' + a,
              s = S.I.get(r);
            return (
              (s && s.source) ||
                ((s = x.createFromTexture(t, e, i, n, a)), S.I.set(r, s)),
              s
            );
          }),
          e
        );
      })(d),
      A =
        ((function(t) {
          function e() {
            e.__super.call(this);
          }
          a(e, 'laya.ui.UIEvent', c),
            (e.SHOW_TIP = 'showtip'),
            (e.HIDE_TIP = 'hidetip');
        })(),
        (function(t) {
          function e() {
            (this._comXml = null),
              (this._dataSource = null),
              (this._toolTip = null),
              (this._tag = null),
              (this._disabled = !1),
              (this._gray = !1),
              (this.layoutEnabled = !0),
              e.__super.call(this),
              (this._layout = T.EMPTY),
              this.preinitialize(),
              this.createChildren(),
              this.initialize();
          }
          a(e, 'laya.ui.Component', t);
          var n = e.prototype;
          return (
            i.imps(n, { 'laya.ui.IComponent': !0 }),
            (n.destroy = function(e) {
              void 0 === e && (e = !0),
                t.prototype.destroy.call(this, e),
                (this._dataSource = this._layout = null),
                (this._tag = null),
                (this._toolTip = null);
            }),
            (n.preinitialize = function() {}),
            (n.createChildren = function() {}),
            (n.initialize = function() {}),
            (n.callLater = function(t, e) {
              i.timer.callLater(this, t, e);
            }),
            (n.runCallLater = function(t) {
              i.timer.runCallLater(this, t);
            }),
            (n.commitMeasure = function() {}),
            (n.changeSize = function() {
              this.event('resize');
            }),
            (n.getLayout = function() {
              return (
                this._layout === T.EMPTY && (this._layout = new T()),
                this._layout
              );
            }),
            (n._setLayoutEnabled = function(t) {
              this._layout &&
                this._layout.enable != t &&
                ((this._layout.enable = t),
                this.on('added', this, this.onAdded),
                this.on('removed', this, this.onRemoved),
                this.parent && this.onAdded());
            }),
            (n.onRemoved = function() {
              this.parent.off('resize', this, this.onCompResize);
            }),
            (n.onAdded = function() {
              this.parent.on('resize', this, this.onCompResize),
                this.resetLayoutX(),
                this.resetLayoutY();
            }),
            (n.onCompResize = function() {
              this._layout &&
                this._layout.enable &&
                (this.resetLayoutX(), this.resetLayoutY());
            }),
            (n.resetLayoutX = function() {
              var t = this._layout;
              if (
                (isNaN(t.anchorX) || (this.pivotX = t.anchorX * this.width),
                this.layoutEnabled)
              ) {
                var e = this.parent;
                e &&
                  (isNaN(t.centerX)
                    ? isNaN(t.left)
                      ? isNaN(t.right) ||
                        (this.x = Math.round(
                          e.width -
                            this.displayWidth -
                            t.right +
                            this.pivotX * this.scaleX
                        ))
                      : ((this.x = Math.round(
                          t.left + this.pivotX * this.scaleX
                        )),
                        isNaN(t.right) ||
                          (this.width =
                            (e._width - t.left - t.right) /
                            (this.scaleX || 0.01)))
                    : (this.x = Math.round(
                        0.5 * (e.width - this.displayWidth) +
                          t.centerX +
                          this.pivotX * this.scaleX
                      )));
              }
            }),
            (n.resetLayoutY = function() {
              var t = this._layout;
              if (
                (isNaN(t.anchorY) || (this.pivotY = t.anchorY * this.height),
                this.layoutEnabled)
              ) {
                var e = this.parent;
                e &&
                  (isNaN(t.centerY)
                    ? isNaN(t.top)
                      ? isNaN(t.bottom) ||
                        (this.y = Math.round(
                          e.height -
                            this.displayHeight -
                            t.bottom +
                            this.pivotY * this.scaleY
                        ))
                      : ((this.y = Math.round(
                          t.top + this.pivotY * this.scaleY
                        )),
                        isNaN(t.bottom) ||
                          (this.height =
                            (e._height - t.top - t.bottom) /
                            (this.scaleY || 0.01)))
                    : (this.y = Math.round(
                        0.5 * (e.height - this.displayHeight) +
                          t.centerY +
                          this.pivotY * this.scaleY
                      )));
              }
            }),
            (n.onMouseOver = function(t) {
              i.stage.event('showtip', this._toolTip);
            }),
            (n.onMouseOut = function(t) {
              i.stage.event('hidetip', this._toolTip);
            }),
            r(0, n, 'displayWidth', function() {
              return this.width * this.scaleX;
            }),
            r(
              0,
              n,
              'width',
              function() {
                return this._width ? this._width : this.measureWidth;
              },
              function(t) {
                this._width != t &&
                  ((this._width = t),
                  this.conchModel &&
                    this.conchModel.size(this._width, this._height),
                  this.callLater(this.changeSize),
                  !this._layout.enable ||
                    (isNaN(this._layout.centerX) &&
                      isNaN(this._layout.right) &&
                      isNaN(this._layout.anchorX)) ||
                    this.resetLayoutX());
              }
            ),
            r(0, n, 'measureWidth', function() {
              var t = 0;
              this.commitMeasure();
              for (var e = this.numChildren - 1; e > -1; e--) {
                var i = this.getChildAt(e);
                i.visible && (t = Math.max(i.x + i.width * i.scaleX, t));
              }
              return t;
            }),
            r(0, n, 'displayHeight', function() {
              return this.height * this.scaleY;
            }),
            r(
              0,
              n,
              'height',
              function() {
                return this._height ? this._height : this.measureHeight;
              },
              function(t) {
                this._height != t &&
                  ((this._height = t),
                  this.conchModel &&
                    this.conchModel.size(this._width, this._height),
                  this.callLater(this.changeSize),
                  !this._layout.enable ||
                    (isNaN(this._layout.centerY) &&
                      isNaN(this._layout.bottom) &&
                      isNaN(this._layout.anchorY)) ||
                    this.resetLayoutY());
              }
            ),
            r(
              0,
              n,
              'dataSource',
              function() {
                return this._dataSource;
              },
              function(t) {
                this._dataSource = t;
                for (var e in this._dataSource)
                  this.hasOwnProperty(e) &&
                    'function' != typeof this[e] &&
                    (this[e] = this._dataSource[e]);
              }
            ),
            r(0, n, 'scaleY', t.prototype._$get_scaleY, function(t) {
              i.superGet(b, this, 'scaleY') != t &&
                (i.superSet(b, this, 'scaleY', t),
                this.callLater(this.changeSize),
                this._layout.enable && this.resetLayoutY());
            }),
            r(0, n, 'measureHeight', function() {
              var t = 0;
              this.commitMeasure();
              for (var e = this.numChildren - 1; e > -1; e--) {
                var i = this.getChildAt(e);
                i.visible && (t = Math.max(i.y + i.height * i.scaleY, t));
              }
              return t;
            }),
            r(0, n, 'scaleX', t.prototype._$get_scaleX, function(t) {
              i.superGet(b, this, 'scaleX') != t &&
                (i.superSet(b, this, 'scaleX', t),
                this.callLater(this.changeSize),
                this._layout.enable && this.resetLayoutX());
            }),
            r(
              0,
              n,
              'top',
              function() {
                return this._layout.top;
              },
              function(t) {
                t != this._layout.top &&
                  ((this.getLayout().top = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutY();
              }
            ),
            r(
              0,
              n,
              'bottom',
              function() {
                return this._layout.bottom;
              },
              function(t) {
                t != this._layout.bottom &&
                  ((this.getLayout().bottom = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutY();
              }
            ),
            r(
              0,
              n,
              'left',
              function() {
                return this._layout.left;
              },
              function(t) {
                t != this._layout.left &&
                  ((this.getLayout().left = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutX();
              }
            ),
            r(
              0,
              n,
              'right',
              function() {
                return this._layout.right;
              },
              function(t) {
                t != this._layout.right &&
                  ((this.getLayout().right = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutX();
              }
            ),
            r(
              0,
              n,
              'centerX',
              function() {
                return this._layout.centerX;
              },
              function(t) {
                t != this._layout.centerX &&
                  ((this.getLayout().centerX = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutX();
              }
            ),
            r(
              0,
              n,
              'centerY',
              function() {
                return this._layout.centerY;
              },
              function(t) {
                t != this._layout.centerY &&
                  ((this.getLayout().centerY = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutY();
              }
            ),
            r(
              0,
              n,
              'anchorX',
              function() {
                return this._layout.anchorX;
              },
              function(t) {
                t != this._layout.anchorX &&
                  ((this.getLayout().anchorX = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutX();
              }
            ),
            r(
              0,
              n,
              'anchorY',
              function() {
                return this._layout.anchorY;
              },
              function(t) {
                t != this._layout.anchorY &&
                  ((this.getLayout().anchorY = t), this._setLayoutEnabled(!0)),
                  this.resetLayoutY();
              }
            ),
            r(
              0,
              n,
              'tag',
              function() {
                return this._tag;
              },
              function(t) {
                this._tag = t;
              }
            ),
            r(
              0,
              n,
              'toolTip',
              function() {
                return this._toolTip;
              },
              function(t) {
                this._toolTip != t &&
                  ((this._toolTip = t),
                  null != t
                    ? (this.on('mouseover', this, this.onMouseOver),
                      this.on('mouseout', this, this.onMouseOut))
                    : (this.off('mouseover', this, this.onMouseOver),
                      this.off('mouseout', this, this.onMouseOut)));
              }
            ),
            r(
              0,
              n,
              'comXml',
              function() {
                return this._comXml;
              },
              function(t) {
                this._comXml = t;
              }
            ),
            r(
              0,
              n,
              'gray',
              function() {
                return this._gray;
              },
              function(t) {
                t !== this._gray && ((this._gray = t), E.gray(this, t));
              }
            ),
            r(
              0,
              n,
              'disabled',
              function() {
                return this._disabled;
              },
              function(t) {
                t !== this._disabled &&
                  ((this.gray = this._disabled = t), (this.mouseEnabled = !t));
              }
            ),
            e
          );
        })(b)),
      N = (function(t) {
        function e() {
          (this.lockLayer = null),
            (this.popupEffect = function(t) {
              t.scale(1, 1),
                I.from(
                  t,
                  {
                    x: i.stage.width / 2,
                    y: i.stage.height / 2,
                    scaleX: 0,
                    scaleY: 0
                  },
                  300,
                  h.backOut,
                  f.create(this, this.doOpen, [t])
                );
            }),
            (this.closeEffect = function(t, e) {
              I.to(
                t,
                {
                  x: i.stage.width / 2,
                  y: i.stage.height / 2,
                  scaleX: 0,
                  scaleY: 0
                },
                300,
                h.strongOut,
                f.create(this, this.doClose, [t, e])
              );
            }),
            e.__super.call(this),
            (this.maskLayer = new b()),
            (this.popupEffectHandler = new f(this, this.popupEffect)),
            (this.closeEffectHandler = new f(this, this.closeEffect)),
            (this.mouseEnabled = this.maskLayer.mouseEnabled = !0),
            (this.zOrder = 1e3),
            i.stage.addChild(this),
            i.stage.on('resize', this, this._onResize),
            L.closeDialogOnSide &&
              this.maskLayer.on('click', this, this._closeOnSide),
            this._onResize(null);
        }
        a(e, 'laya.ui.DialogManager', b);
        var n = e.prototype;
        return (
          (n._closeOnSide = function() {
            var t = this.getChildAt(this.numChildren - 1);
            t instanceof laya.ui.Dialog && t.close('side');
          }),
          (n.setLockView = function(t) {
            this.lockLayer ||
              ((this.lockLayer = new R()),
              (this.lockLayer.mouseEnabled = !0),
              this.lockLayer.size(i.stage.width, i.stage.height)),
              this.lockLayer.removeChildren(),
              t && ((t.centerX = t.centerY = 0), this.lockLayer.addChild(t));
          }),
          (n._onResize = function(t) {
            var e = (this.maskLayer.width = i.stage.width),
              n = (this.maskLayer.height = i.stage.height);
            this.lockLayer && this.lockLayer.size(e, n),
              this.maskLayer.graphics.clear(),
              this.maskLayer.graphics.drawRect(0, 0, e, n, L.popupBgColor),
              (this.maskLayer.alpha = L.popupBgAlpha);
            for (var a = this.numChildren - 1; a > -1; a--) {
              var r = this.getChildAt(a);
              r.popupCenter && this._centerDialog(r);
            }
          }),
          (n._centerDialog = function(t) {
            (t.x = Math.round(((i.stage.width - t.width) >> 1) + t.pivotX)),
              (t.y = Math.round(((i.stage.height - t.height) >> 1) + t.pivotY));
          }),
          (n.open = function(t, e, i) {
            void 0 === e && (e = !1),
              void 0 === i && (i = !1),
              e && this._closeAll(),
              t.popupCenter && this._centerDialog(t),
              this.addChild(t),
              (t.isModal || this._$P.hasZorder) &&
                this.timer.callLater(this, this._checkMask),
              i && null != t.popupEffect
                ? t.popupEffect.runWith(t)
                : this.doOpen(t),
              this.event('open');
          }),
          (n.doOpen = function(t) {
            t.onOpened();
          }),
          (n.lock = function(t) {
            this.lockLayer &&
              (t ? this.addChild(this.lockLayer) : this.lockLayer.removeSelf());
          }),
          (n.close = function(t, e, i) {
            void 0 === i && (i = !1),
              i && null != t.closeEffect
                ? t.closeEffect.runWith([t, e])
                : this.doClose(t, e),
              this.event('close');
          }),
          (n.doClose = function(t, e) {
            t.removeSelf(),
              t.isModal && this._checkMask(),
              t.closeHandler && t.closeHandler.runWith(e),
              t.onClosed(e);
          }),
          (n.closeAll = function() {
            this._closeAll(), this.event('close');
          }),
          (n._closeAll = function() {
            for (var t = this.numChildren - 1; t > -1; t--) {
              var e = this.getChildAt(t);
              e && null != e.close && this.doClose(e);
            }
          }),
          (n.getDialogsByGroup = function(t) {
            for (var e = [], i = this.numChildren - 1; i > -1; i--) {
              var n = this.getChildAt(i);
              n && n.group === t && e.push(n);
            }
            return e;
          }),
          (n.closeByGroup = function(t) {
            for (var e = [], i = this.numChildren - 1; i > -1; i--) {
              var n = this.getChildAt(i);
              n && n.group === t && (n.close(), e.push(n));
            }
            return e;
          }),
          (n._checkMask = function() {
            this.maskLayer.removeSelf();
            for (var t = this.numChildren - 1; t > -1; t--) {
              var e = this.getChildAt(t);
              if (e && e.isModal)
                return void this.addChildAt(this.maskLayer, t);
            }
          }),
          e
        );
      })(),
      R = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.ui.Box', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.ui.IBox': !0 }),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            this._dataSource = t;
            for (var e in t) {
              var i = this.getChildByName(e);
              i
                ? (i.dataSource = t[e])
                : this.hasOwnProperty(e) &&
                  'function' != typeof this[e] &&
                  (this[e] = t[e]);
            }
          }),
          e
        );
      })(A),
      B = (function(t) {
        function e(t, i) {
          (this.toggle = !1),
            (this._bitmap = null),
            (this._text = null),
            (this._strokeColors = null),
            (this._state = 0),
            (this._selected = !1),
            (this._skin = null),
            (this._autoSize = !0),
            (this._sources = null),
            (this._clickHandler = null),
            (this._stateChanged = !1),
            e.__super.call(this),
            (this._labelColors = M.buttonLabelColors),
            (this._stateNum = M.buttonStateNum),
            void 0 === i && (i = ''),
            (this.skin = t),
            (this.label = i);
        }
        a(e, 'laya.ui.Button', t);
        var s = e.prototype;
        return (
          i.imps(s, { 'laya.ui.ISelect': !0 }),
          (s.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._bitmap && this._bitmap.destroy(),
              this._text && this._text.destroy(e),
              (this._bitmap = null),
              (this._text = null),
              (this._clickHandler = null),
              (this._labelColors = this._sources = this._strokeColors = null);
          }),
          (s.createChildren = function() {
            this.graphics = this._bitmap = new D();
          }),
          (s.createText = function() {
            this._text ||
              ((this._text = new w()),
              (this._text.overflow = w.HIDDEN),
              (this._text.align = 'center'),
              (this._text.valign = 'middle'),
              (this._text.width = this._width),
              (this._text.height = this._height));
          }),
          (s.initialize = function() {
            1 !== this._mouseEnableState &&
              ((this.mouseEnabled = !0), this._setBit(2, !0)),
              this._createListener(
                'mouseover',
                this,
                this.onMouse,
                null,
                !1,
                !1
              ),
              this._createListener(
                'mouseout',
                this,
                this.onMouse,
                null,
                !1,
                !1
              ),
              this._createListener(
                'mousedown',
                this,
                this.onMouse,
                null,
                !1,
                !1
              ),
              this._createListener('mouseup', this, this.onMouse, null, !1, !1),
              this._createListener('click', this, this.onMouse, null, !1, !1);
          }),
          (s.onMouse = function(t) {
            if (!1 !== this.toggle || !this._selected)
              return 'click' === t.type
                ? (this.toggle && (this.selected = !this._selected),
                  void (this._clickHandler && this._clickHandler.run()))
                : void (!this._selected && (this.state = e.stateMap[t.type]));
          }),
          (s.changeClips = function() {
            var t = m.getRes(this._skin);
            if (t) {
              var e = t.sourceWidth,
                i = t.sourceHeight / this._stateNum;
              t.$_GID || (t.$_GID = C.getGID());
              var n = t.$_GID + '-' + this._stateNum,
                a = S.I.get(n);
              if ((C.isOkTextureList(a) || (a = null), a)) this._sources = a;
              else {
                if (((this._sources = []), 1 === this._stateNum))
                  this._sources.push(t);
                else
                  for (var r = 0; r < this._stateNum; r++)
                    this._sources.push(x.createFromTexture(t, 0, i * r, e, i));
                S.I.set(n, this._sources);
              }
              this._autoSize
                ? ((this._bitmap.width = this._width || e),
                  (this._bitmap.height = this._height || i),
                  this._text &&
                    ((this._text.width = this._bitmap.width),
                    (this._text.height = this._bitmap.height)))
                : this._text && (this._text.x = e);
            }
          }),
          (s.changeState = function() {
            (this._stateChanged = !1), this.runCallLater(this.changeClips);
            var t =
              this._state < this._stateNum ? this._state : this._stateNum - 1;
            this._sources && (this._bitmap.source = this._sources[t]),
              this.label &&
                ((this._text.color = this._labelColors[t]),
                this._strokeColors &&
                  (this._text.strokeColor = this._strokeColors[t]));
          }),
          (s._setStateChanged = function() {
            this._stateChanged ||
              ((this._stateChanged = !0), this.callLater(this.changeState));
          }),
          r(
            0,
            s,
            'labelStrokeColor',
            function() {
              return this.createText(), this._text.strokeColor;
            },
            function(t) {
              this.createText(), (this._text.strokeColor = t);
            }
          ),
          r(0, s, 'measureHeight', function() {
            return (
              this.runCallLater(this.changeClips),
              this._text
                ? Math.max(this._bitmap.height, this._text.height)
                : this._bitmap.height
            );
          }),
          r(
            0,
            s,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              this._skin != t &&
                ((this._skin = t),
                this.callLater(this.changeClips),
                this._setStateChanged());
            }
          ),
          r(
            0,
            s,
            'state',
            function() {
              return this._state;
            },
            function(t) {
              this._state != t && ((this._state = t), this._setStateChanged());
            }
          ),
          r(0, s, 'text', function() {
            return this.createText(), this._text;
          }),
          r(
            0,
            s,
            'stateNum',
            function() {
              return this._stateNum;
            },
            function(t) {
              'string' == typeof t && (t = parseInt(t)),
                this._stateNum != t &&
                  ((this._stateNum = t < 1 ? 1 : t > 3 ? 3 : t),
                  this.callLater(this.changeClips));
            }
          ),
          r(
            0,
            s,
            'strokeColors',
            function() {
              return this._strokeColors ? this._strokeColors.join(',') : '';
            },
            function(t) {
              (this._strokeColors = E.fillArray(
                M.buttonLabelColors,
                t,
                String
              )),
                this._setStateChanged();
            }
          ),
          r(
            0,
            s,
            'labelColors',
            function() {
              return this._labelColors.join(',');
            },
            function(t) {
              (this._labelColors = E.fillArray(M.buttonLabelColors, t, String)),
                this._setStateChanged();
            }
          ),
          r(0, s, 'measureWidth', function() {
            return (
              this.runCallLater(this.changeClips),
              this._autoSize
                ? this._bitmap.width
                : (this.runCallLater(this.changeState),
                  this._bitmap.width + (this._text ? this._text.width : 0))
            );
          }),
          r(
            0,
            s,
            'label',
            function() {
              return this._text ? this._text.text : null;
            },
            function(t) {
              (this._text || t) &&
                (this.createText(),
                this._text.text != t &&
                  (t && !this._text.parent && this.addChild(this._text),
                  (this._text.text = (t + '').replace(/\\n/g, '\n')),
                  this._setStateChanged()));
            }
          ),
          r(
            0,
            s,
            'selected',
            function() {
              return this._selected;
            },
            function(t) {
              this._selected != t &&
                ((this._selected = t),
                (this.state = this._selected ? 2 : 0),
                this.event('change'));
            }
          ),
          r(
            0,
            s,
            'labelPadding',
            function() {
              return this.createText(), this._text.padding.join(',');
            },
            function(t) {
              this.createText(),
                (this._text.padding = E.fillArray(M.labelPadding, t, Number));
            }
          ),
          r(
            0,
            s,
            'labelSize',
            function() {
              return this.createText(), this._text.fontSize;
            },
            function(t) {
              this.createText(), (this._text.fontSize = t);
            }
          ),
          r(
            0,
            s,
            'labelStroke',
            function() {
              return this.createText(), this._text.stroke;
            },
            function(t) {
              this.createText(), (this._text.stroke = t);
            }
          ),
          r(
            0,
            s,
            'labelBold',
            function() {
              return this.createText(), this._text.bold;
            },
            function(t) {
              this.createText(), (this._text.bold = t);
            }
          ),
          r(
            0,
            s,
            'labelFont',
            function() {
              return this.createText(), this._text.font;
            },
            function(t) {
              this.createText(), (this._text.font = t);
            }
          ),
          r(
            0,
            s,
            'labelAlign',
            function() {
              return this.createText(), this._text.align;
            },
            function(t) {
              this.createText(), (this._text.align = t);
            }
          ),
          r(
            0,
            s,
            'clickHandler',
            function() {
              return this._clickHandler;
            },
            function(t) {
              this._clickHandler = t;
            }
          ),
          r(
            0,
            s,
            'sizeGrid',
            function() {
              return this._bitmap.sizeGrid
                ? this._bitmap.sizeGrid.join(',')
                : null;
            },
            function(t) {
              this._bitmap.sizeGrid = E.fillArray(M.defaultSizeGrid, t, Number);
            }
          ),
          r(0, s, 'width', t.prototype._$get_width, function(t) {
            i.superSet(A, this, 'width', t),
              this._autoSize &&
                ((this._bitmap.width = t),
                this._text && (this._text.width = t));
          }),
          r(0, s, 'height', t.prototype._$get_height, function(t) {
            i.superSet(A, this, 'height', t),
              this._autoSize &&
                ((this._bitmap.height = t),
                this._text && (this._text.height = t));
          }),
          r(0, s, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              'number' == typeof t || 'string' == typeof t
                ? (this.label = t + '')
                : i.superSet(A, this, 'dataSource', t);
          }),
          r(
            0,
            s,
            'iconOffset',
            function() {
              return this._bitmap._offset
                ? this._bitmap._offset.join(',')
                : null;
            },
            function(t) {
              this._bitmap._offset = t ? E.fillArray([1, 1], t, Number) : [];
            }
          ),
          n(e, [
            'stateMap',
            function() {
              return (this.stateMap = {
                mouseup: 0,
                mouseover: 1,
                mousedown: 2,
                mouseout: 0
              });
            }
          ]),
          e
        );
      })(A),
      k = (function(t) {
        function e(t, i, n) {
          (this._sources = null),
            (this._bitmap = null),
            (this._skin = null),
            (this._clipX = 1),
            (this._clipY = 1),
            (this._clipWidth = 0),
            (this._clipHeight = 0),
            (this._autoPlay = !1),
            (this._interval = 50),
            (this._complete = null),
            (this._isPlaying = !1),
            (this._index = 0),
            (this._clipChanged = !1),
            (this._group = null),
            (this._toIndex = -1),
            e.__super.call(this),
            void 0 === i && (i = 1),
            void 0 === n && (n = 1),
            (this._clipX = i),
            (this._clipY = n),
            (this.skin = t);
        }
        a(e, 'laya.ui.Clip', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, !0),
              this._bitmap && this._bitmap.destroy(),
              (this._bitmap = null),
              (this._sources = null);
          }),
          (n.dispose = function() {
            this.destroy(!0), i.loader.clearRes(this._skin);
          }),
          (n.createChildren = function() {
            this.graphics = this._bitmap = new D();
          }),
          (n._onDisplay = function(t) {
            this._isPlaying
              ? this._displayedInStage
                ? this.play()
                : this.stop()
              : this._autoPlay && this.play();
          }),
          (n.changeClip = function() {
            if (((this._clipChanged = !1), this._skin)) {
              var t = m.getRes(this._skin);
              t
                ? this.loadComplete(this._skin, t)
                : i.loader.load(
                    this._skin,
                    f.create(this, this.loadComplete, [this._skin])
                  );
            }
          }),
          (n.loadComplete = function(t, e) {
            if (t === this._skin && e) {
              var i = this._clipWidth || Math.ceil(e.sourceWidth / this._clipX),
                n = this._clipHeight || Math.ceil(e.sourceHeight / this._clipY),
                a = this._skin + i + n,
                r = S.I.get(a);
              if ((C.isOkTextureList(r) || (r = null), r)) this._sources = r;
              else {
                this._sources = [];
                for (var s = 0; s < this._clipY; s++)
                  for (var o = 0; o < this._clipX; o++)
                    this._sources.push(
                      x.createFromTexture(e, i * o, n * s, i, n)
                    );
                S.I.set(a, this._sources);
              }
              (this.index = this._index),
                this.event('loaded'),
                this.onCompResize();
            }
          }),
          (n.play = function(t, e) {
            void 0 === t && (t = 0),
              void 0 === e && (e = -1),
              (this._isPlaying = !0),
              (this.index = t),
              (this._toIndex = e),
              this._index++,
              i.timer.loop(this.interval, this, this._loop),
              this.on('display', this, this._onDisplay),
              this.on('undisplay', this, this._onDisplay);
          }),
          (n._loop = function() {
            this._style.visible &&
              this._sources &&
              (this._index++,
              this._toIndex > -1 && this._index >= this._toIndex
                ? this.stop()
                : this._index >= this._sources.length && (this._index = 0),
              (this.index = this._index));
          }),
          (n.stop = function() {
            (this._isPlaying = !1),
              i.timer.clear(this, this._loop),
              this.event('complete');
          }),
          (n._setClipChanged = function() {
            this._clipChanged ||
              ((this._clipChanged = !0), this.callLater(this.changeClip));
          }),
          r(
            0,
            n,
            'interval',
            function() {
              return this._interval;
            },
            function(t) {
              this._interval != t &&
                ((this._interval = t), this._isPlaying && this.play());
            }
          ),
          r(
            0,
            n,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              this._skin != t &&
                ((this._skin = t),
                t ? this._setClipChanged() : (this._bitmap.source = null));
            }
          ),
          r(
            0,
            n,
            'sources',
            function() {
              return this._sources;
            },
            function(t) {
              (this._sources = t),
                (this.index = this._index),
                this.event('loaded');
            }
          ),
          r(
            0,
            n,
            'clipX',
            function() {
              return this._clipX;
            },
            function(t) {
              (this._clipX = t || 1), this._setClipChanged();
            }
          ),
          r(
            0,
            n,
            'clipY',
            function() {
              return this._clipY;
            },
            function(t) {
              (this._clipY = t || 1), this._setClipChanged();
            }
          ),
          r(0, n, 'total', function() {
            return (
              this.runCallLater(this.changeClip),
              this._sources ? this._sources.length : 0
            );
          }),
          r(
            0,
            n,
            'clipWidth',
            function() {
              return this._clipWidth;
            },
            function(t) {
              (this._clipWidth = t), this._setClipChanged();
            }
          ),
          r(
            0,
            n,
            'sizeGrid',
            function() {
              return this._bitmap.sizeGrid
                ? this._bitmap.sizeGrid.join(',')
                : null;
            },
            function(t) {
              this._bitmap.sizeGrid = E.fillArray(M.defaultSizeGrid, t, Number);
            }
          ),
          r(
            0,
            n,
            'group',
            function() {
              return this._group;
            },
            function(t) {
              t && this._skin && m.setGroup(this._skin, t), (this._group = t);
            }
          ),
          r(
            0,
            n,
            'clipHeight',
            function() {
              return this._clipHeight;
            },
            function(t) {
              (this._clipHeight = t), this._setClipChanged();
            }
          ),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(A, this, 'width', t), (this._bitmap.width = t);
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(A, this, 'height', t), (this._bitmap.height = t);
          }),
          r(0, n, 'measureWidth', function() {
            return this.runCallLater(this.changeClip), this._bitmap.width;
          }),
          r(0, n, 'measureHeight', function() {
            return this.runCallLater(this.changeClip), this._bitmap.height;
          }),
          r(
            0,
            n,
            'index',
            function() {
              return this._index;
            },
            function(t) {
              (this._index = t),
                this._bitmap &&
                  this._sources &&
                  (this._bitmap.source = this._sources[t]),
                this.event('change');
            }
          ),
          r(
            0,
            n,
            'autoPlay',
            function() {
              return this._autoPlay;
            },
            function(t) {
              this._autoPlay != t &&
                ((this._autoPlay = t), t ? this.play() : this.stop());
            }
          ),
          r(
            0,
            n,
            'isPlaying',
            function() {
              return this._isPlaying;
            },
            function(t) {
              this._isPlaying = t;
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              ('number' == typeof t && Math.floor(t) == t) ||
              'string' == typeof t
                ? (this.index = parseInt(t))
                : i.superSet(A, this, 'dataSource', t);
          }),
          r(0, n, 'bitmap', function() {
            return this._bitmap;
          }),
          e
        );
      })(A),
      P = (function(t) {
        function e() {
          (this.changeHandler = null),
            (this._gridSize = 11),
            (this._bgColor = '#ffffff'),
            (this._borderColor = '#000000'),
            (this._inputColor = '#000000'),
            (this._inputBgColor = '#efefef'),
            (this._colorPanel = null),
            (this._colorTiles = null),
            (this._colorBlock = null),
            (this._colorInput = null),
            (this._colorButton = null),
            (this._colors = []),
            (this._selectedColor = '#000000'),
            (this._panelChanged = !1),
            e.__super.call(this);
        }
        a(e, 'laya.ui.ColorPicker', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._colorPanel && this._colorPanel.destroy(e),
              this._colorButton && this._colorButton.destroy(e),
              (this._colorPanel = null),
              (this._colorTiles = null),
              (this._colorBlock = null),
              (this._colorInput = null),
              (this._colorButton = null),
              (this._colors = null),
              (this.changeHandler = null);
          }),
          (n.createChildren = function() {
            this.addChild((this._colorButton = new B())),
              (this._colorPanel = new R()),
              this._colorPanel.size(230, 166),
              this._colorPanel.addChild((this._colorTiles = new b())),
              this._colorPanel.addChild((this._colorBlock = new b())),
              this._colorPanel.addChild((this._colorInput = new p()));
          }),
          (n.initialize = function() {
            this._colorButton.on('click', this, this.onColorButtonClick),
              this._colorBlock.pos(5, 5),
              this._colorInput.pos(60, 5),
              this._colorInput.size(60, 20),
              this._colorInput.on('change', this, this.onColorInputChange),
              this._colorInput.on('keydown', this, this.onColorFieldKeyDown),
              this._colorTiles.pos(5, 30),
              this._colorTiles.on(
                'mousemove',
                this,
                this.onColorTilesMouseMove
              ),
              this._colorTiles.on('click', this, this.onColorTilesClick),
              this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize),
              this._colorPanel.on('mousedown', this, this.onPanelMouseDown),
              (this.bgColor = this._bgColor);
          }),
          (n.onPanelMouseDown = function(t) {
            t.stopPropagation();
          }),
          (n.changePanel = function() {
            this._panelChanged = !1;
            var t = this._colorPanel.graphics;
            t.clear(),
              t.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor),
              this.drawBlock(this._selectedColor),
              (this._colorInput.borderColor = this._borderColor),
              (this._colorInput.bgColor = this._inputBgColor),
              (this._colorInput.color = this._inputColor),
              (t = this._colorTiles.graphics).clear();
            for (
              var e = [
                  0,
                  3355443,
                  6710886,
                  10066329,
                  13421772,
                  16777215,
                  16711680,
                  65280,
                  255,
                  16776960,
                  65535,
                  16711935
                ],
                i = 0;
              i < 12;
              i++
            )
              for (var n = 0; n < 20; n++) {
                var a = 0;
                a =
                  0 === n
                    ? e[i]
                    : 1 === n
                    ? 0
                    : ((51 *
                        (((3 * i + n / 6) % 3 << 0) + 3 * ((i / 6) << 0))) <<
                        16) |
                      (((n % 6) * 51) << 8) |
                      (((i << 0) % 6) * 51);
                var r = E.toColor(a);
                this._colors.push(r);
                var s = n * this._gridSize,
                  o = i * this._gridSize;
                t.drawRect(s, o, this._gridSize, this._gridSize, r, '#000000');
              }
          }),
          (n.onColorButtonClick = function(t) {
            this._colorPanel.parent ? this.close() : this.open();
          }),
          (n.open = function() {
            var t = this.localToGlobal(new g()),
              e =
                t.x + this._colorPanel.width <= i.stage.width
                  ? t.x
                  : i.stage.width - this._colorPanel.width,
              n = t.y + this._colorButton.height;
            (n =
              n + this._colorPanel.height <= i.stage.height
                ? n
                : t.y - this._colorPanel.height),
              this._colorPanel.pos(e, n),
              (this._colorPanel.zOrder = 1001),
              i._currentStage.addChild(this._colorPanel),
              i.stage.on('mousedown', this, this.removeColorBox);
          }),
          (n.close = function() {
            i.stage.off('mousedown', this, this.removeColorBox),
              this._colorPanel.removeSelf();
          }),
          (n.removeColorBox = function(t) {
            this.close();
          }),
          (n.onColorFieldKeyDown = function(t) {
            13 == t.keyCode &&
              (this._colorInput.text
                ? (this.selectedColor = this._colorInput.text)
                : (this.selectedColor = null),
              this.close(),
              t.stopPropagation());
          }),
          (n.onColorInputChange = function(t) {
            this._colorInput.text
              ? this.drawBlock(this._colorInput.text)
              : this.drawBlock('#FFFFFF');
          }),
          (n.onColorTilesClick = function(t) {
            (this.selectedColor = this.getColorByMouse()), this.close();
          }),
          (n.onColorTilesMouseMove = function(t) {
            this._colorInput.focus = !1;
            var e = this.getColorByMouse();
            (this._colorInput.text = e), this.drawBlock(e);
          }),
          (n.getColorByMouse = function() {
            var t = this._colorTiles.getMousePoint(),
              e = Math.floor(t.x / this._gridSize),
              i = Math.floor(t.y / this._gridSize);
            return this._colors[20 * i + e];
          }),
          (n.drawBlock = function(t) {
            var e = this._colorBlock.graphics;
            e.clear();
            var i = t || '#ffffff';
            e.drawRect(0, 0, 50, 20, i, this._borderColor),
              t || e.drawLine(0, 0, 50, 20, '#ff0000');
          }),
          (n.changeColor = function() {
            var t = this.graphics;
            t.clear();
            var e = this._selectedColor || '#000000';
            t.drawRect(
              0,
              0,
              this._colorButton.width,
              this._colorButton.height,
              e
            );
          }),
          (n._setPanelChanged = function() {
            this._panelChanged ||
              ((this._panelChanged = !0), this.callLater(this.changePanel));
          }),
          r(
            0,
            n,
            'inputBgColor',
            function() {
              return this._inputBgColor;
            },
            function(t) {
              (this._inputBgColor = t), this._setPanelChanged();
            }
          ),
          r(
            0,
            n,
            'selectedColor',
            function() {
              return this._selectedColor;
            },
            function(t) {
              this._selectedColor != t &&
                ((this._selectedColor = this._colorInput.text = t),
                this.drawBlock(t),
                this.changeColor(),
                this.changeHandler &&
                  this.changeHandler.runWith(this._selectedColor),
                this.event('change', c.EMPTY.setTo('change', this, this)));
            }
          ),
          r(
            0,
            n,
            'skin',
            function() {
              return this._colorButton.skin;
            },
            function(t) {
              (this._colorButton.skin = t), this.changeColor();
            }
          ),
          r(
            0,
            n,
            'bgColor',
            function() {
              return this._bgColor;
            },
            function(t) {
              (this._bgColor = t), this._setPanelChanged();
            }
          ),
          r(
            0,
            n,
            'borderColor',
            function() {
              return this._borderColor;
            },
            function(t) {
              (this._borderColor = t), this._setPanelChanged();
            }
          ),
          r(
            0,
            n,
            'inputColor',
            function() {
              return this._inputColor;
            },
            function(t) {
              (this._inputColor = t), this._setPanelChanged();
            }
          ),
          e
        );
      })(A),
      O = (function(t) {
        function e(t, i) {
          (this._visibleNum = 6),
            (this._button = null),
            (this._list = null),
            (this._isOpen = !1),
            (this._itemSize = 12),
            (this._labels = []),
            (this._selectedIndex = -1),
            (this._selectHandler = null),
            (this._itemHeight = NaN),
            (this._listHeight = NaN),
            (this._listChanged = !1),
            (this._itemChanged = !1),
            (this._scrollBarSkin = null),
            (this._isCustomList = !1),
            (this.itemRender = null),
            e.__super.call(this),
            (this._itemColors = M.comboBoxItemColors),
            (this.skin = t),
            (this.labels = i);
        }
        a(e, 'laya.ui.ComboBox', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._button && this._button.destroy(e),
              this._list && this._list.destroy(e),
              (this._button = null),
              (this._list = null),
              (this._itemColors = null),
              (this._labels = null),
              (this._selectHandler = null);
          }),
          (n.createChildren = function() {
            this.addChild((this._button = new B())),
              (this._button.text.align = 'left'),
              (this._button.labelPadding = '0,0,0,5'),
              this._button.on('mousedown', this, this.onButtonMouseDown);
          }),
          (n._createList = function() {
            (this._list = new q()),
              this._scrollBarSkin &&
                (this._list.vScrollBarSkin = this._scrollBarSkin),
              this._setListEvent(this._list);
          }),
          (n._setListEvent = function(t) {
            (this._list.selectEnable = !0),
              this._list.on('mousedown', this, this.onListDown),
              (this._list.mouseHandler = f.create(
                this,
                this.onlistItemMouse,
                null,
                !1
              )),
              this._list.scrollBar &&
                this._list.scrollBar.on(
                  'mousedown',
                  this,
                  this.onScrollBarDown
                );
          }),
          (n.onListDown = function(t) {
            t.stopPropagation();
          }),
          (n.onScrollBarDown = function(t) {
            t.stopPropagation();
          }),
          (n.onButtonMouseDown = function(t) {
            this.callLater(this.switchTo, [!this._isOpen]);
          }),
          (n.changeList = function() {
            this._listChanged = !1;
            var t = this.width - 2,
              e = this._itemColors[2];
            (this._itemHeight = this._itemSize + 6),
              (this._list.itemRender = this.itemRender || {
                type: 'Box',
                child: [
                  {
                    type: 'Label',
                    props: {
                      name: 'label',
                      x: 1,
                      padding: '3,3,3,3',
                      width: t,
                      height: this._itemHeight,
                      fontSize: this._itemSize,
                      color: e
                    }
                  }
                ]
              }),
              (this._list.repeatY = this._visibleNum),
              this._list.refresh();
          }),
          (n.onlistItemMouse = function(t, e) {
            var i = t.type;
            if ('mouseover' === i || 'mouseout' === i) {
              if (this._isCustomList) return;
              var n = this._list.getCell(e);
              if (!n) return;
              var a = n.getChildByName('label');
              a &&
                ('mouseover' === i
                  ? ((a.bgColor = this._itemColors[0]),
                    (a.color = this._itemColors[1]))
                  : ((a.bgColor = null), (a.color = this._itemColors[2])));
            } else
              'click' === i && ((this.selectedIndex = e), (this.isOpen = !1));
          }),
          (n.switchTo = function(t) {
            this.isOpen = t;
          }),
          (n.changeOpen = function() {
            this.isOpen = !this._isOpen;
          }),
          (n.changeItem = function() {
            if (
              ((this._itemChanged = !1),
              (this._listHeight =
                this._labels.length > 0
                  ? Math.min(this._visibleNum, this._labels.length) *
                    this._itemHeight
                  : this._itemHeight),
              !this._isCustomList)
            ) {
              var t = this._list.graphics;
              t.clear(),
                t.drawRect(
                  0,
                  0,
                  this.width - 1,
                  this._listHeight,
                  this._itemColors[4],
                  this._itemColors[3]
                );
            }
            var e = this._list.array || [];
            e.length = 0;
            for (var i = 0, n = this._labels.length; i < n; i++)
              e.push({ label: this._labels[i] });
            (this._list.height = this._listHeight), (this._list.array = e);
          }),
          (n.changeSelected = function() {
            this._button.label = this.selectedLabel;
          }),
          (n._onStageMouseWheel = function(t) {
            this._list &&
              !this._list.contains(t.target) &&
              this.removeList(null);
          }),
          (n.removeList = function(t) {
            i.stage.off('mousedown', this, this.removeList),
              i.stage.off('mousewheel', this, this._onStageMouseWheel),
              (this.isOpen = !1);
          }),
          r(
            0,
            n,
            'selectedIndex',
            function() {
              return this._selectedIndex;
            },
            function(t) {
              this._selectedIndex != t &&
                ((this._selectedIndex = t),
                this._labels.length > 0
                  ? this.changeSelected()
                  : this.callLater(this.changeSelected),
                this.event('change', [c.EMPTY.setTo('change', this, this)]),
                this._selectHandler &&
                  this._selectHandler.runWith(this._selectedIndex));
            }
          ),
          r(0, n, 'measureHeight', function() {
            return this._button.height;
          }),
          r(
            0,
            n,
            'skin',
            function() {
              return this._button.skin;
            },
            function(t) {
              this._button.skin != t &&
                ((this._button.skin = t), (this._listChanged = !0));
            }
          ),
          r(0, n, 'measureWidth', function() {
            return this._button.width;
          }),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(A, this, 'width', t),
              (this._button.width = this._width),
              (this._itemChanged = !0),
              (this._listChanged = !0);
          }),
          r(
            0,
            n,
            'selectedLabel',
            function() {
              return this._selectedIndex > -1 &&
                this._selectedIndex < this._labels.length
                ? this._labels[this._selectedIndex]
                : null;
            },
            function(t) {
              this.selectedIndex = this._labels.indexOf(t);
            }
          ),
          r(
            0,
            n,
            'labels',
            function() {
              return this._labels.join(',');
            },
            function(t) {
              this._labels.length > 0 && (this.selectedIndex = -1),
                t ? (this._labels = t.split(',')) : (this._labels.length = 0),
                (this._itemChanged = !0);
            }
          ),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(A, this, 'height', t),
              (this._button.height = this._height);
          }),
          r(
            0,
            n,
            'selectHandler',
            function() {
              return this._selectHandler;
            },
            function(t) {
              this._selectHandler = t;
            }
          ),
          r(
            0,
            n,
            'visibleNum',
            function() {
              return this._visibleNum;
            },
            function(t) {
              (this._visibleNum = t), (this._listChanged = !0);
            }
          ),
          r(
            0,
            n,
            'labelBold',
            function() {
              return this._button.text.bold;
            },
            function(t) {
              this._button.text.bold = t;
            }
          ),
          r(
            0,
            n,
            'itemColors',
            function() {
              return String(this._itemColors);
            },
            function(t) {
              (this._itemColors = E.fillArray(this._itemColors, t, String)),
                (this._listChanged = !0);
            }
          ),
          r(
            0,
            n,
            'itemSize',
            function() {
              return this._itemSize;
            },
            function(t) {
              (this._itemSize = t), (this._listChanged = !0);
            }
          ),
          r(0, n, 'scrollBar', function() {
            return this.list.scrollBar;
          }),
          r(
            0,
            n,
            'isOpen',
            function() {
              return this._isOpen;
            },
            function(t) {
              if (this._isOpen != t)
                if (
                  ((this._isOpen = t),
                  (this._button.selected = this._isOpen),
                  this._isOpen)
                ) {
                  this._list || this._createList(),
                    this._listChanged &&
                      !this._isCustomList &&
                      this.changeList(),
                    this._itemChanged && this.changeItem();
                  var e = this.localToGlobal(g.TEMP.setTo(0, 0)),
                    n = e.y + this._button.height;
                  (n =
                    n + this._listHeight <= i.stage.height
                      ? n
                      : e.y - this._listHeight),
                    this._list.pos(e.x, n),
                    (this._list.zOrder = 1001),
                    i._currentStage.addChild(this._list),
                    i.stage.once('mousedown', this, this.removeList),
                    i.stage.on('mousewheel', this, this._onStageMouseWheel),
                    (this._list.selectedIndex = this._selectedIndex);
                } else this._list && this._list.removeSelf();
            }
          ),
          r(
            0,
            n,
            'scrollBarSkin',
            function() {
              return this._scrollBarSkin;
            },
            function(t) {
              this._scrollBarSkin = t;
            }
          ),
          r(
            0,
            n,
            'sizeGrid',
            function() {
              return this._button.sizeGrid;
            },
            function(t) {
              this._button.sizeGrid = t;
            }
          ),
          r(0, n, 'button', function() {
            return this._button;
          }),
          r(
            0,
            n,
            'list',
            function() {
              return this._list || this._createList(), this._list;
            },
            function(t) {
              t &&
                (t.removeSelf(),
                (this._isCustomList = !0),
                (this._list = t),
                this._setListEvent(t),
                (this._itemHeight = t.getCell(0).height + t.spaceY));
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              ('number' == typeof t && Math.floor(t) == t) ||
              'string' == typeof t
                ? (this.selectedIndex = parseInt(t))
                : t instanceof Array
                ? (this.labels = t.join(','))
                : i.superSet(A, this, 'dataSource', t);
          }),
          r(
            0,
            n,
            'labelColors',
            function() {
              return this._button.labelColors;
            },
            function(t) {
              this._button.labelColors != t && (this._button.labelColors = t);
            }
          ),
          r(
            0,
            n,
            'labelPadding',
            function() {
              return this._button.text.padding.join(',');
            },
            function(t) {
              this._button.text.padding = E.fillArray(
                M.labelPadding,
                t,
                Number
              );
            }
          ),
          r(
            0,
            n,
            'labelSize',
            function() {
              return this._button.text.fontSize;
            },
            function(t) {
              this._button.text.fontSize = t;
            }
          ),
          r(
            0,
            n,
            'labelFont',
            function() {
              return this._button.text.font;
            },
            function(t) {
              this._button.text.font = t;
            }
          ),
          r(
            0,
            n,
            'stateNum',
            function() {
              return this._button.stateNum;
            },
            function(t) {
              this._button.stateNum = t;
            }
          ),
          e
        );
      })(A),
      U = (function(t) {
        function e(t) {
          (this.rollRatio = 0.95),
            (this.changeHandler = null),
            (this.scaleBar = !0),
            (this.autoHide = !1),
            (this.elasticDistance = 0),
            (this.elasticBackTime = 500),
            (this.upButton = null),
            (this.downButton = null),
            (this.slider = null),
            (this._scrollSize = 1),
            (this._skin = null),
            (this._thumbPercent = 1),
            (this._target = null),
            (this._lastPoint = null),
            (this._lastOffset = 0),
            (this._checkElastic = !1),
            (this._isElastic = !1),
            (this._value = NaN),
            (this._hide = !1),
            (this._clickOnly = !0),
            (this._offsets = null),
            e.__super.call(this),
            (this._showButtons = L.showButtons),
            (this._touchScrollEnable = L.touchScrollEnable),
            (this._mouseWheelEnable = L.mouseWheelEnable),
            (this.skin = t),
            (this.max = 1);
        }
        a(e, 'laya.ui.ScrollBar', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              this.stopScroll(),
              (this.target = null),
              t.prototype.destroy.call(this, e),
              this.upButton && this.upButton.destroy(e),
              this.downButton && this.downButton.destroy(e),
              this.slider && this.slider.destroy(e),
              (this.upButton = this.downButton = null),
              (this.slider = null),
              (this.changeHandler = null),
              (this._offsets = null);
          }),
          (n.createChildren = function() {
            this.addChild((this.slider = new V())),
              this.addChild((this.upButton = new B())),
              this.addChild((this.downButton = new B()));
          }),
          (n.initialize = function() {
            (this.slider.showLabel = !1),
              this.slider.on('change', this, this.onSliderChange),
              this.slider.setSlider(0, 0, 0),
              this.upButton.on('mousedown', this, this.onButtonMouseDown),
              this.downButton.on('mousedown', this, this.onButtonMouseDown);
          }),
          (n.onSliderChange = function() {
            this._value != this.slider.value &&
              (this.value = this.slider.value);
          }),
          (n.onButtonMouseDown = function(t) {
            var e = t.currentTarget === this.upButton;
            this.slide(e),
              i.timer.once(M.scrollBarDelayTime, this, this.startLoop, [e]),
              i.stage.once('mouseup', this, this.onStageMouseUp);
          }),
          (n.startLoop = function(t) {
            i.timer.frameLoop(1, this, this.slide, [t]);
          }),
          (n.slide = function(t) {
            t
              ? (this.value -= this._scrollSize)
              : (this.value += this._scrollSize);
          }),
          (n.onStageMouseUp = function(t) {
            i.timer.clear(this, this.startLoop),
              i.timer.clear(this, this.slide);
          }),
          (n.changeScrollBar = function() {
            (this.upButton.visible = this._showButtons),
              (this.downButton.visible = this._showButtons),
              this._showButtons &&
                ((this.upButton.skin = this._skin.replace('.png', '$up.png')),
                (this.downButton.skin = this._skin.replace(
                  '.png',
                  '$down.png'
                ))),
              this.slider.isVertical
                ? (this.slider.y = this._showButtons ? this.upButton.height : 0)
                : (this.slider.x = this._showButtons ? this.upButton.width : 0),
              this.resetPositions(),
              this.repaint();
          }),
          (n.changeSize = function() {
            t.prototype.changeSize.call(this),
              this.repaint(),
              this.resetPositions(),
              this.event('change'),
              this.changeHandler && this.changeHandler.runWith(this.value);
          }),
          (n.resetPositions = function() {
            this.slider.isVertical
              ? (this.slider.height =
                  this.height -
                  (this._showButtons
                    ? this.upButton.height + this.downButton.height
                    : 0))
              : (this.slider.width =
                  this.width -
                  (this._showButtons
                    ? this.upButton.width + this.downButton.width
                    : 0)),
              this.resetButtonPosition();
          }),
          (n.resetButtonPosition = function() {
            this.slider.isVertical
              ? (this.downButton.y = this.slider.y + this.slider.height)
              : (this.downButton.x = this.slider.x + this.slider.width);
          }),
          (n.setScroll = function(t, e, i) {
            this.runCallLater(this.changeSize),
              this.slider.setSlider(t, e, i),
              (this.slider.bar.visible = e > 0),
              !this._hide && this.autoHide && (this.visible = !1);
          }),
          (n.onTargetMouseWheel = function(t) {
            (this.value -= t.delta * this._scrollSize),
              (this.target = this._target);
          }),
          (n.onTargetMouseDown = function(t) {
            (this._clickOnly = !0),
              (this._lastOffset = 0),
              (this._checkElastic = !1),
              this._lastPoint || (this._lastPoint = new g()),
              this._lastPoint.setTo(i.stage.mouseX, i.stage.mouseY),
              i.timer.clear(this, this.tweenMove),
              I.clearTween(this),
              i.stage.once('mouseup', this, this.onStageMouseUp2),
              i.stage.once('mouseout', this, this.onStageMouseUp2),
              i.timer.frameLoop(1, this, this.loop);
          }),
          (n.loop = function() {
            var t = i.stage.mouseY,
              e = i.stage.mouseX;
            if (
              ((this._lastOffset = this.isVertical
                ? t - this._lastPoint.y
                : e - this._lastPoint.x),
              this._clickOnly)
            ) {
              if (
                !(
                  Math.abs(
                    this._lastOffset *
                      (this.isVertical
                        ? i.stage._canvasTransform.getScaleY()
                        : i.stage._canvasTransform.getScaleX())
                  ) > 1
                )
              )
                return;
              (this._clickOnly = !1),
                this._offsets || (this._offsets = []),
                (this._offsets.length = 0),
                (this._target.mouseEnabled = !1),
                !this.hide &&
                  this.autoHide &&
                  ((this.alpha = 1), (this.visible = !0)),
                this.event('start');
            }
            this._offsets.push(this._lastOffset),
              (this._lastPoint.x = e),
              (this._lastPoint.y = t),
              0 !== this._lastOffset &&
                (this._checkElastic ||
                  (this.elasticDistance > 0
                    ? this._checkElastic ||
                      0 == this._lastOffset ||
                      ((this._lastOffset > 0 && this._value <= this.min) ||
                      (this._lastOffset < 0 && this._value >= this.max)
                        ? ((this._isElastic = !0), (this._checkElastic = !0))
                        : (this._isElastic = !1))
                    : (this._checkElastic = !0)),
                this._isElastic
                  ? this._value <= this.min
                    ? (this.value -=
                        this._lastOffset *
                        Math.max(
                          0,
                          1 - (this.min - this._value) / this.elasticDistance
                        ))
                    : this._value >= this.max &&
                      (this.value -=
                        this._lastOffset *
                        Math.max(
                          0,
                          1 - (this._value - this.max) / this.elasticDistance
                        ))
                  : (this.value -= this._lastOffset));
          }),
          (n.onStageMouseUp2 = function(t) {
            if (
              (i.stage.off('mouseup', this, this.onStageMouseUp2),
              i.stage.off('mouseout', this, this.onStageMouseUp2),
              i.timer.clear(this, this.loop),
              !(
                this._clickOnly &&
                this._value >= this.min &&
                this._value <= this.max
              ))
            )
              if (((this._target.mouseEnabled = !0), this._isElastic))
                this._value < this.min
                  ? I.to(
                      this,
                      { value: this.min },
                      this.elasticBackTime,
                      h.sineOut,
                      f.create(this, this.elasticOver)
                    )
                  : this._value > this.max &&
                    I.to(
                      this,
                      { value: this.max },
                      this.elasticBackTime,
                      h.sineOut,
                      f.create(this, this.elasticOver)
                    );
              else {
                if (!this._offsets) return;
                this._offsets.length < 1 &&
                  (this._offsets[0] = this.isVertical
                    ? i.stage.mouseY - this._lastPoint.y
                    : i.stage.mouseX - this._lastPoint.x);
                for (
                  var e = 0, n = Math.min(this._offsets.length, 3), a = 0;
                  a < n;
                  a++
                )
                  e += this._offsets[this._offsets.length - 1 - a];
                if (
                  ((this._lastOffset = e / n),
                  (e = Math.abs(this._lastOffset)) < 2)
                )
                  return void this.event('end');
                e > 60 && (this._lastOffset = this._lastOffset > 0 ? 60 : -60);
                var r = Math.round(
                  Math.abs(this.elasticDistance * (this._lastOffset / 240))
                );
                i.timer.frameLoop(1, this, this.tweenMove, [r]);
              }
          }),
          (n.elasticOver = function() {
            (this._isElastic = !1),
              !this.hide && this.autoHide && I.to(this, { alpha: 0 }, 500),
              this.event('end');
          }),
          (n.tweenMove = function(t) {
            this._lastOffset *= this.rollRatio;
            var e = NaN;
            if (
              (t > 0 &&
                (this._lastOffset > 0 && this.value <= this.min
                  ? ((this._isElastic = !0),
                    (e = 0.5 * -(this.min - t - this.value)),
                    this._lastOffset > e && (this._lastOffset = e))
                  : this._lastOffset < 0 &&
                    this.value >= this.max &&
                    ((this._isElastic = !0),
                    (e = 0.5 * -(this.max + t - this.value)),
                    this._lastOffset < e && (this._lastOffset = e))),
              (this.value -= this._lastOffset),
              Math.abs(this._lastOffset) < 1)
            ) {
              if ((i.timer.clear(this, this.tweenMove), this._isElastic))
                return void (this._value < this.min
                  ? I.to(
                      this,
                      { value: this.min },
                      this.elasticBackTime,
                      h.sineOut,
                      f.create(this, this.elasticOver)
                    )
                  : this._value > this.max
                  ? I.to(
                      this,
                      { value: this.max },
                      this.elasticBackTime,
                      h.sineOut,
                      f.create(this, this.elasticOver)
                    )
                  : this.elasticOver());
              this.event('end'),
                !this.hide && this.autoHide && I.to(this, { alpha: 0 }, 500);
            }
          }),
          (n.stopScroll = function() {
            this.onStageMouseUp2(null),
              i.timer.clear(this, this.tweenMove),
              I.clearTween(this);
          }),
          r(0, n, 'measureHeight', function() {
            return this.slider.isVertical ? 100 : this.slider.height;
          }),
          r(
            0,
            n,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              this._skin != t &&
                ((this._skin = t),
                (this.slider.skin = this._skin),
                this.callLater(this.changeScrollBar));
            }
          ),
          r(
            0,
            n,
            'max',
            function() {
              return this.slider.max;
            },
            function(t) {
              this.slider.max = t;
            }
          ),
          r(
            0,
            n,
            'showButtons',
            function() {
              return this._showButtons;
            },
            function(t) {
              (this._showButtons = t), this.callLater(this.changeScrollBar);
            }
          ),
          r(0, n, 'measureWidth', function() {
            return this.slider.isVertical ? this.slider.width : 100;
          }),
          r(
            0,
            n,
            'min',
            function() {
              return this.slider.min;
            },
            function(t) {
              this.slider.min = t;
            }
          ),
          r(
            0,
            n,
            'value',
            function() {
              return this._value;
            },
            function(t) {
              t !== this._value &&
                ((this._value = t),
                this._isElastic ||
                  (this.slider._value != t &&
                    ((this.slider._value = t), this.slider.changeValue()),
                  (this._value = this.slider._value)),
                this.event('change'),
                this.changeHandler && this.changeHandler.runWith(this._value));
            }
          ),
          r(
            0,
            n,
            'isVertical',
            function() {
              return this.slider.isVertical;
            },
            function(t) {
              this.slider.isVertical = t;
            }
          ),
          r(
            0,
            n,
            'sizeGrid',
            function() {
              return this.slider.sizeGrid;
            },
            function(t) {
              this.slider.sizeGrid = t;
            }
          ),
          r(
            0,
            n,
            'scrollSize',
            function() {
              return this._scrollSize;
            },
            function(t) {
              this._scrollSize = t;
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              'number' == typeof t || 'string' == typeof t
                ? (this.value = Number(t))
                : i.superSet(A, this, 'dataSource', t);
          }),
          r(
            0,
            n,
            'thumbPercent',
            function() {
              return this._thumbPercent;
            },
            function(t) {
              this.runCallLater(this.changeScrollBar),
                this.runCallLater(this.changeSize),
                (t = t >= 1 ? 0.99 : t),
                (this._thumbPercent = t),
                this.scaleBar &&
                  (this.slider.isVertical
                    ? (this.slider.bar.height = Math.max(
                        this.slider.height * t,
                        M.scrollBarMinNum
                      ))
                    : (this.slider.bar.width = Math.max(
                        this.slider.width * t,
                        M.scrollBarMinNum
                      )));
            }
          ),
          r(
            0,
            n,
            'target',
            function() {
              return this._target;
            },
            function(t) {
              this._target &&
                (this._target.off('mousewheel', this, this.onTargetMouseWheel),
                this._target.off('mousedown', this, this.onTargetMouseDown)),
                (this._target = t),
                t &&
                  (this._mouseWheelEnable &&
                    this._target.on(
                      'mousewheel',
                      this,
                      this.onTargetMouseWheel
                    ),
                  this._touchScrollEnable &&
                    this._target.on('mousedown', this, this.onTargetMouseDown));
            }
          ),
          r(
            0,
            n,
            'hide',
            function() {
              return this._hide;
            },
            function(t) {
              (this._hide = t), (this.visible = !t);
            }
          ),
          r(
            0,
            n,
            'touchScrollEnable',
            function() {
              return this._touchScrollEnable;
            },
            function(t) {
              (this._touchScrollEnable = t), (this.target = this._target);
            }
          ),
          r(
            0,
            n,
            'mouseWheelEnable',
            function() {
              return this._mouseWheelEnable;
            },
            function(t) {
              this._mouseWheelEnable = t;
            }
          ),
          r(
            0,
            n,
            'tick',
            function() {
              return this.slider.tick;
            },
            function(t) {
              this.slider.tick = t;
            }
          ),
          e
        );
      })(A),
      V = (function(t) {
        function e(t) {
          (this.changeHandler = null),
            (this.isVertical = !0),
            (this.showLabel = !0),
            (this._allowClickBack = !1),
            (this._max = 100),
            (this._min = 0),
            (this._tick = 1),
            (this._value = 0),
            (this._skin = null),
            (this._bg = null),
            (this._progress = null),
            (this._bar = null),
            (this._tx = NaN),
            (this._ty = NaN),
            (this._maxMove = NaN),
            (this._globalSacle = null),
            e.__super.call(this),
            (this.skin = t);
        }
        a(e, 'laya.ui.Slider', t);
        var s = e.prototype;
        return (
          (s.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._bg && this._bg.destroy(e),
              this._bar && this._bar.destroy(e),
              this._progress && this._progress.destroy(e),
              (this._bg = null),
              (this._bar = null),
              (this._progress = null),
              (this.changeHandler = null);
          }),
          (s.createChildren = function() {
            this.addChild((this._bg = new F())),
              this.addChild((this._bar = new B()));
          }),
          (s.initialize = function() {
            this._bar.on('mousedown', this, this.onBarMouseDown),
              (this._bg.sizeGrid = this._bar.sizeGrid = '4,4,4,4,0'),
              this._progress && (this._progress.sizeGrid = this._bar.sizeGrid),
              (this.allowClickBack = !0);
          }),
          (s.onBarMouseDown = function(t) {
            this._globalSacle || (this._globalSacle = new g()),
              this._globalSacle.setTo(
                this.globalScaleX || 0.01,
                this.globalScaleY || 0.01
              ),
              (this._maxMove = this.isVertical
                ? this.height - this._bar.height
                : this.width - this._bar.width),
              (this._tx = i.stage.mouseX),
              (this._ty = i.stage.mouseY),
              i.stage.on('mousemove', this, this.mouseMove),
              i.stage.once('mouseup', this, this.mouseUp),
              i.stage.once('mouseout', this, this.mouseUp),
              this.showValueText();
          }),
          (s.showValueText = function() {
            if (this.showLabel) {
              var t = laya.ui.Slider.label;
              this.addChild(t),
                t.textField.changeText(this._value + ''),
                this.isVertical
                  ? ((t.x = this._bar.x + 20),
                    (t.y = 0.5 * (this._bar.height - t.height) + this._bar.y))
                  : ((t.y = this._bar.y - 20),
                    (t.x = 0.5 * (this._bar.width - t.width) + this._bar.x));
            }
          }),
          (s.hideValueText = function() {
            laya.ui.Slider.label && laya.ui.Slider.label.removeSelf();
          }),
          (s.mouseUp = function(t) {
            i.stage.off('mousemove', this, this.mouseMove),
              i.stage.off('mouseup', this, this.mouseUp),
              i.stage.off('mouseout', this, this.mouseUp),
              this.sendChangeEvent('changed'),
              this.hideValueText();
          }),
          (s.mouseMove = function(t) {
            var e = this._value;
            this.isVertical
              ? ((this._bar.y +=
                  (i.stage.mouseY - this._ty) / this._globalSacle.y),
                this._bar.y > this._maxMove
                  ? (this._bar.y = this._maxMove)
                  : this._bar.y < 0 && (this._bar.y = 0),
                (this._value =
                  (this._bar.y / this._maxMove) * (this._max - this._min) +
                  this._min),
                this._progress &&
                  (this._progress.height =
                    this._bar.y + 0.5 * this._bar.height))
              : ((this._bar.x +=
                  (i.stage.mouseX - this._tx) / this._globalSacle.x),
                this._bar.x > this._maxMove
                  ? (this._bar.x = this._maxMove)
                  : this._bar.x < 0 && (this._bar.x = 0),
                (this._value =
                  (this._bar.x / this._maxMove) * (this._max - this._min) +
                  this._min),
                this._progress &&
                  (this._progress.width = this._bar.x + 0.5 * this._bar.width)),
              (this._tx = i.stage.mouseX),
              (this._ty = i.stage.mouseY);
            var n = Math.pow(10, (this._tick + '').length - 1);
            (this._value =
              Math.round(
                Math.round(this._value / this._tick) * this._tick * n
              ) / n),
              this._value != e && this.sendChangeEvent(),
              this.showValueText();
          }),
          (s.sendChangeEvent = function(t) {
            void 0 === t && (t = 'change'),
              this.event(t),
              this.changeHandler && this.changeHandler.runWith(this._value);
          }),
          (s.setBarPoint = function() {
            this.isVertical
              ? (this._bar.x = Math.round(
                  0.5 * (this._bg.width - this._bar.width)
                ))
              : (this._bar.y = Math.round(
                  0.5 * (this._bg.height - this._bar.height)
                ));
          }),
          (s.changeSize = function() {
            t.prototype.changeSize.call(this),
              this.isVertical
                ? (this._bg.height = this.height)
                : (this._bg.width = this.width),
              this.setBarPoint(),
              this.changeValue();
          }),
          (s.setSlider = function(t, e, i) {
            (this._value = -1),
              (this._min = t),
              (this._max = e > t ? e : t),
              (this.value = i < t ? t : i > e ? e : i);
          }),
          (s.changeValue = function() {
            var t = Math.pow(10, (this._tick + '').length - 1);
            (this._value =
              Math.round(
                Math.round(this._value / this._tick) * this._tick * t
              ) / t),
              (this._value =
                this._value > this._max
                  ? this._max
                  : this._value < this._min
                  ? this._min
                  : this._value);
            var e = this._max - this._min;
            0 === e && (e = 1),
              this.isVertical
                ? ((this._bar.y =
                    ((this._value - this._min) / e) *
                    (this.height - this._bar.height)),
                  this._progress &&
                    (this._progress.height =
                      this._bar.y + 0.5 * this._bar.height))
                : ((this._bar.x =
                    ((this._value - this._min) / e) *
                    (this.width - this._bar.width)),
                  this._progress &&
                    (this._progress.width =
                      this._bar.x + 0.5 * this._bar.width));
          }),
          (s.onBgMouseDown = function(t) {
            var e = this._bg.getMousePoint();
            this.isVertical
              ? (this.value =
                  (e.y / (this.height - this._bar.height)) *
                    (this._max - this._min) +
                  this._min)
              : (this.value =
                  (e.x / (this.width - this._bar.width)) *
                    (this._max - this._min) +
                  this._min);
          }),
          r(0, s, 'measureHeight', function() {
            return Math.max(this._bg.height, this._bar.height);
          }),
          r(
            0,
            s,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              if (this._skin != t) {
                (this._skin = t),
                  (this._bg.skin = this._skin),
                  (this._bar.skin = this._skin.replace('.png', '$bar.png'));
                var e = this._skin.replace('.png', '$progress.png');
                m.getRes(e) &&
                  (this._progress ||
                    (this.addChild((this._progress = new F())),
                    (this._progress.sizeGrid = this._bar.sizeGrid),
                    this.setChildIndex(this._progress, 1)),
                  (this._progress.skin = e)),
                  this.setBarPoint(),
                  this.callLater(this.changeValue);
              }
            }
          ),
          r(
            0,
            s,
            'allowClickBack',
            function() {
              return this._allowClickBack;
            },
            function(t) {
              this._allowClickBack != t &&
                ((this._allowClickBack = t),
                t
                  ? this._bg.on('mousedown', this, this.onBgMouseDown)
                  : this._bg.off('mousedown', this, this.onBgMouseDown));
            }
          ),
          r(
            0,
            s,
            'max',
            function() {
              return this._max;
            },
            function(t) {
              this._max != t &&
                ((this._max = t), this.callLater(this.changeValue));
            }
          ),
          r(0, s, 'measureWidth', function() {
            return Math.max(this._bg.width, this._bar.width);
          }),
          r(
            0,
            s,
            'tick',
            function() {
              return this._tick;
            },
            function(t) {
              this._tick != t &&
                ((this._tick = t), this.callLater(this.changeValue));
            }
          ),
          r(
            0,
            s,
            'sizeGrid',
            function() {
              return this._bg.sizeGrid;
            },
            function(t) {
              (this._bg.sizeGrid = t),
                (this._bar.sizeGrid = t),
                this._progress &&
                  (this._progress.sizeGrid = this._bar.sizeGrid);
            }
          ),
          r(
            0,
            s,
            'min',
            function() {
              return this._min;
            },
            function(t) {
              this._min != t &&
                ((this._min = t), this.callLater(this.changeValue));
            }
          ),
          r(
            0,
            s,
            'value',
            function() {
              return this._value;
            },
            function(t) {
              if (this._value != t) {
                var e = this._value;
                (this._value = t),
                  this.changeValue(),
                  this._value != e && this.sendChangeEvent();
              }
            }
          ),
          r(0, s, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              'number' == typeof t || 'string' == typeof t
                ? (this.value = Number(t))
                : i.superSet(A, this, 'dataSource', t);
          }),
          r(0, s, 'bar', function() {
            return this._bar;
          }),
          n(e, [
            'label',
            function() {
              return (this.label = new H());
            }
          ]),
          e
        );
      })(A),
      F = (function(t) {
        function e(t) {
          (this._bitmap = null),
            (this._skin = null),
            (this._group = null),
            e.__super.call(this),
            (this.skin = t);
        }
        a(e, 'laya.ui.Image', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, !0),
              this._bitmap && this._bitmap.destroy(),
              (this._bitmap = null);
          }),
          (n.dispose = function() {
            this.destroy(!0), i.loader.clearRes(this._skin);
          }),
          (n.createChildren = function() {
            (this.graphics = this._bitmap = new D()),
              (this._bitmap.autoCacheCmd = !1);
          }),
          (n.setSource = function(t, e) {
            t === this._skin && e && ((this.source = e), this.onCompResize());
          }),
          r(
            0,
            n,
            'source',
            function() {
              return this._bitmap.source;
            },
            function(t) {
              this._bitmap &&
                ((this._bitmap.source = t),
                this.event('loaded'),
                this.repaint());
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              'string' == typeof t
                ? (this.skin = t)
                : i.superSet(A, this, 'dataSource', t);
          }),
          r(0, n, 'measureHeight', function() {
            return this._bitmap.height;
          }),
          r(
            0,
            n,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              if (this._skin != t || !this.source)
                if (((this._skin = t), t)) {
                  var e = m.getRes(t);
                  e
                    ? ((this.source = e), this.onCompResize())
                    : (this.source = null);
                } else this.source = null;
            }
          ),
          r(
            0,
            n,
            'group',
            function() {
              return this._group;
            },
            function(t) {
              t && this._skin && m.setGroup(this._skin, t), (this._group = t);
            }
          ),
          r(
            0,
            n,
            'sizeGrid',
            function() {
              return this._bitmap.sizeGrid
                ? this._bitmap.sizeGrid.join(',')
                : null;
            },
            function(t) {
              this._bitmap.sizeGrid = E.fillArray(M.defaultSizeGrid, t, Number);
            }
          ),
          r(0, n, 'measureWidth', function() {
            return this._bitmap.width;
          }),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(A, this, 'width', t),
              (this._bitmap.width = 0 == t ? 1e-7 : t);
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(A, this, 'height', t),
              (this._bitmap.height = 0 == t ? 1e-7 : t);
          }),
          e
        );
      })(A),
      H = (function(t) {
        function e(t) {
          (this._tf = null),
            e.__super.call(this),
            void 0 === t && (t = ''),
            (u.defaultColor = M.labelColor),
            (this.text = t);
        }
        a(e, 'laya.ui.Label', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              (this._tf = null);
          }),
          (n.createChildren = function() {
            this.addChild((this._tf = new w()));
          }),
          (n.changeText = function(t) {
            this._tf.changeText(t);
          }),
          r(
            0,
            n,
            'padding',
            function() {
              return this._tf.padding.join(',');
            },
            function(t) {
              this._tf.padding = E.fillArray(M.labelPadding, t, Number);
            }
          ),
          r(
            0,
            n,
            'bold',
            function() {
              return this._tf.bold;
            },
            function(t) {
              this._tf.bold = t;
            }
          ),
          r(
            0,
            n,
            'align',
            function() {
              return this._tf.align;
            },
            function(t) {
              this._tf.align = t;
            }
          ),
          r(
            0,
            n,
            'text',
            function() {
              return this._tf.text;
            },
            function(t) {
              this._tf.text != t &&
                (t && (t = E.adptString(t + '')),
                (this._tf.text = t),
                this.event('change'),
                (this._width && this._height) || this.onCompResize());
            }
          ),
          r(
            0,
            n,
            'italic',
            function() {
              return this._tf.italic;
            },
            function(t) {
              this._tf.italic = t;
            }
          ),
          r(
            0,
            n,
            'wordWrap',
            function() {
              return this._tf.wordWrap;
            },
            function(t) {
              this._tf.wordWrap = t;
            }
          ),
          r(
            0,
            n,
            'font',
            function() {
              return this._tf.font;
            },
            function(t) {
              this._tf.font = t;
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              'number' == typeof t || 'string' == typeof t
                ? (this.text = t + '')
                : i.superSet(A, this, 'dataSource', t);
          }),
          r(
            0,
            n,
            'color',
            function() {
              return this._tf.color;
            },
            function(t) {
              this._tf.color = t;
            }
          ),
          r(
            0,
            n,
            'valign',
            function() {
              return this._tf.valign;
            },
            function(t) {
              this._tf.valign = t;
            }
          ),
          r(
            0,
            n,
            'leading',
            function() {
              return this._tf.leading;
            },
            function(t) {
              this._tf.leading = t;
            }
          ),
          r(
            0,
            n,
            'fontSize',
            function() {
              return this._tf.fontSize;
            },
            function(t) {
              this._tf.fontSize = t;
            }
          ),
          r(
            0,
            n,
            'bgColor',
            function() {
              return this._tf.bgColor;
            },
            function(t) {
              this._tf.bgColor = t;
            }
          ),
          r(
            0,
            n,
            'borderColor',
            function() {
              return this._tf.borderColor;
            },
            function(t) {
              this._tf.borderColor = t;
            }
          ),
          r(
            0,
            n,
            'stroke',
            function() {
              return this._tf.stroke;
            },
            function(t) {
              this._tf.stroke = t;
            }
          ),
          r(
            0,
            n,
            'strokeColor',
            function() {
              return this._tf.strokeColor;
            },
            function(t) {
              this._tf.strokeColor = t;
            }
          ),
          r(0, n, 'textField', function() {
            return this._tf;
          }),
          r(0, n, 'measureWidth', function() {
            return this._tf.width;
          }),
          r(0, n, 'measureHeight', function() {
            return this._tf.height;
          }),
          r(
            0,
            n,
            'width',
            function() {
              return this._width || this._tf.text
                ? i.superGet(A, this, 'width')
                : 0;
            },
            function(t) {
              i.superSet(A, this, 'width', t), (this._tf.width = t);
            }
          ),
          r(
            0,
            n,
            'height',
            function() {
              return this._height || this._tf.text
                ? i.superGet(A, this, 'height')
                : 0;
            },
            function(t) {
              i.superSet(A, this, 'height', t), (this._tf.height = t);
            }
          ),
          r(
            0,
            n,
            'overflow',
            function() {
              return this._tf.overflow;
            },
            function(t) {
              this._tf.overflow = t;
            }
          ),
          r(
            0,
            n,
            'underline',
            function() {
              return this._tf.underline;
            },
            function(t) {
              this._tf.underline = t;
            }
          ),
          r(
            0,
            n,
            'underlineColor',
            function() {
              return this._tf.underlineColor;
            },
            function(t) {
              this._tf.underlineColor = t;
            }
          ),
          e
        );
      })(A),
      G = (function(t) {
        function e(t) {
          (this.changeHandler = null),
            (this._bg = null),
            (this._bar = null),
            (this._skin = null),
            (this._value = 0.5),
            e.__super.call(this),
            (this.skin = t);
        }
        a(e, 'laya.ui.ProgressBar', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._bg && this._bg.destroy(e),
              this._bar && this._bar.destroy(e),
              (this._bg = this._bar = null),
              (this.changeHandler = null);
          }),
          (n.createChildren = function() {
            this.addChild((this._bg = new F())),
              this.addChild((this._bar = new F())),
              (this._bar._bitmap.autoCacheCmd = !1);
          }),
          (n.changeValue = function() {
            if (this.sizeGrid) {
              var t = this.sizeGrid.split(','),
                e = Number(t[3]),
                i = Number(t[1]),
                n = (this.width - e - i) * this._value;
              (this._bar.width = e + i + n),
                (this._bar.visible = this._bar.width > e + i);
            } else this._bar.width = this.width * this._value;
          }),
          r(0, n, 'measureHeight', function() {
            return this._bg.height;
          }),
          r(
            0,
            n,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              this._skin != t &&
                ((this._skin = t),
                (this._bg.skin = this._skin),
                (this._bar.skin = this._skin.replace('.png', '$bar.png')),
                this.callLater(this.changeValue));
            }
          ),
          r(0, n, 'measureWidth', function() {
            return this._bg.width;
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(A, this, 'height', t),
              (this._bg.height = this._height),
              (this._bar.height = this._height);
          }),
          r(0, n, 'bar', function() {
            return this._bar;
          }),
          r(
            0,
            n,
            'value',
            function() {
              return this._value;
            },
            function(t) {
              this._value != t &&
                ((t = t > 1 ? 1 : t < 0 ? 0 : t),
                (this._value = t),
                this.callLater(this.changeValue),
                this.event('change'),
                this.changeHandler && this.changeHandler.runWith(t));
            }
          ),
          r(0, n, 'bg', function() {
            return this._bg;
          }),
          r(
            0,
            n,
            'sizeGrid',
            function() {
              return this._bg.sizeGrid;
            },
            function(t) {
              this._bg.sizeGrid = this._bar.sizeGrid = t;
            }
          ),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(A, this, 'width', t),
              (this._bg.width = this._width),
              this.callLater(this.changeValue);
          }),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              'number' == typeof t || 'string' == typeof t
                ? (this.value = Number(t))
                : i.superSet(A, this, 'dataSource', t);
          }),
          e
        );
      })(A),
      z =
        ((function(t) {
          function e() {
            (this._tipBox = null),
              (this._tipText = null),
              (this._defaultTipHandler = null),
              e.__super.call(this),
              (this._tipBox = new A()),
              this._tipBox.addChild((this._tipText = new w())),
              (this._tipText.x = this._tipText.y = 5),
              (this._tipText.color = e.tipTextColor),
              (this._defaultTipHandler = this._showDefaultTip),
              i.stage.on('showtip', this, this._onStageShowTip),
              i.stage.on('hidetip', this, this._onStageHideTip),
              (this.zOrder = 1100);
          }
          a(e, 'laya.ui.TipManager', A);
          var n = e.prototype;
          (n._onStageHideTip = function(t) {
            i.timer.clear(this, this._showTip),
              this.closeAll(),
              this.removeSelf();
          }),
            (n._onStageShowTip = function(t) {
              i.timer.once(e.tipDelay, this, this._showTip, [t], !0);
            }),
            (n._showTip = function(t) {
              if ('string' == typeof t) {
                var e = String(t);
                Boolean(e) && this._defaultTipHandler(e);
              } else
                t instanceof laya.utils.Handler
                  ? t.run()
                  : 'function' == typeof t && t.apply();
              i.stage.on('mousemove', this, this._onStageMouseMove),
                i.stage.on('mousedown', this, this._onStageMouseDown),
                this._onStageMouseMove(null);
            }),
            (n._onStageMouseDown = function(t) {
              this.closeAll();
            }),
            (n._onStageMouseMove = function(t) {
              this._showToStage(this, e.offsetX, e.offsetY);
            }),
            (n._showToStage = function(t, e, n) {
              void 0 === e && (e = 0), void 0 === n && (n = 0);
              var a = t.getBounds();
              (t.x = i.stage.mouseX + e),
                (t.y = i.stage.mouseY + n),
                t.x + a.width > i.stage.width && (t.x -= a.width + e),
                t.y + a.height > i.stage.height && (t.y -= a.height + n);
            }),
            (n.closeAll = function() {
              i.timer.clear(this, this._showTip),
                i.stage.off('mousemove', this, this._onStageMouseMove),
                i.stage.off('mousedown', this, this._onStageMouseDown),
                this.removeChildren();
            }),
            (n.showDislayTip = function(t) {
              this.addChild(t),
                this._showToStage(this),
                i._currentStage.addChild(this);
            }),
            (n._showDefaultTip = function(t) {
              this._tipText.text = t;
              var n = this._tipBox.graphics;
              n.clear(),
                n.drawRect(
                  0,
                  0,
                  this._tipText.width + 10,
                  this._tipText.height + 10,
                  e.tipBackColor
                ),
                this.addChild(this._tipBox),
                this._showToStage(this),
                i._currentStage.addChild(this);
            }),
            r(
              0,
              n,
              'defaultTipHandler',
              function() {
                return this._defaultTipHandler;
              },
              function(t) {
                this._defaultTipHandler = t;
              }
            ),
            (e.offsetX = 10),
            (e.offsetY = 15),
            (e.tipTextColor = '#ffffff'),
            (e.tipBackColor = '#111111'),
            (e.tipDelay = 200);
        })(),
        (function(t) {
          function e() {
            (this._idMap = null),
              (this._aniList = null),
              (this._watchMap = {}),
              e.__super.call(this);
          }
          var r;
          a(e, 'laya.ui.View', R);
          var l = e.prototype;
          return (
            (l.createView = function(t) {
              if (
                (t.animations && !this._idMap && (this._idMap = {}),
                e.createComp(t, this, this),
                t.animations)
              ) {
                var i,
                  n,
                  a = [],
                  r = t.animations,
                  s = 0,
                  o = r.length;
                for (s = 0; s < o; s++) {
                  switch (
                    ((i = new _()),
                    (n = r[s]),
                    i._setUp(this._idMap, n),
                    (this[n.name] = i),
                    i._setControlNode(this),
                    n.action)
                  ) {
                    case 1:
                      i.play(0, !1);
                      break;
                    case 2:
                      i.play(0, !0);
                  }
                  a.push(i);
                }
                this._aniList = a;
              }
              this._width > 0 &&
                null == t.props.hitTestPrior &&
                !this.mouseThrough &&
                (this.hitTestPrior = !0);
            }),
            (l.onEvent = function(t, e) {}),
            (l.loadUI = function(t) {
              var i = e.uiMap[t];
              i && this.createView(i);
            }),
            (l.destroy = function(t) {
              void 0 === t && (t = !0),
                this._aniList && (this._aniList.length = 0),
                (this._idMap = null),
                (this._aniList = null),
                (this._watchMap = null),
                laya.ui.Component.prototype.destroy.call(this, t);
            }),
            (l.changeData = function(t) {
              var e = this._watchMap[t];
              if (e) {
                console.log('change', t);
                for (var i = 0, n = e.length; i < n; i++) {
                  e[i].exe(this);
                }
              }
            }),
            (e._regs = function() {
              for (var t in e.uiClassMap) o.regClass(t, e.uiClassMap[t]);
            }),
            (e.createComp = function(t, n, a, r) {
              if (!(n = n || e.getCompInstance(t)))
                return console.warn('can not create:' + t.type), null;
              var s = t.child;
              if (s)
                for (
                  var l = n instanceof laya.ui.List, h = 0, c = s.length;
                  h < c;
                  h++
                ) {
                  var u = s[h];
                  if (
                    !n.hasOwnProperty('itemRender') ||
                    ('render' != u.props.name &&
                      'render' !== u.props.renderType)
                  )
                    if ('Graphic' == u.type) o.addGraphicsToSprite(u, n);
                    else if (o.isDrawType(u.type))
                      o.addGraphicToSprite(u, n, !0);
                    else {
                      if (l) {
                        var _ = [],
                          d = e.createComp(u, null, a, _);
                        _.length && (d._$bindData = _);
                      } else d = e.createComp(u, null, a, r);
                      'Script' == u.type
                        ? ('owner' in d
                            ? (d.owner = n)
                            : 'target' in d && (d.target = n),
                          'copydata' in d && (d.copydata = t),
                          n.scriptMap || (n.scriptMap = {}),
                          (n.scriptMap[u.props.runtime] = d))
                        : 'mask' == u.props.renderType || 'mask' == u.props.name
                        ? (n.mask = d)
                        : d instanceof laya.display.Sprite && n.addChild(d);
                    }
                  else n.itemRender = u;
                }
              var f = t.props;
              for (var p in f) {
                var m = f[p];
                e.eventDic[p]
                  ? m && a && n.on(p, a, a.onEvent, [m])
                  : e.setCompValue(n, p, m, a, r);
              }
              return (
                i.__typeof(n, 'laya.ui.IItem') && n.initItems(),
                t.compId && a && a._idMap && (a._idMap[t.compId] = n),
                n
              );
            }),
            (e.setCompValue = function(t, n, a, s, l) {
              if ('string' == typeof a && a.indexOf('${') > -1) {
                if (
                  (e._sheet || (e._sheet = o.getClass('laya.data.Table')),
                  !e._sheet)
                )
                  return void console.warn('Can not find class Sheet');
                if (l) l.push(t, n, a);
                else if (s) {
                  -1 == a.indexOf('].') && (a = a.replace('.', '[0].'));
                  var h = new r(t, n, a);
                  h.exe(s);
                  for (
                    var c, u, _ = a.replace(/\[.*?\]\./g, '.');
                    null != (c = e._parseWatchData.exec(_));

                  ) {
                    for (
                      var d = c[1];
                      null != (u = e._parseKeyWord.exec(d));

                    ) {
                      var f = u[0],
                        p = s._watchMap[f] || (s._watchMap[f] = []);
                      p.push(h), e._sheet.I.notifer.on(f, s, s.changeData, [f]);
                    }
                    (p = s._watchMap[d] || (s._watchMap[d] = [])).push(h),
                      e._sheet.I.notifer.on(d, s, s.changeData, [d]);
                  }
                }
              } else if ('var' === n && s) s[a] = t;
              else if ('onClick' == n) {
                var m = i._runScript('(function(){' + a + '})');
                t.on('click', s, m);
              } else t[n] = 'true' === a || ('false' !== a && a);
            }),
            (e.getCompInstance = function(t) {
              var n,
                a = t.props ? t.props.runtime : null;
              return (
                (n = a
                  ? e.viewClassMap[a] || e.uiClassMap[a] || i.__classmap[a]
                  : e.uiClassMap[t.type]),
                t.props &&
                t.props.hasOwnProperty('renderType') &&
                'instance' == t.props.renderType
                  ? n.instance
                  : n
                  ? new n()
                  : null
              );
            }),
            (e.regComponent = function(t, i) {
              (e.uiClassMap[t] = i), o.regClass(t, i);
            }),
            (e.regViewRuntime = function(t, i) {
              e.viewClassMap[t] = i;
            }),
            (e.uiMap = {}),
            (e.viewClassMap = {}),
            (e._sheet = null),
            n(e, [
              'uiClassMap',
              function() {
                return (this.uiClassMap = {
                  ViewStack: tt,
                  LinkButton: B,
                  TextArea: ht,
                  ColorPicker: P,
                  Box: R,
                  Button: B,
                  CheckBox: j,
                  Clip: k,
                  ComboBox: O,
                  Component: A,
                  HScrollBar: Y,
                  HSlider: K,
                  Image: F,
                  Label: H,
                  List: q,
                  Panel: J,
                  ProgressBar: G,
                  Radio: Q,
                  RadioGroup: ot,
                  ScrollBar: U,
                  Slider: V,
                  Tab: lt,
                  TextInput: it,
                  View: e,
                  VScrollBar: et,
                  VSlider: nt,
                  Tree: $,
                  HBox: rt,
                  VBox: st,
                  Sprite: b,
                  Animation: s,
                  Text: w,
                  FontClip: X
                });
              },
              'eventDic',
              function() {
                return (this.eventDic = {
                  mousedown: !0,
                  mouseup: !0,
                  mousemove: !0,
                  mouseover: !0,
                  mouseout: !0,
                  click: !0,
                  doubleclick: !0,
                  rightmousedown: !0,
                  rightmouseup: !0,
                  rightclick: !0
                });
              },
              '_parseWatchData',
              function() {
                return (this._parseWatchData = /\${(.*?)}/g);
              },
              '_parseKeyWord',
              function() {
                return (this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g);
              }
            ]),
            (e.__init$ = function() {
              e._regs(),
                (r = (function() {
                  function t(t, e, i) {
                    (this.comp = null),
                      (this.prop = null),
                      (this.value = null),
                      (this.comp = t),
                      (this.prop = e),
                      (this.value = i);
                  }
                  a(t, '');
                  return (
                    (t.prototype.exe = function(t) {
                      var e = E.getBindFun(this.value);
                      this.comp[this.prop] = e.call(this, t);
                    }),
                    t
                  );
                })());
            }),
            e
          );
        })()),
      j = (function(t) {
        function e(t, i) {
          void 0 === i && (i = ''), e.__super.call(this, t, i);
        }
        a(e, 'laya.ui.CheckBox', t);
        var n = e.prototype;
        return (
          (n.preinitialize = function() {
            laya.ui.Component.prototype.preinitialize.call(this),
              (this.toggle = !0),
              (this._autoSize = !1);
          }),
          (n.initialize = function() {
            t.prototype.initialize.call(this),
              this.createText(),
              (this._text.align = 'left'),
              (this._text.valign = 'top'),
              (this._text.width = 0);
          }),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              'boolean' == typeof t
                ? (this.selected = t)
                : 'string' == typeof t
                ? (this.selected = 'true' === t)
                : i.superSet(B, this, 'dataSource', t);
          }),
          e
        );
      })(B),
      W = (function(t) {
        function e() {
          (this._space = 0),
            (this._align = 'none'),
            (this._itemChanged = !1),
            e.__super.call(this);
        }
        a(e, 'laya.ui.LayoutBox', R);
        var i = e.prototype;
        return (
          (i.addChild = function(t) {
            return (
              t.on('resize', this, this.onResize),
              this._setItemChanged(),
              laya.display.Node.prototype.addChild.call(this, t)
            );
          }),
          (i.onResize = function(t) {
            this._setItemChanged();
          }),
          (i.addChildAt = function(t, e) {
            return (
              t.on('resize', this, this.onResize),
              this._setItemChanged(),
              laya.display.Node.prototype.addChildAt.call(this, t, e)
            );
          }),
          (i.removeChild = function(t) {
            return (
              t.off('resize', this, this.onResize),
              this._setItemChanged(),
              laya.display.Node.prototype.removeChild.call(this, t)
            );
          }),
          (i.removeChildAt = function(t) {
            return (
              this.getChildAt(t).off('resize', this, this.onResize),
              this._setItemChanged(),
              laya.display.Node.prototype.removeChildAt.call(this, t)
            );
          }),
          (i.refresh = function() {
            this._setItemChanged();
          }),
          (i.changeItems = function() {
            this._itemChanged = !1;
          }),
          (i.sortItem = function(t) {
            t &&
              t.sort(function(t, e) {
                return t.y - e.y;
              });
          }),
          (i._setItemChanged = function() {
            this._itemChanged ||
              ((this._itemChanged = !0), this.callLater(this.changeItems));
          }),
          r(
            0,
            i,
            'space',
            function() {
              return this._space;
            },
            function(t) {
              (this._space = t), this._setItemChanged();
            }
          ),
          r(
            0,
            i,
            'align',
            function() {
              return this._align;
            },
            function(t) {
              (this._align = t), this._setItemChanged();
            }
          ),
          e
        );
      })(),
      X = (function(t) {
        function e(t, i) {
          (this._valueArr = null),
            (this._indexMap = null),
            (this._sheet = null),
            (this._direction = 'horizontal'),
            (this._spaceX = 0),
            (this._spaceY = 0),
            (this._align = 'left'),
            (this._wordsW = 0),
            (this._wordsH = 0),
            e.__super.call(this),
            t && (this.skin = t),
            i && (this.sheet = i);
        }
        a(e, 'laya.ui.FontClip', t);
        var n = e.prototype;
        return (
          (n.createChildren = function() {
            (this._bitmap = new D()),
              this.on('loaded', this, this._onClipLoaded);
          }),
          (n._onClipLoaded = function() {
            this.callLater(this.changeValue);
          }),
          (n.changeValue = function() {
            if (this._sources && this._valueArr) {
              this.graphics.clear(!0);
              var t;
              if ((t = this._sources[0])) {
                var e = 'horizontal' === this._direction;
                e
                  ? ((this._wordsW =
                      this._valueArr.length * (t.sourceWidth + this.spaceX)),
                    (this._wordsH = t.sourceHeight))
                  : ((this._wordsW = t.sourceWidth),
                    (this._wordsH =
                      (t.sourceHeight + this.spaceY) * this._valueArr.length));
                var i = 0;
                if (this._width)
                  switch (this._align) {
                    case 'center':
                      i = 0.5 * (this._width - this._wordsW);
                      break;
                    case 'right':
                      i = this._width - this._wordsW;
                      break;
                    default:
                      i = 0;
                  }
                for (var n = 0, a = this._valueArr.length; n < a; n++) {
                  var r = this._indexMap[this._valueArr.charAt(n)];
                  this.sources[r] &&
                    ((t = this.sources[r]),
                    e
                      ? this.graphics.drawTexture(
                          t,
                          i + n * (t.sourceWidth + this.spaceX),
                          0,
                          t.sourceWidth,
                          t.sourceHeight
                        )
                      : this.graphics.drawTexture(
                          t,
                          0 + i,
                          n * (t.sourceHeight + this.spaceY),
                          t.sourceWidth,
                          t.sourceHeight
                        ));
                }
                this._width ||
                  (this.resetLayoutX(), this.callLater(this.changeSize)),
                  this._height ||
                    (this.resetLayoutY(), this.callLater(this.changeSize));
              }
            }
          }),
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              (this._valueArr = null),
              (this._indexMap = null),
              this.graphics.clear(!0),
              this.removeSelf(),
              this.off('loaded', this, this._onClipLoaded),
              t.prototype.destroy.call(this, e);
          }),
          r(
            0,
            n,
            'sheet',
            function() {
              return this._sheet;
            },
            function(t) {
              (t += ''), (this._sheet = t);
              var e = t.split(' ');
              (this._clipX = String(e[0]).length),
                (this.clipY = e.length),
                (this._indexMap = {});
              for (var i = 0; i < this._clipY; i++)
                for (var n = e[i].split(''), a = 0, r = n.length; a < r; a++)
                  this._indexMap[n[a]] = i * this._clipX + a;
            }
          ),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(k, this, 'height', t), this.callLater(this.changeValue);
          }),
          r(
            0,
            n,
            'direction',
            function() {
              return this._direction;
            },
            function(t) {
              (this._direction = t), this.callLater(this.changeValue);
            }
          ),
          r(
            0,
            n,
            'value',
            function() {
              return this._valueArr ? this._valueArr : '';
            },
            function(t) {
              (t += ''), (this._valueArr = t), this.callLater(this.changeValue);
            }
          ),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(k, this, 'width', t), this.callLater(this.changeValue);
          }),
          r(
            0,
            n,
            'spaceX',
            function() {
              return this._spaceX;
            },
            function(t) {
              (this._spaceX = t),
                'horizontal' === this._direction &&
                  this.callLater(this.changeValue);
            }
          ),
          r(
            0,
            n,
            'spaceY',
            function() {
              return this._spaceY;
            },
            function(t) {
              (this._spaceY = t),
                'horizontal' !== this._direction &&
                  this.callLater(this.changeValue);
            }
          ),
          r(
            0,
            n,
            'align',
            function() {
              return this._align;
            },
            function(t) {
              (this._align = t), this.callLater(this.changeValue);
            }
          ),
          r(0, n, 'measureWidth', function() {
            return this._wordsW;
          }),
          r(0, n, 'measureHeight', function() {
            return this._wordsH;
          }),
          e
        );
      })(k),
      q = (function(t) {
        function e() {
          (this.selectHandler = null),
            (this.renderHandler = null),
            (this.mouseHandler = null),
            (this.selectEnable = !1),
            (this.totalPage = 0),
            (this._content = null),
            (this._scrollBar = null),
            (this._itemRender = null),
            (this._repeatX = 0),
            (this._repeatY = 0),
            (this._repeatX2 = 0),
            (this._repeatY2 = 0),
            (this._spaceX = 0),
            (this._spaceY = 0),
            (this._array = null),
            (this._startIndex = 0),
            (this._selectedIndex = -1),
            (this._page = 0),
            (this._isVertical = !0),
            (this._cellSize = 20),
            (this._cellOffset = 0),
            (this._isMoved = !1),
            (this.cacheContent = !1),
            (this._createdLine = 0),
            (this._cellChanged = !1),
            e.__super.call(this),
            (this._cells = []),
            (this._offset = new g());
        }
        a(e, 'laya.ui.List', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.ui.IRender': !0, 'laya.ui.IItem': !0 }),
          (n.destroy = function(t) {
            void 0 === t && (t = !0),
              this._content && this._content.destroy(t),
              this._scrollBar && this._scrollBar.destroy(t),
              laya.ui.Component.prototype.destroy.call(this, t),
              (this._content = null),
              (this._scrollBar = null),
              (this._itemRender = null),
              (this._cells = null),
              (this._array = null),
              (this.selectHandler = this.renderHandler = this.mouseHandler = null);
          }),
          (n.createChildren = function() {
            this.addChild((this._content = new R()));
          }),
          (n.onScrollStart = function() {
            this._$P.cacheAs ||
              (this._$P.cacheAs = i.superGet(R, this, 'cacheAs')),
              i.superSet(R, this, 'cacheAs', 'none'),
              this._scrollBar.once('end', this, this.onScrollEnd);
          }),
          (n.onScrollEnd = function() {
            i.superSet(R, this, 'cacheAs', this._$P.cacheAs);
          }),
          (n._removePreScrollBar = function() {
            var t = this.removeChildByName('scrollBar');
            t && t.destroy(!0);
          }),
          (n.changeCells = function() {
            if (((this._cellChanged = !1), this._itemRender)) {
              this.scrollBar = this.getChildByName('scrollBar');
              var t = this._getOneCell(),
                e = t.width + this._spaceX || 1,
                i = t.height + this._spaceY || 1;
              this._width > 0 &&
                (this._repeatX2 = this._isVertical
                  ? Math.round(this._width / e)
                  : Math.ceil(this._width / e)),
                this._height > 0 &&
                  (this._repeatY2 = this._isVertical
                    ? Math.ceil(this._height / i)
                    : Math.round(this._height / i));
              var n = this._width
                  ? this._width
                  : e * this.repeatX - this._spaceX,
                a = this._height
                  ? this._height
                  : i * this.repeatY - this._spaceY;
              (this._cellSize = this._isVertical ? i : e),
                (this._cellOffset = this._isVertical
                  ? i * Math.max(this._repeatY2, this._repeatY) -
                    a -
                    this._spaceY
                  : e * Math.max(this._repeatX2, this._repeatX) -
                    n -
                    this._spaceX),
                this._isVertical && this._scrollBar
                  ? (this._scrollBar.height = a)
                  : !this._isVertical &&
                    this._scrollBar &&
                    (this._scrollBar.width = n),
                this.setContentSize(n, a);
              var r = this._isVertical ? this.repeatX : this.repeatY,
                s =
                  (this._isVertical ? this.repeatY : this.repeatX) +
                  (this._scrollBar ? 1 : 0);
              this._createItems(0, r, s),
                (this._createdLine = s),
                this._array &&
                  ((this.array = this._array),
                  this.runCallLater(this.renderItems));
            }
          }),
          (n._getOneCell = function() {
            if (0 === this._cells.length) {
              var t = this.createItem();
              if ((this._offset.setTo(t.x, t.y), this.cacheContent)) return t;
              this._cells.push(t);
            }
            return this._cells[0];
          }),
          (n._createItems = function(t, e, i) {
            var n = this._content,
              a = this._getOneCell(),
              r = a.width + this._spaceX,
              s = a.height + this._spaceY;
            if (this.cacheContent) {
              var o = new R();
              (o.cacheAsBitmap = !0),
                o.pos(
                  (this._isVertical ? 0 : t) * r,
                  (this._isVertical ? t : 0) * s
                ),
                this._content.addChild(o),
                (this._content.optimizeScrollRect = !0),
                (n = o);
            } else {
              for (var l = [], h = this._cells.length - 1; h > -1; h--) {
                var c = this._cells[h];
                c.removeSelf(), l.push(c);
              }
              this._cells.length = 0;
            }
            for (var u = t; u < i; u++)
              for (var _ = 0; _ < e; _++)
                ((a = l && l.length ? l.pop() : this.createItem()).x =
                  (this._isVertical ? _ : u) * r - n.x),
                  (a.y = (this._isVertical ? u : _) * s - n.y),
                  (a.name = 'item' + (u * e + _)),
                  n.addChild(a),
                  this.addCell(a);
          }),
          (n.createItem = function() {
            var t = [];
            if ('function' == typeof this._itemRender)
              var e = new this._itemRender();
            else e = z.createComp(this._itemRender, null, null, t);
            if (0 == t.length && e._watchMap) {
              var i = e._watchMap;
              for (var n in i)
                for (var a = i[n], r = 0; r < a.length; r++) {
                  var s = a[r];
                  t.push(s.comp, s.prop, s.value);
                }
            }
            return t.length && (e._$bindData = t), e;
          }),
          (n.addCell = function(t) {
            t.on('click', this, this.onCellMouse),
              t.on('rightclick', this, this.onCellMouse),
              t.on('mouseover', this, this.onCellMouse),
              t.on('mouseout', this, this.onCellMouse),
              t.on('mousedown', this, this.onCellMouse),
              t.on('mouseup', this, this.onCellMouse),
              this._cells.push(t);
          }),
          (n.initItems = function() {
            if (!this._itemRender && null != this.getChildByName('item0')) {
              this.repeatX = 1;
              var t = 0;
              t = 0;
              for (var e = 0; e < 1e4; e++) {
                var i = this.getChildByName('item' + e);
                {
                  if (!i) break;
                  this.addCell(i), t++;
                }
              }
              this.repeatY = t;
            }
          }),
          (n.setContentSize = function(t, e) {
            (this._content.width = t),
              (this._content.height = e),
              (this._scrollBar || 0 != this._offset.x || 0 != this._offset.y) &&
                (this._content.scrollRect ||
                  (this._content.scrollRect = new y()),
                this._content.scrollRect.setTo(
                  -this._offset.x,
                  -this._offset.y,
                  t,
                  e
                ),
                (this._content.scrollRect = this._content.scrollRect)),
              this.event('resize');
          }),
          (n.onCellMouse = function(t) {
            'mousedown' === t.type && (this._isMoved = !1);
            var e = t.currentTarget,
              i = this._startIndex + this._cells.indexOf(e);
            i < 0 ||
              ('click' === t.type || 'rightclick' === t.type
                ? this.selectEnable && !this._isMoved
                  ? (this.selectedIndex = i)
                  : this.changeCellState(e, !0, 0)
                : ('mouseover' !== t.type && 'mouseout' !== t.type) ||
                  this._selectedIndex === i ||
                  this.changeCellState(e, 'mouseover' === t.type, 0),
              this.mouseHandler && this.mouseHandler.runWith([t, i]));
          }),
          (n.changeCellState = function(t, e, i) {
            var n = t.getChildByName('selectBox');
            n && ((this.selectEnable = !0), (n.visible = e), (n.index = i));
          }),
          (n.changeSize = function() {
            laya.ui.Component.prototype.changeSize.call(this),
              this.setContentSize(this.width, this.height),
              this._scrollBar && this.callLater(this.onScrollBarChange);
          }),
          (n.onScrollBarChange = function(t) {
            this.runCallLater(this.changeCells);
            var e = this._scrollBar.value,
              i = this._isVertical ? this.repeatX : this.repeatY,
              n = this._isVertical ? this.repeatY : this.repeatX,
              a = Math.floor(e / this._cellSize);
            if (this.cacheContent)
              (s = n + 1),
                this._createdLine - a < s &&
                  (this._createItems(
                    this._createdLine,
                    i,
                    this._createdLine + s
                  ),
                  this.renderItems(this._createdLine * i, 0),
                  (this._createdLine += s));
            else {
              var r = a * i,
                s = 0;
              if (r > this._startIndex) {
                s = r - this._startIndex;
                var o = !0,
                  l = this._startIndex + i * (n + 1);
                this._isMoved = !0;
              } else
                r < this._startIndex &&
                  ((s = this._startIndex - r),
                  (o = !1),
                  (l = this._startIndex - 1),
                  (this._isMoved = !0));
              for (var h = 0; h < s; h++) {
                if (o) {
                  var c = this._cells.shift();
                  this._cells[this._cells.length] = c;
                  var u = l + h;
                } else
                  (c = this._cells.pop()), this._cells.unshift(c), (u = l - h);
                var _ = Math.floor(u / i) * this._cellSize;
                this._isVertical ? (c.y = _) : (c.x = _), this.renderItem(c, u);
              }
              (this._startIndex = r), this.changeSelectStatus();
            }
            var d = this._content.scrollRect;
            this._isVertical
              ? ((d.y = e - this._offset.y), (d.x = -this._offset.x))
              : ((d.y = -this._offset.y), (d.x = e - this._offset.x)),
              (this._content.scrollRect = d);
          }),
          (n.posCell = function(t, e) {
            if (this._scrollBar) {
              var i = this._isVertical ? this.repeatX : this.repeatY,
                n =
                  (this._isVertical ? this.repeatY : this.repeatX,
                  Math.floor(e / i) * this._cellSize);
              this._isVertical ? (t.y = n) : (t.x = n);
            }
          }),
          (n.changeSelectStatus = function() {
            for (var t = 0, e = this._cells.length; t < e; t++)
              this.changeCellState(
                this._cells[t],
                this._selectedIndex === this._startIndex + t,
                1
              );
          }),
          (n.renderItems = function(t, e) {
            void 0 === t && (t = 0), void 0 === e && (e = 0);
            for (var i = t, n = e || this._cells.length; i < n; i++)
              this.renderItem(this._cells[i], this._startIndex + i);
            this.changeSelectStatus();
          }),
          (n.renderItem = function(t, e) {
            this._array && e >= 0 && e < this._array.length
              ? ((t.visible = !0),
                t._$bindData
                  ? ((t._dataSource = this._array[e]),
                    this._bindData(t, this._array[e]))
                  : (t.dataSource = this._array[e]),
                this.cacheContent || this.posCell(t, e),
                this.hasListener('render') && this.event('render', [t, e]),
                this.renderHandler && this.renderHandler.runWith([t, e]))
              : ((t.visible = !1), (t.dataSource = null));
          }),
          (n._bindData = function(t, e) {
            for (var i = t._$bindData, n = 0, a = i.length; n < a; n++) {
              var r = i[n++],
                s = i[n++],
                o = i[n],
                l = E.getBindFun(o);
              r[s] = l.call(this, e);
            }
          }),
          (n.refresh = function() {
            this.array = this._array;
          }),
          (n.getItem = function(t) {
            return t > -1 && t < this._array.length ? this._array[t] : null;
          }),
          (n.changeItem = function(t, e) {
            t > -1 &&
              t < this._array.length &&
              ((this._array[t] = e),
              t >= this._startIndex &&
                t < this._startIndex + this._cells.length &&
                this.renderItem(this.getCell(t), t));
          }),
          (n.setItem = function(t, e) {
            this.changeItem(t, e);
          }),
          (n.addItem = function(t) {
            this._array.push(t), (this.array = this._array);
          }),
          (n.addItemAt = function(t, e) {
            this._array.splice(e, 0, t), (this.array = this._array);
          }),
          (n.deleteItem = function(t) {
            this._array.splice(t, 1), (this.array = this._array);
          }),
          (n.getCell = function(t) {
            return (
              this.runCallLater(this.changeCells),
              t > -1 && this._cells
                ? this._cells[(t - this._startIndex) % this._cells.length]
                : null
            );
          }),
          (n.scrollTo = function(t) {
            if (this._scrollBar) {
              var e = this._isVertical ? this.repeatX : this.repeatY;
              this._scrollBar.value = Math.floor(t / e) * this._cellSize;
            } else this.startIndex = t;
          }),
          (n.tweenTo = function(t, e, i) {
            if ((void 0 === e && (e = 200), this._scrollBar)) {
              var n = this._isVertical ? this.repeatX : this.repeatY;
              I.to(
                this._scrollBar,
                { value: Math.floor(t / n) * this._cellSize },
                e,
                null,
                i,
                0,
                !0
              );
            } else (this.startIndex = t), i && i.run();
          }),
          (n._setCellChanged = function() {
            this._cellChanged ||
              ((this._cellChanged = !0), this.callLater(this.changeCells));
          }),
          (n.commitMeasure = function() {
            this.runCallLater(this.changeCells);
          }),
          r(0, n, 'cacheAs', t.prototype._$get_cacheAs, function(t) {
            i.superSet(R, this, 'cacheAs', t),
              this._scrollBar &&
                ((this._$P.cacheAs = null),
                'none' !== t
                  ? this._scrollBar.on('start', this, this.onScrollStart)
                  : this._scrollBar.off('start', this, this.onScrollStart));
          }),
          r(0, n, 'content', function() {
            return this._content;
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            t != this._height &&
              (i.superSet(R, this, 'height', t), this._setCellChanged());
          }),
          r(
            0,
            n,
            'itemRender',
            function() {
              return this._itemRender;
            },
            function(t) {
              if (this._itemRender != t) {
                this._itemRender = t;
                for (var e = this._cells.length - 1; e > -1; e--)
                  this._cells[e].destroy();
                (this._cells.length = 0), this._setCellChanged();
              }
            }
          ),
          r(
            0,
            n,
            'vScrollBarSkin',
            function() {
              return this._scrollBar ? this._scrollBar.skin : null;
            },
            function(t) {
              this._removePreScrollBar();
              var e = new et();
              (e.name = 'scrollBar'),
                (e.right = 0),
                t && ' ' != t && (e.skin = t),
                (this.scrollBar = e),
                this.addChild(e),
                this._setCellChanged();
            }
          ),
          r(
            0,
            n,
            'page',
            function() {
              return this._page;
            },
            function(t) {
              (this._page = t),
                this._array &&
                  ((this._page = t > 0 ? t : 0),
                  (this._page =
                    this._page < this.totalPage
                      ? this._page
                      : this.totalPage - 1),
                  (this.startIndex = this._page * this.repeatX * this.repeatY));
            }
          ),
          r(
            0,
            n,
            'hScrollBarSkin',
            function() {
              return this._scrollBar ? this._scrollBar.skin : null;
            },
            function(t) {
              this._removePreScrollBar();
              var e = new Y();
              (e.name = 'scrollBar'),
                (e.bottom = 0),
                t && ' ' != t && (e.skin = t),
                (this.scrollBar = e),
                this.addChild(e),
                this._setCellChanged();
            }
          ),
          r(
            0,
            n,
            'repeatX',
            function() {
              return this._repeatX > 0
                ? this._repeatX
                : this._repeatX2 > 0
                ? this._repeatX2
                : 1;
            },
            function(t) {
              (this._repeatX = t), this._setCellChanged();
            }
          ),
          r(
            0,
            n,
            'scrollBar',
            function() {
              return this._scrollBar;
            },
            function(t) {
              this._scrollBar != t &&
                ((this._scrollBar = t),
                t &&
                  ((this._isVertical = this._scrollBar.isVertical),
                  this.addChild(this._scrollBar),
                  this._scrollBar.on('change', this, this.onScrollBarChange)));
            }
          ),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            t != this._width &&
              (i.superSet(R, this, 'width', t), this._setCellChanged());
          }),
          r(
            0,
            n,
            'repeatY',
            function() {
              return this._repeatY > 0
                ? this._repeatY
                : this._repeatY2 > 0
                ? this._repeatY2
                : 1;
            },
            function(t) {
              (this._repeatY = t), this._setCellChanged();
            }
          ),
          r(
            0,
            n,
            'spaceX',
            function() {
              return this._spaceX;
            },
            function(t) {
              (this._spaceX = t), this._setCellChanged();
            }
          ),
          r(
            0,
            n,
            'spaceY',
            function() {
              return this._spaceY;
            },
            function(t) {
              (this._spaceY = t), this._setCellChanged();
            }
          ),
          r(
            0,
            n,
            'selectedIndex',
            function() {
              return this._selectedIndex;
            },
            function(t) {
              this._selectedIndex != t &&
                ((this._selectedIndex = t),
                this.changeSelectStatus(),
                this.event('change'),
                this.selectHandler && this.selectHandler.runWith(t),
                (this.startIndex = this._startIndex));
            }
          ),
          r(
            0,
            n,
            'selectedItem',
            function() {
              return -1 != this._selectedIndex
                ? this._array[this._selectedIndex]
                : null;
            },
            function(t) {
              this.selectedIndex = this._array.indexOf(t);
            }
          ),
          r(0, n, 'length', function() {
            return this._array ? this._array.length : 0;
          }),
          r(
            0,
            n,
            'selection',
            function() {
              return this.getCell(this._selectedIndex);
            },
            function(t) {
              this.selectedIndex = this._startIndex + this._cells.indexOf(t);
            }
          ),
          r(
            0,
            n,
            'startIndex',
            function() {
              return this._startIndex;
            },
            function(t) {
              (this._startIndex = t > 0 ? t : 0),
                this.callLater(this.renderItems);
            }
          ),
          r(
            0,
            n,
            'array',
            function() {
              return this._array;
            },
            function(t) {
              this.runCallLater(this.changeCells), (this._array = t || []);
              var e = this._array.length;
              if (
                ((this.totalPage = Math.ceil(
                  e / (this.repeatX * this.repeatY)
                )),
                (this._selectedIndex =
                  this._selectedIndex < e ? this._selectedIndex : e - 1),
                (this.startIndex = this._startIndex),
                this._scrollBar)
              ) {
                this._scrollBar.stopScroll();
                var i = this._isVertical ? this.repeatX : this.repeatY,
                  n = this._isVertical ? this.repeatY : this.repeatX,
                  a = Math.ceil(e / i);
                (this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage) > 1
                  ? ((this._scrollBar.scrollSize = this._cellSize),
                    (this._scrollBar.thumbPercent = n / a),
                    this._scrollBar.setScroll(
                      0,
                      (a - n) * this._cellSize + this._cellOffset,
                      this._scrollBar.value
                    ),
                    (this._scrollBar.target = this._content))
                  : (this._scrollBar.setScroll(0, 0, 0),
                    (this._scrollBar.target = this._content));
              }
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              ('number' == typeof t && Math.floor(t) == t) ||
              'string' == typeof t
                ? (this.selectedIndex = parseInt(t))
                : t instanceof Array
                ? (this.array = t)
                : i.superSet(R, this, 'dataSource', t);
          }),
          r(0, n, 'cells', function() {
            return this.runCallLater(this.changeCells), this._cells;
          }),
          e
        );
      })(R),
      Y = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.ui.HScrollBar', t);
        return (
          (e.prototype.initialize = function() {
            t.prototype.initialize.call(this), (this.slider.isVertical = !1);
          }),
          e
        );
      })(U),
      J = (function(t) {
        function e() {
          (this._content = null),
            (this._vScrollBar = null),
            (this._hScrollBar = null),
            (this._scrollChanged = !1),
            e.__super.call(this),
            (this.width = this.height = 100);
        }
        a(e, 'laya.ui.Panel', t);
        var n = e.prototype;
        return (
          (n.destroy = function(t) {
            void 0 === t && (t = !0),
              laya.ui.Component.prototype.destroy.call(this, t),
              this._content && this._content.destroy(t),
              this._vScrollBar && this._vScrollBar.destroy(t),
              this._hScrollBar && this._hScrollBar.destroy(t),
              (this._vScrollBar = null),
              (this._hScrollBar = null),
              (this._content = null);
          }),
          (n.destroyChildren = function() {
            this._content.destroyChildren();
          }),
          (n.createChildren = function() {
            laya.display.Node.prototype.addChild.call(
              this,
              (this._content = new R())
            );
          }),
          (n.addChild = function(t) {
            return (
              t.on('resize', this, this.onResize),
              this._setScrollChanged(),
              this._content.addChild(t)
            );
          }),
          (n.onResize = function() {
            this._setScrollChanged();
          }),
          (n.addChildAt = function(t, e) {
            return (
              t.on('resize', this, this.onResize),
              this._setScrollChanged(),
              this._content.addChildAt(t, e)
            );
          }),
          (n.removeChild = function(t) {
            return (
              t.off('resize', this, this.onResize),
              this._setScrollChanged(),
              this._content.removeChild(t)
            );
          }),
          (n.removeChildAt = function(t) {
            return (
              this.getChildAt(t).off('resize', this, this.onResize),
              this._setScrollChanged(),
              this._content.removeChildAt(t)
            );
          }),
          (n.removeChildren = function(t, e) {
            void 0 === t && (t = 0), void 0 === e && (e = 2147483647);
            for (var i = this._content.numChildren - 1; i > -1; i--)
              this._content.removeChildAt(i);
            return this._setScrollChanged(), this;
          }),
          (n.getChildAt = function(t) {
            return this._content.getChildAt(t);
          }),
          (n.getChildByName = function(t) {
            return this._content.getChildByName(t);
          }),
          (n.getChildIndex = function(t) {
            return this._content.getChildIndex(t);
          }),
          (n.changeScroll = function() {
            this._scrollChanged = !1;
            var t = this.contentWidth || 1,
              e = this.contentHeight || 1,
              i = this._vScrollBar,
              n = this._hScrollBar,
              a = i && e > this._height,
              r = n && t > this._width,
              s = a ? this._width - i.width : this._width,
              o = r ? this._height - n.height : this._height;
            i &&
              ((i.x = this._width - i.width),
              (i.y = 0),
              (i.height = this._height - (r ? n.height : 0)),
              (i.scrollSize = Math.max(0.033 * this._height, 1)),
              (i.thumbPercent = o / e),
              i.setScroll(0, e - o, i.value)),
              n &&
                ((n.x = 0),
                (n.y = this._height - n.height),
                (n.width = this._width - (a ? i.width : 0)),
                (n.scrollSize = Math.max(0.033 * this._width, 1)),
                (n.thumbPercent = s / t),
                n.setScroll(0, t - s, n.value));
          }),
          (n.changeSize = function() {
            laya.ui.Component.prototype.changeSize.call(this),
              this.setContentSize(this._width, this._height);
          }),
          (n.setContentSize = function(t, e) {
            var i = this._content;
            (i.width = t),
              (i.height = e),
              i.scrollRect || (i.scrollRect = new y()),
              i.scrollRect.setTo(0, 0, t, e),
              (i.scrollRect = i.scrollRect);
          }),
          (n.onScrollBarChange = function(t) {
            var e = this._content.scrollRect;
            if (e) {
              var i = Math.round(t.value);
              t.isVertical ? (e.y = i) : (e.x = i),
                (this._content.scrollRect = e);
            }
          }),
          (n.scrollTo = function(t, e) {
            void 0 === t && (t = 0),
              void 0 === e && (e = 0),
              this.vScrollBar && (this.vScrollBar.value = e),
              this.hScrollBar && (this.hScrollBar.value = t);
          }),
          (n.refresh = function() {
            this.changeScroll();
          }),
          (n.onScrollStart = function() {
            this._$P.cacheAs ||
              (this._$P.cacheAs = i.superGet(R, this, 'cacheAs')),
              i.superSet(R, this, 'cacheAs', 'none'),
              this._hScrollBar &&
                this._hScrollBar.once('end', this, this.onScrollEnd),
              this._vScrollBar &&
                this._vScrollBar.once('end', this, this.onScrollEnd);
          }),
          (n.onScrollEnd = function() {
            i.superSet(R, this, 'cacheAs', this._$P.cacheAs);
          }),
          (n._setScrollChanged = function() {
            this._scrollChanged ||
              ((this._scrollChanged = !0), this.callLater(this.changeScroll));
          }),
          r(0, n, 'numChildren', function() {
            return this._content.numChildren;
          }),
          r(
            0,
            n,
            'hScrollBarSkin',
            function() {
              return this._hScrollBar ? this._hScrollBar.skin : null;
            },
            function(t) {
              null == this._hScrollBar &&
                (laya.display.Node.prototype.addChild.call(
                  this,
                  (this._hScrollBar = new Y())
                ),
                this._hScrollBar.on('change', this, this.onScrollBarChange, [
                  this._hScrollBar
                ]),
                (this._hScrollBar.target = this._content),
                this._setScrollChanged()),
                (this._hScrollBar.skin = t);
            }
          ),
          r(0, n, 'contentWidth', function() {
            for (var t = 0, e = this._content.numChildren - 1; e > -1; e--) {
              var i = this._content.getChildAt(e);
              t = Math.max(i.x + i.width * i.scaleX, t);
            }
            return t;
          }),
          r(0, n, 'contentHeight', function() {
            for (var t = 0, e = this._content.numChildren - 1; e > -1; e--) {
              var i = this._content.getChildAt(e);
              t = Math.max(i.y + i.height * i.scaleY, t);
            }
            return t;
          }),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(R, this, 'width', t), this._setScrollChanged();
          }),
          r(0, n, 'hScrollBar', function() {
            return this._hScrollBar;
          }),
          r(0, n, 'content', function() {
            return this._content;
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(R, this, 'height', t), this._setScrollChanged();
          }),
          r(
            0,
            n,
            'vScrollBarSkin',
            function() {
              return this._vScrollBar ? this._vScrollBar.skin : null;
            },
            function(t) {
              null == this._vScrollBar &&
                (laya.display.Node.prototype.addChild.call(
                  this,
                  (this._vScrollBar = new et())
                ),
                this._vScrollBar.on('change', this, this.onScrollBarChange, [
                  this._vScrollBar
                ]),
                (this._vScrollBar.target = this._content),
                this._setScrollChanged()),
                (this._vScrollBar.skin = t);
            }
          ),
          r(0, n, 'vScrollBar', function() {
            return this._vScrollBar;
          }),
          r(0, n, 'cacheAs', t.prototype._$get_cacheAs, function(t) {
            i.superSet(R, this, 'cacheAs', t),
              (this._$P.cacheAs = null),
              'none' !== t
                ? (this._hScrollBar &&
                    this._hScrollBar.on('start', this, this.onScrollStart),
                  this._vScrollBar &&
                    this._vScrollBar.on('start', this, this.onScrollStart))
                : (this._hScrollBar &&
                    this._hScrollBar.off('start', this, this.onScrollStart),
                  this._vScrollBar &&
                    this._vScrollBar.off('start', this, this.onScrollStart));
          }),
          e
        );
      })(R),
      K = (function(t) {
        function e(t) {
          e.__super.call(this, t), (this.isVertical = !1);
        }
        return a(e, 'laya.ui.HSlider', V), e;
      })(),
      Z = (function(t) {
        function e(t, i) {
          (this.selectHandler = null),
            (this._items = null),
            (this._selectedIndex = -1),
            (this._skin = null),
            (this._direction = 'horizontal'),
            (this._space = 0),
            (this._labels = null),
            (this._labelColors = null),
            (this._labelFont = null),
            (this._labelStrokeColor = null),
            (this._strokeColors = null),
            (this._labelStroke = NaN),
            (this._labelSize = 0),
            (this._labelBold = !1),
            (this._labelPadding = null),
            (this._labelAlign = null),
            (this._stateNum = 0),
            (this._labelChanged = !1),
            e.__super.call(this),
            (this.skin = i),
            (this.labels = t);
        }
        a(e, 'laya.ui.UIGroup', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.ui.IItem': !0 }),
          (n.preinitialize = function() {
            this.mouseEnabled = !0;
          }),
          (n.destroy = function(t) {
            void 0 === t && (t = !0),
              laya.ui.Component.prototype.destroy.call(this, t),
              this._items && (this._items.length = 0),
              (this._items = null),
              (this.selectHandler = null);
          }),
          (n.addItem = function(t, e) {
            void 0 === e && (e = !0);
            var i = t,
              n = this._items.length;
            if (
              ((i.name = 'item' + n),
              this.addChild(i),
              this.initItems(),
              e && n > 0)
            ) {
              var a = this._items[n - 1];
              'horizontal' == this._direction
                ? (i.x = a.x + a.width + this._space)
                : (i.y = a.y + a.height + this._space);
            } else e && ((i.x = 0), (i.y = 0));
            return n;
          }),
          (n.delItem = function(t, e) {
            void 0 === e && (e = !0);
            var i = this._items.indexOf(t);
            if (-1 != i) {
              var n = t;
              this.removeChild(n);
              for (var a = i + 1, r = this._items.length; a < r; a++) {
                var s = this._items[a];
                (s.name = 'item' + (a - 1)),
                  e &&
                    ('horizontal' == this._direction
                      ? (s.x -= n.width + this._space)
                      : (s.y -= n.height + this._space));
              }
              if ((this.initItems(), this._selectedIndex > -1)) {
                var o = 0;
                (o =
                  this._selectedIndex < this._items.length
                    ? this._selectedIndex
                    : this._selectedIndex - 1),
                  (this._selectedIndex = -1),
                  (this.selectedIndex = o);
              }
            }
          }),
          (n.initItems = function() {
            this._items || (this._items = []), (this._items.length = 0);
            for (var t = 0; t < 1e4; t++) {
              var e = this.getChildByName('item' + t);
              if (null == e) break;
              this._items.push(e),
                (e.selected = t === this._selectedIndex),
                (e.clickHandler = f.create(this, this.itemClick, [t], !1));
            }
          }),
          (n.itemClick = function(t) {
            this.selectedIndex = t;
          }),
          (n.setSelect = function(t, e) {
            this._items &&
              t > -1 &&
              t < this._items.length &&
              (this._items[t].selected = e);
          }),
          (n.createItem = function(t, e) {
            return null;
          }),
          (n.changeLabels = function() {
            if (((this._labelChanged = !1), this._items))
              for (var t = 0, e = 0, i = this._items.length; e < i; e++) {
                var n = this._items[e];
                this._skin && (n.skin = this._skin),
                  this._labelColors && (n.labelColors = this._labelColors),
                  this._labelSize && (n.labelSize = this._labelSize),
                  this._labelStroke && (n.labelStroke = this._labelStroke),
                  this._labelStrokeColor &&
                    (n.labelStrokeColor = this._labelStrokeColor),
                  this._strokeColors && (n.strokeColors = this._strokeColors),
                  this._labelBold && (n.labelBold = this._labelBold),
                  this._labelPadding && (n.labelPadding = this._labelPadding),
                  this._labelAlign && (n.labelAlign = this._labelAlign),
                  this._stateNum && (n.stateNum = this._stateNum),
                  this._labelFont && (n.labelFont = this._labelFont),
                  'horizontal' === this._direction
                    ? ((n.y = 0), (n.x = t), (t += n.width + this._space))
                    : ((n.x = 0), (n.y = t), (t += n.height + this._space));
              }
            this.changeSize();
          }),
          (n.commitMeasure = function() {
            this.runCallLater(this.changeLabels);
          }),
          (n._setLabelChanged = function() {
            this._labelChanged ||
              ((this._labelChanged = !0), this.callLater(this.changeLabels));
          }),
          r(
            0,
            n,
            'labelStrokeColor',
            function() {
              return this._labelStrokeColor;
            },
            function(t) {
              this._labelStrokeColor != t &&
                ((this._labelStrokeColor = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              this._skin != t && ((this._skin = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'selectedIndex',
            function() {
              return this._selectedIndex;
            },
            function(t) {
              this._selectedIndex != t &&
                (this.setSelect(this._selectedIndex, !1),
                (this._selectedIndex = t),
                this.setSelect(t, !0),
                this.event('change'),
                this.selectHandler &&
                  this.selectHandler.runWith(this._selectedIndex));
            }
          ),
          r(
            0,
            n,
            'labels',
            function() {
              return this._labels;
            },
            function(t) {
              if (this._labels != t) {
                if (
                  ((this._labels = t),
                  this.removeChildren(),
                  this._setLabelChanged(),
                  this._labels)
                )
                  for (
                    var e = this._labels.split(','), i = 0, n = e.length;
                    i < n;
                    i++
                  ) {
                    var a = this.createItem(this._skin, e[i]);
                    (a.name = 'item' + i), this.addChild(a);
                  }
                this.initItems();
              }
            }
          ),
          r(
            0,
            n,
            'strokeColors',
            function() {
              return this._strokeColors;
            },
            function(t) {
              this._strokeColors != t &&
                ((this._strokeColors = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'labelColors',
            function() {
              return this._labelColors;
            },
            function(t) {
              this._labelColors != t &&
                ((this._labelColors = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'labelStroke',
            function() {
              return this._labelStroke;
            },
            function(t) {
              this._labelStroke != t &&
                ((this._labelStroke = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'labelSize',
            function() {
              return this._labelSize;
            },
            function(t) {
              this._labelSize != t &&
                ((this._labelSize = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'stateNum',
            function() {
              return this._stateNum;
            },
            function(t) {
              this._stateNum != t &&
                ((this._stateNum = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'labelBold',
            function() {
              return this._labelBold;
            },
            function(t) {
              this._labelBold != t &&
                ((this._labelBold = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'labelFont',
            function() {
              return this._labelFont;
            },
            function(t) {
              this._labelFont != t &&
                ((this._labelFont = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'labelPadding',
            function() {
              return this._labelPadding;
            },
            function(t) {
              this._labelPadding != t &&
                ((this._labelPadding = t), this._setLabelChanged());
            }
          ),
          r(
            0,
            n,
            'direction',
            function() {
              return this._direction;
            },
            function(t) {
              (this._direction = t), this._setLabelChanged();
            }
          ),
          r(
            0,
            n,
            'space',
            function() {
              return this._space;
            },
            function(t) {
              (this._space = t), this._setLabelChanged();
            }
          ),
          r(0, n, 'items', function() {
            return this._items;
          }),
          r(
            0,
            n,
            'selection',
            function() {
              return this._selectedIndex > -1 &&
                this._selectedIndex < this._items.length
                ? this._items[this._selectedIndex]
                : null;
            },
            function(t) {
              this.selectedIndex = this._items.indexOf(t);
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t),
              ('number' == typeof t && Math.floor(t) == t) ||
              'string' == typeof t
                ? (this.selectedIndex = parseInt(t))
                : t instanceof Array
                ? (this.labels = t.join(','))
                : i.superSet(R, this, 'dataSource', t);
          }),
          e
        );
      })(R),
      Q = (function(t) {
        function e(t, i) {
          (this._value = null),
            void 0 === i && (i = ''),
            e.__super.call(this, t, i);
        }
        a(e, 'laya.ui.Radio', t);
        var i = e.prototype;
        return (
          (i.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              (this._value = null);
          }),
          (i.preinitialize = function() {
            laya.ui.Component.prototype.preinitialize.call(this),
              (this.toggle = !1),
              (this._autoSize = !1);
          }),
          (i.initialize = function() {
            t.prototype.initialize.call(this),
              this.createText(),
              (this._text.align = 'left'),
              (this._text.valign = 'top'),
              (this._text.width = 0),
              this.on('click', this, this.onClick);
          }),
          (i.onClick = function(t) {
            this.selected = !0;
          }),
          r(
            0,
            i,
            'value',
            function() {
              return null != this._value ? this._value : this.label;
            },
            function(t) {
              this._value = t;
            }
          ),
          e
        );
      })(B),
      $ = (function(t) {
        function e() {
          (this._list = null),
            (this._source = null),
            (this._renderHandler = null),
            (this._spaceLeft = 10),
            (this._spaceBottom = 0),
            (this._keepStatus = !0),
            e.__super.call(this),
            (this.width = this.height = 200);
        }
        a(e, 'laya.ui.Tree', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.ui.IRender': !0 }),
          (n.destroy = function(t) {
            void 0 === t && (t = !0),
              laya.ui.Component.prototype.destroy.call(this, t),
              this._list && this._list.destroy(t),
              (this._list = null),
              (this._source = null),
              (this._renderHandler = null);
          }),
          (n.createChildren = function() {
            this.addChild((this._list = new q())),
              (this._list.renderHandler = f.create(
                this,
                this.renderItem,
                null,
                !1
              )),
              (this._list.repeatX = 1),
              this._list.on('change', this, this.onListChange);
          }),
          (n.onListChange = function(t) {
            this.event('change');
          }),
          (n.getArray = function() {
            var t,
              e = [];
            for (var i in this._source)
              (t = this._source[i]),
                this.getParentOpenStatus(t) &&
                  ((t.x = this._spaceLeft * this.getDepth(t)), e.push(t));
            return e;
          }),
          (n.getDepth = function(t, e) {
            return (
              void 0 === e && (e = 0),
              null == t.nodeParent ? e : this.getDepth(t.nodeParent, e + 1)
            );
          }),
          (n.getParentOpenStatus = function(t) {
            var e = t.nodeParent;
            return (
              null == e ||
              (!!e.isOpen &&
                (null == e.nodeParent || this.getParentOpenStatus(e)))
            );
          }),
          (n.renderItem = function(t, e) {
            var i = t.dataSource;
            if (i) {
              t.left = i.x;
              var n = t.getChildByName('arrow');
              n &&
                (i.hasChild
                  ? ((n.visible = !0),
                    (n.index = i.isOpen ? 1 : 0),
                    (n.tag = e),
                    n.off('click', this, this.onArrowClick),
                    n.on('click', this, this.onArrowClick))
                  : (n.visible = !1));
              var a = t.getChildByName('folder');
              a &&
                (2 == a.clipY
                  ? (a.index = i.isDirectory ? 0 : 1)
                  : (a.index = i.isDirectory ? (i.isOpen ? 1 : 0) : 2)),
                this._renderHandler && this._renderHandler.runWith([t, e]);
            }
          }),
          (n.onArrowClick = function(t) {
            var e = t.currentTarget.tag;
            (this._list.array[e].isOpen = !this._list.array[e].isOpen),
              this.event('open'),
              (this._list.array = this.getArray());
          }),
          (n.setItemState = function(t, e) {
            this._list.array[t] &&
              ((this._list.array[t].isOpen = e),
              (this._list.array = this.getArray()));
          }),
          (n.fresh = function() {
            (this._list.array = this.getArray()), this.repaint();
          }),
          (n.parseXml = function(t, e, i, n) {
            var a,
              r = t.childNodes,
              s = r.length;
            if (!n) {
              a = {};
              var o,
                l = t.attributes;
              for (var h in l) {
                var c = (o = l[h]).nodeName,
                  u = o.nodeValue;
                a[c] = 'true' == u || ('false' != u && u);
              }
              (a.nodeParent = i),
                s > 0 && (a.isDirectory = !0),
                (a.hasChild = s > 0),
                e.push(a);
            }
            for (var _ = 0; _ < s; _++) {
              var d = r[_];
              this.parseXml(d, e, a, !1);
            }
          }),
          (n.parseOpenStatus = function(t, e) {
            for (var i = 0, n = e.length; i < n; i++) {
              var a = e[i];
              if (a.isDirectory)
                for (var r = 0, s = t.length; r < s; r++) {
                  var o = t[r];
                  if (
                    o.isDirectory &&
                    this.isSameParent(o, a) &&
                    a.label == o.label
                  ) {
                    a.isOpen = o.isOpen;
                    break;
                  }
                }
            }
          }),
          (n.isSameParent = function(t, e) {
            return (
              (null == t.nodeParent && null == e.nodeParent) ||
              (null != t.nodeParent &&
                null != e.nodeParent &&
                (t.nodeParent.label == e.nodeParent.label &&
                  this.isSameParent(t.nodeParent, e.nodeParent)))
            );
          }),
          (n.filter = function(t) {
            if (Boolean(t)) {
              var e = [];
              this.getFilterSource(this._source, e, t), (this._list.array = e);
            } else this._list.array = this.getArray();
          }),
          (n.getFilterSource = function(t, e, i) {
            i = i.toLocaleLowerCase();
            var n;
            for (var a in t)
              !(n = t[a]).isDirectory &&
                String(n.label)
                  .toLowerCase()
                  .indexOf(i) > -1 &&
                ((n.x = 0), e.push(n)),
                n.child &&
                  n.child.length > 0 &&
                  this.getFilterSource(n.child, e, i);
          }),
          r(
            0,
            n,
            'spaceBottom',
            function() {
              return this._list.spaceY;
            },
            function(t) {
              this._list.spaceY = t;
            }
          ),
          r(
            0,
            n,
            'keepStatus',
            function() {
              return this._keepStatus;
            },
            function(t) {
              this._keepStatus = t;
            }
          ),
          r(
            0,
            n,
            'itemRender',
            function() {
              return this._list.itemRender;
            },
            function(t) {
              this._list.itemRender = t;
            }
          ),
          r(
            0,
            n,
            'array',
            function() {
              return this._list.array;
            },
            function(t) {
              this._keepStatus &&
                this._list.array &&
                t &&
                this.parseOpenStatus(this._list.array, t),
                (this._source = t),
                (this._list.array = this.getArray());
            }
          ),
          r(
            0,
            n,
            'mouseHandler',
            function() {
              return this._list.mouseHandler;
            },
            function(t) {
              this._list.mouseHandler = t;
            }
          ),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            (this._dataSource = t), i.superSet(R, this, 'dataSource', t);
          }),
          r(0, n, 'source', function() {
            return this._source;
          }),
          r(0, n, 'scrollBar', function() {
            return this._list.scrollBar;
          }),
          r(0, n, 'list', function() {
            return this._list;
          }),
          r(
            0,
            n,
            'scrollBarSkin',
            function() {
              return this._list.vScrollBarSkin;
            },
            function(t) {
              this._list.vScrollBarSkin = t;
            }
          ),
          r(
            0,
            n,
            'renderHandler',
            function() {
              return this._renderHandler;
            },
            function(t) {
              this._renderHandler = t;
            }
          ),
          r(
            0,
            n,
            'selectedIndex',
            function() {
              return this._list.selectedIndex;
            },
            function(t) {
              this._list.selectedIndex = t;
            }
          ),
          r(
            0,
            n,
            'spaceLeft',
            function() {
              return this._spaceLeft;
            },
            function(t) {
              this._spaceLeft = t;
            }
          ),
          r(
            0,
            n,
            'selectedItem',
            function() {
              return this._list.selectedItem;
            },
            function(t) {
              this._list.selectedItem = t;
            }
          ),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(R, this, 'width', t), (this._list.width = t);
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(R, this, 'height', t), (this._list.height = t);
          }),
          r(0, n, 'xml', null, function(t) {
            var e = [];
            this.parseXml(t.childNodes[0], e, null, !0), (this.array = e);
          }),
          r(0, n, 'selectedPath', function() {
            return this._list.selectedItem
              ? this._list.selectedItem.path
              : null;
          }),
          e
        );
      })(R),
      tt = (function(t) {
        function e() {
          (this._items = null),
            (this._selectedIndex = 0),
            e.__super.call(this),
            (this._setIndexHandler = f.create(this, this.setIndex, null, !1));
        }
        a(e, 'laya.ui.ViewStack', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.ui.IItem': !0 }),
          (n.setItems = function(t) {
            this.removeChildren();
            for (var e = 0, i = 0, n = t.length; i < n; i++) {
              var a = t[i];
              a && ((a.name = 'item' + e), this.addChild(a), e++);
            }
            this.initItems();
          }),
          (n.addItem = function(t) {
            (t.name = 'item' + this._items.length),
              this.addChild(t),
              this.initItems();
          }),
          (n.initItems = function() {
            this._items = [];
            for (var t = 0; t < 1e4; t++) {
              var e = this.getChildByName('item' + t);
              if (null == e) break;
              this._items.push(e), (e.visible = t == this._selectedIndex);
            }
          }),
          (n.setSelect = function(t, e) {
            this._items &&
              t > -1 &&
              t < this._items.length &&
              (this._items[t].visible = e);
          }),
          (n.setIndex = function(t) {
            this.selectedIndex = t;
          }),
          r(0, n, 'dataSource', t.prototype._$get_dataSource, function(t) {
            if (
              ((this._dataSource = t),
              ('number' == typeof t && Math.floor(t) == t) ||
                'string' == typeof t)
            )
              this.selectedIndex = parseInt(t);
            else
              for (var e in this._dataSource)
                this.hasOwnProperty(e) && (this[e] = this._dataSource[e]);
          }),
          r(
            0,
            n,
            'selectedIndex',
            function() {
              return this._selectedIndex;
            },
            function(t) {
              this._selectedIndex != t &&
                (this.setSelect(this._selectedIndex, !1),
                (this._selectedIndex = t),
                this.setSelect(this._selectedIndex, !0));
            }
          ),
          r(
            0,
            n,
            'selection',
            function() {
              return this._selectedIndex > -1 &&
                this._selectedIndex < this._items.length
                ? this._items[this._selectedIndex]
                : null;
            },
            function(t) {
              this.selectedIndex = this._items.indexOf(t);
            }
          ),
          r(0, n, 'items', function() {
            return this._items;
          }),
          r(
            0,
            n,
            'setIndexHandler',
            function() {
              return this._setIndexHandler;
            },
            function(t) {
              this._setIndexHandler = t;
            }
          ),
          e
        );
      })(R),
      et = (function(t) {
        function e() {
          e.__super.call(this);
        }
        return a(e, 'laya.ui.VScrollBar', U), e;
      })(),
      it = (function(t) {
        function e(t) {
          (this._bg = null),
            (this._skin = null),
            e.__super.call(this),
            void 0 === t && (t = ''),
            (this.text = t),
            (this.skin = this.skin);
        }
        a(e, 'laya.ui.TextInput', t);
        var n = e.prototype;
        return (
          (n.preinitialize = function() {
            this.mouseEnabled = !0;
          }),
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._bg && this._bg.destroy(),
              (this._bg = null);
          }),
          (n.createChildren = function() {
            this.addChild((this._tf = new p())),
              (this._tf.padding = M.inputLabelPadding),
              this._tf.on('input', this, this._onInput),
              this._tf.on('enter', this, this._onEnter),
              this._tf.on('blur', this, this._onBlur),
              this._tf.on('focus', this, this._onFocus);
          }),
          (n._onFocus = function() {
            this.event('focus', this);
          }),
          (n._onBlur = function() {
            this.event('blur', this);
          }),
          (n._onInput = function() {
            this.event('input', this);
          }),
          (n._onEnter = function() {
            this.event('enter', this);
          }),
          (n.initialize = function() {
            (this.width = 128), (this.height = 22);
          }),
          (n.select = function() {
            this._tf.select();
          }),
          (n.setSelection = function(t, e) {
            this._tf.setSelection(t, e);
          }),
          r(0, n, 'text', t.prototype._$get_text, function(t) {
            this._tf.text != t &&
              ((t += ''), (this._tf.text = t), this.event('change'));
          }),
          r(
            0,
            n,
            'bg',
            function() {
              return this._bg;
            },
            function(t) {
              this.graphics = this._bg = t;
            }
          ),
          r(
            0,
            n,
            'inputElementYAdjuster',
            function() {
              return this._tf.inputElementYAdjuster;
            },
            function(t) {
              this._tf.inputElementYAdjuster = t;
            }
          ),
          r(
            0,
            n,
            'multiline',
            function() {
              return this._tf.multiline;
            },
            function(t) {
              this._tf.multiline = t;
            }
          ),
          r(
            0,
            n,
            'skin',
            function() {
              return this._skin;
            },
            function(t) {
              this._skin != t &&
                ((this._skin = t),
                this._bg || (this.graphics = this._bg = new D()),
                (this._bg.source = m.getRes(this._skin)),
                this._width && (this._bg.width = this._width),
                this._height && (this._bg.height = this._height));
            }
          ),
          r(
            0,
            n,
            'sizeGrid',
            function() {
              return this._bg && this._bg.sizeGrid
                ? this._bg.sizeGrid.join(',')
                : null;
            },
            function(t) {
              this._bg || (this.graphics = this._bg = new D()),
                (this._bg.sizeGrid = E.fillArray(M.defaultSizeGrid, t, Number));
            }
          ),
          r(
            0,
            n,
            'inputElementXAdjuster',
            function() {
              return this._tf.inputElementXAdjuster;
            },
            function(t) {
              this._tf.inputElementXAdjuster = t;
            }
          ),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(H, this, 'width', t), this._bg && (this._bg.width = t);
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(H, this, 'height', t), this._bg && (this._bg.height = t);
          }),
          r(
            0,
            n,
            'editable',
            function() {
              return this._tf.editable;
            },
            function(t) {
              this._tf.editable = t;
            }
          ),
          r(
            0,
            n,
            'restrict',
            function() {
              return this._tf.restrict;
            },
            function(t) {
              this._tf.restrict = t;
            }
          ),
          r(
            0,
            n,
            'prompt',
            function() {
              return this._tf.prompt;
            },
            function(t) {
              this._tf.prompt = t;
            }
          ),
          r(
            0,
            n,
            'promptColor',
            function() {
              return this._tf.promptColor;
            },
            function(t) {
              this._tf.promptColor = t;
            }
          ),
          r(
            0,
            n,
            'maxChars',
            function() {
              return this._tf.maxChars;
            },
            function(t) {
              this._tf.maxChars = t;
            }
          ),
          r(
            0,
            n,
            'focus',
            function() {
              return this._tf.focus;
            },
            function(t) {
              this._tf.focus = t;
            }
          ),
          r(
            0,
            n,
            'type',
            function() {
              return this._tf.type;
            },
            function(t) {
              this._tf.type = t;
            }
          ),
          r(
            0,
            n,
            'asPassword',
            function() {
              return this._tf.asPassword;
            },
            function(t) {
              this._tf.asPassword = t;
            }
          ),
          e
        );
      })(H),
      nt = (function(t) {
        function e() {
          e.__super.call(this);
        }
        return a(e, 'laya.ui.VSlider', V), e;
      })(),
      at = (function(t) {
        function e() {
          (this.popupCenter = !0),
            (this.closeHandler = null),
            (this.popupEffect = null),
            (this.closeEffect = null),
            (this.group = null),
            (this.isModal = !1),
            (this._dragArea = null),
            e.__super.call(this);
        }
        a(e, 'laya.ui.Dialog', t);
        var n = e.prototype;
        return (
          (n.initialize = function() {
            (this.popupEffect = e.manager.popupEffectHandler),
              (this.closeEffect = e.manager.closeEffectHandler),
              this._dealDragArea(),
              this.on('click', this, this._onClick);
          }),
          (n._dealDragArea = function() {
            var t = this.getChildByName('drag');
            t &&
              ((this.dragArea =
                t.x + ',' + t.y + ',' + t.width + ',' + t.height),
              t.removeSelf());
          }),
          (n._onClick = function(t) {
            var e = t.target;
            if (e)
              switch (e.name) {
                case 'close':
                case 'cancel':
                case 'sure':
                case 'no':
                case 'ok':
                case 'yes':
                  this.close(e.name);
              }
          }),
          (n.show = function(t, e) {
            void 0 === t && (t = !1),
              void 0 === e && (e = !0),
              this._open(!1, t, e);
          }),
          (n.popup = function(t, e) {
            void 0 === t && (t = !1),
              void 0 === e && (e = !0),
              this._open(!0, t, e);
          }),
          (n._open = function(t, i, n) {
            e.manager.lock(!1), (this.isModal = t), e.manager.open(this, i, n);
          }),
          (n.onOpened = function() {}),
          (n.close = function(t, i) {
            void 0 === i && (i = !0), e.manager.close(this, t, i);
          }),
          (n.onClosed = function(t) {}),
          (n._onMouseDown = function(t) {
            var e = this.getMousePoint();
            this._dragArea.contains(e.x, e.y)
              ? this.startDrag()
              : this.stopDrag();
          }),
          r(
            0,
            n,
            'dragArea',
            function() {
              return this._dragArea ? this._dragArea.toString() : null;
            },
            function(t) {
              if (t) {
                var e = E.fillArray([0, 0, 0, 0], t, Number);
                (this._dragArea = new y(e[0], e[1], e[2], e[3])),
                  this.on('mousedown', this, this._onMouseDown);
              } else
                (this._dragArea = null),
                  this.off('mousedown', this, this._onMouseDown);
            }
          ),
          r(0, n, 'isPopup', function() {
            return null != this.parent;
          }),
          r(0, n, 'zOrder', t.prototype._$get_zOrder, function(t) {
            i.superSet(z, this, 'zOrder', t), e.manager._checkMask();
          }),
          r(
            1,
            e,
            'manager',
            function() {
              return (e._manager = e._manager || new N());
            },
            function(t) {
              e._manager = t;
            }
          ),
          (e.setLockView = function(t) {
            e.manager.setLockView(t);
          }),
          (e.lock = function(t) {
            e.manager.lock(t);
          }),
          (e.closeAll = function() {
            e.manager.closeAll();
          }),
          (e.getDialogsByGroup = function(t) {
            return e.manager.getDialogsByGroup(t);
          }),
          (e.closeByGroup = function(t) {
            return e.manager.closeByGroup(t);
          }),
          (e.CLOSE = 'close'),
          (e.CANCEL = 'cancel'),
          (e.SURE = 'sure'),
          (e.NO = 'no'),
          (e.OK = 'ok'),
          (e.YES = 'yes'),
          (e._manager = null),
          e
        );
      })(z),
      rt = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.ui.HBox', t);
        var n = e.prototype;
        return (
          (n.sortItem = function(t) {
            t &&
              t.sort(function(t, e) {
                return t.x - e.x;
              });
          }),
          (n.changeItems = function() {
            this._itemChanged = !1;
            for (var t = [], e = 0, i = 0, n = this.numChildren; i < n; i++) {
              var a = this.getChildAt(i);
              a &&
                a.layoutEnabled &&
                (t.push(a),
                (e = this._height
                  ? this._height
                  : Math.max(e, a.height * a.scaleY)));
            }
            this.sortItem(t);
            var r = 0;
            for (i = 0, n = t.length; i < n; i++)
              ((a = t[i]).x = r),
                (r += a.width * a.scaleX + this._space),
                'top' == this._align
                  ? (a.y = 0)
                  : 'middle' == this._align
                  ? (a.y = 0.5 * (e - a.height * a.scaleY))
                  : 'bottom' == this._align && (a.y = e - a.height * a.scaleY);
            this.changeSize();
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            this._height != t &&
              (i.superSet(W, this, 'height', t),
              this.callLater(this.changeItems));
          }),
          (e.NONE = 'none'),
          (e.TOP = 'top'),
          (e.MIDDLE = 'middle'),
          (e.BOTTOM = 'bottom'),
          e
        );
      })(W),
      st = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.ui.VBox', t);
        var n = e.prototype;
        return (
          (n.changeItems = function() {
            this._itemChanged = !1;
            for (var t = [], e = 0, i = 0, n = this.numChildren; i < n; i++) {
              var a = this.getChildAt(i);
              a &&
                a.layoutEnabled &&
                (t.push(a),
                (e = this._width
                  ? this._width
                  : Math.max(e, a.width * a.scaleX)));
            }
            this.sortItem(t);
            var r = 0;
            for (i = 0, n = t.length; i < n; i++)
              ((a = t[i]).y = r),
                (r += a.height * a.scaleY + this._space),
                'left' == this._align
                  ? (a.x = 0)
                  : 'center' == this._align
                  ? (a.x = 0.5 * (e - a.width * a.scaleX))
                  : 'right' == this._align && (a.x = e - a.width * a.scaleX);
            this.changeSize();
          }),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            this._width != t &&
              (i.superSet(W, this, 'width', t),
              this.callLater(this.changeItems));
          }),
          (e.NONE = 'none'),
          (e.LEFT = 'left'),
          (e.CENTER = 'center'),
          (e.RIGHT = 'right'),
          e
        );
      })(W),
      ot = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.ui.RadioGroup', Z);
        return (
          (e.prototype.createItem = function(t, e) {
            return new Q(t, e);
          }),
          e
        );
      })(),
      lt = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.ui.Tab', Z);
        return (
          (e.prototype.createItem = function(t, e) {
            return new B(t, e);
          }),
          e
        );
      })(),
      ht = (function(t) {
        function e(t) {
          (this._vScrollBar = null),
            (this._hScrollBar = null),
            void 0 === t && (t = ''),
            e.__super.call(this, t);
        }
        a(e, 'laya.ui.TextArea', t);
        var n = e.prototype;
        return (
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._vScrollBar && this._vScrollBar.destroy(),
              this._hScrollBar && this._hScrollBar.destroy(),
              (this._vScrollBar = null),
              (this._hScrollBar = null);
          }),
          (n.initialize = function() {
            (this.width = 180),
              (this.height = 150),
              (this._tf.wordWrap = !0),
              (this.multiline = !0);
          }),
          (n.onVBarChanged = function(t) {
            this._tf.scrollY != this._vScrollBar.value &&
              (this._tf.scrollY = this._vScrollBar.value);
          }),
          (n.onHBarChanged = function(t) {
            this._tf.scrollX != this._hScrollBar.value &&
              (this._tf.scrollX = this._hScrollBar.value);
          }),
          (n.changeScroll = function() {
            var t = this._vScrollBar && this._tf.maxScrollY > 0,
              e = this._hScrollBar && this._tf.maxScrollX > 0,
              i = t ? this._width - this._vScrollBar.width : this._width,
              n = e ? this._height - this._hScrollBar.height : this._height,
              a = this._tf.padding || M.labelPadding;
            (this._tf.width = i),
              (this._tf.height = n),
              this._vScrollBar &&
                ((this._vScrollBar.x =
                  this._width - this._vScrollBar.width - a[2]),
                (this._vScrollBar.y = a[1]),
                (this._vScrollBar.height =
                  this._height -
                  (e ? this._hScrollBar.height : 0) -
                  a[1] -
                  a[3]),
                (this._vScrollBar.scrollSize = 1),
                (this._vScrollBar.thumbPercent =
                  n / Math.max(this._tf.textHeight, n)),
                this._vScrollBar.setScroll(
                  1,
                  this._tf.maxScrollY,
                  this._tf.scrollY
                ),
                (this._vScrollBar.visible = t)),
              this._hScrollBar &&
                ((this._hScrollBar.x = a[0]),
                (this._hScrollBar.y =
                  this._height - this._hScrollBar.height - a[3]),
                (this._hScrollBar.width =
                  this._width - (t ? this._vScrollBar.width : 0) - a[0] - a[2]),
                (this._hScrollBar.scrollSize = Math.max(0.033 * i, 1)),
                (this._hScrollBar.thumbPercent =
                  i / Math.max(this._tf.textWidth, i)),
                this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX),
                (this._hScrollBar.visible = e));
          }),
          (n.scrollTo = function(t) {
            this.commitMeasure(), (this._tf.scrollY = t);
          }),
          r(0, n, 'scrollY', function() {
            return this._tf.scrollY;
          }),
          r(0, n, 'width', t.prototype._$get_width, function(t) {
            i.superSet(it, this, 'width', t), this.callLater(this.changeScroll);
          }),
          r(0, n, 'hScrollBar', function() {
            return this._hScrollBar;
          }),
          r(0, n, 'height', t.prototype._$get_height, function(t) {
            i.superSet(it, this, 'height', t),
              this.callLater(this.changeScroll);
          }),
          r(0, n, 'maxScrollX', function() {
            return this._tf.maxScrollX;
          }),
          r(
            0,
            n,
            'vScrollBarSkin',
            function() {
              return this._vScrollBar ? this._vScrollBar.skin : null;
            },
            function(t) {
              null == this._vScrollBar &&
                (this.addChild((this._vScrollBar = new et())),
                this._vScrollBar.on('change', this, this.onVBarChanged),
                (this._vScrollBar.target = this._tf),
                this.callLater(this.changeScroll)),
                (this._vScrollBar.skin = t);
            }
          ),
          r(
            0,
            n,
            'hScrollBarSkin',
            function() {
              return this._hScrollBar ? this._hScrollBar.skin : null;
            },
            function(t) {
              null == this._hScrollBar &&
                (this.addChild((this._hScrollBar = new Y())),
                this._hScrollBar.on('change', this, this.onHBarChanged),
                (this._hScrollBar.mouseWheelEnable = !1),
                (this._hScrollBar.target = this._tf),
                this.callLater(this.changeScroll)),
                (this._hScrollBar.skin = t);
            }
          ),
          r(0, n, 'vScrollBar', function() {
            return this._vScrollBar;
          }),
          r(0, n, 'maxScrollY', function() {
            return this._tf.maxScrollY;
          }),
          r(0, n, 'scrollX', function() {
            return this._tf.scrollX;
          }),
          e
        );
      })(it);
    !(function(t) {
      function e() {
        (this._uiView = null), (this.isCloseOther = !1), e.__super.call(this);
      }
      a(e, 'laya.ui.AsynDialog', at);
      var i = e.prototype;
      (i.createView = function(t) {
        this._uiView = t;
      }),
        (i._open = function(t, e, i) {
          (this.isModal = t),
            (this.isCloseOther = e),
            at.manager.lock(!0),
            this._uiView ? this.onCreated() : this.onOpen();
        }),
        (i.onCreated = function() {
          this.createUI(), this.onOpen();
        }),
        (i.createUI = function() {
          laya.ui.View.prototype.createView.call(this, this._uiView),
            (this._uiView = null),
            this._dealDragArea();
        }),
        (i.onOpen = function() {
          at.manager.open(this, this.isCloseOther), at.manager.lock(!1);
        }),
        (i.close = function(t, e) {
          void 0 === e && (e = !0), at.manager.close(this), this.onClose();
        }),
        (i.onClose = function() {}),
        (i.destroy = function(t) {
          void 0 === t && (t = !0),
            laya.ui.View.prototype.destroy.call(this, t),
            (this._uiView = null),
            this.onDestroy();
        }),
        (i.onDestroy = function() {});
    })();
    i.__init([z]);
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(t, e, i) {
    i.un, i.uns;
    var n = i.static,
      a = i.class,
      r = i.getset,
      s = i.__newvec,
      o = (laya.ani.AnimationContent, laya.ani.AnimationPlayer),
      l = (laya.ani.AnimationState, laya.ani.AnimationTemplet),
      h = laya.maths.Arith,
      c = laya.webgl.atlas.AtlasResourceManager,
      u = laya.webgl.shader.BaseShader,
      _ = laya.utils.Browser,
      d = laya.webgl.utils.Buffer,
      f = laya.utils.Byte,
      p = (laya.ani.bone.canvasmesh.CacheAbleSkinMesh, laya.utils.ClassUtils),
      m = i.Config,
      g = (laya.events.Event, laya.events.EventDispatcher),
      y = laya.utils.Handler,
      v = laya.net.Loader,
      b = laya.net.LoaderManager,
      w = laya.maths.MathUtil,
      x = laya.display.Node,
      I = laya.renders.Render,
      C =
        (laya.renders.RenderContext,
        laya.renders.RenderSprite,
        laya.webgl.utils.RenderState2D),
      S = laya.resource.Resource,
      T = laya.utils.RunDriver,
      M = (laya.webgl.shader.Shader, laya.webgl.utils.ShaderCompile),
      E = laya.display.Sprite,
      L = laya.utils.Stat,
      D = laya.utils.StringKey,
      A = (laya.display.css.Style, laya.resource.Texture, laya.net.URL),
      N = laya.utils.Utils,
      R = laya.webgl.WebGL,
      B = laya.webgl.WebGLContext;
    laya.webgl.canvas.WebGLContext2D;
    i.interface('laya.d3.core.IClone'),
      i.interface('laya.d3.graphics.IVertex'),
      i.interface('laya.d3.core.render.IUpdate'),
      i.interface('laya.d3.core.scene.ITreeNode'),
      i.interface('laya.d3.core.render.IRenderable');
    var k = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.animation.AnimationClipParser01'),
          (t.READ_DATA = function() {
            (t._DATA.offset = t._reader.getUint32()),
              (t._DATA.size = t._reader.getUint32());
          }),
          (t.READ_BLOCK = function() {
            for (
              var e = (t._BLOCK.count = t._reader.getUint16()),
                i = (t._BLOCK.blockStarts = []),
                n = (t._BLOCK.blockLengths = []),
                a = 0;
              a < e;
              a++
            )
              i.push(t._reader.getUint32()), n.push(t._reader.getUint32());
          }),
          (t.READ_STRINGS = function() {
            var e = t._reader.getUint32(),
              i = t._reader.getUint16(),
              n = t._reader.pos;
            t._reader.pos = e + t._DATA.offset;
            for (var a = 0; a < i; a++)
              t._strings[a] = t._reader.readUTFString();
            t._reader.pos = n;
          }),
          (t.parse = function(e, i) {
            (t._animationClip = e), (t._reader = i);
            i.__getBuffer();
            t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
            for (var n = 0, a = t._BLOCK.count; n < a; n++) {
              var r = i.getUint16(),
                s = t._strings[r],
                o = t['READ_' + s];
              if (null == o)
                throw new Error(
                  'model file err,no this function:' + r + ' ' + s
                );
              o.call();
            }
          }),
          (t.READ_ANIMATIONS = function() {
            var e,
              i = 0,
              n = 0,
              a = t._reader,
              r = a.__getBuffer(),
              s = [],
              o = a.getUint8();
            for (s.length = o, i = 0; i < o; i++) s[i] = a.getUint16();
            var l = [],
              h = a.getUint16();
            for (l.length = h, i = 0; i < h; i++) l[i] = a.getFloat32();
            var c = t._animationClip;
            c.name = t._strings[a.getUint16()];
            var u = (c._duration = a.getFloat32());
            (c.islooping = !!a.getByte()), (c._frameRate = a.getInt16());
            var _ = a.getInt16(),
              d = (c._nodes = new Array());
            d.length = _;
            (c._publicClipDatas = []).length = _;
            var f = (c._nodesMap = {}),
              p = 0,
              m = 0;
            for (i = 0; i < _; i++) {
              e = d[i] = new F();
              var g = a.getUint16(),
                y = (e.path = []);
              for (y.length = g, n = 0; n < g; n++)
                y[n] = t._strings[a.getUint16()];
              var v = y.join('/'),
                b = f[v];
              b || (f[v] = b = []), b.push(e);
              var w = a.getInt16();
              -1 !== w && (e.componentType = t._strings[w]);
              var x = U._propertyIndexDic[t._strings[a.getUint16()]];
              if (null == x)
                throw new Error('AnimationClipParser01:unknown property name.');
              var I = x < 4,
                C = !I || (I && '' === y[0]);
              (e._cacheProperty = C), C ? p++ : m++, (e.propertyNameID = x);
              var S = s[a.getUint8()];
              e.keyFrameWidth = S / 4;
              var T = (e.keyFrames = []),
                M = (T.length = a.getUint16()),
                E = null,
                L = NaN;
              for (n = 0; n < M; n++) {
                var D = (T[n] = new V());
                L = D.startTime = l[a.getUint16()];
                var A = a.pos;
                (D.inTangent = new Float32Array(r.slice(A, A + S))),
                  (a.pos += S),
                  (A = a.pos),
                  (D.outTangent = new Float32Array(r.slice(A, A + S))),
                  (a.pos += S),
                  (A = a.pos),
                  (D.data = new Float32Array(r.slice(A, A + S))),
                  (a.pos += S),
                  E && ((E.next = D), (E.duration = L - E.startTime)),
                  (E = D);
              }
              (D.next = null), (D.duration = u - L);
            }
            var N = (c._nodeToCachePropertyMap = new Int32Array(_)),
              R = (c._cachePropertyMap = new Int32Array(p)),
              B = (c._unCachePropertyMap = new Int32Array(m));
            for (p = m = 0, i = 0; i < _; i++)
              (e = d[i])._cacheProperty
                ? ((N[i] = p), (R[p++] = i))
                : (B[m++] = i);
          }),
          (t._animationClip = null),
          (t._reader = null),
          (t._strings = []),
          n(t, [
            '_BLOCK',
            function() {
              return (this._BLOCK = { count: 0 });
            },
            '_DATA',
            function() {
              return (this._DATA = { offset: 0, size: 0 });
            }
          ]),
          t
        );
      })(),
      P = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.animation.AnimationClipParser02'),
          (t.READ_DATA = function() {
            (t._DATA.offset = t._reader.getUint32()),
              (t._DATA.size = t._reader.getUint32());
          }),
          (t.READ_BLOCK = function() {
            for (
              var e = (t._BLOCK.count = t._reader.getUint16()),
                i = (t._BLOCK.blockStarts = []),
                n = (t._BLOCK.blockLengths = []),
                a = 0;
              a < e;
              a++
            )
              i.push(t._reader.getUint32()), n.push(t._reader.getUint32());
          }),
          (t.READ_STRINGS = function() {
            var e = t._reader.getUint32(),
              i = t._reader.getUint16(),
              n = t._reader.pos;
            t._reader.pos = e + t._DATA.offset;
            for (var a = 0; a < i; a++)
              t._strings[a] = t._reader.readUTFString();
            t._reader.pos = n;
          }),
          (t.parse = function(e, i) {
            (t._animationClip = e), (t._reader = i);
            i.__getBuffer();
            t.READ_DATA(), t.READ_BLOCK(), t.READ_STRINGS();
            for (var n = 0, a = t._BLOCK.count; n < a; n++) {
              var r = i.getUint16(),
                s = t._strings[r],
                o = t['READ_' + s];
              if (null == o)
                throw new Error(
                  'model file err,no this function:' + r + ' ' + s
                );
              o.call();
            }
          }),
          (t.READ_ANIMATIONS = function() {
            var e,
              i = 0,
              n = 0,
              a = t._reader,
              r = a.__getBuffer(),
              s = [],
              o = a.getUint8();
            for (s.length = o, i = 0; i < o; i++) s[i] = a.getUint16();
            var l = [],
              h = a.getUint16();
            for (l.length = h, i = 0; i < h; i++) l[i] = a.getFloat32();
            var c = t._animationClip;
            c.name = t._strings[a.getUint16()];
            var u = (c._duration = a.getFloat32());
            (c.islooping = !!a.getByte()), (c._frameRate = a.getInt16());
            var _ = a.getInt16(),
              d = (c._nodes = new Array());
            d.length = _;
            (c._publicClipDatas = []).length = _;
            var f = (c._nodesMap = {}),
              p = 0,
              m = 0;
            for (i = 0; i < _; i++) {
              e = d[i] = new F();
              var g = a.getUint16(),
                y = (e.path = []);
              for (y.length = g, n = 0; n < g; n++)
                y[n] = t._strings[a.getUint16()];
              var v = y.join('/'),
                b = f[v];
              b || (f[v] = b = []), b.push(e);
              var w = a.getInt16();
              -1 !== w && (e.componentType = t._strings[w]);
              var x = U._propertyIndexDic[t._strings[a.getUint16()]];
              if (null == x)
                throw new Error('AnimationClipParser02:unknown property name.');
              var I = x < 4,
                C = !I || (I && '' === y[0]);
              (e._cacheProperty = C), C ? p++ : m++, (e.propertyNameID = x);
              var S = s[a.getUint8()];
              e.keyFrameWidth = S / 4;
              var T = (e.keyFrames = []),
                M = (T.length = a.getUint16()),
                E = null,
                L = NaN;
              for (n = 0; n < M; n++) {
                var D = (T[n] = new V());
                L = D.startTime = l[a.getUint16()];
                var A = a.pos;
                (D.inTangent = new Float32Array(r.slice(A, A + S))),
                  (a.pos += S),
                  (A = a.pos),
                  (D.outTangent = new Float32Array(r.slice(A, A + S))),
                  (a.pos += S),
                  (A = a.pos),
                  (D.data = new Float32Array(r.slice(A, A + S))),
                  (a.pos += S),
                  E && ((E.next = D), (E.duration = L - E.startTime)),
                  (E = D);
              }
              (D.next = null), (D.duration = u - L);
            }
            var N = a.getUint16();
            for (i = 0; i < N; i++) {
              var R = new O();
              (R.time = a.getFloat32()),
                (R.eventName = t._strings[a.getUint16()]);
              var B,
                k = a.getUint16();
              for (k > 0 && (R.params = B = []), n = 0; n < k; n++) {
                switch (a.getByte()) {
                  case 0:
                    B.push(!!a.getByte());
                    break;
                  case 1:
                    B.push(a.getInt32());
                    break;
                  case 2:
                    B.push(a.getFloat32());
                    break;
                  case 3:
                    B.push(t._strings[a.getUint16()]);
                    break;
                  default:
                    throw new Error('unknown type.');
                }
              }
              c.addEvent(R);
            }
            var P = (c._nodeToCachePropertyMap = new Int32Array(_)),
              H = (c._cachePropertyMap = new Int32Array(p)),
              G = (c._unCachePropertyMap = new Int32Array(m));
            for (p = m = 0, i = 0; i < _; i++)
              (e = d[i])._cacheProperty
                ? ((P[i] = p), (H[p++] = i))
                : (G[m++] = i);
          }),
          (t._animationClip = null),
          (t._reader = null),
          (t._strings = []),
          n(t, [
            '_BLOCK',
            function() {
              return (this._BLOCK = { count: 0 });
            },
            '_DATA',
            function() {
              return (this._DATA = { offset: 0, size: 0 });
            }
          ]),
          t
        );
      })(),
      O = (function() {
        function t() {
          (this.time = NaN), (this.eventName = null), (this.params = null);
        }
        return a(t, 'laya.d3.animation.AnimationEvent'), t;
      })(),
      U = (function() {
        function t() {
          (this._childs = []), (this.transform = new Qe(this));
        }
        a(t, 'laya.d3.animation.AnimationNode');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.addChild = function(t) {
            (t._parent = this),
              t.transform.setParent(this.transform),
              this._childs.push(t);
          }),
          (e.removeChild = function(t) {
            var e = this._childs.indexOf(t);
            -1 !== e && this._childs.splice(e, 1);
          }),
          (e.getChildByName = function(t) {
            for (var e = 0, i = this._childs.length; e < i; e++) {
              var n = this._childs[e];
              if (n.name === t) return n;
            }
            return null;
          }),
          (e.getChildByIndex = function(t) {
            return this._childs[t];
          }),
          (e.getChildCount = function() {
            return this._childs.length;
          }),
          (e.cloneTo = function(t) {
            var e = t;
            e.name = this.name;
            for (var i = 0, n = this._childs.length; i < n; i++) {
              var a = this._childs[i],
                r = a.clone();
              e.addChild(r);
              var s = a.transform,
                o = r.transform;
              o.setLocalPosition(s.getLocalPosition()),
                o.setLocalRotation(s.getLocalRotation()),
                o.setLocalScale(s.getLocalScale()),
                (o._localRotationEuler = s._localRotationEuler),
                o._setWorldMatrixIgnoreUpdate(s.getWorldMatrix());
            }
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (t.__init__ = function() {
            t.registerAnimationNodeProperty(
              'localPosition',
              t._getLocalPosition,
              t._setLocalPosition
            ),
              t.registerAnimationNodeProperty(
                'localRotation',
                t._getLocalRotation,
                t._setLocalRotation
              ),
              t.registerAnimationNodeProperty(
                'localScale',
                t._getLocalScale,
                t._setLocalScale
              ),
              t.registerAnimationNodeProperty(
                'localRotationEuler',
                t._getLocalRotationEuler,
                t._setLocalRotationEuler
              ),
              t.registerAnimationNodeProperty(
                'particleRender.sharedMaterial.tintColor',
                t._getParticleRenderSharedMaterialTintColor,
                t._setParticleRenderSharedMaterialTintColor
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.tilingOffset',
                t._getMeshRenderSharedMaterialTilingOffset,
                t._setMeshRenderSharedMaterialTilingOffset
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.albedoColor',
                t._getMeshRenderSharedMaterialAlbedo,
                t._setMeshRenderSharedMaterialAlbedo
              ),
              t.registerAnimationNodeProperty(
                'skinnedMeshRender.sharedMaterial.tilingOffset',
                t._getSkinnedMeshRenderSharedMaterialTilingOffset,
                t._setSkinnedMeshRenderSharedMaterialTilingOffset
              ),
              t.registerAnimationNodeProperty(
                'skinnedMeshRender.sharedMaterial.albedoColor',
                t._getSkinnedMeshRenderSharedMaterialAlbedo,
                t._setSkinnedMeshRenderSharedMaterialAlbedo
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.albedo',
                t._getMeshRenderSharedMaterialAlbedo,
                t._setMeshRenderSharedMaterialAlbedo
              ),
              t.registerAnimationNodeProperty(
                'skinnedMeshRender.sharedMaterial.albedo',
                t._getSkinnedMeshRenderSharedMaterialAlbedo,
                t._setSkinnedMeshRenderSharedMaterialAlbedo
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.intensity',
                t._getMeshRenderSharedMaterialIntensity,
                t._setMeshRenderSharedMaterialIntensity
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.alpha',
                t._getMeshRenderSharedMaterialAlpha,
                t._setMeshRenderSharedMaterialAlpha
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.alphaColor',
                t._getMeshRenderSharedMaterialAlphaColor,
                t._setMeshRenderSharedMaterialAlphaColor
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.baseColor',
                t._getMeshRenderSharedMaterialBaseColor,
                t._setMeshRenderSharedMaterialBaseColor
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.dissolve',
                t._getMeshRenderSharedMaterialDissolve,
                t._setMeshRenderSharedMaterialDissolve
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.dissolveSpeed',
                t._getMeshRenderSharedMaterialDissolveSpeed,
                t._setMeshRenderSharedMaterialDissolveSpeed
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.mMultiplier',
                t._getMeshRenderSharedMaterialMMultiplier,
                t._setMeshRenderSharedMaterialMMultiplier
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.baseScrollSpeedX',
                t._getMeshRenderSharedMaterialBaseScrollSpeedX,
                t._setMeshRenderSharedMaterialBaseScrollSpeedX
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.baseScrollSpeedY',
                t._getMeshRenderSharedMaterialBaseScrollSpeedY,
                t._setMeshRenderSharedMaterialBaseScrollSpeedY
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.secondScrollSpeedX',
                t._getMeshRenderSharedMaterialSecondScrollSpeedX,
                t._setMeshRenderSharedMaterialSecondScrollSpeedX
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.secondScrollSpeedY',
                t._getMeshRenderSharedMaterialSecondScrollSpeedY,
                t._setMeshRenderSharedMaterialSecondScrollSpeedY
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.detailTilingOffset',
                t._getMeshRenderSharedMaterialDetailTilingOffset,
                t._setMeshRenderSharedMaterialDetailTilingOffset
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.dissolveTilingOffset',
                t._getMeshRenderSharedMaterialDissolveTilingOffset,
                t._setMeshRenderSharedMaterialDissolveTilingOffset
              ),
              t.registerAnimationNodeProperty(
                'meshRender.sharedMaterial.maskTilingOffset',
                t._getMeshRenderSharedMaterialMaskTilingOffset,
                t._setMeshRenderSharedMaterialMaskTilingOffset
              );
          }),
          (t.registerAnimationNodeProperty = function(e, i, n) {
            if (t._propertyIndexDic[e])
              throw new Error(
                'AnimationNode: this propertyName has registered.'
              );
            (t._propertyIndexDic[e] = t._propertyIDCounter),
              (t._propertyGetFuncs[t._propertyIDCounter] = i),
              (t._propertySetFuncs[t._propertyIDCounter] = n),
              t._propertyIDCounter++;
          }),
          (t._getLocalPosition = function(t, e) {
            return t
              ? t.transform.getLocalPosition()
              : e._transform.localPosition.elements;
          }),
          (t._setLocalPosition = function(t, e, i) {
            if (t) t.transform.setLocalPosition(i);
            else {
              var n = e._transform,
                a = n.localPosition;
              (a.elements = i), (n.localPosition = a);
            }
          }),
          (t._getLocalRotation = function(t, e) {
            return t
              ? t.transform.getLocalRotation()
              : e._transform.localRotation.elements;
          }),
          (t._setLocalRotation = function(t, e, i) {
            if (t) t.transform.setLocalRotation(i);
            else {
              var n = e._transform,
                a = n.localRotation;
              (a.elements = i), (n.localRotation = a);
            }
          }),
          (t._getLocalScale = function(t, e) {
            return t
              ? t.transform.getLocalScale()
              : e._transform.localScale.elements;
          }),
          (t._setLocalScale = function(t, e, i) {
            if (t) t.transform.setLocalScale(i);
            else {
              var n = e._transform,
                a = n.localScale;
              (a.elements = i), (n.localScale = a);
            }
          }),
          (t._getLocalRotationEuler = function(t, e) {
            return t
              ? t.transform.getLocalRotationEuler()
              : e._transform.localRotationEuler.elements;
          }),
          (t._setLocalRotationEuler = function(t, e, i) {
            if (t) t.transform.setLocalRotationEuler(i);
            else {
              var n = e._transform,
                a = n.localRotationEuler;
              (a.elements = i), (n.localRotationEuler = a);
            }
          }),
          (t._getMeshRenderSharedMaterialTilingOffset = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.tilingOffset.elements
                : null;
            }
            return e.meshRender.sharedMaterial.tilingOffset.elements;
          }),
          (t._setMeshRenderSharedMaterialTilingOffset = function(t, e, i) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.meshRender.material)
                  .tilingOffset).elements = i),
                (n.tilingOffset = a));
            } else
              ((a = (n = e.meshRender.material).tilingOffset).elements = i),
                (n.tilingOffset = a);
          }),
          (t._getMeshRenderSharedMaterialAlbedo = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.albedoColor.elements
                : null;
            }
            return e.meshRender.sharedMaterial.albedoColor.elements;
          }),
          (t._setMeshRenderSharedMaterialAlbedo = function(t, e, i) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.meshRender.material)
                  .albedoColor).elements = i),
                (n.albedoColor = a));
            } else
              ((a = (n = e.meshRender.material).albedoColor).elements = i),
                (n.albedoColor = a);
          }),
          (t._getSkinnedMeshRenderSharedMaterialTilingOffset = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.skinnedMeshRender.sharedMaterial.tilingOffset.elements
                : null;
            }
            return e.skinnedMeshRender.sharedMaterial.tilingOffset.elements;
          }),
          (t._setSkinnedMeshRenderSharedMaterialTilingOffset = function(
            t,
            e,
            i
          ) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.skinnedMeshRender.material)
                  .tilingOffset).elements = i),
                (n.tilingOffset = a));
            } else
              ((a = (n = e.skinnedMeshRender.material)
                .tilingOffset).elements = i),
                (n.tilingOffset = a);
          }),
          (t._getSkinnedMeshRenderSharedMaterialAlbedo = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.skinnedMeshRender.sharedMaterial.albedoColor.elements
                : null;
            }
            return e.skinnedMeshRender.sharedMaterial.albedoColor.elements;
          }),
          (t._setSkinnedMeshRenderSharedMaterialAlbedo = function(t, e, i) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.skinnedMeshRender.material)
                  .albedoColor).elements = i),
                (n.albedoColor = a));
            } else
              ((a = (n = e.skinnedMeshRender.material)
                .albedoColor).elements = i),
                (n.albedoColor = a);
          }),
          (t._getParticleRenderSharedMaterialTintColor = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.particleRender.sharedMaterial.tintColor.elements
                : null;
            }
            return e.particleRender.sharedMaterial.tintColor.elements;
          }),
          (t._setParticleRenderSharedMaterialTintColor = function(t, e, i) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.particleRender.material)
                  .tintColor).elements = i),
                (n.tintColor = a));
            } else
              ((a = (n = e.particleRender.material).tintColor).elements = i),
                (n.tintColor = a);
          }),
          (t._getMeshRenderSharedMaterialAlphaColor = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.alphaColor.elements
                : null;
            }
            return e.meshRender.sharedMaterial.alphaColor.elements;
          }),
          (t._setMeshRenderSharedMaterialAlphaColor = function(t, e, i) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.meshRender.material)
                  .alphaColor).elements = i),
                (n.alphaColor = a));
            } else
              ((a = (n = e.meshRender.material).alphaColor).elements = i),
                (n.alphaColor = a);
          }),
          (t._getMeshRenderSharedMaterialBaseColor = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.baseColor.elements
                : null;
            }
            return e.meshRender.sharedMaterial.baseColor.elements;
          }),
          (t._setMeshRenderSharedMaterialBaseColor = function(t, e, i) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.meshRender.material)
                  .baseColor).elements = i),
                (n.baseColor = a));
            } else
              ((a = (n = e.meshRender.material).baseColor).elements = i),
                (n.baseColor = a);
          }),
          (t._getMeshRenderSharedMaterialDissolve = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i ? i.owner.meshRender.sharedMaterial.dissolve : 0;
            }
            return e.meshRender.sharedMaterial.dissolve;
          }),
          (t._setMeshRenderSharedMaterialDissolve = function(t, e, i) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.dissolve = i[0]);
            } else e.meshRender.material.dissolve = i[0];
          }),
          (t._getMeshRenderSharedMaterialDissolveSpeed = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i ? i.owner.meshRender.sharedMaterial.dissolveSpeed : 0;
            }
            return e.meshRender.sharedMaterial.dissolveSpeed;
          }),
          (t._setMeshRenderSharedMaterialDissolveSpeed = function(t, e, i) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.dissolveSpeed = i[0]);
            } else e.meshRender.material.dissolveSpeed = i[0];
          }),
          (t._getMeshRenderSharedMaterialMMultiplier = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i ? i.owner.meshRender.sharedMaterial.mMultiplier : 0;
            }
            return e.meshRender.sharedMaterial.mMultiplier;
          }),
          (t._setMeshRenderSharedMaterialMMultiplier = function(t, e, i) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.mMultiplier = i[0]);
            } else e.meshRender.material.mMultiplier = i[0];
          }),
          (t._getMeshRenderSharedMaterialBaseScrollSpeedX = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i ? i.owner.meshRender.sharedMaterial.baseScrollSpeedX : 0;
            }
            return e.meshRender.sharedMaterial.baseScrollSpeedX;
          }),
          (t._setMeshRenderSharedMaterialBaseScrollSpeedX = function(t, e, i) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.baseScrollSpeedX = i[0]);
            } else e.meshRender.material.baseScrollSpeedX = i[0];
          }),
          (t._getMeshRenderSharedMaterialBaseScrollSpeedY = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i ? i.owner.meshRender.sharedMaterial.baseScrollSpeedY : 0;
            }
            return e.meshRender.sharedMaterial.baseScrollSpeedY;
          }),
          (t._setMeshRenderSharedMaterialBaseScrollSpeedY = function(t, e, i) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.baseScrollSpeedY = i[0]);
            } else e.meshRender.material.baseScrollSpeedY = i[0];
          }),
          (t._getMeshRenderSharedMaterialSecondScrollSpeedX = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.secondScrollSpeedX
                : 0;
            }
            return e.meshRender.sharedMaterial.secondScrollSpeedX;
          }),
          (t._setMeshRenderSharedMaterialSecondScrollSpeedX = function(
            t,
            e,
            i
          ) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.secondScrollSpeedX = i[0]);
            } else e.meshRender.material.secondScrollSpeedX = i[0];
          }),
          (t._getMeshRenderSharedMaterialSecondScrollSpeedY = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.secondScrollSpeedY
                : 0;
            }
            return e.meshRender.sharedMaterial.secondScrollSpeedY;
          }),
          (t._setMeshRenderSharedMaterialSecondScrollSpeedY = function(
            t,
            e,
            i
          ) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.secondScrollSpeedY = i[0]);
            } else e.meshRender.material.secondScrollSpeedY = i[0];
          }),
          (t._getMeshRenderSharedMaterialAlpha = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i ? i.owner.meshRender.sharedMaterial.alpha : 0;
            }
            return e.meshRender.sharedMaterial.alpha;
          }),
          (t._setMeshRenderSharedMaterialAlpha = function(t, e, i) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.alpha = i[0]);
            } else e.meshRender.material.alpha = i[0];
          }),
          (t._getMeshRenderSharedMaterialIntensity = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i ? i.owner.meshRender.sharedMaterial.intensity : 0;
            }
            return e.meshRender.sharedMaterial.intensity;
          }),
          (t._setMeshRenderSharedMaterialIntensity = function(t, e, i) {
            if (t) {
              var n = t.transform._entity;
              n && (n.owner.meshRender.material.intensity = i[0]);
            } else e.meshRender.material.intensity = i[0];
          }),
          (t._getMeshRenderSharedMaterialDetailTilingOffset = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.detailTilingOffset.elements
                : null;
            }
            return e.meshRender.sharedMaterial.detailTilingOffset.elements;
          }),
          (t._setMeshRenderSharedMaterialDetailTilingOffset = function(
            t,
            e,
            i
          ) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.meshRender.material)
                  .detailTilingOffset).elements = i),
                (n.detailTilingOffset = a));
            } else
              ((a = (n = e.meshRender.material)
                .detailTilingOffset).elements = i),
                (n.detailTilingOffset = a);
          }),
          (t._getMeshRenderSharedMaterialDissolveTilingOffset = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.dissolveTilingOffset
                    .elements
                : null;
            }
            return e.meshRender.sharedMaterial.dissolveTilingOffset.elements;
          }),
          (t._setMeshRenderSharedMaterialDissolveTilingOffset = function(
            t,
            e,
            i
          ) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.meshRender.material)
                  .dissolveTilingOffset).elements = i),
                (n.dissolveTilingOffset = a));
            } else
              ((a = (n = e.meshRender.material)
                .dissolveTilingOffset).elements = i),
                (n.dissolveTilingOffset = a);
          }),
          (t._getMeshRenderSharedMaterialMaskTilingOffset = function(t, e) {
            if (t) {
              var i = t.transform._entity;
              return i
                ? i.owner.meshRender.sharedMaterial.maskTilingOffset.elements
                : null;
            }
            return e.meshRender.sharedMaterial.maskTilingOffset.elements;
          }),
          (t._setMeshRenderSharedMaterialMaskTilingOffset = function(t, e, i) {
            var n, a;
            if (t) {
              var r = t.transform._entity;
              r &&
                (((a = (n = r.owner.meshRender.material)
                  .maskTilingOffset).elements = i),
                (n.maskTilingOffset = a));
            } else
              ((a = (n = e.meshRender.material).maskTilingOffset).elements = i),
                (n.maskTilingOffset = a);
          }),
          (t._propertyIDCounter = 0),
          (t._propertyIndexDic = {}),
          (t._propertySetFuncs = []),
          (t._propertyGetFuncs = []),
          t
        );
      })(),
      V = (function() {
        function t() {
          (this.startTime = NaN),
            (this.inTangent = null),
            (this.outTangent = null),
            (this.data = null),
            (this.duration = NaN),
            (this.next = null);
        }
        return a(t, 'laya.d3.animation.Keyframe'), t;
      })(),
      F = (function() {
        function t() {
          (this._cacheProperty = !1),
            (this.path = null),
            (this.componentType = null),
            (this.propertyNameID = 0),
            (this.keyFrameWidth = 0),
            (this.defaultData = null),
            (this.keyFrames = null);
        }
        return a(t, 'laya.d3.animation.KeyframeNode'), t;
      })(),
      H = (function() {
        function t() {
          (this._tempVector30 = new Re()),
            (this._tempVector31 = new Re()),
            (this._tempVector32 = new Re()),
            (this._a = new Re()),
            (this._b = new Re()),
            (this._c = new Re()),
            (this._d = new Re());
        }
        a(t, 'laya.d3.core.glitter.SplineCurvePositionVelocity');
        var e = t.prototype;
        return (
          (e.Init = function(t, e, i, n) {
            t.cloneTo(this._d),
              e.cloneTo(this._c),
              Re.scale(t, 2, this._a),
              Re.scale(i, 2, this._tempVector30),
              Re.subtract(this._a, this._tempVector30, this._a),
              Re.add(this._a, e, this._a),
              Re.add(this._a, n, this._a),
              Re.scale(i, 3, this._b),
              Re.scale(t, 3, this._tempVector30),
              Re.subtract(this._b, this._tempVector30, this._b),
              Re.subtract(this._b, n, this._b),
              Re.scale(e, 2, this._tempVector30),
              Re.subtract(this._b, this._tempVector30, this._b);
          }),
          (e.Slerp = function(t, e) {
            Re.scale(this._a, t * t * t, this._tempVector30),
              Re.scale(this._b, t * t, this._tempVector31),
              Re.scale(this._c, t, this._tempVector32),
              Re.add(this._tempVector30, this._tempVector31, e),
              Re.add(e, this._tempVector32, e),
              Re.add(e, this._d, e);
          }),
          t
        );
      })(),
      G = (function() {
        function t(t, e, i, n) {
          (this._datas = null),
            (this._w = 0),
            (this._h = 0),
            (this._minHeight = NaN),
            (this._maxHeight = NaN),
            (this._datas = []),
            (this._w = t),
            (this._h = e),
            (this._minHeight = i),
            (this._maxHeight = n);
        }
        a(t, 'laya.d3.core.HeightMap');
        var e = t.prototype;
        return (
          (e._inBounds = function(t, e) {
            return t >= 0 && t < this._h && e >= 0 && e < this._w;
          }),
          (e.getHeight = function(t, e) {
            return this._inBounds(t, e) ? this._datas[t][e] : NaN;
          }),
          r(0, e, 'width', function() {
            return this._w;
          }),
          r(0, e, 'height', function() {
            return this._h;
          }),
          r(0, e, 'maxHeight', function() {
            return this._maxHeight;
          }),
          r(0, e, 'minHeight', function() {
            return this._minHeight;
          }),
          (t.creatFromMesh = function(e, i, n, a) {
            for (
              var r = [], s = [], o = e.getSubMeshCount(), l = 0;
              l < o;
              l++
            ) {
              for (
                var h = e.getSubMesh(l),
                  c = h._getVertexBuffer(),
                  u = c.getData(),
                  _ = [],
                  d = 0;
                d < u.length;
                d += c.vertexDeclaration.vertexStride / 4
              ) {
                var f = new Re(u[d + 0], u[d + 1], u[d + 2]);
                _.push(f);
              }
              r.push(_);
              var p = h._getIndexBuffer();
              s.push(p.getData());
            }
            var m = e.boundingBox,
              g = m.min.x,
              y = m.min.z,
              v = m.max.x,
              b = m.max.z,
              w = m.min.y,
              x = m.max.y,
              I = v - g,
              C = b - y,
              S = (a.elements[0] = I / (i - 1)),
              T = (a.elements[1] = C / (n - 1)),
              M = new t(i, n, w, x),
              E = t._tempRay,
              L = E.direction.elements;
            (L[0] = 0), (L[1] = -1), (L[2] = 0);
            var D = x + 0.1;
            E.origin.elements[1] = D;
            for (var A = 0; A < n; A++) {
              var N = y + A * T;
              M._datas[A] = [];
              for (var R = 0; R < i; R++) {
                var B = g + R * S,
                  k = E.origin.elements;
                (k[0] = B), (k[2] = N);
                var P = t._getPosition(E, r, s);
                M._datas[A][R] = P === Number.MAX_VALUE ? NaN : D - P;
              }
            }
            return M;
          }),
          (t.createFromImage = function(e, i, n) {
            for (
              var a = e.width,
                r = e.height,
                s = new t(a, r, i, n),
                o = (n - i) / 254,
                l = e.getPixels(),
                h = 0,
                c = 0;
              c < r;
              c++
            )
              for (var u = (s._datas[c] = []), _ = 0; _ < a; _++) {
                var d = l[h++],
                  f = l[h++],
                  p = l[h++],
                  m = l[h++];
                u[_] =
                  255 == d && 255 == f && 255 == p && 255 == m
                    ? NaN
                    : ((d + f + p) / 3) * o + i;
              }
            return s;
          }),
          (t._getPosition = function(t, e, i) {
            for (var n = Number.MAX_VALUE, a = 0; a < e.length; a++)
              for (var r = e[a], s = i[a], o = 0; o < s.length; o += 3) {
                var l = r[s[o + 0]],
                  h = r[s[o + 1]],
                  c = r[s[o + 2]],
                  u = qe.rayIntersectsTriangle(t, l, h, c);
                !isNaN(u) && u < n && (n = u);
              }
            return n;
          }),
          n(t, [
            '_tempRay',
            function() {
              return (this._tempRay = new Ae(new Re(), new Re()));
            }
          ]),
          t
        );
      })(),
      z = (function() {
        function t() {
          (this._visible = !0),
            (this._nonRigidbodyOffset = 0),
            (this._colliders = []);
        }
        a(t, 'laya.d3.core.Layer');
        var e = t.prototype;
        return (
          (e._binarySearchIndex = function() {
            for (
              var e = 0, i = t._collsionTestList.length - 1, n = 0;
              e <= i;

            ) {
              n = Math.floor((e + i) / 2);
              var a = t._collsionTestList[n];
              if (a == this._number) return n;
              a > this._number ? (i = n - 1) : (e = n + 1);
            }
            return e;
          }),
          (e._addCollider = function(e) {
            0 === this._colliders.length &&
              t._collsionTestList.splice(
                this._binarySearchIndex(),
                0,
                this._number
              ),
              e._isRigidbody
                ? (this._colliders.unshift(e), this._nonRigidbodyOffset++)
                : this._colliders.push(e);
          }),
          (e._removeCollider = function(e) {
            var i = this._colliders.indexOf(e);
            i < this._nonRigidbodyOffset && this._nonRigidbodyOffset--,
              this._colliders.splice(i, 1),
              0 === this._colliders.length &&
                t._collsionTestList.splice(
                  t._collsionTestList.indexOf(this._number),
                  1
                );
          }),
          r(0, e, 'number', function() {
            return this._number;
          }),
          r(
            0,
            e,
            'visible',
            function() {
              return this._visible;
            },
            function(e) {
              (this._visible = e),
                (t._visibleLayers = e
                  ? t._visibleLayers | this.mask
                  : t._visibleLayers & ~this.mask);
            }
          ),
          r(0, e, 'mask', function() {
            return this._mask;
          }),
          r(
            1,
            t,
            'visibleLayers',
            function() {
              return t._visibleLayers;
            },
            function(e) {
              t._visibleLayers = e;
              for (var i = 0, n = t._layerList.length; i < n; i++) {
                var a = t._layerList[i];
                a._visible = 0 != (a._mask & t._visibleLayers);
              }
            }
          ),
          (t.__init__ = function() {
            t._layerList.length = 31;
            for (var e = 0; e < 31; e++) {
              var i = new t();
              (t._layerList[e] = i),
                0 === e
                  ? ((i.name = 'Default Layer'), (i.visible = !0))
                  : ((i.name = 'Layer-' + e), (i.visible = !1)),
                (i._number = e),
                (i._mask = Math.pow(2, e));
            }
            t.currentCreationLayer = t._layerList[0];
          }),
          (t.getLayerByNumber = function(e) {
            if (e < 0 || e > 30)
              throw new Error('无法返回指定Layer，该number超出范围！');
            return t._layerList[e];
          }),
          (t.getLayerByName = function(e) {
            for (var i = 0; i < 31; i++)
              if (t._layerList[i].name === e) return t._layerList[i];
            throw new Error('无法返回指定Layer,该name不存在');
          }),
          (t.isVisible = function(e) {
            return 0 != (e & t._currentCameraCullingMask & t._visibleLayers);
          }),
          (t._layerList = []),
          (t._visibleLayers = 2147483647),
          (t._collsionTestList = []),
          (t._currentCameraCullingMask = 2147483647),
          (t.maxCount = 31),
          (t.currentCreationLayer = null),
          t
        );
      })(),
      j = (function() {
        function t(t, e, i) {
          (this._time = NaN),
            (this._minCount = 0),
            (this._maxCount = 0),
            (this._time = t),
            (this._minCount = e),
            (this._maxCount = i);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.Burst');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            (e._time = this._time),
              (e._minCount = this._minCount),
              (e._maxCount = this._maxCount);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'time', function() {
            return this._time;
          }),
          r(0, e, 'minCount', function() {
            return this._minCount;
          }),
          r(0, e, 'maxCount', function() {
            return this._maxCount;
          }),
          t
        );
      })(),
      W = (function() {
        function t(t) {
          (this._color = null), (this.enbale = !1), (this._color = t);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.ColorOverLifetime');
        var e = t.prototype;
        return (
          (e.cloneTo = function(t) {
            var e = t;
            this._color.cloneTo(e._color), (e.enbale = this.enbale);
          }),
          (e.clone = function() {
            var t;
            switch (this._color.type) {
              case 0:
                t = J.createByConstant(this._color.constant.clone());
                break;
              case 1:
                t = J.createByGradient(this._color.gradient.clone());
                break;
              case 2:
                t = J.createByRandomTwoConstant(
                  this._color.constantMin.clone(),
                  this._color.constantMax.clone()
                );
                break;
              case 3:
                t = J.createByRandomTwoGradient(
                  this._color.gradientMin.clone(),
                  this._color.gradientMax.clone()
                );
            }
            var e = new this.constructor(t);
            return (e.enbale = this.enbale), e;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          t
        );
      })(),
      X = (function() {
        function t() {
          (this._destroyed = !1),
            (this._emissionRate = 0),
            (this._bursts = null),
            (this.enbale = !1),
            (this._destroyed = !1),
            (this.emissionRate = 10),
            (this._bursts = []);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.Emission');
        var e = t.prototype;
        return (
          i.imps(e, {
            'laya.d3.core.IClone': !0,
            'laya.resource.IDestroy': !0
          }),
          (e._destroy = function() {
            (this._bursts = null), (this._destroyed = !0);
          }),
          (e.getBurstsCount = function() {
            return this._bursts.length;
          }),
          (e.getBurstByIndex = function(t) {
            return this._bursts[t];
          }),
          (e.addBurst = function(t) {
            var e = this._bursts.length;
            if (e > 0)
              for (var i = 0; i < e; i++)
                this._bursts[i].time > t.time && this._bursts.splice(i, 0, t);
            this._bursts.push(t);
          }),
          (e.removeBurst = function(t) {
            var e = this._bursts.indexOf(t);
            -1 !== e && this._bursts.splice(e, 1);
          }),
          (e.removeBurstByIndex = function(t) {
            this._bursts.splice(t, 1);
          }),
          (e.clearBurst = function() {
            this._bursts.length = 0;
          }),
          (e.cloneTo = function(t) {
            var e = t,
              i = e._bursts;
            i.length = this._bursts.length;
            for (var n = 0, a = this._bursts.length; n < a; n++) {
              var r = i[n];
              r ? this._bursts[n].cloneTo(r) : (i[n] = this._bursts[n].clone());
            }
            (e._emissionRate = this._emissionRate), (e.enbale = this.enbale);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'destroyed', function() {
            return this._destroyed;
          }),
          r(
            0,
            e,
            'emissionRate',
            function() {
              return this._emissionRate;
            },
            function(t) {
              if (t < 0)
                throw new Error(
                  'ParticleBaseShape:emissionRate value must large or equal than 0.'
                );
              this._emissionRate = t;
            }
          ),
          t
        );
      })(),
      q = (function() {
        function t() {
          (this._type = 0),
            (this._constant = 0),
            (this._overTime = null),
            (this._constantMin = 0),
            (this._constantMax = 0),
            (this._overTimeMin = null),
            (this._overTimeMax = null);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.FrameOverTime');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            (e._type = this._type),
              (e._constant = this._constant),
              this._overTime.cloneTo(e._overTime),
              (e._constantMin = this._constantMin),
              (e._constantMax = this._constantMax),
              this._overTimeMin.cloneTo(e._overTimeMin),
              this._overTimeMax.cloneTo(e._overTimeMax);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'frameOverTimeData', function() {
            return this._overTime;
          }),
          r(0, e, 'constant', function() {
            return this._constant;
          }),
          r(0, e, 'type', function() {
            return this._type;
          }),
          r(0, e, 'frameOverTimeDataMin', function() {
            return this._overTimeMin;
          }),
          r(0, e, 'constantMin', function() {
            return this._constantMin;
          }),
          r(0, e, 'frameOverTimeDataMax', function() {
            return this._overTimeMax;
          }),
          r(0, e, 'constantMax', function() {
            return this._constantMax;
          }),
          (t.createByConstant = function(e) {
            var i = new t();
            return (i._type = 0), (i._constant = e), i;
          }),
          (t.createByOverTime = function(e) {
            var i = new t();
            return (i._type = 1), (i._overTime = e), i;
          }),
          (t.createByRandomTwoConstant = function(e, i) {
            var n = new t();
            return (n._type = 2), (n._constantMin = e), (n._constantMax = i), n;
          }),
          (t.createByRandomTwoOverTime = function(e, i) {
            var n = new t();
            return (n._type = 3), (n._overTimeMin = e), (n._overTimeMax = i), n;
          }),
          t
        );
      })(),
      Y = (function() {
        function t() {
          (this._type = 0),
            (this._separateAxes = !1),
            (this._constant = NaN),
            (this._constantSeparate = null),
            (this._gradient = null),
            (this._gradientX = null),
            (this._gradientY = null),
            (this._gradientZ = null),
            (this._gradientW = null),
            (this._constantMin = NaN),
            (this._constantMax = NaN),
            (this._constantMinSeparate = null),
            (this._constantMaxSeparate = null),
            (this._gradientMin = null),
            (this._gradientMax = null),
            (this._gradientXMin = null),
            (this._gradientXMax = null),
            (this._gradientYMin = null),
            (this._gradientYMax = null),
            (this._gradientZMin = null),
            (this._gradientZMax = null),
            (this._gradientWMin = null),
            (this._gradientWMax = null);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.GradientAngularVelocity');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            (e._type = this._type),
              (e._separateAxes = this._separateAxes),
              (e._constant = this._constant),
              this._constantSeparate.cloneTo(e._constantSeparate),
              this._gradient.cloneTo(e._gradient),
              this._gradientX.cloneTo(e._gradientX),
              this._gradientY.cloneTo(e._gradientY),
              this._gradientZ.cloneTo(e._gradientZ),
              (e._constantMin = this._constantMin),
              (e._constantMax = this._constantMax),
              this._constantMinSeparate.cloneTo(e._constantMinSeparate),
              this._constantMaxSeparate.cloneTo(e._constantMaxSeparate),
              this._gradientMin.cloneTo(e._gradientMin),
              this._gradientMax.cloneTo(e._gradientMax),
              this._gradientXMin.cloneTo(e._gradientXMin),
              this._gradientXMax.cloneTo(e._gradientXMax),
              this._gradientYMin.cloneTo(e._gradientYMin),
              this._gradientYMax.cloneTo(e._gradientYMax),
              this._gradientZMin.cloneTo(e._gradientZMin),
              this._gradientZMax.cloneTo(e._gradientZMax);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'gradientZ', function() {
            return this._gradientZ;
          }),
          r(0, e, 'constant', function() {
            return this._constant;
          }),
          r(0, e, 'gradient', function() {
            return this._gradient;
          }),
          r(0, e, 'separateAxes', function() {
            return this._separateAxes;
          }),
          r(0, e, 'type', function() {
            return this._type;
          }),
          r(0, e, 'constantSeparate', function() {
            return this._constantSeparate;
          }),
          r(0, e, 'gradientX', function() {
            return this._gradientX;
          }),
          r(0, e, 'gradientY', function() {
            return this._gradientY;
          }),
          r(0, e, 'gradientW', function() {
            return this._gradientW;
          }),
          r(0, e, 'gradientMin', function() {
            return this._gradientMin;
          }),
          r(0, e, 'constantMin', function() {
            return this._constantMin;
          }),
          r(0, e, 'gradientMax', function() {
            return this._gradientMax;
          }),
          r(0, e, 'constantMax', function() {
            return this._constantMax;
          }),
          r(0, e, 'gradientWMin', function() {
            return this._gradientWMin;
          }),
          r(0, e, 'constantMinSeparate', function() {
            return this._constantMinSeparate;
          }),
          r(0, e, 'constantMaxSeparate', function() {
            return this._constantMaxSeparate;
          }),
          r(0, e, 'gradientXMin', function() {
            return this._gradientXMin;
          }),
          r(0, e, 'gradientXMax', function() {
            return this._gradientXMax;
          }),
          r(0, e, 'gradientWMax', function() {
            return this._gradientWMax;
          }),
          r(0, e, 'gradientYMin', function() {
            return this._gradientYMin;
          }),
          r(0, e, 'gradientYMax', function() {
            return this._gradientYMax;
          }),
          r(0, e, 'gradientZMin', function() {
            return this._gradientZMin;
          }),
          r(0, e, 'gradientZMax', function() {
            return this._gradientZMax;
          }),
          (t.createByConstant = function(e) {
            var i = new t();
            return (i._type = 0), (i._separateAxes = !1), (i._constant = e), i;
          }),
          (t.createByConstantSeparate = function(e) {
            var i = new t();
            return (
              (i._type = 0),
              (i._separateAxes = !0),
              (i._constantSeparate = e),
              i
            );
          }),
          (t.createByGradient = function(e) {
            var i = new t();
            return (i._type = 1), (i._separateAxes = !1), (i._gradient = e), i;
          }),
          (t.createByGradientSeparate = function(e, i, n, a) {
            var r = new t();
            return (
              (r._type = 1),
              (r._separateAxes = !0),
              (r._gradientX = e),
              (r._gradientY = i),
              (r._gradientZ = n),
              (r._gradientW = a),
              r
            );
          }),
          (t.createByRandomTwoConstant = function(e, i) {
            var n = new t();
            return (
              (n._type = 2),
              (n._separateAxes = !1),
              (n._constantMin = e),
              (n._constantMax = i),
              n
            );
          }),
          (t.createByRandomTwoConstantSeparate = function(e, i) {
            var n = new t();
            return (
              (n._type = 2),
              (n._separateAxes = !0),
              (n._constantMinSeparate = e),
              (n._constantMaxSeparate = i),
              n
            );
          }),
          (t.createByRandomTwoGradient = function(e, i) {
            var n = new t();
            return (
              (n._type = 3),
              (n._separateAxes = !1),
              (n._gradientMin = e),
              (n._gradientMax = i),
              n
            );
          }),
          (t.createByRandomTwoGradientSeparate = function(
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l
          ) {
            var h = new t();
            return (
              (h._type = 3),
              (h._separateAxes = !0),
              (h._gradientXMin = e),
              (h._gradientXMax = i),
              (h._gradientYMin = n),
              (h._gradientYMax = a),
              (h._gradientZMin = r),
              (h._gradientZMax = s),
              (h._gradientWMin = o),
              (h._gradientWMax = l),
              h
            );
          }),
          t
        );
      })(),
      J = (function() {
        function t() {
          (this._type = 0),
            (this._constant = null),
            (this._constantMin = null),
            (this._constantMax = null),
            (this._gradient = null),
            (this._gradientMin = null),
            (this._gradientMax = null);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.GradientColor');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            (e._type = this._type),
              this._constant.cloneTo(e._constant),
              this._constantMin.cloneTo(e._constantMin),
              this._constantMax.cloneTo(e._constantMax),
              this._gradient.cloneTo(e._gradient),
              this._gradientMin.cloneTo(e._gradientMin),
              this._gradientMax.cloneTo(e._gradientMax);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'gradient', function() {
            return this._gradient;
          }),
          r(0, e, 'constant', function() {
            return this._constant;
          }),
          r(0, e, 'type', function() {
            return this._type;
          }),
          r(0, e, 'gradientMin', function() {
            return this._gradientMin;
          }),
          r(0, e, 'constantMin', function() {
            return this._constantMin;
          }),
          r(0, e, 'gradientMax', function() {
            return this._gradientMax;
          }),
          r(0, e, 'constantMax', function() {
            return this._constantMax;
          }),
          (t.createByConstant = function(e) {
            var i = new t();
            return (i._type = 0), (i._constant = e), i;
          }),
          (t.createByGradient = function(e) {
            var i = new t();
            return (i._type = 1), (i._gradient = e), i;
          }),
          (t.createByRandomTwoConstant = function(e, i) {
            var n = new t();
            return (n._type = 2), (n._constantMin = e), (n._constantMax = i), n;
          }),
          (t.createByRandomTwoGradient = function(e, i) {
            var n = new t();
            return (n._type = 3), (n._gradientMin = e), (n._gradientMax = i), n;
          }),
          t
        );
      })(),
      K = (function() {
        function t() {
          (this._alphaCurrentLength = 0),
            (this._rgbCurrentLength = 0),
            (this._alphaElements = null),
            (this._rgbElements = null),
            (this._alphaElements = new Float32Array(8)),
            (this._rgbElements = new Float32Array(16));
        }
        a(t, 'laya.d3.core.particleShuriKen.module.GradientDataColor');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.addAlpha = function(t, e) {
            this._alphaCurrentLength < 8
              ? (6 === this._alphaCurrentLength &&
                  1 !== t &&
                  ((t = 1),
                  console.log(
                    'GradientDataColor warning:the forth key is  be force set to 1.'
                  )),
                (this._alphaElements[this._alphaCurrentLength++] = t),
                (this._alphaElements[this._alphaCurrentLength++] = e))
              : console.log(
                  'GradientDataColor warning:data count must lessEqual than 4'
                );
          }),
          (e.addRGB = function(t, e) {
            this._rgbCurrentLength < 16
              ? (12 === this._rgbCurrentLength &&
                  1 !== t &&
                  ((t = 1),
                  console.log(
                    'GradientDataColor warning:the forth key is  be force set to 1.'
                  )),
                (this._rgbElements[this._rgbCurrentLength++] = t),
                (this._rgbElements[this._rgbCurrentLength++] = e.x),
                (this._rgbElements[this._rgbCurrentLength++] = e.y),
                (this._rgbElements[this._rgbCurrentLength++] = e.z))
              : console.log(
                  'GradientDataColor warning:data count must lessEqual than 4'
                );
          }),
          (e.cloneTo = function(t) {
            var e = t,
              i = 0,
              n = 0;
            e._alphaCurrentLength = this._alphaCurrentLength;
            var a = e._alphaElements;
            for (
              a.length = this._alphaElements.length,
                i = 0,
                n = this._alphaElements.length;
              i < n;
              i++
            )
              a[i] = this._alphaElements[i];
            e._rgbCurrentLength = this._rgbCurrentLength;
            var r = e._rgbElements;
            for (
              r.length = this._rgbElements.length,
                i = 0,
                n = this._rgbElements.length;
              i < n;
              i++
            )
              r[i] = this._rgbElements[i];
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'alphaGradientCount', function() {
            return this._alphaCurrentLength / 2;
          }),
          r(0, e, 'rgbGradientCount', function() {
            return this._rgbCurrentLength / 4;
          }),
          t
        );
      })(),
      Z = (function() {
        function t() {
          (this._currentLength = 0),
            (this._elements = null),
            (this._elements = new Float32Array(8));
        }
        a(t, 'laya.d3.core.particleShuriKen.module.GradientDataInt');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.add = function(t, e) {
            this._currentLength < 8
              ? (6 === this._currentLength &&
                  1 !== t &&
                  ((t = 1),
                  console.log('Warning:the forth key is  be force set to 1.')),
                (this._elements[this._currentLength++] = t),
                (this._elements[this._currentLength++] = e))
              : console.log('Warning:data count must lessEqual than 4');
          }),
          (e.cloneTo = function(t) {
            var e = t;
            e._currentLength = this._currentLength;
            var i = e._elements;
            i.length = this._elements.length;
            for (var n = 0, a = this._elements.length; n < a; n++)
              i[n] = this._elements[n];
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'gradientCount', function() {
            return this._currentLength / 2;
          }),
          t
        );
      })(),
      Q = (function() {
        function t() {
          (this._currentLength = 0),
            (this._elements = null),
            (this._elements = new Float32Array(8));
        }
        a(t, 'laya.d3.core.particleShuriKen.module.GradientDataNumber');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.add = function(t, e) {
            this._currentLength < 8
              ? (6 === this._currentLength &&
                  1 !== t &&
                  ((t = 1),
                  console.log(
                    'GradientDataNumber warning:the forth key is  be force set to 1.'
                  )),
                (this._elements[this._currentLength++] = t),
                (this._elements[this._currentLength++] = e))
              : console.log(
                  'GradientDataNumber warning:data count must lessEqual than 4'
                );
          }),
          (e.getKeyByIndex = function(t) {
            return this._elements[2 * t];
          }),
          (e.getValueByIndex = function(t) {
            return this._elements[2 * t + 1];
          }),
          (e.getAverageValue = function() {
            for (var t = 0, e = this._currentLength - 2; t < e; t += 2) {
              this._elements[t + 1];
              this._elements[t + 3], this._elements[t + 2] - this._elements[t];
            }
            return 0;
          }),
          (e.cloneTo = function(t) {
            var e = t;
            e._currentLength = this._currentLength;
            var i = e._elements;
            i.length = this._elements.length;
            for (var n = 0, a = this._elements.length; n < a; n++)
              i[n] = this._elements[n];
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'gradientCount', function() {
            return this._currentLength / 2;
          }),
          t
        );
      })(),
      $ =
        ((function() {
          function t() {
            (this._currentLength = 0),
              (this._elements = null),
              (this._elements = new Float32Array(12));
          }
          a(t, 'laya.d3.core.particleShuriKen.module.GradientDataVector2');
          var e = t.prototype;
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
            (e.add = function(t, e) {
              this._currentLength < 8
                ? (6 === this._currentLength &&
                    1 !== t &&
                    ((t = 1),
                    console.log(
                      'GradientDataVector2 warning:the forth key is  be force set to 1.'
                    )),
                  (this._elements[this._currentLength++] = t),
                  (this._elements[this._currentLength++] = e.x),
                  (this._elements[this._currentLength++] = e.y))
                : console.log(
                    'GradientDataVector2 warning:data count must lessEqual than 4'
                  );
            }),
            (e.cloneTo = function(t) {
              var e = t;
              e._currentLength = this._currentLength;
              var i = e._elements;
              i.length = this._elements.length;
              for (var n = 0, a = this._elements.length; n < a; n++)
                i[n] = this._elements[n];
            }),
            (e.clone = function() {
              var t = new this.constructor();
              return this.cloneTo(t), t;
            }),
            r(0, e, 'gradientCount', function() {
              return this._currentLength / 3;
            });
        })(),
        (function() {
          function t() {
            (this._type = 0),
              (this._separateAxes = !1),
              (this._gradient = null),
              (this._gradientX = null),
              (this._gradientY = null),
              (this._gradientZ = null),
              (this._constantMin = NaN),
              (this._constantMax = NaN),
              (this._constantMinSeparate = null),
              (this._constantMaxSeparate = null),
              (this._gradientMin = null),
              (this._gradientMax = null),
              (this._gradientXMin = null),
              (this._gradientXMax = null),
              (this._gradientYMin = null),
              (this._gradientYMax = null),
              (this._gradientZMin = null),
              (this._gradientZMax = null);
          }
          a(t, 'laya.d3.core.particleShuriKen.module.GradientSize');
          var e = t.prototype;
          return (
            i.imps(e, { 'laya.d3.core.IClone': !0 }),
            (e.getMaxSizeInGradient = function() {
              var t = 0,
                e = 0,
                i = -Number.MAX_VALUE;
              switch (this._type) {
                case 0:
                  if (this._separateAxes) {
                    for (t = 0, e = this._gradientX.gradientCount; t < e; t++)
                      i = Math.max(i, this._gradientX.getValueByIndex(t));
                    for (t = 0, e = this._gradientY.gradientCount; t < e; t++)
                      i = Math.max(i, this._gradientY.getValueByIndex(t));
                  } else
                    for (t = 0, e = this._gradient.gradientCount; t < e; t++)
                      i = Math.max(i, this._gradient.getValueByIndex(t));
                  break;
                case 1:
                  this._separateAxes
                    ? ((i = Math.max(
                        this._constantMinSeparate.x,
                        this._constantMaxSeparate.x
                      )),
                      (i = Math.max(i, this._constantMinSeparate.y)),
                      (i = Math.max(i, this._constantMaxSeparate.y)))
                    : (i = Math.max(this._constantMin, this._constantMax));
                  break;
                case 2:
                  if (this._separateAxes) {
                    for (
                      t = 0, e = this._gradientXMin.gradientCount;
                      t < e;
                      t++
                    )
                      i = Math.max(i, this._gradientXMin.getValueByIndex(t));
                    for (
                      t = 0, e = this._gradientXMax.gradientCount;
                      t < e;
                      t++
                    )
                      i = Math.max(i, this._gradientXMax.getValueByIndex(t));
                    for (
                      t = 0, e = this._gradientYMin.gradientCount;
                      t < e;
                      t++
                    )
                      i = Math.max(i, this._gradientYMin.getValueByIndex(t));
                    for (
                      t = 0, e = this._gradientZMax.gradientCount;
                      t < e;
                      t++
                    )
                      i = Math.max(i, this._gradientZMax.getValueByIndex(t));
                  } else {
                    for (t = 0, e = this._gradientMin.gradientCount; t < e; t++)
                      i = Math.max(i, this._gradientMin.getValueByIndex(t));
                    for (t = 0, e = this._gradientMax.gradientCount; t < e; t++)
                      i = Math.max(i, this._gradientMax.getValueByIndex(t));
                  }
              }
              return i;
            }),
            (e.cloneTo = function(t) {
              var e = t;
              (e._type = this._type),
                (e._separateAxes = this._separateAxes),
                this._gradient.cloneTo(e._gradient),
                this._gradientX.cloneTo(e._gradientX),
                this._gradientY.cloneTo(e._gradientY),
                this._gradientZ.cloneTo(e._gradientZ),
                (e._constantMin = this._constantMin),
                (e._constantMax = this._constantMax),
                this._constantMinSeparate.cloneTo(e._constantMinSeparate),
                this._constantMaxSeparate.cloneTo(e._constantMaxSeparate),
                this._gradientMin.cloneTo(e._gradientMin),
                this._gradientMax.cloneTo(e._gradientMax),
                this._gradientXMin.cloneTo(e._gradientXMin),
                this._gradientXMax.cloneTo(e._gradientXMax),
                this._gradientYMin.cloneTo(e._gradientYMin),
                this._gradientYMax.cloneTo(e._gradientYMax),
                this._gradientZMin.cloneTo(e._gradientZMin),
                this._gradientZMax.cloneTo(e._gradientZMax);
            }),
            (e.clone = function() {
              var t = new this.constructor();
              return this.cloneTo(t), t;
            }),
            r(0, e, 'gradientZ', function() {
              return this._gradientZ;
            }),
            r(0, e, 'gradient', function() {
              return this._gradient;
            }),
            r(0, e, 'separateAxes', function() {
              return this._separateAxes;
            }),
            r(0, e, 'type', function() {
              return this._type;
            }),
            r(0, e, 'gradientMin', function() {
              return this._gradientMin;
            }),
            r(0, e, 'constantMin', function() {
              return this._constantMin;
            }),
            r(0, e, 'gradientX', function() {
              return this._gradientX;
            }),
            r(0, e, 'gradientY', function() {
              return this._gradientY;
            }),
            r(0, e, 'gradientMax', function() {
              return this._gradientMax;
            }),
            r(0, e, 'constantMax', function() {
              return this._constantMax;
            }),
            r(0, e, 'constantMinSeparate', function() {
              return this._constantMinSeparate;
            }),
            r(0, e, 'constantMaxSeparate', function() {
              return this._constantMaxSeparate;
            }),
            r(0, e, 'gradientXMin', function() {
              return this._gradientXMin;
            }),
            r(0, e, 'gradientXMax', function() {
              return this._gradientXMax;
            }),
            r(0, e, 'gradientYMin', function() {
              return this._gradientYMin;
            }),
            r(0, e, 'gradientYMax', function() {
              return this._gradientYMax;
            }),
            r(0, e, 'gradientZMin', function() {
              return this._gradientZMin;
            }),
            r(0, e, 'gradientZMax', function() {
              return this._gradientZMax;
            }),
            (t.createByGradient = function(e) {
              var i = new t();
              return (
                (i._type = 0), (i._separateAxes = !1), (i._gradient = e), i
              );
            }),
            (t.createByGradientSeparate = function(e, i, n) {
              var a = new t();
              return (
                (a._type = 0),
                (a._separateAxes = !0),
                (a._gradientX = e),
                (a._gradientY = i),
                (a._gradientZ = n),
                a
              );
            }),
            (t.createByRandomTwoConstant = function(e, i) {
              var n = new t();
              return (
                (n._type = 1),
                (n._separateAxes = !1),
                (n._constantMin = e),
                (n._constantMax = i),
                n
              );
            }),
            (t.createByRandomTwoConstantSeparate = function(e, i) {
              var n = new t();
              return (
                (n._type = 1),
                (n._separateAxes = !0),
                (n._constantMinSeparate = e),
                (n._constantMaxSeparate = i),
                n
              );
            }),
            (t.createByRandomTwoGradient = function(e, i) {
              var n = new t();
              return (
                (n._type = 2),
                (n._separateAxes = !1),
                (n._gradientMin = e),
                (n._gradientMax = i),
                n
              );
            }),
            (t.createByRandomTwoGradientSeparate = function(e, i, n, a, r, s) {
              var o = new t();
              return (
                (o._type = 2),
                (o._separateAxes = !0),
                (o._gradientXMin = e),
                (o._gradientXMax = i),
                (o._gradientYMin = n),
                (o._gradientYMax = a),
                (o._gradientZMin = r),
                (o._gradientZMax = s),
                o
              );
            }),
            t
          );
        })()),
      tt = (function() {
        function t() {
          (this._type = 0),
            (this._constant = null),
            (this._gradientX = null),
            (this._gradientY = null),
            (this._gradientZ = null),
            (this._constantMin = null),
            (this._constantMax = null),
            (this._gradientXMin = null),
            (this._gradientXMax = null),
            (this._gradientYMin = null),
            (this._gradientYMax = null),
            (this._gradientZMin = null),
            (this._gradientZMax = null);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.GradientVelocity');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            (e._type = this._type),
              this._constant.cloneTo(e._constant),
              this._gradientX.cloneTo(e._gradientX),
              this._gradientY.cloneTo(e._gradientY),
              this._gradientZ.cloneTo(e._gradientZ),
              this._constantMin.cloneTo(e._constantMin),
              this._constantMax.cloneTo(e._constantMax),
              this._gradientXMin.cloneTo(e._gradientXMin),
              this._gradientXMax.cloneTo(e._gradientXMax),
              this._gradientYMin.cloneTo(e._gradientYMin),
              this._gradientYMax.cloneTo(e._gradientYMax),
              this._gradientZMin.cloneTo(e._gradientZMin),
              this._gradientZMax.cloneTo(e._gradientZMax);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'gradientZ', function() {
            return this._gradientZ;
          }),
          r(0, e, 'constant', function() {
            return this._constant;
          }),
          r(0, e, 'type', function() {
            return this._type;
          }),
          r(0, e, 'gradientXMax', function() {
            return this._gradientXMax;
          }),
          r(0, e, 'constantMin', function() {
            return this._constantMin;
          }),
          r(0, e, 'gradientX', function() {
            return this._gradientX;
          }),
          r(0, e, 'gradientY', function() {
            return this._gradientY;
          }),
          r(0, e, 'gradientXMin', function() {
            return this._gradientXMin;
          }),
          r(0, e, 'constantMax', function() {
            return this._constantMax;
          }),
          r(0, e, 'gradientYMin', function() {
            return this._gradientYMin;
          }),
          r(0, e, 'gradientYMax', function() {
            return this._gradientYMax;
          }),
          r(0, e, 'gradientZMin', function() {
            return this._gradientZMin;
          }),
          r(0, e, 'gradientZMax', function() {
            return this._gradientZMax;
          }),
          (t.createByConstant = function(e) {
            var i = new t();
            return (i._type = 0), (i._constant = e), i;
          }),
          (t.createByGradient = function(e, i, n) {
            var a = new t();
            return (
              (a._type = 1),
              (a._gradientX = e),
              (a._gradientY = i),
              (a._gradientZ = n),
              a
            );
          }),
          (t.createByRandomTwoConstant = function(e, i) {
            var n = new t();
            return (n._type = 2), (n._constantMin = e), (n._constantMax = i), n;
          }),
          (t.createByRandomTwoGradient = function(e, i, n, a, r, s) {
            var o = new t();
            return (
              (o._type = 3),
              (o._gradientXMin = e),
              (o._gradientXMax = i),
              (o._gradientYMin = n),
              (o._gradientYMax = a),
              (o._gradientZMin = r),
              (o._gradientZMax = s),
              o
            );
          }),
          t
        );
      })(),
      et = (function() {
        function t(t) {
          (this._angularVelocity = null),
            (this.enbale = !1),
            (this._angularVelocity = t);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.RotationOverLifetime');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            this._angularVelocity.cloneTo(e._angularVelocity),
              (e.enbale = this.enbale);
          }),
          (e.clone = function() {
            var t;
            switch (this._angularVelocity.type) {
              case 0:
                t = this._angularVelocity.separateAxes
                  ? Y.createByConstantSeparate(
                      this._angularVelocity.constantSeparate.clone()
                    )
                  : Y.createByConstant(this._angularVelocity.constant);
                break;
              case 1:
                t = this._angularVelocity.separateAxes
                  ? Y.createByGradientSeparate(
                      this._angularVelocity.gradientX.clone(),
                      this._angularVelocity.gradientY.clone(),
                      this._angularVelocity.gradientZ.clone(),
                      this._angularVelocity.gradientW.clone()
                    )
                  : Y.createByGradient(this._angularVelocity.gradient.clone());
                break;
              case 2:
                t = this._angularVelocity.separateAxes
                  ? Y.createByRandomTwoConstantSeparate(
                      this._angularVelocity.constantMinSeparate.clone(),
                      this._angularVelocity.constantMaxSeparate.clone()
                    )
                  : Y.createByRandomTwoConstant(
                      this._angularVelocity.constantMin,
                      this._angularVelocity.constantMax
                    );
                break;
              case 3:
                t = this._angularVelocity.separateAxes
                  ? Y.createByRandomTwoGradientSeparate(
                      this._angularVelocity.gradientXMin.clone(),
                      this._angularVelocity.gradientYMin.clone(),
                      this._angularVelocity.gradientZMin.clone(),
                      this._angularVelocity.gradientWMin.clone(),
                      this._angularVelocity.gradientXMax.clone(),
                      this._angularVelocity.gradientYMax.clone(),
                      this._angularVelocity.gradientZMax.clone(),
                      this._angularVelocity.gradientWMax.clone()
                    )
                  : Y.createByRandomTwoGradient(
                      this._angularVelocity.gradientMin.clone(),
                      this._angularVelocity.gradientMax.clone()
                    );
            }
            var e = new this.constructor(t);
            return (e.enbale = this.enbale), e;
          }),
          r(0, e, 'angularVelocity', function() {
            return this._angularVelocity;
          }),
          t
        );
      })(),
      it = (function() {
        function t() {
          (this.enable = !1), (this.randomDirection = !1);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.shape.BaseShape');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e._getShapeBoundBox = function(t) {
            throw new Error('BaseShape: must override it.');
          }),
          (e._getSpeedBoundBox = function(t) {
            throw new Error('BaseShape: must override it.');
          }),
          (e.generatePositionAndDirection = function(t, e, i, n) {
            throw new Error('BaseShape: must override it.');
          }),
          (e._calculateProceduralBounds = function(t, e, i) {
            this._getShapeBoundBox(t);
            var n = t.min,
              a = t.max;
            Re.multiply(n, e, n), Re.multiply(a, e, a);
            var r = new be(new Re(), new Re());
            this.randomDirection
              ? ((r.min = new Re(-1, -1, -1)), (r.max = new Re(1, 1, 1)))
              : this._getSpeedBoundBox(r);
            var s = new be(new Re(), new Re()),
              o = s.min,
              l = s.max;
            Re.scale(r.min, i.y, o),
              Re.scale(r.max, i.y, l),
              Re.add(t.min, o, o),
              Re.add(t.max, l, l),
              Re.min(t.min, o, t.min),
              Re.max(t.max, o, t.max);
            var h = new be(new Re(), new Re()),
              c = h.min,
              u = h.max;
            Re.scale(r.min, i.x, c),
              Re.scale(r.max, i.x, u),
              Re.min(h.min, u, o),
              Re.max(h.min, u, l),
              Re.min(t.min, o, t.min),
              Re.max(t.max, o, t.max);
          }),
          (e.cloneTo = function(t) {
            t.enable = this.enable;
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          t
        );
      })(),
      nt = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.core.particleShuriKen.module.shape.ShapeUtils'),
          (t._randomPointUnitArcCircle = function(t, e, i) {
            var n = e.elements,
              a = NaN;
            (a = i ? i.getFloat() * t : Math.random() * t),
              (n[0] = Math.cos(a)),
              (n[1] = Math.sin(a));
          }),
          (t._randomPointInsideUnitArcCircle = function(e, i, n) {
            var a = i.elements;
            t._randomPointUnitArcCircle(e, i, n);
            var r = NaN;
            (r = n
              ? Math.pow(n.getFloat(), 0.5)
              : Math.pow(Math.random(), 0.5)),
              (a[0] = a[0] * r),
              (a[1] = a[1] * r);
          }),
          (t._randomPointUnitCircle = function(t, e) {
            var i = t.elements,
              n = NaN;
            (n = e ? e.getFloat() * Math.PI * 2 : Math.random() * Math.PI * 2),
              (i[0] = Math.cos(n)),
              (i[1] = Math.sin(n));
          }),
          (t._randomPointInsideUnitCircle = function(e, i) {
            var n = e.elements;
            t._randomPointUnitCircle(e);
            var a = NaN;
            (a = i
              ? Math.pow(i.getFloat(), 0.5)
              : Math.pow(Math.random(), 0.5)),
              (n[0] = n[0] * a),
              (n[1] = n[1] * a);
          }),
          (t._randomPointUnitSphere = function(t, e) {
            var i = t.elements,
              n = NaN,
              a = NaN;
            e
              ? ((n = i[2] = 2 * e.getFloat() - 1),
                (a = e.getFloat() * Math.PI * 2))
              : ((n = i[2] = 2 * Math.random() - 1),
                (a = Math.random() * Math.PI * 2));
            var r = Math.sqrt(1 - n * n);
            (i[0] = r * Math.cos(a)), (i[1] = r * Math.sin(a));
          }),
          (t._randomPointInsideUnitSphere = function(e, i) {
            var n = e.elements;
            t._randomPointUnitSphere(e);
            var a = NaN;
            (a = i
              ? Math.pow(i.getFloat(), 1 / 3)
              : Math.pow(Math.random(), 1 / 3)),
              (n[0] = n[0] * a),
              (n[1] = n[1] * a),
              (n[2] = n[2] * a);
          }),
          (t._randomPointInsideHalfUnitBox = function(t, e) {
            var i = t.elements;
            e
              ? ((i[0] = e.getFloat() - 0.5),
                (i[1] = e.getFloat() - 0.5),
                (i[2] = e.getFloat() - 0.5))
              : ((i[0] = Math.random() - 0.5),
                (i[1] = Math.random() - 0.5),
                (i[2] = Math.random() - 0.5));
          }),
          t
        );
      })(),
      at = (function() {
        function t(t) {
          (this._size = null), (this.enbale = !1), (this._size = t);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.SizeOverLifetime');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            this._size.cloneTo(e._size), (e.enbale = this.enbale);
          }),
          (e.clone = function() {
            var t;
            switch (this._size.type) {
              case 0:
                t = this._size.separateAxes
                  ? $.createByGradientSeparate(
                      this._size.gradientX.clone(),
                      this._size.gradientY.clone(),
                      this._size.gradientZ.clone()
                    )
                  : $.createByGradient(this._size.gradient.clone());
                break;
              case 1:
                t = this._size.separateAxes
                  ? $.createByRandomTwoConstantSeparate(
                      this._size.constantMinSeparate.clone(),
                      this._size.constantMaxSeparate.clone()
                    )
                  : $.createByRandomTwoConstant(
                      this._size.constantMin,
                      this._size.constantMax
                    );
                break;
              case 2:
                t = this._size.separateAxes
                  ? $.createByRandomTwoGradientSeparate(
                      this._size.gradientXMin.clone(),
                      this._size.gradientYMin.clone(),
                      this._size.gradientZMin.clone(),
                      this._size.gradientXMax.clone(),
                      this._size.gradientYMax.clone(),
                      this._size.gradientZMax.clone()
                    )
                  : $.createByRandomTwoGradient(
                      this._size.gradientMin.clone(),
                      this._size.gradientMax.clone()
                    );
            }
            var e = new this.constructor(t);
            return (e.enbale = this.enbale), e;
          }),
          r(0, e, 'size', function() {
            return this._size;
          }),
          t
        );
      })(),
      rt = (function() {
        function t() {
          (this._type = 0),
            (this._constant = NaN),
            (this._constantMin = NaN),
            (this._constantMax = NaN);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.StartFrame');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            (e._type = this._type),
              (e._constant = this._constant),
              (e._constantMin = this._constantMin),
              (e._constantMax = this._constantMax);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(0, e, 'constant', function() {
            return this._constant;
          }),
          r(0, e, 'type', function() {
            return this._type;
          }),
          r(0, e, 'constantMin', function() {
            return this._constantMin;
          }),
          r(0, e, 'constantMax', function() {
            return this._constantMax;
          }),
          (t.createByConstant = function(e) {
            var i = new t();
            return (i._type = 0), (i._constant = e), i;
          }),
          (t.createByRandomTwoConstant = function(e, i) {
            var n = new t();
            return (n._type = 1), (n._constantMin = e), (n._constantMax = i), n;
          }),
          t
        );
      })(),
      st = (function() {
        function t(t, e) {
          (this._frame = null),
            (this._startFrame = null),
            (this.tiles = null),
            (this.type = 0),
            (this.randomRow = !1),
            (this.rowIndex = 0),
            (this.cycles = 0),
            (this.enableUVChannels = 0),
            (this.enable = !1),
            (this.tiles = new Ne(1, 1)),
            (this.type = 0),
            (this.randomRow = !0),
            (this.rowIndex = 0),
            (this.cycles = 1),
            (this.enableUVChannels = 1),
            (this._frame = t),
            (this._startFrame = e);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.TextureSheetAnimation');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            this.tiles.cloneTo(e.tiles),
              (e.type = this.type),
              (e.randomRow = this.randomRow),
              this._frame.cloneTo(e._frame),
              this._startFrame.cloneTo(e._startFrame),
              (e.cycles = this.cycles),
              (e.enableUVChannels = this.enableUVChannels),
              (e.enable = this.enable);
          }),
          (e.clone = function() {
            var t;
            switch (this._frame.type) {
              case 0:
                t = q.createByConstant(this._frame.constant);
                break;
              case 1:
                t = q.createByOverTime(this._frame.frameOverTimeData.clone());
                break;
              case 2:
                t = q.createByRandomTwoConstant(
                  this._frame.constantMin,
                  this._frame.constantMax
                );
                break;
              case 3:
                t = q.createByRandomTwoOverTime(
                  this._frame.frameOverTimeDataMin.clone(),
                  this._frame.frameOverTimeDataMax.clone()
                );
            }
            var e;
            switch (this._startFrame.type) {
              case 0:
                e = rt.createByConstant(this._startFrame.constant);
                break;
              case 1:
                e = rt.createByRandomTwoConstant(
                  this._startFrame.constantMin,
                  this._startFrame.constantMax
                );
            }
            var i = new this.constructor(t, e);
            return (
              this.tiles.cloneTo(i.tiles),
              (i.type = this.type),
              (i.randomRow = this.randomRow),
              (i.cycles = this.cycles),
              (i.enableUVChannels = this.enableUVChannels),
              (i.enable = this.enable),
              i
            );
          }),
          r(0, e, 'frame', function() {
            return this._frame;
          }),
          r(0, e, 'startFrame', function() {
            return this._startFrame;
          }),
          t
        );
      })(),
      ot = (function() {
        function t(t) {
          (this._velocity = null),
            (this.enbale = !1),
            (this.space = 0),
            (this._velocity = t);
        }
        a(t, 'laya.d3.core.particleShuriKen.module.VelocityOverLifetime');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.cloneTo = function(t) {
            var e = t;
            this._velocity.cloneTo(e._velocity),
              (e.enbale = this.enbale),
              (e.space = this.space);
          }),
          (e.clone = function() {
            var t;
            switch (this._velocity.type) {
              case 0:
                t = tt.createByConstant(this._velocity.constant.clone());
                break;
              case 1:
                t = tt.createByGradient(
                  this._velocity.gradientX.clone(),
                  this._velocity.gradientY.clone(),
                  this._velocity.gradientZ.clone()
                );
                break;
              case 2:
                t = tt.createByRandomTwoConstant(
                  this._velocity.constantMin.clone(),
                  this._velocity.constantMax.clone()
                );
                break;
              case 3:
                t = tt.createByRandomTwoGradient(
                  this._velocity.gradientXMin.clone(),
                  this._velocity.gradientYMin.clone(),
                  this._velocity.gradientZMin.clone(),
                  this._velocity.gradientXMax.clone(),
                  this._velocity.gradientYMax.clone(),
                  this._velocity.gradientZMax.clone()
                );
            }
            var e = new this.constructor(t);
            return (e.enbale = this.enbale), (e.space = this.space), e;
          }),
          r(0, e, 'velocity', function() {
            return this._velocity;
          }),
          t
        );
      })(),
      lt = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.core.particleShuriKen.ShurikenParticleData'),
          (t._getStartLifetimeFromGradient = function(t, e) {
            for (var i = 1, n = t.gradientCount; i < n; i++) {
              var a = t.getKeyByIndex(i);
              if (a >= e) {
                var r = t.getKeyByIndex(i - 1),
                  s = (e - r) / (a - r);
                return w.lerp(
                  t.getValueByIndex(i - 1),
                  t.getValueByIndex(i),
                  s
                );
              }
            }
            throw new Error(
              "ShurikenParticleData: can't get value foam startLifeTimeGradient."
            );
          }),
          (t._randomInvertRoationArray = function(t, e, i, n, a) {
            var r = NaN;
            n
              ? ((n.seed = a[6]), (r = n.getFloat()), (a[6] = n.seed))
              : (r = Math.random()),
              r < i
                ? ((e[0] = -t[0]), (e[1] = -t[1]), (e[2] = -t[2]))
                : ((e[0] = t[0]), (e[1] = t[1]), (e[2] = t[2]));
          }),
          (t._randomInvertRoation = function(t, e, i, n) {
            var a = NaN;
            return (
              i
                ? ((i.seed = n[6]), (a = i.getFloat()), (n[6] = i.seed))
                : (a = Math.random()),
              a < e && (t = -t),
              t
            );
          }),
          (t.create = function(e, i, n) {
            var a = e.autoRandomSeed,
              r = e._rand,
              s = e._randomSeeds;
            switch (e.startColorType) {
              case 0:
                var o = e.startColorConstant.elements;
                (t.startColor[0] = o[0]),
                  (t.startColor[1] = o[1]),
                  (t.startColor[2] = o[2]),
                  (t.startColor[3] = o[3]);
                break;
              case 2:
                a
                  ? w.lerpVector4(
                      e.startColorConstantMin.elements,
                      e.startColorConstantMax.elements,
                      Math.random(),
                      t.startColor
                    )
                  : ((r.seed = s[3]),
                    w.lerpVector4(
                      e.startColorConstantMin.elements,
                      e.startColorConstantMax.elements,
                      r.getFloat(),
                      t.startColor
                    ),
                    (s[3] = r.seed));
            }
            var l = e.colorOverLifetime;
            if (l && l.enbale) {
              var h = l.color;
              switch (h.type) {
                case 0:
                  (t.startColor[0] = t.startColor[0] * h.constant.x),
                    (t.startColor[1] = t.startColor[1] * h.constant.y),
                    (t.startColor[2] = t.startColor[2] * h.constant.z),
                    (t.startColor[3] = t.startColor[3] * h.constant.w);
                  break;
                case 2:
                  var c = NaN;
                  a
                    ? (c = Math.random())
                    : ((r.seed = s[10]), (c = r.getFloat()), (s[10] = r.seed));
                  var u = h.constantMin,
                    _ = h.constantMax;
                  (t.startColor[0] = t.startColor[0] * w.lerp(u.x, _.x, c)),
                    (t.startColor[1] = t.startColor[1] * w.lerp(u.y, _.y, c)),
                    (t.startColor[2] = t.startColor[2] * w.lerp(u.z, _.z, c)),
                    (t.startColor[3] = t.startColor[3] * w.lerp(u.w, _.w, c));
              }
            }
            var d = t.startSize;
            switch (e.startSizeType) {
              case 0:
                if (e.threeDStartSize) {
                  var f = e.startSizeConstantSeparate;
                  (d[0] = f.x), (d[1] = f.y), (d[2] = f.z);
                } else d[0] = d[1] = d[2] = e.startSizeConstant;
                break;
              case 2:
                if (e.threeDStartSize) {
                  var p = e.startSizeConstantMinSeparate,
                    m = e.startSizeConstantMaxSeparate;
                  a
                    ? ((d[0] = w.lerp(p.x, m.x, Math.random())),
                      (d[1] = w.lerp(p.y, m.y, Math.random())),
                      (d[2] = w.lerp(p.z, m.z, Math.random())))
                    : ((r.seed = s[4]),
                      (d[0] = w.lerp(p.x, m.x, r.getFloat())),
                      (d[1] = w.lerp(p.y, m.y, r.getFloat())),
                      (d[2] = w.lerp(p.z, m.z, r.getFloat())),
                      (s[4] = r.seed));
                } else
                  a
                    ? (d[0] = d[1] = d[2] = w.lerp(
                        e.startSizeConstantMin,
                        e.startSizeConstantMax,
                        Math.random()
                      ))
                    : ((r.seed = s[4]),
                      (d[0] = d[1] = d[2] = w.lerp(
                        e.startSizeConstantMin,
                        e.startSizeConstantMax,
                        r.getFloat()
                      )),
                      (s[4] = r.seed));
            }
            var g = e.sizeOverLifetime;
            if (g && g.enbale && 1 === g.size.type) {
              var y = g.size;
              if (y.separateAxes)
                a
                  ? ((d[0] =
                      d[0] *
                      w.lerp(
                        y.constantMinSeparate.x,
                        y.constantMaxSeparate.x,
                        Math.random()
                      )),
                    (d[1] =
                      d[1] *
                      w.lerp(
                        y.constantMinSeparate.y,
                        y.constantMaxSeparate.y,
                        Math.random()
                      )),
                    (d[2] =
                      d[2] *
                      w.lerp(
                        y.constantMinSeparate.z,
                        y.constantMaxSeparate.z,
                        Math.random()
                      )))
                  : ((r.seed = s[11]),
                    (d[0] =
                      d[0] *
                      w.lerp(
                        y.constantMinSeparate.x,
                        y.constantMaxSeparate.x,
                        r.getFloat()
                      )),
                    (d[1] =
                      d[1] *
                      w.lerp(
                        y.constantMinSeparate.y,
                        y.constantMaxSeparate.y,
                        r.getFloat()
                      )),
                    (d[2] =
                      d[2] *
                      w.lerp(
                        y.constantMinSeparate.z,
                        y.constantMaxSeparate.z,
                        r.getFloat()
                      )),
                    (s[11] = r.seed));
              else {
                var v = NaN;
                a
                  ? (v = w.lerp(y.constantMin, y.constantMax, Math.random()))
                  : ((r.seed = s[11]),
                    (v = w.lerp(y.constantMin, y.constantMax, r.getFloat())),
                    (s[11] = r.seed)),
                  (d[0] = d[0] * v),
                  (d[1] = d[1] * v),
                  (d[2] = d[2] * v);
              }
            }
            var b = i.renderMode;
            if (1 !== b)
              switch (e.startRotationType) {
                case 0:
                  if (e.threeDStartRotation) {
                    var x = e.startRotationConstantSeparate,
                      I = t._tempVector30.elements;
                    t._randomInvertRoationArray(
                      x.elements,
                      I,
                      e.randomizeRotationDirection,
                      a ? null : r,
                      s
                    ),
                      (t.startRotation[0] = I[0]),
                      (t.startRotation[1] = I[1]),
                      (t.startRotation[2] = 4 !== b ? -I[2] : I[2]);
                  } else
                    t.startRotation[0] = t._randomInvertRoation(
                      e.startRotationConstant,
                      e.randomizeRotationDirection,
                      a ? null : r,
                      s
                    );
                  break;
                case 2:
                  if (e.threeDStartRotation) {
                    var C = e.startRotationConstantMinSeparate,
                      S = e.startRotationConstantMaxSeparate,
                      T = t._tempVector30.elements;
                    a
                      ? ((T[0] = w.lerp(C.x, S.x, Math.random())),
                        (T[1] = w.lerp(C.y, S.y, Math.random())),
                        (T[2] = w.lerp(C.z, S.z, Math.random())))
                      : ((r.seed = s[5]),
                        (T[0] = w.lerp(C.x, S.x, r.getFloat())),
                        (T[1] = w.lerp(C.y, S.y, r.getFloat())),
                        (T[2] = w.lerp(C.z, S.z, r.getFloat())),
                        (s[5] = r.seed)),
                      t._randomInvertRoationArray(
                        T,
                        T,
                        e.randomizeRotationDirection,
                        a ? null : r,
                        s
                      ),
                      (t.startRotation[0] = T[0]),
                      (t.startRotation[1] = T[1]),
                      (t.startRotation[2] = 4 !== b ? -T[2] : T[2]);
                  } else
                    a
                      ? (t.startRotation[0] = t._randomInvertRoation(
                          w.lerp(
                            e.startRotationConstantMin,
                            e.startRotationConstantMax,
                            Math.random()
                          ),
                          e.randomizeRotationDirection,
                          a ? null : r,
                          s
                        ))
                      : ((r.seed = s[5]),
                        (t.startRotation[0] = t._randomInvertRoation(
                          w.lerp(
                            e.startRotationConstantMin,
                            e.startRotationConstantMax,
                            r.getFloat()
                          ),
                          e.randomizeRotationDirection,
                          a ? null : r,
                          s
                        )),
                        (s[5] = r.seed));
              }
            switch (e.startLifetimeType) {
              case 0:
                t.startLifeTime = e.startLifetimeConstant;
                break;
              case 1:
                t.startLifeTime = t._getStartLifetimeFromGradient(
                  e.startLifeTimeGradient,
                  e.emissionTime
                );
                break;
              case 2:
                a
                  ? (t.startLifeTime = w.lerp(
                      e.startLifetimeConstantMin,
                      e.startLifetimeConstantMax,
                      Math.random()
                    ))
                  : ((r.seed = s[7]),
                    (t.startLifeTime = w.lerp(
                      e.startLifetimeConstantMin,
                      e.startLifetimeConstantMax,
                      r.getFloat()
                    )),
                    (s[7] = r.seed));
                break;
              case 3:
                var M = e.emissionTime;
                a
                  ? (t.startLifeTime = w.lerp(
                      t._getStartLifetimeFromGradient(
                        e.startLifeTimeGradientMin,
                        M
                      ),
                      t._getStartLifetimeFromGradient(
                        e.startLifeTimeGradientMax,
                        M
                      ),
                      Math.random()
                    ))
                  : ((r.seed = s[7]),
                    (t.startLifeTime = w.lerp(
                      t._getStartLifetimeFromGradient(
                        e.startLifeTimeGradientMin,
                        M
                      ),
                      t._getStartLifetimeFromGradient(
                        e.startLifeTimeGradientMax,
                        M
                      ),
                      r.getFloat()
                    )),
                    (s[7] = r.seed));
            }
            switch (e.startSpeedType) {
              case 0:
                t.startSpeed = e.startSpeedConstant;
                break;
              case 2:
                a
                  ? (t.startSpeed = w.lerp(
                      e.startSpeedConstantMin,
                      e.startSpeedConstantMax,
                      Math.random()
                    ))
                  : ((r.seed = s[8]),
                    (t.startSpeed = w.lerp(
                      e.startSpeedConstantMin,
                      e.startSpeedConstantMax,
                      r.getFloat()
                    )),
                    (s[8] = r.seed));
            }
            var E = e.textureSheetAnimation;
            if (E && E.enable) {
              var L = E.tiles,
                D = L.x,
                A = L.y,
                N = 1 / D,
                R = 1 / A,
                B = 0,
                k = E.startFrame;
              switch (k.type) {
                case 0:
                  B = k.constant;
                  break;
                case 1:
                  a
                    ? (B = w.lerp(k.constantMin, k.constantMax, Math.random()))
                    : ((r.seed = s[14]),
                      (B = w.lerp(k.constantMin, k.constantMax, r.getFloat())),
                      (s[14] = r.seed));
              }
              var P = E.frame;
              switch (P.type) {
                case 0:
                  B += P.constant;
                  break;
                case 2:
                  a
                    ? (B += w.lerp(P.constantMin, P.constantMax, Math.random()))
                    : ((r.seed = s[15]),
                      (B += w.lerp(P.constantMin, P.constantMax, r.getFloat())),
                      (s[15] = r.seed));
              }
              var O = 0;
              switch (E.type) {
                case 0:
                  O = Math.floor(B / D);
                  break;
                case 1:
                  E.randomRow
                    ? a
                      ? (O = Math.floor(Math.random() * A))
                      : ((r.seed = s[13]),
                        (O = Math.floor(r.getFloat() * A)),
                        (s[13] = r.seed))
                    : (O = E.rowIndex);
              }
              var U = Math.floor(B % D);
              ((t.startUVInfo = t.startUVInfo)[0] = N),
                (t.startUVInfo[1] = R),
                (t.startUVInfo[2] = U * N),
                (t.startUVInfo[3] = O * R);
            } else
              ((t.startUVInfo = t.startUVInfo)[0] = 1),
                (t.startUVInfo[1] = 1),
                (t.startUVInfo[2] = 0),
                (t.startUVInfo[3] = 0);
            switch (e.simulationSpace) {
              case 0:
                var V = n.position.elements;
                (t.simulationWorldPostion[0] = V[0]),
                  (t.simulationWorldPostion[1] = V[1]),
                  (t.simulationWorldPostion[2] = V[2]);
                var F = n.rotation.elements;
                (t.simulationWorldRotation[0] = F[0]),
                  (t.simulationWorldRotation[1] = F[1]),
                  (t.simulationWorldRotation[2] = F[2]),
                  (t.simulationWorldRotation[3] = F[3]);
                break;
              case 1:
                break;
              default:
                throw new Error(
                  'ShurikenParticleMaterial: SimulationSpace value is invalid.'
                );
            }
          }),
          (t.startLifeTime = NaN),
          (t.startSpeed = NaN),
          n(t, [
            '_tempVector30',
            function() {
              return (this._tempVector30 = new Re());
            },
            '_tempQuaternion',
            function() {
              return (this._tempQuaternion = new Le());
            },
            'startColor',
            function() {
              return (this.startColor = new Float32Array(4));
            },
            'startSize',
            function() {
              return (this.startSize = new Float32Array(3));
            },
            'startRotation',
            function() {
              return (this.startRotation = new Float32Array(3));
            },
            'startUVInfo',
            function() {
              return (this.startUVInfo = new Float32Array(4));
            },
            'simulationWorldPostion',
            function() {
              return (this.simulationWorldPostion = new Float32Array(3));
            },
            'simulationWorldRotation',
            function() {
              return (this.simulationWorldRotation = new Float32Array(4));
            }
          ]),
          t
        );
      })(),
      ht = (function() {
        function t() {
          (this._tempInt0 = 0),
            (this._tempInt1 = 0),
            (this._tempUint0 = 0),
            (this._tempUint1 = 0),
            (this._tempUint2 = 0),
            (this._tempUint3 = 0),
            (this._tempUint4 = 0),
            (this._tempUint5 = 0),
            (this._tempUint6 = 0),
            (this._tempUint7 = 0),
            (this._tempNumver0 = NaN),
            (this._tempNumver1 = NaN),
            (this._tempNumver2 = NaN),
            (this._tempNumver3 = NaN),
            (this._floatSizePerVer = 7),
            (this._defaultBufferSize = 600 * this._floatSizePerVer),
            (this._vb = null),
            (this._posInVBData = 0),
            (this._ib = null),
            (this._posInIBData = 0),
            (this._primitiveType = NaN),
            (this._hasBegun = !1),
            (this._numVertsPerPrimitive = 0),
            (this._camera = null),
            (this._sharderNameID = 0),
            (this._shader = null),
            (this._shaderCompile = null),
            (this._vbData = new Float32Array(this._defaultBufferSize)),
            (this._ibData = new Uint16Array(this._defaultBufferSize)),
            (this._spriteShaderValue = new Fe()),
            (this._vb = Yi.create(
              t._vertexDeclaration,
              this._defaultBufferSize / this._floatSizePerVer,
              35048
            )),
            (this._ib = qi.create('ushort', this._defaultBufferSize, 35048)),
            (this._sharderNameID = Oi.nameKey.getID('LINE')),
            (this._shaderCompile = ci._preCompileShader[this._sharderNameID]);
        }
        a(t, 'laya.d3.core.PhasorSpriter3D');
        var e = t.prototype;
        return (
          (e.line = function(t, e, i, n) {
            return (
              (this._hasBegun && 1 === this._primitiveType) ||
                this.drawLinesException(),
              (this._posInVBData + 2 * this._floatSizePerVer >
                this._vbData.length ||
                this._posInIBData + 2 > this._ibData.length) &&
                this.flush(),
              (this._tempUint0 = this._posInVBData / this._floatSizePerVer),
              this.addVertex(t.x, t.y, t.z, e.x, e.y, e.z, e.w),
              this.addVertex(i.x, i.y, i.z, n.x, n.y, n.z, n.w),
              this.addIndexes(this._tempUint0, this._tempUint0 + 1),
              this
            );
          }),
          (e.circle = function(t, e, i, n, a, r) {
            for (
              (this._hasBegun && 1 === this._primitiveType) ||
                this.drawLinesException(),
                this._tempUint0 = 2 * e,
                (this._posInVBData + this._tempUint0 * this._floatSizePerVer >
                  this._vbData.length ||
                  this._posInIBData + 2 * this._tempUint0 >
                    this._ibData.length) &&
                  this.flush(),
                this._tempUint1 = this._posInVBData / this._floatSizePerVer,
                this._tempNumver0 = 0,
                this._tempInt0 = 0;
              this._tempNumver0 < 6.2832;
              this._tempNumver0 = this._tempNumver0 + 3.1416 / e,
                this._tempInt0++
            )
              this.addVertex(
                Math.sin(this._tempNumver0) * t,
                Math.cos(this._tempNumver0) * t,
                0,
                i,
                n,
                a,
                r
              ),
                0 === this._tempInt0
                  ? this.addIndexes(this._tempUint1)
                  : this._tempInt0 === this._tempUint0 - 1
                  ? ((this._tempUint2 = this._tempUint1 + this._tempInt0),
                    this.addIndexes(
                      this._tempUint2,
                      this._tempUint2,
                      this._tempUint1
                    ))
                  : ((this._tempUint2 = this._tempUint1 + this._tempInt0),
                    this.addIndexes(this._tempUint2, this._tempUint2));
            return this;
          }),
          (e.plane = function(t, e, i, n, a, r, s, o, l) {
            return (
              (this._hasBegun && 4 === this._primitiveType) ||
                this.drawTrianglesException(),
              (this._posInVBData + 4 * this._floatSizePerVer >
                this._vbData.length ||
                this._posInIBData + 6 > this._ibData.length) &&
                this.flush(),
              (this._tempNumver0 = n / 2),
              (this._tempNumver1 = a / 2),
              (this._tempUint0 = this._posInVBData / this._floatSizePerVer),
              this.addVertex(
                t - this._tempNumver0,
                e + this._tempNumver1,
                i,
                r,
                s,
                o,
                l
              ),
              this.addVertex(
                t + this._tempNumver0,
                e + this._tempNumver1,
                i,
                r,
                s,
                o,
                l
              ),
              this.addVertex(
                t - this._tempNumver0,
                e - this._tempNumver1,
                i,
                r,
                s,
                o,
                l
              ),
              this.addVertex(
                t + this._tempNumver0,
                e - this._tempNumver1,
                i,
                r,
                s,
                o,
                l
              ),
              (this._tempUint1 = this._tempUint0 + 1),
              (this._tempUint2 = this._tempUint0 + 2),
              this.addIndexes(
                this._tempUint0,
                this._tempUint1,
                this._tempUint2,
                this._tempUint2,
                this._tempUint1,
                this._tempUint0 + 3
              ),
              this
            );
          }),
          (e.box = function(t, e, i, n, a, r, s, o, l, h) {
            return (
              (this._hasBegun && 4 === this._primitiveType) ||
                this.drawTrianglesException(),
              (this._posInVBData + 8 * this._floatSizePerVer >
                this._vbData.length ||
                this._posInIBData + 36 > this._ibData.length) &&
                this.flush(),
              (this._tempNumver0 = n / 2),
              (this._tempNumver1 = a / 2),
              (this._tempNumver2 = r / 2),
              (this._tempUint0 = this._posInVBData / this._floatSizePerVer),
              this.addVertex(
                t - this._tempNumver0,
                e + this._tempNumver1,
                i + this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              this.addVertex(
                t + this._tempNumver0,
                e + this._tempNumver1,
                i + this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              this.addVertex(
                t - this._tempNumver0,
                e - this._tempNumver1,
                i + this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              this.addVertex(
                t + this._tempNumver0,
                e - this._tempNumver1,
                i + this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              this.addVertex(
                t + this._tempNumver0,
                e + this._tempNumver1,
                i - this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              this.addVertex(
                t - this._tempNumver0,
                e + this._tempNumver1,
                i - this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              this.addVertex(
                t + this._tempNumver0,
                e - this._tempNumver1,
                i - this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              this.addVertex(
                t - this._tempNumver0,
                e - this._tempNumver1,
                i - this._tempNumver2,
                s,
                o,
                l,
                h
              ),
              (this._tempUint1 = this._tempUint0 + 1),
              (this._tempUint2 = this._tempUint0 + 2),
              (this._tempUint3 = this._tempUint0 + 3),
              (this._tempUint4 = this._tempUint0 + 4),
              (this._tempUint5 = this._tempUint0 + 5),
              (this._tempUint6 = this._tempUint0 + 6),
              (this._tempUint7 = this._tempUint0 + 7),
              this.addIndexes(
                this._tempUint0,
                this._tempUint1,
                this._tempUint2,
                this._tempUint2,
                this._tempUint1,
                this._tempUint3,
                this._tempUint4,
                this._tempUint5,
                this._tempUint6,
                this._tempUint6,
                this._tempUint5,
                this._tempUint7,
                this._tempUint5,
                this._tempUint0,
                this._tempUint7,
                this._tempUint7,
                this._tempUint0,
                this._tempUint2,
                this._tempUint1,
                this._tempUint4,
                this._tempUint3,
                this._tempUint3,
                this._tempUint4,
                this._tempUint6,
                this._tempUint5,
                this._tempUint4,
                this._tempUint0,
                this._tempUint0,
                this._tempUint4,
                this._tempUint1,
                this._tempUint2,
                this._tempUint3,
                this._tempUint7,
                this._tempUint7,
                this._tempUint3,
                this._tempUint6
              ),
              this
            );
          }),
          (e.cone = function(t, e, i, n, a, r, s) {
            for (
              (this._hasBegun && 4 === this._primitiveType) ||
                this.drawTrianglesException(),
                (this._posInVBData + (2 * i + 2) * this._floatSizePerVer >
                  this._vbData.length ||
                  this._posInIBData + 6 * i > this._ibData.length) &&
                  this.flush(),
                this._tempUint0 = this._posInVBData,
                this._tempUint1 = this._posInVBData / this._floatSizePerVer,
                this._tempNumver0 = (2 * Math.PI) / i,
                this.addVertexIndex(0, e, 0, n, a, r, s, this._tempUint0),
                this.addVertexIndex(
                  0,
                  0,
                  0,
                  n,
                  a,
                  r,
                  s,
                  this._tempUint0 + this._floatSizePerVer
                ),
                this._tempInt0 = 2,
                this._tempNumver1 = 0,
                this._tempInt1 = 0;
              this._tempInt1 < i;
              this._tempInt1++
            )
              (this._tempNumver2 = Math.cos(this._tempNumver1)),
                (this._tempNumver3 = Math.sin(this._tempNumver1)),
                this.addVertexIndex(
                  t * this._tempNumver2,
                  0,
                  t * this._tempNumver3,
                  n,
                  a,
                  r,
                  s,
                  this._tempUint0 + this._tempInt0 * this._floatSizePerVer
                ),
                this.addIndexes(
                  this._tempUint1,
                  this._tempUint1 + this._tempInt0
                ),
                this._tempInt1 == i - 1
                  ? this.addIndexes(this._tempUint1 + 2)
                  : this.addIndexes(this._tempUint1 + this._tempInt0 + 1),
                this.addVertexIndex(
                  t * this._tempNumver2,
                  0,
                  t * this._tempNumver3,
                  n,
                  a,
                  r,
                  s,
                  this._tempUint0 + (this._tempInt0 + i) * this._floatSizePerVer
                ),
                this.addIndexes(this._tempUint1 + 1),
                this._tempInt1 == i - 1
                  ? this.addIndexes(this._tempUint1 + i + 2)
                  : this.addIndexes(this._tempUint1 + this._tempInt0 + i + 1),
                this.addIndexes(this._tempUint1 + this._tempInt0 + i),
                this._tempInt0++,
                (this._tempNumver1 += this._tempNumver0);
            return this;
          }),
          (e.boundingBoxLine = function(t, e, i, n, a, r, s, o, l, h) {
            return (
              (this._hasBegun && 1 === this._primitiveType) ||
                this.drawLinesException(),
              (this._posInVBData + 8 * this._floatSizePerVer >
                this._vbData.length ||
                this._posInIBData + 48 > this._ibData.length) &&
                this.flush(),
              (this._tempUint0 = this._posInVBData / this._floatSizePerVer),
              this.addVertex(t, a, r, s, o, l, h),
              this.addVertex(n, a, r, s, o, l, h),
              this.addVertex(t, e, r, s, o, l, h),
              this.addVertex(n, e, r, s, o, l, h),
              this.addVertex(n, a, i, s, o, l, h),
              this.addVertex(t, a, i, s, o, l, h),
              this.addVertex(n, e, i, s, o, l, h),
              this.addVertex(t, e, i, s, o, l, h),
              (this._tempUint1 = this._tempUint0 + 1),
              (this._tempUint2 = this._tempUint0 + 2),
              (this._tempUint3 = this._tempUint0 + 3),
              (this._tempUint4 = this._tempUint0 + 4),
              (this._tempUint5 = this._tempUint0 + 5),
              (this._tempUint6 = this._tempUint0 + 6),
              (this._tempUint7 = this._tempUint0 + 7),
              this.addIndexes(
                this._tempUint0,
                this._tempUint1,
                this._tempUint1,
                this._tempUint3,
                this._tempUint3,
                this._tempUint2,
                this._tempUint2,
                this._tempUint0,
                this._tempUint4,
                this._tempUint5,
                this._tempUint5,
                this._tempUint7,
                this._tempUint7,
                this._tempUint6,
                this._tempUint6,
                this._tempUint4,
                this._tempUint5,
                this._tempUint0,
                this._tempUint0,
                this._tempUint2,
                this._tempUint2,
                this._tempUint7,
                this._tempUint7,
                this._tempUint5,
                this._tempUint1,
                this._tempUint4,
                this._tempUint4,
                this._tempUint6,
                this._tempUint6,
                this._tempUint3,
                this._tempUint3,
                this._tempUint1,
                this._tempUint5,
                this._tempUint4,
                this._tempUint4,
                this._tempUint1,
                this._tempUint1,
                this._tempUint0,
                this._tempUint0,
                this._tempUint5,
                this._tempUint2,
                this._tempUint3,
                this._tempUint3,
                this._tempUint6,
                this._tempUint6,
                this._tempUint7,
                this._tempUint7,
                this._tempUint2
              ),
              this
            );
          }),
          (e.addVertex = function(t, e, i, n, a, r, s) {
            return (
              this._hasBegun || this.addVertexIndexException(),
              (this._vbData[this._posInVBData] = t),
              (this._vbData[this._posInVBData + 1] = e),
              (this._vbData[this._posInVBData + 2] = i),
              (this._vbData[this._posInVBData + 3] = n),
              (this._vbData[this._posInVBData + 4] = a),
              (this._vbData[this._posInVBData + 5] = r),
              (this._vbData[this._posInVBData + 6] = s),
              (this._posInVBData += this._floatSizePerVer),
              this
            );
          }),
          (e.addVertexIndex = function(t, e, i, n, a, r, s, o) {
            return (
              this._hasBegun || this.addVertexIndexException(),
              (this._vbData[o] = t),
              (this._vbData[o + 1] = e),
              (this._vbData[o + 2] = i),
              (this._vbData[o + 3] = n),
              (this._vbData[o + 4] = a),
              (this._vbData[o + 5] = r),
              (this._vbData[o + 6] = s),
              (o += this._floatSizePerVer) > this._posInVBData &&
                (this._posInVBData = o),
              this
            );
          }),
          (e.addIndexes = function(t) {
            var e = arguments;
            this._hasBegun || this.addVertexIndexException();
            for (var i = 0; i < e.length; i++)
              (this._ibData[this._posInIBData] = e[i]), this._posInIBData++;
            return this;
          }),
          (e.begin = function(t, e) {
            return (
              this._hasBegun && this.beginException0(),
              1 !== t && 4 !== t && this.beginException1(),
              (this._primitiveType = t),
              (this._camera = e),
              (this._hasBegun = !0),
              this
            );
          }),
          (e.end = function() {
            return (
              this._hasBegun || this.endException(),
              this.flush(),
              (this._hasBegun = !1),
              this
            );
          }),
          (e.flush = function() {
            0 !== this._posInVBData &&
              (this._ib.setData(this._ibData),
              this._vb.setData(this._vbData),
              this._vb._bind(),
              this._ib._bind(),
              (this._shader = this._shaderCompile.withCompile(0, 0, 0)),
              this._shader.bind(),
              this._shader.uploadAttributes(
                t._vertexDeclaration.shaderValues.data,
                null
              ),
              this._spriteShaderValue.setValue(
                1,
                this._camera.projectionViewMatrix.elements
              ),
              this._shader.uploadSpriteUniforms(this._spriteShaderValue.data),
              L.drawCall++,
              R.mainContext.drawElements(
                this._primitiveType,
                this._posInIBData,
                5123,
                0
              ),
              (this._posInIBData = 0),
              (this._posInVBData = 0));
          }),
          (e.addVertexIndexException = function() {
            throw new Error('请先调用begin()函数');
          }),
          (e.beginException0 = function() {
            throw new Error('调用begin()前请确保已成功调用end()！');
          }),
          (e.beginException1 = function() {
            throw new Error('只支持“LINES”和“TRIANGLES”两种基元！');
          }),
          (e.endException = function() {
            throw new Error('调用end()前请确保已成功调用begin()！');
          }),
          (e.drawLinesException = function() {
            throw new Error(
              '您必须确保在此之前已调用begin()且使用“LINES”基元！'
            );
          }),
          (e.drawTrianglesException = function() {
            throw new Error(
              '您必须确保在此之前已调用begin()且使用“TRIANGLES”基元！'
            );
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(28, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector4', 1)
              ]));
            }
          ]),
          t
        );
      })(),
      ct = (function() {
        function t() {
          (this._id = 0),
            (this._type = 0),
            (this._mainSortID = 0),
            (this._render = null),
            (this._sprite3D = null),
            (this._material = null),
            (this._renderObj = null),
            (this._staticBatch = null),
            (this._tempBatchIndexStart = 0),
            (this._tempBatchIndexEnd = 0),
            (this._canDynamicBatch = !1),
            (this._shaderValue = null),
            (this._onPreRenderFunction = null),
            (this._id = ++t._uniqueIDCounter),
            (this._canDynamicBatch = !0),
            (this._shaderValue = new Fe());
        }
        a(t, 'laya.d3.core.render.RenderElement');
        var e = t.prototype;
        return (
          (e.getDynamicBatchBakedVertexs = function(t) {
            for (
              var e = this._renderObj._getVertexBuffer(t),
                i = e.getData().slice(),
                n = e.vertexDeclaration,
                a = n.getVertexElementByUsage(0).offset / 4,
                r = n.getVertexElementByUsage(3).offset / 4,
                s = this._sprite3D.transform,
                o = s.worldMatrix,
                l = s.rotation,
                h = n.vertexStride / 4,
                c = 0,
                u = i.length;
              c < u;
              c += h
            ) {
              var _ = c + a,
                d = c + r;
              Ke.transformVector3ArrayToVector3ArrayCoordinate(i, _, o, i, _),
                Ke.transformVector3ArrayByQuat(i, d, l, i, d);
            }
            return i;
          }),
          (e.getBakedIndices = function() {
            return this._renderObj._getIndexBuffer().getData();
          }),
          (e._destroy = function() {
            this._staticBatch &&
              this._staticBatch._manager._garbageCollection(this);
          }),
          r(0, e, 'id', function() {
            return this._id;
          }),
          r(
            0,
            e,
            'renderObj',
            function() {
              return this._renderObj;
            },
            function(t) {
              this._renderObj !== t && (this._renderObj = t);
            }
          ),
          (t._uniqueIDCounter = 0),
          t
        );
      })(),
      ut = (function() {
        function t(e) {
          (this._id = 0),
            (this._needSort = !1),
            (this._renderElements = null),
            (this._renderableRenderObjects = null),
            (this._dynamicBatchCombineRenderElements = null),
            (this._finalElements = null),
            (this._scene = null),
            (this._id = ++t._uniqueIDCounter),
            (this._needSort = !1),
            (this._scene = e),
            (this._renderElements = []),
            (this._renderableRenderObjects = []),
            (this._dynamicBatchCombineRenderElements = []);
        }
        a(t, 'laya.d3.core.render.RenderQueue');
        var e = t.prototype;
        return (
          (e._sortOpaqueFunc = function(t, e) {
            if (t._render && e._render) {
              var i = t._material.renderQueue - e._material.renderQueue;
              return 0 === i
                ? t._render._distanceForSort - e._render._distanceForSort
                : i;
            }
            return 0;
          }),
          (e._sortAlphaFunc = function(t, e) {
            if (t._render && e._render) {
              var i = t._material.renderQueue - e._material.renderQueue;
              return 0 === i
                ? e._render._distanceForSort - t._render._distanceForSort
                : i;
            }
            return 0;
          }),
          (e._begainRenderElement = function(t, e, i) {
            return !!e._beforeRender(t);
          }),
          (e._sortAlpha = function(e) {
            (t._cameraPosition = e),
              this._finalElements.sort(this._sortAlphaFunc);
          }),
          (e._sortOpaque = function(e) {
            (t._cameraPosition = e),
              this._finalElements.sort(this._sortOpaqueFunc);
          }),
          (e._preRender = function(t) {
            this._finalElements = this._renderElements.concat(
              this._dynamicBatchCombineRenderElements
            );
          }),
          (e._render = function(t, e) {
            for (
              var i,
                n,
                a,
                r,
                s,
                o,
                l = L.loopCount,
                h = this._scene,
                c = t.camera,
                u = (c.id, !1),
                _ = 0,
                d = this._finalElements.length;
              _ < d;
              _++
            ) {
              var f,
                p,
                m,
                g = this._finalElements[_];
              if (
                (null != g._onPreRenderFunction &&
                  g._onPreRenderFunction.call(g._sprite3D, t),
                0 === g._type)
              ) {
                if (
                  ((t.owner = m = g._sprite3D),
                  (t.renderElement = g),
                  m._preRenderUpdateComponents(t),
                  (f = g.renderObj),
                  (p = g._material),
                  this._begainRenderElement(t, f, p))
                ) {
                  if (
                    ((i = f._getVertexBuffers()),
                    (n = f._getVertexBuffer(0)),
                    (a = n.vertexDeclaration),
                    (r = t._shader = p._getShader(
                      h._shaderDefineValue,
                      a.shaderDefineValue,
                      m._shaderDefineValue
                    )),
                    (u = r.bind() || l !== r._uploadLoopCount),
                    i)
                  ) {
                    if (r._uploadVertexBuffer !== i || u) {
                      for (var y = 0; y < i.length; y++) {
                        var v = i[y];
                        r.uploadAttributesX(
                          v.vertexDeclaration.shaderValues.data,
                          v
                        );
                      }
                      r._uploadVertexBuffer = i;
                    }
                  } else
                    (r._uploadVertexBuffer !== n || u) &&
                      (r.uploadAttributes(a.shaderValues.data, null),
                      (r._uploadVertexBuffer = n));
                  (r._uploadScene !== h || u) &&
                    (r.uploadSceneUniforms(h._shaderValues.data),
                    (r._uploadScene = h)),
                    (c !== r._uploadCamera || r._uploadSprite3D !== m || u) &&
                      (r.uploadSpriteUniforms(m._shaderValues.data),
                      (r._uploadSprite3D = m)),
                    (c !== r._uploadCamera || u) &&
                      (r.uploadCameraUniforms(c._shaderValues.data),
                      (r._uploadCamera = c)),
                    (r._uploadMaterial !== p || u) &&
                      (p._upload(), (r._uploadMaterial = p)),
                    s !== p
                      ? (p._setRenderStateBlendDepth(),
                        p._setRenderStateFrontFace(e, m.transform),
                        (s = p),
                        (o = m))
                      : o !== m &&
                        (p._setRenderStateFrontFace(e, m.transform), (o = m)),
                    f._render(t),
                    (r._uploadLoopCount = l);
                }
                m._postRenderUpdateComponents(t);
              } else if (2 === g._type) {
                g.renderObj;
                (t.owner = m = g._sprite3D),
                  (t.renderElement = g),
                  (t._batchIndexStart = g._tempBatchIndexStart),
                  (t._batchIndexEnd = g._tempBatchIndexEnd),
                  (f = g.renderObj),
                  (p = g._material),
                  this._begainRenderElement(t, f, p) &&
                    ((a = (n = f._getVertexBuffer(0)).vertexDeclaration),
                    (u =
                      (r = t._shader = p._getShader(
                        h._shaderDefineValue,
                        a.shaderDefineValue,
                        m._shaderDefineValue
                      )).bind() || l !== r._uploadLoopCount),
                    (r._uploadVertexBuffer !== n || u) &&
                      (r.uploadAttributes(a.shaderValues.data, null),
                      (r._uploadVertexBuffer = n)),
                    (r._uploadScene !== h || u) &&
                      (r.uploadSceneUniforms(h._shaderValues.data),
                      (r._uploadScene = h)),
                    (c !== r._uploadCamera || r._uploadSprite3D !== m || u) &&
                      (r.uploadSpriteUniforms(m._shaderValues.data),
                      (r._uploadSprite3D = m)),
                    (c !== r._uploadCamera || u) &&
                      (r.uploadCameraUniforms(c._shaderValues.data),
                      (r._uploadCamera = c)),
                    (r._uploadMaterial !== p || u) &&
                      (p._upload(), (r._uploadMaterial = p)),
                    s !== p
                      ? (p._setRenderStateBlendDepth(),
                        p._setRenderStateFrontFace(e, m.transform),
                        (s = p),
                        (o = m))
                      : o !== m &&
                        (p._setRenderStateFrontFace(e, m.transform), (o = m)),
                    f._render(t),
                    (r._uploadLoopCount = l));
              }
            }
          }),
          (e._renderShadow = function(t, e) {
            for (
              var i,
                n,
                a,
                r,
                s,
                o = L.loopCount,
                l = this._scene,
                h = t.camera,
                c = !1,
                u = 0,
                _ = this._finalElements.length;
              u < _;
              u++
            ) {
              var d,
                f,
                p,
                m = this._finalElements[u];
              0 === m._type &&
                ((t.owner = p = m._sprite3D),
                e ||
                  (p._projectionViewWorldUpdateCamera === h &&
                    p._projectionViewWorldUpdateLoopCount === L.loopCount) ||
                  (p._render._renderUpdate(t._projectionViewMatrix),
                  (p._projectionViewWorldUpdateLoopCount = L.loopCount),
                  (p._projectionViewWorldUpdateCamera = h)),
                (t.renderElement = m),
                p._preRenderUpdateComponents(t),
                (d = m.renderObj),
                (f = m._material),
                this._begainRenderElement(t, d, null) &&
                  ((n = (i = d._getVertexBuffer(0)).vertexDeclaration),
                  (c =
                    (a = t._shader = f._getShader(
                      l._shaderDefineValue,
                      n.shaderDefineValue,
                      p._shaderDefineValue
                    )).bind() || o !== a._uploadLoopCount),
                  (a._uploadVertexBuffer !== i || c) &&
                    (a.uploadAttributes(n.shaderValues.data, null),
                    (a._uploadVertexBuffer = i)),
                  (h !== a._uploadCamera || a._uploadSprite3D !== p || c) &&
                    (a.uploadSpriteUniforms(p._shaderValues.data),
                    (a._uploadSprite3D = p)),
                  (h !== a._uploadCamera || c) &&
                    (a.uploadCameraUniforms(h._shaderValues.data),
                    (a._uploadCamera = h)),
                  (a._uploadMaterial !== f || c) &&
                    (f._upload(), (a._uploadMaterial = f)),
                  a._uploadRenderElement,
                  r !== f
                    ? (f._setRenderStateFrontFace(!1, p.transform),
                      (r = f),
                      (s = p))
                    : s !== p &&
                      (f._setRenderStateFrontFace(!1, p.transform), (s = p)),
                  d._render(t),
                  (a._uploadLoopCount = o)),
                p._postRenderUpdateComponents(t));
            }
          }),
          (e._clearRenderElements = function() {
            (this._dynamicBatchCombineRenderElements.length = 0),
              (this._renderElements.length = 0),
              (this._needSort = !0);
          }),
          (e._addRenderElement = function(t) {
            this._renderElements.push(t), (this._needSort = !0);
          }),
          (e._addDynamicBatchElement = function(t) {
            this._dynamicBatchCombineRenderElements.push(t);
          }),
          r(0, e, 'id', function() {
            return this._id;
          }),
          (t._uniqueIDCounter = 0),
          (t._cameraPosition = null),
          t
        );
      })(),
      _t = (function() {
        function t() {
          (this._staticBatch = null),
            (this._batchIndexStart = 0),
            (this._batchIndexEnd = 0),
            (this._viewMatrix = null),
            (this._projectionMatrix = null),
            (this._projectionViewMatrix = null),
            (this._viewport = null),
            (this._shader = null),
            (this.elapsedTime = NaN),
            (this.scene = null),
            (this.owner = null),
            (this.renderElement = null),
            (this.camera = null);
        }
        return (
          a(t, 'laya.d3.core.render.RenderState'),
          (t.clientWidth = 0),
          (t.clientHeight = 0),
          t
        );
      })(),
      dt = (function() {
        function t(t, e) {
          (this._exactBox = null),
            (this._relaxBox = null),
            (this._scene = null),
            (this._parent = null),
            (this._currentDepth = 0),
            (this._boundingSphere = new xe(new Re(), 0)),
            (this._corners = [
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re()
            ]),
            (this._boundingBoxCenter = new Re()),
            (this._children = s(8)),
            (this._objects = []),
            (this._tempBoundBoxCorners = [
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re(),
              new Re()
            ]),
            (this._scene = t),
            (this._currentDepth = e);
        }
        a(t, 'laya.d3.core.scene.OctreeNode');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.scene.ITreeNode': !0 }),
          (e.init = function(t, e) {
            var i = new Re(),
              n = new Re();
            Re.scale(e, -0.5, i),
              Re.scale(e, 0.5, n),
              Re.add(i, t, i),
              Re.add(n, t, n),
              (this.exactBox = new be(i, n)),
              (this.relaxBox = new be(i, n));
          }),
          (e.addTreeNode = function(t) {
            1 === Ie.boxContainsBox(this._relaxBox, t.boundingBox)
              ? this.addNodeDown(t, 0)
              : this.addObject(t);
          }),
          (e.addChild = function(e) {
            var i = this._children[e];
            if (null == i) {
              (i = new t(this._scene, this._currentDepth + 1)),
                (this._children[e] = i),
                (i._parent = this),
                Re.subtract(this._exactBox.max, this._exactBox.min, t.tempSize),
                Re.multiply(t.tempSize, t._octreeSplit[e], t.tempCenter),
                Re.add(this._exactBox.min, t.tempCenter, t.tempCenter),
                Re.scale(t.tempSize, 0.25, t.tempSize);
              var n = new Re(),
                a = new Re();
              Re.subtract(t.tempCenter, t.tempSize, n),
                Re.add(t.tempCenter, t.tempSize, a),
                (i.exactBox = new be(n, a)),
                Re.scale(t.tempSize, t.relax, t.tempSize);
              var r = new Re(),
                s = new Re();
              Re.subtract(t.tempCenter, t.tempSize, r),
                Re.add(t.tempCenter, t.tempSize, s),
                (i.relaxBox = new be(r, s));
            }
            return i;
          }),
          (e.addObject = function(t) {
            (t._treeNode = this), this._objects.push(t);
          }),
          (e.removeObject = function(t) {
            if (t._treeNode != this)
              return console.log('OctreeNode::removeObject error'), !1;
            var e = this._objects.indexOf(t);
            return -1 !== e && (this._objects.splice(e, 1), !0);
          }),
          (e.clearObject = function() {
            this._objects.length = 0;
          }),
          (e.addNodeUp = function(t, e) {
            this._parent &&
            1 !== Ie.boxContainsBox(this._exactBox, t.boundingBox)
              ? this._parent.addNodeUp(t, e - 1)
              : this.addNodeDown(t, e);
          }),
          (e.addNodeDown = function(t, e) {
            if (e < this._scene.treeLevel) {
              var i = this.inChildIndex(t.boundingBoxCenter),
                n = this.addChild(i);
              1 === Ie.boxContainsBox(n._relaxBox, t.boundingBox)
                ? n.addNodeDown(t, ++e)
                : this.addObject(t);
            } else this.addObject(t);
          }),
          (e.inChildIndex = function(t) {
            return (
              4 * (t.z < this._boundingBoxCenter.z ? 0 : 1) +
              2 * (t.y < this._boundingBoxCenter.y ? 0 : 1) +
              (t.x < this._boundingBoxCenter.x ? 0 : 1)
            );
          }),
          (e.updateObject = function(t) {
            1 === Ie.boxContainsBox(this._relaxBox, t.boundingBox)
              ? (this.removeObject(t),
                (t._treeNode = null),
                this.addNodeDown(t, this._currentDepth))
              : this._parent &&
                (this.removeObject(t),
                (t._treeNode = null),
                this._parent.addNodeUp(t, this._currentDepth - 1));
          }),
          (e.cullingObjects = function(t, e, i, n, a) {
            var r = 0,
              s = 0,
              o = 0,
              l = 0,
              h = this._scene._dynamicBatchManager;
            for (r = 0, o = this._objects.length; r < o; r++) {
              var c = this._objects[r];
              if (z.isVisible(c._owner.layer.mask) && c.enable) {
                if (
                  e &&
                  ((L.treeSpriteCollision += 1),
                  0 === t.containsBoundSphere(c.boundingSphere))
                )
                  continue;
                c._renderUpdate(a),
                  (c._distanceForSort =
                    Re.distance(c.boundingSphere.center, n) + c.sortingFudge);
                var u = c._renderElements;
                for (s = 0, l = u.length; s < l; s++) {
                  var _ = u[s],
                    d = _._staticBatch;
                  if (d && d._material === _._material)
                    d._addBatchRenderElement(_);
                  else {
                    var f = _.renderObj;
                    f.triangleCount < 10 &&
                    1 === f._vertexBufferCount &&
                    f._getIndexBuffer() &&
                    _._material.renderQueue < 2 &&
                    _._canDynamicBatch &&
                    !c._owner.isStatic
                      ? h._addPrepareRenderElement(_)
                      : this._scene
                          .getRenderQueue(_._material.renderQueue)
                          ._addRenderElement(_);
                  }
                }
              }
            }
            for (r = 0; r < 8; r++) {
              var p = this._children[r];
              if (null != p) {
                var m = e;
                if (e) {
                  var g = t.containsBoundBox(p._relaxBox);
                  if (((L.treeNodeCollision += 1), 0 === g)) continue;
                  m = 2 === g;
                }
                p.cullingObjects(t, m, i, n, a);
              }
            }
          }),
          (e.cullingShadowObjects = function(t, e, i, n, a) {
            var r = 0,
              s = 0,
              o = 0,
              l = 0;
            this._scene._dynamicBatchManager;
            for (r = 0, o = this._objects.length; r < o; r++) {
              var h = this._objects[r];
              if (
                h.castShadow &&
                z.isVisible(h._owner.layer.mask) &&
                h.enable
              ) {
                if (i && 0 === t[0].containsBoundSphere(h.boundingSphere))
                  continue;
                for (var c = 1, u = t.length; c < u; c++) {
                  var _ = e[c - 1];
                  if (0 !== t[c].containsBoundSphere(h.boundingSphere)) {
                    var d = h._renderElements;
                    for (s = 0, l = d.length; s < l; s++)
                      _._addRenderElement(d[s]);
                  }
                }
              }
            }
            for (r = 0; r < 8; r++) {
              var f = this._children[r];
              if (null != f) {
                var p = i;
                if (i) {
                  var m = t[0].containsBoundBox(f._relaxBox);
                  if (0 === m) continue;
                  p = 2 === m;
                }
                f.cullingShadowObjects(t, e, p, n, a);
              }
            }
          }),
          (e.cullingShadowObjectsOnePSSM = function(t, e, i, n, a, r) {
            var s = e[0],
              o = 0,
              l = 0,
              h = 0,
              c = 0;
            for (o = 0, h = this._objects.length; o < h; o++) {
              var u = this._objects[o];
              if (
                u.castShadow &&
                z.isVisible(u._owner.layer.mask) &&
                u.enable
              ) {
                if (n && 0 === t.containsBoundSphere(u.boundingSphere))
                  continue;
                u._renderUpdate(i);
                var _ = u._renderElements;
                for (l = 0, c = _.length; l < c; l++) s._addRenderElement(_[l]);
              }
            }
            for (o = 0; o < 8; o++) {
              var d = this._children[o];
              if (null != d) {
                var f = n;
                if (n) {
                  var p = t.containsBoundBox(d._relaxBox);
                  if (0 === p) continue;
                  f = 2 === p;
                }
                d.cullingShadowObjectsOnePSSM(t, e, i, f, a, r);
              }
            }
          }),
          (e.renderBoudingBox = function(t) {
            this._renderBoudingBox(t);
            for (var e = 0; e < 8; ++e) {
              var i = this._children[e];
              i && i.renderBoudingBox(t);
            }
          }),
          (e.buildAllChild = function(t) {
            if (t < this._scene.treeLevel)
              for (var e = 0; e < 8; e++) {
                this.addChild(e).buildAllChild(t + 1);
              }
          }),
          (e._renderBoudingBox = function(t) {}),
          r(
            0,
            e,
            'exactBox',
            function() {
              return this._exactBox;
            },
            function(t) {
              (this._exactBox = t),
                Re.add(t.min, t.max, this._boundingBoxCenter),
                Re.scale(this._boundingBoxCenter, 0.5, this._boundingBoxCenter);
            }
          ),
          r(
            0,
            e,
            'relaxBox',
            function() {
              return this._relaxBox;
            },
            function(t) {
              (this._relaxBox = t),
                t.getCorners(this._corners),
                xe.createfromPoints(this._corners, this._boundingSphere);
            }
          ),
          (t.debugMode = !1),
          (t.relax = 1.15),
          (t.CHILDNUM = 8),
          n(t, [
            'tempVector0',
            function() {
              return (this.tempVector0 = new Re());
            },
            'tempSize',
            function() {
              return (this.tempSize = new Re());
            },
            'tempCenter',
            function() {
              return (this.tempCenter = new Re());
            },
            '_octreeSplit',
            function() {
              return (this._octreeSplit = [
                new Re(0.25, 0.25, 0.25),
                new Re(0.75, 0.25, 0.25),
                new Re(0.25, 0.75, 0.25),
                new Re(0.75, 0.75, 0.25),
                new Re(0.25, 0.25, 0.75),
                new Re(0.75, 0.25, 0.75),
                new Re(0.25, 0.75, 0.75),
                new Re(0.75, 0.75, 0.75)
              ]);
            }
          ]),
          t
        );
      })(),
      ft =
        ((function() {
          function t() {}
          a(t, 'laya.d3.core.scene.SceneManager');
        })(),
        (function() {
          function t(t, e, i, n) {
            (this._r = NaN),
              (this._g = NaN),
              (this._b = NaN),
              (this._a = NaN),
              void 0 === t && (t = 1),
              void 0 === e && (e = 1),
              void 0 === i && (i = 1),
              void 0 === n && (n = 1),
              (this._r = t),
              (this._g = e),
              (this._b = i),
              (this._a = n);
          }
          a(t, 'laya.d3.core.trail.module.Color', null, 'Color$1');
          return (
            (t.prototype.cloneTo = function(t) {
              (t._r = this._r),
                (t._g = this._g),
                (t._b = this._b),
                (t._a = this._a);
            }),
            n(t, [
              'RED',
              function() {
                return (this.RED = new t(1, 0, 0, 1));
              },
              'GREEN',
              function() {
                return (this.GREEN = new t(0, 1, 0, 1));
              },
              'BLUE',
              function() {
                return (this.BLUE = new t(0, 0, 1, 1));
              },
              'CYAN',
              function() {
                return (this.CYAN = new t(0, 1, 1, 1));
              },
              'YELLOW',
              function() {
                return (this.YELLOW = new t(1, 0.92, 0.016, 1));
              },
              'MAGENTA',
              function() {
                return (this.MAGENTA = new t(1, 0, 1, 1));
              },
              'GRAY',
              function() {
                return (this.GRAY = new t(0.5, 0.5, 0.5, 1));
              },
              'WHITE',
              function() {
                return (this.WHITE = new t(1, 1, 1, 1));
              },
              'BLACK',
              function() {
                return (this.BLACK = new t(0, 0, 0, 1));
              }
            ]),
            t
          );
        })()),
      pt = (function() {
        function t() {
          (this._mode = 0),
            (this._colorKeys = null),
            (this._alphaKeys = null),
            (this.index = 0),
            (this._colorKeyData = new Float32Array(40)),
            (this._alphaKeyData = new Float32Array(20)),
            (this._colorKeys = []),
            (this._alphaKeys = []);
        }
        a(t, 'laya.d3.core.trail.module.Gradient');
        var e = t.prototype;
        return (
          (e.setKeys = function(t, e) {
            (this._colorKeys = t), (this.index = 0);
            for (var i, n = 0; n < t.length; n++) {
              var a = (i = t[n]).color;
              (this._colorKeyData[this.index++] = a._r),
                (this._colorKeyData[this.index++] = a._g),
                (this._colorKeyData[this.index++] = a._b),
                (this._colorKeyData[this.index++] = i.time);
            }
            (this._alphaKeys = e), (this.index = 0);
            for (var r, s = 0; s < e.length; s++)
              (r = e[s]),
                (this._alphaKeyData[this.index++] = r.alpha),
                (this._alphaKeyData[this.index++] = r.time);
          }),
          (e.cloneTo = function(t) {
            var e = 0,
              i = 0,
              n = this.colorKeys,
              a = [];
            for (e = 0, i = n.length; e < i; e++) {
              var r = new gt();
              n[e].cloneTo(r), a.push(r);
            }
            var s = this.alphaKeys,
              o = [];
            for (e = 0, i = s.length; e < i; e++) {
              var l = new mt();
              s[e].cloneTo(l), o.push(l);
            }
            t.setKeys(a, o);
          }),
          r(
            0,
            e,
            'mode',
            function() {
              return this._mode;
            },
            function(t) {
              this._mode = t;
            }
          ),
          r(
            0,
            e,
            'colorKeys',
            function() {
              return this._colorKeys;
            },
            function(t) {
              (this._colorKeys = t), (this.index = 0);
              for (var e = 0; e < t.length; e++) {
                var i = t[e],
                  n = i.color;
                (this._colorKeyData[this.index++] = n._r),
                  (this._colorKeyData[this.index++] = n._g),
                  (this._colorKeyData[this.index++] = n._b),
                  (this._colorKeyData[this.index++] = i.time);
              }
            }
          ),
          r(
            0,
            e,
            'alphaKeys',
            function() {
              return this._alphaKeys;
            },
            function(t) {
              (this._alphaKeys = t), (this.index = 0);
              for (var e = 0; e < t.length; e++) {
                var i = t[e];
                (this._alphaKeyData[this.index++] = i.alpha),
                  (this._alphaKeyData[this.index++] = i.time);
              }
            }
          ),
          t
        );
      })(),
      mt = (function() {
        function t(t, e) {
          (this._alpha = NaN),
            (this._time = NaN),
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            (this._alpha = t),
            (this._time = e);
        }
        a(t, 'laya.d3.core.trail.module.GradientAlphaKey');
        var e = t.prototype;
        return (
          (e.cloneTo = function(t) {
            (t.alpha = this.alpha), (t.time = this.time);
          }),
          r(
            0,
            e,
            'alpha',
            function() {
              return this._alpha;
            },
            function(t) {
              this._alpha = t;
            }
          ),
          r(
            0,
            e,
            'time',
            function() {
              return this._time;
            },
            function(t) {
              this._time = t;
            }
          ),
          t
        );
      })(),
      gt = (function() {
        function t(t, e) {
          (this._color = null),
            (this._time = NaN),
            void 0 === e && (e = 0),
            (this._color = t || new ft()),
            (this._time = e);
        }
        a(t, 'laya.d3.core.trail.module.GradientColorKey');
        var e = t.prototype;
        return (
          (e.cloneTo = function(t) {
            this.color.cloneTo(t.color), (t.time = this.time);
          }),
          r(
            0,
            e,
            'color',
            function() {
              return this._color;
            },
            function(t) {
              this._color = t;
            }
          ),
          r(
            0,
            e,
            'time',
            function() {
              return this._time;
            },
            function(t) {
              this._time = t;
            }
          ),
          t
        );
      })(),
      yt =
        ((function() {
          function t() {}
          a(t, 'laya.d3.core.trail.module.GradientMode'),
            (t.Blend = 0),
            (t.Fixed = 1);
        })(),
        (function() {
          function t() {}
          a(t, 'laya.d3.core.trail.module.TextureMode'),
            (t.Stretch = 0),
            (t.Tile = 1);
        })(),
        (function() {
          function t() {
            (this.time = NaN),
              (this.inTangent = NaN),
              (this.outTangent = NaN),
              (this.value = NaN);
          }
          a(t, 'laya.d3.core.trail.module.TrailKeyFrame');
          return (
            (t.prototype.cloneTo = function(t) {
              (t.time = this.time),
                (t.inTangent = this.inTangent),
                (t.outTangent = this.outTangent),
                (t.value = this.value);
            }),
            t
          );
        })()),
      vt = (function() {
        function t(e) {
          (this._id = 0),
            (this._owner = null),
            (this._camera = null),
            (this._vertexBuffers = null),
            (this._verticesCount = 0),
            (this._virtualVerticesCount = 0),
            (this._maxVerticesCount = 256),
            (this._vertices1 = null),
            (this._vertexBuffer1 = null),
            (this._floatCountPerVertices1 = 8),
            (this._verticesIndex1 = 0),
            (this._everyAddVerticeCount1 = 0),
            (this._delLength = 0),
            (this._vertices2 = null),
            (this._vertexBuffer2 = null),
            (this._floatCountPerVertices2 = 1),
            (this._everyGroupVertexBirthTime = null),
            (this._VerticesToTailLength = null),
            (this._everyVertexToPreVertexDistance = null),
            (this._pointe = null),
            (this._pointAtoBVector3e = null),
            (this._isStart = !1),
            (this._isFinish = !1),
            (this._isDead = !1),
            (this._curtime = NaN),
            (this._curDisappearIndex = 0),
            (this._lastPosition = new Re()),
            (this._curPosition = new Re()),
            (this._delVector3 = new Re()),
            (this._lastFixedVertexPosition = new Re()),
            (this._pointAtoBVector3 = new Re()),
            (this._pointA = new Re()),
            (this._pointB = new Re()),
            (this._owner = e),
            (this._id = t.renderElementCount++),
            0 == this._id
              ? e._owner.transform.position.cloneTo(this._lastPosition)
              : e._curSubTrailFinishPosition.cloneTo(this._lastPosition),
            (this._everyGroupVertexBirthTime = []),
            (this._VerticesToTailLength = new Float32Array(
              this._maxVerticesCount
            )),
            (this._everyVertexToPreVertexDistance = new Float32Array(
              this._maxVerticesCount
            )),
            (this._vertices1 = new Float32Array(
              this._maxVerticesCount * this._floatCountPerVertices1
            )),
            (this._vertices2 = new Float32Array(
              this._maxVerticesCount * this._floatCountPerVertices2
            )),
            (this._vertexBuffer1 = new Yi(
              bt.vertexDeclaration1,
              this._maxVerticesCount,
              35044,
              !0
            )),
            (this._vertexBuffer2 = new Yi(
              bt.vertexDeclaration2,
              this._maxVerticesCount,
              35044,
              !0
            )),
            (this._vertexBuffers = []),
            this._vertexBuffers.push(this._vertexBuffer1),
            this._vertexBuffers.push(this._vertexBuffer2);
        }
        a(t, 'laya.d3.core.trail.TrailRenderElement');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.render.IRenderable': !0 }),
          (e._updateTrail = function() {
            (this._everyAddVerticeCount1 = 0),
              this._isStart ||
                this._addTrailByFirstPosition(
                  this._lastPosition,
                  this._curPosition
                ),
              this._addTrailByNextPosition(this._curPosition),
              this._vertexBuffer1.setData(
                this._vertices1,
                this._verticesIndex1,
                this._verticesIndex1,
                this._everyAddVerticeCount1
              ),
              (this._verticesIndex1 += this._everyAddVerticeCount1),
              this._curPosition.cloneTo(this._lastPosition),
              2 == this._virtualVerticesCount &&
                (this._verticesIndex1 -= 2 * this._floatCountPerVertices1);
          }),
          (e._addTrailByFirstPosition = function(t, e) {
            Re.subtract(e, t, this._delVector3),
              Re.cross(
                this._delVector3,
                this._camera.forward,
                this._pointAtoBVector3
              ),
              Re.normalize(this._pointAtoBVector3, this._pointAtoBVector3),
              Re.scale(
                this._pointAtoBVector3,
                this._owner.widthMultiplier / 2,
                this._pointAtoBVector3
              ),
              this._updateVerticesByPosition(t),
              t.cloneTo(this._lastFixedVertexPosition),
              (this._verticesCount += 2),
              (this._curtime = this._owner._hasLifeSubTrail
                ? this._owner._curSubTrailFinishCurTime
                : this._owner._curtime),
              this._everyGroupVertexBirthTime.push(this._curtime),
              (this._isStart = !0),
              (this._owner._hasLifeSubTrail = !0);
          }),
          (e._addTrailByNextPosition = function(t) {
            Re.subtract(t, this._lastFixedVertexPosition, this._delVector3),
              Re.cross(
                this._delVector3,
                this._camera.forward,
                this._pointAtoBVector3
              ),
              Re.normalize(this._pointAtoBVector3, this._pointAtoBVector3),
              Re.scale(
                this._pointAtoBVector3,
                this._owner.widthMultiplier / 2,
                this._pointAtoBVector3
              ),
              (this._delLength = Re.scalarLength(this._delVector3)),
              this._delLength - this._owner.minVertexDistance >=
              Ce.zeroTolerance
                ? ((this._owner._trailTotalLength += this._delLength),
                  (this._owner._trailSupplementLength = 0),
                  this._updateVerticesByPosition(t),
                  t.cloneTo(this._lastFixedVertexPosition),
                  (this._verticesCount += 2),
                  (this._virtualVerticesCount = 0),
                  this._everyGroupVertexBirthTime.push(this._owner._curtime),
                  this._verticesCount == this._maxVerticesCount &&
                    this._onTrailRenderElementFinish())
                : ((this._owner._trailSupplementLength = this._delLength),
                  this._updateVerticesByPosition(t),
                  (this._virtualVerticesCount = 2));
          }),
          (e._updateVerticesByPosition = function(t) {
            (this._pointe = t.elements),
              (this._pointAtoBVector3e = this._pointAtoBVector3.elements),
              (this._curtime = this._owner._curtime),
              this._owner._hasLifeSubTrail &&
                0 == this._isStart &&
                ((this._pointe = this._owner._curSubTrailFinishPosition.elements),
                (this._pointAtoBVector3e = this._owner._curSubTrailFinishDirection.elements),
                (this._curtime = this._owner._curSubTrailFinishCurTime)),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointe[0]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointe[1]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointe[2]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = -this._pointAtoBVector3e[0]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = -this._pointAtoBVector3e[1]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = -this._pointAtoBVector3e[2]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._curtime),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = 1),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointe[0]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointe[1]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointe[2]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointAtoBVector3e[0]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointAtoBVector3e[1]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._pointAtoBVector3e[2]),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = this._curtime),
              (this._vertices1[
                this._verticesIndex1 + this._everyAddVerticeCount1++
              ] = 0),
              (this._VerticesToTailLength[this._verticesCount / 2] =
                this._owner._trailTotalLength +
                this._owner._trailSupplementLength),
              0 == this._owner._trailSupplementLength
                ? (this._everyVertexToPreVertexDistance[
                    this._verticesCount / 2
                  ] = this._delLength)
                : (this._everyVertexToPreVertexDistance[
                    this._verticesCount / 2
                  ] = this._isStart ? this._owner._trailSupplementLength : 0);
          }),
          (e._updateVertexBuffer2 = function() {
            var t = 0,
              e = 0,
              i = 0,
              n = 0;
            for (
              i = 0, n = (this._verticesCount + this._virtualVerticesCount) / 2;
              i < n;
              i++
            )
              (e =
                0 == this._owner.textureMode
                  ? (this._VerticesToTailLength[i] -
                      this._owner._trailDeadLength) /
                    (this._owner._trailTotalLength +
                      this._owner._trailSupplementLength -
                      this._owner._trailDeadLength)
                  : this._owner._trailTotalLength +
                    this._owner._trailSupplementLength -
                    this._VerticesToTailLength[i]),
                (this._vertices2[t++] = 1 - e),
                (this._vertices2[t++] = 1 - e);
            this._vertexBuffer2.setData(
              this._vertices2,
              0,
              0,
              this._verticesCount + this._virtualVerticesCount
            );
          }),
          (e._onTrailRenderElementFinish = function() {
            this._lastFixedVertexPosition.cloneTo(
              this._owner._curSubTrailFinishPosition
            ),
              this._pointAtoBVector3.cloneTo(
                this._owner._curSubTrailFinishDirection
              ),
              (this._owner._curSubTrailFinishCurTime = this._owner._curtime),
              (this._isFinish = !0);
          }),
          (e._updateDisappear = function() {
            var t = 0,
              e = 0;
            for (
              t = this._curDisappearIndex,
                e = (this._verticesCount + this._virtualVerticesCount) / 2;
              t < e;
              t++
            )
              this._owner._curtime - this._everyGroupVertexBirthTime[t] >=
                this._owner.time + Ce.zeroTolerance &&
                (this._curDisappearIndex++,
                (this._owner._trailDeadLength += this._everyVertexToPreVertexDistance[
                  this._curDisappearIndex
                ]),
                this._curDisappearIndex >=
                  (this._verticesCount + this._virtualVerticesCount) / 2 &&
                  (this._isDead = !0));
          }),
          (e._beforeRender = function(t) {
            return (
              (this._camera = t.camera),
              null != this._camera &&
                (this._owner._owner.transform.position.cloneTo(
                  this._curPosition
                ),
                !this._isDead &&
                  (this._verticesCount < this._maxVerticesCount
                    ? (this._owner._isStart ||
                        (this._owner._owner.transform.position.cloneTo(
                          this._lastPosition
                        ),
                        (this._owner._isStart = !0)),
                      Re.equals(this._lastPosition, this._curPosition) ||
                        this._updateTrail())
                    : this._isFinish &&
                      ((this._isFinish = !1),
                      (this._owner._curSubTrailFinished = !0)),
                  this._verticesCount > 0) &&
                  (this._updateVertexBuffer2(), this._updateDisappear(), !0))
            );
          }),
          (e._render = function(t) {
            this._isDead ||
              (R.mainContext.drawArrays(
                5,
                2 * this._curDisappearIndex,
                this._verticesCount +
                  this._virtualVerticesCount -
                  2 * this._curDisappearIndex
              ),
              console.log(
                2 * this._curDisappearIndex,
                this._verticesCount +
                  this._virtualVerticesCount -
                  2 * this._curDisappearIndex
              ),
              L.drawCall++,
              (L.trianglesFaces +=
                this._verticesCount +
                this._virtualVerticesCount -
                2 * this._curDisappearIndex -
                2));
          }),
          (e._getVertexBuffer = function(t) {
            return (
              void 0 === t && (t = 0),
              0 === t
                ? this._vertexBuffer1
                : 1 === t
                ? this._vertexBuffer2
                : null
            );
          }),
          (e._getVertexBuffers = function() {
            return this._vertexBuffers;
          }),
          (e._getIndexBuffer = function() {
            return null;
          }),
          (e.reActivate = function() {
            (this._id = laya.d3.core.trail.TrailRenderElement
              .renderElementCount++),
              (this._isStart = !1),
              (this._isFinish = !1),
              (this._isDead = !1),
              (this._verticesCount = 0),
              (this._virtualVerticesCount = 0),
              (this._verticesIndex1 = 0),
              (this._delLength = 0),
              (this._curDisappearIndex = 0),
              (this._everyGroupVertexBirthTime = []),
              this._owner._curSubTrailFinishPosition.cloneTo(
                this._lastPosition
              );
          }),
          (e._destroy = function() {
            this._vertexBuffer1.dispose(),
              this._vertexBuffer2.dispose(),
              (this._vertices1 = null),
              (this._vertexBuffer1 = null),
              (this._vertices2 = null),
              (this._vertexBuffer2 = null),
              (this._vertexBuffers = null),
              (this._everyGroupVertexBirthTime = null),
              (this._VerticesToTailLength = null),
              (this._everyVertexToPreVertexDistance = null),
              (this._lastPosition = null),
              (this._curPosition = null),
              (this._delVector3 = null),
              (this._lastFixedVertexPosition = null),
              (this._pointAtoBVector3 = null),
              (this._pointe = null),
              (this._pointAtoBVector3e = null),
              (this._pointA = null),
              (this._pointB = null);
          }),
          r(0, e, '_vertexBufferCount', function() {
            return this._vertexBuffers.length;
          }),
          r(0, e, 'triangleCount', function() {
            return 0;
          }),
          (t.renderElementCount = 0),
          t
        );
      })(),
      bt = (function() {
        function t() {}
        a(t, 'laya.d3.core.trail.VertexTrail');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration1;
          }),
          r(1, t, 'vertexDeclaration1', function() {
            return t._vertexDeclaration1;
          }),
          r(1, t, 'vertexDeclaration2', function() {
            return t._vertexDeclaration2;
          }),
          n(t, [
            '_vertexDeclaration1',
            function() {
              return (this._vertexDeclaration1 = new Tt(32, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 41),
                new Mt(24, 'single', 33),
                new Mt(28, 'single', 40)
              ]));
            },
            '_vertexDeclaration2',
            function() {
              return (this._vertexDeclaration2 = new Tt(4, [
                new Mt(0, 'single', 38)
              ]));
            }
          ]),
          t
        );
      })(),
      wt = (function() {
        function t(t) {
          (this._vertexDeclaration = null),
            (this._vertexDatas = null),
            (this._indexDatas = null),
            (this._vertexBuffer = null),
            (this._indexBuffer = null),
            (this._currentCombineVertexCount = 0),
            (this._currentCombineIndexCount = 0),
            (this._combineRenderElements = null),
            (this._materials = null),
            (this._materialToRenderElementsOffsets = null),
            (this._merageElements = null),
            (this._combineRenderElementPool = null),
            (this._combineRenderElementPoolIndex = 0),
            (this._currentCombineVertexCount = 0),
            (this._currentCombineIndexCount = 0),
            (this._combineRenderElements = []),
            (this._materialToRenderElementsOffsets = []),
            (this._materials = []),
            (this._merageElements = []),
            (this._combineRenderElementPool = []),
            (this._combineRenderElementPoolIndex = 0),
            (this._vertexDeclaration = t);
        }
        a(t, 'laya.d3.graphics.DynamicBatch');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.render.IRenderable': !0 }),
          (e._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
          }),
          (e._getIndexBuffer = function() {
            return this._indexBuffer;
          }),
          (e._getCombineRenderElementFromPool = function(t, e, i) {
            var n = this._combineRenderElementPool[
              this._combineRenderElementPoolIndex++
            ];
            return (
              n ||
                ((this._combineRenderElementPool[
                  this._combineRenderElementPoolIndex - 1
                ] = n = new ct()),
                (n._sprite3D = new gn())),
              n._sprite3D._render._renderUpdate(i),
              n
            );
          }),
          (e._getRenderElement = function(e, i, n) {
            this._vertexDatas ||
              ((this._vertexDatas = new Float32Array(
                (this._vertexDeclaration.vertexStride / 4) * t.maxVertexCount
              )),
              (this._indexDatas = new Uint16Array(t.maxIndexCount)),
              (this._vertexBuffer = Yi.create(
                this._vertexDeclaration,
                t.maxVertexCount,
                35048
              )),
              (this._indexBuffer = qi.create(
                'ushort',
                t.maxIndexCount,
                35048
              ))),
              (this._merageElements.length = 0);
            for (
              var a = 0, r = 0, s = 0, o = this._combineRenderElements.length;
              s < o;
              s++
            ) {
              var l = this._combineRenderElements[s],
                h = l.getDynamicBatchBakedVertexs(0),
                c = l.getBakedIndices(),
                u = l._sprite3D.transform._isFrontFaceInvert,
                _ = a / (this._vertexDeclaration.vertexStride / 4),
                d = r,
                f = d + c.length;
              (l._tempBatchIndexStart = d),
                (l._tempBatchIndexEnd = f),
                this._indexDatas.set(c, r);
              var p = 0;
              if (u)
                for (p = d; p < f; p += 3) {
                  this._indexDatas[p] = _ + this._indexDatas[p];
                  var m = this._indexDatas[p + 1],
                    g = this._indexDatas[p + 2];
                  (this._indexDatas[p + 1] = _ + g),
                    (this._indexDatas[p + 2] = _ + m);
                }
              else
                for (p = d; p < f; p += 3)
                  (this._indexDatas[p] = _ + this._indexDatas[p]),
                    (this._indexDatas[p + 1] = _ + this._indexDatas[p + 1]),
                    (this._indexDatas[p + 2] = _ + this._indexDatas[p + 2]);
              (r += c.length), this._vertexDatas.set(h, a), (a += h.length);
            }
            for (
              this._vertexBuffer.setData(this._vertexDatas),
                this._indexBuffer.setData(this._indexDatas),
                this._combineRenderElementPoolIndex = 0,
                s = 0,
                o = this._materials.length;
              s < o;
              s++
            ) {
              var y = this._getCombineRenderElementFromPool(e, i, n);
              (y._type = 2), (y._staticBatch = null), (y.renderObj = this);
              var v = this._combineRenderElements[
                  this._materialToRenderElementsOffsets[s]
                ]._tempBatchIndexStart,
                b =
                  s + 1 === this._materialToRenderElementsOffsets.length
                    ? r
                    : this._combineRenderElements[
                        this._materialToRenderElementsOffsets[s + 1]
                      ]._tempBatchIndexStart;
              (y._tempBatchIndexStart = v),
                (y._tempBatchIndexEnd = b),
                (y._material = this._materials[s]),
                this._merageElements.push(y);
            }
          }),
          (e._addCombineRenderObjTest = function(e) {
            var i = e.renderObj,
              n =
                this._currentCombineIndexCount + i._getIndexBuffer().indexCount;
            return !(
              this._currentCombineVertexCount +
                i._getVertexBuffer().vertexCount >
                t.maxVertexCount || n > t.maxIndexCount
            );
          }),
          (e._addCombineRenderObj = function(t) {
            var e = t.renderObj;
            this._combineRenderElements.push(t),
              (this._currentCombineIndexCount =
                this._currentCombineIndexCount +
                e._getIndexBuffer().indexCount),
              (this._currentCombineVertexCount =
                this._currentCombineVertexCount +
                e._getVertexBuffer().vertexCount);
          }),
          (e._addCombineMaterial = function(t) {
            this._materials.push(t);
          }),
          (e._addMaterialToRenderElementOffset = function(t) {
            this._materialToRenderElementsOffsets.push(t);
          }),
          (e._clearRenderElements = function() {
            (this._combineRenderElements.length = 0),
              (this._materials.length = 0),
              (this._materialToRenderElementsOffsets.length = 0),
              (this._currentCombineVertexCount = 0),
              (this._currentCombineIndexCount = 0);
          }),
          (e._addToRenderQueue = function(t, e, i, n) {
            this._getRenderElement(e, i, n);
            for (var a = 0, r = this._materials.length; a < r; a++)
              t.getRenderQueue(
                this._materials[a].renderQueue
              )._addDynamicBatchElement(this._merageElements[a]);
          }),
          (e._beforeRender = function(t) {
            return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
          }),
          (e._render = function(t) {
            var e = t._batchIndexEnd - t._batchIndexStart;
            R.mainContext.drawElements(4, e, 5123, 2 * t._batchIndexStart),
              L.drawCall++,
              (L.trianglesFaces += e / 3);
          }),
          (e._getVertexBuffers = function() {
            return null;
          }),
          r(0, e, '_vertexBufferCount', function() {
            return 1;
          }),
          r(0, e, 'triangleCount', function() {
            return this._indexBuffer.indexCount / 3;
          }),
          r(0, e, 'combineRenderElementsCount', function() {
            return this._combineRenderElements.length;
          }),
          (t.maxVertexCount = 2e4),
          (t.maxIndexCount = 4e4),
          (t.maxCombineTriangleCount = 10),
          t
        );
      })(),
      xt = (function() {
        function t() {
          (this._dynamicBatches = null),
            (this._prepareDynamicBatchCombineElements = null),
            (this._dynamicBatches = {}),
            (this._prepareDynamicBatchCombineElements = []);
        }
        a(t, 'laya.d3.graphics.DynamicBatchManager');
        var e = t.prototype;
        return (
          (e.getDynamicBatch = function(t, e) {
            var i,
              n = t.id.toString() + e;
            return (
              this._dynamicBatches[n]
                ? (i = this._dynamicBatches[n])
                : (this._dynamicBatches[n] = i = new wt(t)),
              i
            );
          }),
          (e._garbageCollection = function() {
            for (var t in this._dynamicBatches)
              0 === this._dynamicBatches[t].combineRenderElementsCount &&
                delete this._dynamicBatches[t];
          }),
          (e._addPrepareRenderElement = function(t) {
            this._prepareDynamicBatchCombineElements.push(t);
          }),
          (e._finishCombineDynamicBatch = function(e) {
            this._prepareDynamicBatchCombineElements.sort(
              t._sortPrepareDynamicBatch
            );
            for (
              var i,
                n,
                a,
                r,
                s,
                o,
                l,
                h,
                c = -1,
                u = !0,
                _ = 0,
                d = -1,
                f = 0,
                p = this._prepareDynamicBatchCombineElements.length;
              f < p;
              f++
            ) {
              var m = (s = this._prepareDynamicBatchCombineElements[
                  f
                ]).renderObj._getVertexBuffer(0).vertexDeclaration,
                g = n !== m;
              g && ((_ = 0), (n = m));
              var y = _ !== c;
              if (
                (y && (c = _),
                (g || y) && ((o = this.getDynamicBatch(m, _)), (i = null)),
                u)
              )
                if (o._addCombineRenderObjTest(s)) {
                  if (((r = s._material), i !== r))
                    l &&
                      (e
                        .getRenderQueue(h._material.renderQueue)
                        ._addRenderElement(h),
                      (l = null),
                      (h = null),
                      (d = -1)),
                      (l = r),
                      (d = o.combineRenderElementsCount),
                      (h = s),
                      (i = r);
                  else if (l) {
                    var v = h.renderObj,
                      b = s.renderObj;
                    v._getVertexBuffer().vertexCount +
                      b._getVertexBuffer().vertexCount >
                      wt.maxVertexCount ||
                    v._getIndexBuffer().indexCount +
                      b._getIndexBuffer().indexCount >
                      wt.maxIndexCount
                      ? (e
                          .getRenderQueue(h._material.renderQueue)
                          ._addRenderElement(h),
                        (l = r),
                        (d = o.combineRenderElementsCount),
                        (h = s))
                      : (o._addCombineMaterial(l),
                        o._addMaterialToRenderElementOffset(d),
                        o._addCombineRenderObj(h),
                        (l = null),
                        (h = null),
                        (d = -1),
                        o._addCombineRenderObj(s));
                  } else o._addCombineRenderObj(s);
                  u = !0;
                } else
                  l &&
                    (e
                      .getRenderQueue(h._material.renderQueue)
                      ._addRenderElement(h),
                    (l = null),
                    (h = null),
                    (d = -1)),
                    _++,
                    (u = !1);
              else
                (a = this._prepareDynamicBatchCombineElements[f - 1]),
                  o._addMaterialToRenderElementOffset(
                    o.combineRenderElementsCount
                  ),
                  (i = a._material),
                  o._addCombineMaterial(i),
                  o._addCombineRenderObj(a),
                  (u = !0),
                  i !== (r = s._material)
                    ? ((l = r), (d = o.combineRenderElementsCount), (h = s))
                    : o._addCombineRenderObj(s),
                  (i = r);
            }
            l &&
              (e.getRenderQueue(h._material.renderQueue)._addRenderElement(h),
              (l = null),
              (h = null),
              (d = -1)),
              (this._prepareDynamicBatchCombineElements.length = 0);
          }),
          (e._clearRenderElements = function() {
            for (var t in this._dynamicBatches)
              this._dynamicBatches[t]._clearRenderElements();
          }),
          (e._addToRenderQueue = function(t, e, i, n) {
            for (var a in this._dynamicBatches) {
              var r = this._dynamicBatches[a];
              r.combineRenderElementsCount > 0 &&
                r._addToRenderQueue(t, e, i, n);
            }
          }),
          (e.dispose = function() {
            this._dynamicBatches = null;
          }),
          (t._sortPrepareDynamicBatch = function(t, e) {
            return t._mainSortID - e._mainSortID;
          }),
          t
        );
      })(),
      It = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.graphics.FrustumCulling'),
          (t.renderShadowObjectCulling = function(t, e, i, n, a) {
            var r = 0,
              s = 0,
              o = 0,
              l = 0;
            for (r = 0, o = i.length; r < o; r++) {
              var h = i[r];
              h && h._clearRenderElements();
            }
            var c,
              u,
              _,
              d = t._cullingRenders;
            if (a > 1) {
              for (r = 0, o = t._cullingRendersLength; r < o; r++)
                if (
                  (c = d[r]).castShadow &&
                  z.isVisible(c._owner.layer.mask) &&
                  c.enable
                )
                  for (var f = 1, p = e.length; f < p; f++)
                    if (
                      ((u = i[f - 1]),
                      0 !== e[f].containsBoundSphere(c.boundingSphere))
                    )
                      for (
                        s = 0, l = (_ = c._renderElements).length;
                        s < l;
                        s++
                      )
                        u._addRenderElement(_[s]);
            } else
              for (r = 0, o = t._cullingRendersLength; r < o; r++)
                if (
                  (c = d[r]).castShadow &&
                  z.isVisible(c._owner.layer.mask) &&
                  c.enable &&
                  0 !== e[0].containsBoundSphere(c.boundingSphere)
                )
                  for (
                    c._renderUpdate(n),
                      u = i[0],
                      s = 0,
                      l = (_ = c._renderElements).length;
                    s < l;
                    s++
                  )
                    u._addRenderElement(_[s]);
          }),
          (t.renderShadowObjectCullingOctree = function(t, e, i, n, a) {
            for (var r = 0, s = i.length; r < s; r++) {
              var o = i[r];
              o && o._clearRenderElements();
            }
            a > 1
              ? t.treeRoot.cullingShadowObjects(e, i, !0, 0, t)
              : t.treeRoot.cullingShadowObjectsOnePSSM(e[0], i, n, !0, 0, t);
          }),
          (t.renderObjectCulling = function(t, e, i, n, a, r) {
            var s = 0,
              o = 0,
              l = 0,
              h = 0,
              c = e._quenes,
              u = e._dynamicBatchManager,
              _ = e._cullingRenders;
            for (s = 0, o = c.length; s < o; s++) {
              var d = c[s];
              d && d._clearRenderElements();
            }
            var f = Ct._staticBatchManagers;
            for (s = 0, o = f.length; s < o; s++) f[s]._clearRenderElements();
            u._clearRenderElements();
            var p = i.transform.position;
            for (s = 0, o = e._cullingRendersLength; s < o; s++) {
              var m = _[s];
              if (
                z.isVisible(m._owner.layer.mask) &&
                m.enable &&
                0 !== t.containsBoundSphere(m.boundingSphere) &&
                m._renderUpdate(r)
              ) {
                m._distanceForSort =
                  Re.distance(m.boundingSphere.center, p) + m.sortingFudge;
                var g = m._renderElements;
                for (l = 0, h = g.length; l < h; l++) {
                  var y = g[l],
                    v = y._staticBatch;
                  if (v && v._material === y._material)
                    v._addBatchRenderElement(y);
                  else {
                    var b = y.renderObj;
                    b.triangleCount < 10 &&
                    1 === b._vertexBufferCount &&
                    b._getIndexBuffer() &&
                    y._material.renderQueue < 2 &&
                    y._canDynamicBatch &&
                    !m._owner.isStatic
                      ? u._addPrepareRenderElement(y)
                      : e
                          .getRenderQueue(y._material.renderQueue)
                          ._addRenderElement(y);
                  }
                }
              }
            }
            for (s = 0, o = f.length; s < o; s++)
              f[s]._addToRenderQueue(e, n, a, r);
            u._finishCombineDynamicBatch(e), u._addToRenderQueue(e, n, a, r);
          }),
          (t.renderObjectCullingOctree = function(t, e, i, n, a, r) {
            var s = 0,
              o = 0,
              l = e._quenes,
              h = e._dynamicBatchManager;
            for (s = 0, o = l.length; s < o; s++) {
              var c = l[s];
              c && c._clearRenderElements();
            }
            var u = Ct._staticBatchManagers;
            for (s = 0, o = u.length; s < o; s++) u[s]._clearRenderElements();
            for (
              h._clearRenderElements(),
                e._cullingRenders.length = 0,
                e.treeRoot.cullingObjects(t, !0, 0, i.transform.position, r),
                s = 0,
                o = u.length;
              s < o;
              s++
            )
              u[s]._addToRenderQueue(e, n, a, r);
            h._finishCombineDynamicBatch(e), h._addToRenderQueue(e, n, a, r);
          }),
          (t.renderObjectCullingNoBoundFrustum = function(t, e, i, n, a) {
            var r = 0,
              s = 0,
              o = 0,
              l = 0,
              h = t._quenes,
              c = t._dynamicBatchManager,
              u = t._cullingRenders;
            for (r = 0, s = h.length; r < s; r++) {
              var _ = h[r];
              _ && _._clearRenderElements();
            }
            var d = Ct._staticBatchManagers;
            for (r = 0, s = d.length; r < s; r++) d[r]._clearRenderElements();
            c._clearRenderElements();
            var f = e.transform.position;
            for (r = 0, s = t._cullingRendersLength; r < s; r++) {
              var p = u[r];
              if (z.isVisible(p._owner.layer.mask) && p.enable) {
                p._renderUpdate(a),
                  (p._distanceForSort =
                    Re.distance(p.boundingSphere.center, f) + p.sortingFudge);
                var m = p._renderElements;
                for (o = 0, l = m.length; o < l; o++) {
                  var g = m[o],
                    y = g._staticBatch;
                  if (y && y._material === g._material)
                    y._addBatchRenderElement(g);
                  else {
                    var v = g.renderObj;
                    v.triangleCount < 10 &&
                    1 === v._vertexBufferCount &&
                    v._getIndexBuffer() &&
                    g._material.renderQueue < 2 &&
                    g._canDynamicBatch &&
                    !p._owner.isStatic
                      ? c._addPrepareRenderElement(g)
                      : t
                          .getRenderQueue(g._material.renderQueue)
                          ._addRenderElement(g);
                  }
                }
              }
            }
            for (r = 0, s = d.length; r < s; r++)
              d[r]._addToRenderQueue(t, i, n, a);
            c._finishCombineDynamicBatch(t), c._addToRenderQueue(t, i, n, a);
          }),
          t
        );
      })(),
      Ct = (function() {
        function t() {
          (this._initBatchRenderElements = null),
            (this._staticBatches = null),
            (this._initBatchRenderElements = []),
            (this._staticBatches = {});
        }
        a(t, 'laya.d3.graphics.StaticBatchManager');
        var e = t.prototype;
        return (
          (e._finishInit = function() {
            for (var t in this._staticBatches)
              this._staticBatches[t]._finishInit();
            this._initBatchRenderElements.length = 0;
          }),
          (e._initStaticBatchs = function(t) {
            throw new Error('StaticBatchManager:must override this function.');
          }),
          (e._addInitBatchSprite = function(t) {
            for (
              var e = t._render._renderElements, i = 0, n = e.length;
              i < n;
              i++
            )
              this._initBatchRenderElements.push(e[i]);
          }),
          (e._clearRenderElements = function() {
            for (var t in this._staticBatches)
              this._staticBatches[t]._clearRenderElements();
          }),
          (e._garbageCollection = function(t) {
            var e = t._staticBatch,
              i = e._initBatchRenderElements,
              n = i.indexOf(t);
            i.splice(n, 1),
              0 === i.length &&
                (e.dispose(), delete this._staticBatches[e._key]);
          }),
          (e._addToRenderQueue = function(t, e, i, n) {
            for (var a in this._staticBatches) {
              var r = this._staticBatches[a];
              r._batchRenderElements.length > 0 && r._updateToRenderQueue(t, n);
            }
          }),
          (e.dispose = function() {
            this._staticBatches = null;
          }),
          (t._addToStaticBatchQueue = function(e) {
            e instanceof laya.d3.core.RenderableSprite3D &&
              e._addToInitStaticBatchManager();
            for (var i = 0, n = e.numChildren; i < n; i++)
              t._addToStaticBatchQueue(e._childs[i]);
          }),
          (t.combine = function(e, i) {
            var n,
              a = 0,
              r = 0;
            if (i)
              for (a = 0, r = i.length; a < r; a++) {
                i[a]._addToInitStaticBatchManager();
              }
            else e && t._addToStaticBatchQueue(e);
            for (a = 0, r = t._staticBatchManagers.length; a < r; a++)
              (n = t._staticBatchManagers[a])._initStaticBatchs(e),
                n._finishInit();
          }),
          (t._staticBatchManagers = []),
          t
        );
      })(),
      St = (function() {
        function t(t, e, i) {
          (this._combineRenderElementPoolIndex = 0),
            (this._combineRenderElementPool = null),
            (this._initBatchRenderElements = null),
            (this._batchRenderElements = null),
            (this._material = null),
            (this._rootOwner = null),
            (this._key = null),
            (this._manager = null),
            (this._key = t),
            (this._manager = e),
            (this._combineRenderElementPoolIndex = 0),
            (this._combineRenderElementPool = []),
            (this._initBatchRenderElements = []),
            (this._batchRenderElements = []),
            (this._rootOwner = i);
        }
        a(t, 'laya.d3.graphics.StaticBatch');
        var e = t.prototype;
        return (
          i.imps(e, {
            'laya.d3.core.render.IRenderable': !0,
            'laya.resource.IDispose': !0
          }),
          (e._binarySearch = function(t) {
            for (
              var e = 0, i = this._batchRenderElements.length - 1, n = 0;
              e <= i;

            )
              (n = Math.floor((e + i) / 2)),
                this._compareBatchRenderElement(this._batchRenderElements[n], t)
                  ? (i = n - 1)
                  : (e = n + 1);
            return e;
          }),
          (e._compareBatchRenderElement = function(t, e) {
            throw new Error('StaticBatch:must override this function.');
          }),
          (e._getVertexDecLightMap = function(t) {
            return t === re.vertexDeclaration
              ? te.vertexDeclaration
              : t === ae.vertexDeclaration
              ? $t.vertexDeclaration
              : t === qt.vertexDeclaration
              ? Gt.vertexDeclaration
              : t === he.vertexDeclaration
              ? null
              : t === Ot.vertexDeclaration
              ? Ut.vertexDeclaration
              : t === oe.vertexDeclaration
              ? ie.vertexDeclaration
              : t === Zt.vertexDeclaration
              ? Qt.vertexDeclaration
              : t === se.vertexDeclaration
              ? ee.vertexDeclaration
              : t === ae.vertexDeclaration
              ? $t.vertexDeclaration
              : t === Yt.vertexDeclaration
              ? zt.vertexDeclaration
              : t === he.vertexDeclaration
              ? null
              : t === Ot.vertexDeclaration
              ? Ut.vertexDeclaration
              : t === le.vertexDeclaration
              ? ne.vertexDeclaration
              : t === Zt.vertexDeclaration
              ? Qt.vertexDeclaration
              : t;
          }),
          (e._getCombineRenderElementFromPool = function() {
            throw new Error('StaticBatch:must override this function.');
          }),
          (e._addBatchRenderElement = function(t) {
            this._batchRenderElements.splice(this._binarySearch(t), 0, t);
          }),
          (e._updateToRenderQueue = function(t, e) {
            (this._combineRenderElementPoolIndex = 0),
              this._getRenderElement(
                t.getRenderQueue(this._material.renderQueue)._renderElements,
                t,
                e
              );
          }),
          (e._getRenderElement = function(t, e, i) {
            throw new Error('StaticBatch:must override this function.');
          }),
          (e._finishInit = function() {
            throw new Error('StaticBatch:must override this function.');
          }),
          (e._clearRenderElements = function() {
            this._batchRenderElements.length = 0;
          }),
          (e.dispose = function() {}),
          (e._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), null;
          }),
          (e._getIndexBuffer = function() {
            return null;
          }),
          (e._beforeRender = function(t) {
            return !0;
          }),
          (e._render = function(t) {}),
          (e._getVertexBuffers = function() {
            return null;
          }),
          r(0, e, '_vertexBufferCount', function() {
            return 1;
          }),
          r(0, e, 'triangleCount', function() {
            return 0;
          }),
          (t.combine = function(t) {
            console.log(
              'StaticBatch: discard property,please use StaticBatchManager.combine() function instead.'
            ),
              Ct.combine(t);
          }),
          (t.maxBatchVertexCount = 65535),
          t
        );
      })(),
      Tt = (function() {
        function t(e, i) {
          if (
            ((this._id = 0),
            (this._shaderValues = null),
            (this._shaderDefineValue = 0),
            (this._vertexStride = 0),
            (this._vertexElements = null),
            (this._vertexElementsDic = null),
            (this._id = ++t._uniqueIDCounter),
            this._id > t.maxVertexDeclaration)
          )
            throw new Error(
              'VertexDeclaration: VertexDeclaration count should not large than ',
              t.maxVertexDeclaration
            );
          (this._shaderValues = new Fe()),
            (this._vertexElementsDic = {}),
            (this._vertexStride = e),
            (this._vertexElements = i);
          for (var n = 0; n < i.length; n++) {
            var a = i[n],
              r = a.elementUsage;
            this._vertexElementsDic[r] = a;
            var s = [
              t._getTypeSize(a.elementFormat) / 4,
              5126,
              !1,
              this._vertexStride,
              a.offset
            ];
            switch ((this._shaderValues.setValue(r, s), r)) {
              case 1:
                this._addShaderDefine(ci.SHADERDEFINE_COLOR);
                break;
              case 2:
                this._addShaderDefine(ci.SHADERDEFINE_UV0);
                break;
              case 15:
                this._addShaderDefine(ci.SHADERDEFINE_UV1);
            }
          }
        }
        a(t, 'laya.d3.graphics.VertexDeclaration');
        var e = t.prototype;
        return (
          (e._addShaderDefine = function(t) {
            this._shaderDefineValue |= t;
          }),
          (e._removeShaderDefine = function(t) {
            this._shaderDefineValue &= ~t;
          }),
          (e.getVertexElements = function() {
            return this._vertexElements.slice();
          }),
          (e.getVertexElementByUsage = function(t) {
            return this._vertexElementsDic[t];
          }),
          (e.unBinding = function() {}),
          r(0, e, 'shaderDefineValue', function() {
            return this._shaderDefineValue;
          }),
          r(0, e, 'id', function() {
            return this._id;
          }),
          r(0, e, 'vertexStride', function() {
            return this._vertexStride;
          }),
          r(0, e, 'shaderValues', function() {
            return this._shaderValues;
          }),
          (t._getTypeSize = function(t) {
            switch (t) {
              case 'single':
                return 4;
              case 'vector2':
                return 8;
              case 'vector3':
                return 12;
              case 'vector4':
                return 16;
              case 'color':
              case 'byte4':
              case 'short2':
                return 4;
              case 'short4':
                return 8;
              case 'normalizedshort2':
                return 4;
              case 'normalizedshort4':
                return 8;
              case 'halfvector2':
                return 4;
              case 'halfvector4':
                return 8;
            }
            return 0;
          }),
          (t.getVertexStride = function(e) {
            for (var i = 0, n = 0; n < e.Length; n++) {
              var a = e[n],
                r = a.offset + t._getTypeSize(a.elementFormat);
              i < r && (i = r);
            }
            return i;
          }),
          (t._maxVertexDeclarationBit = 1e3),
          (t._uniqueIDCounter = 1),
          n(t, [
            'maxVertexDeclaration',
            function() {
              return (this.maxVertexDeclaration =
                2147483647 - 1e3 * Math.floor(2147483.647));
            }
          ]),
          t
        );
      })(),
      Mt = (function() {
        function t(t, e, i) {
          (this.offset = 0),
            (this.elementFormat = null),
            (this.elementUsage = 0),
            (this.offset = t),
            (this.elementFormat = e),
            (this.elementUsage = i);
        }
        return a(t, 'laya.d3.graphics.VertexElement'), t;
      })(),
      Et =
        ((function() {
          function t() {}
          a(t, 'laya.d3.graphics.VertexElementFormat'),
            (t.Single = 'single'),
            (t.Vector2 = 'vector2'),
            (t.Vector3 = 'vector3'),
            (t.Vector4 = 'vector4'),
            (t.Color = 'color'),
            (t.Byte4 = 'byte4'),
            (t.Short2 = 'short2'),
            (t.Short4 = 'short4'),
            (t.NormalizedShort2 = 'normalizedshort2'),
            (t.NormalizedShort4 = 'normalizedshort4'),
            (t.HalfVector2 = 'halfvector2'),
            (t.HalfVector4 = 'halfvector4');
        })(),
        (function() {
          function t() {}
          a(t, 'laya.d3.graphics.VertexElementUsage'),
            (t.POSITION0 = 0),
            (t.COLOR0 = 1),
            (t.TEXTURECOORDINATE0 = 2),
            (t.NORMAL0 = 3),
            (t.BINORMAL0 = 4),
            (t.TANGENT0 = 5),
            (t.BLENDINDICES0 = 6),
            (t.BLENDWEIGHT0 = 7),
            (t.DEPTH0 = 8),
            (t.FOG0 = 9),
            (t.POINTSIZE0 = 10),
            (t.SAMPLE0 = 11),
            (t.TESSELLATEFACTOR0 = 12),
            (t.COLOR1 = 13),
            (t.NEXTTEXTURECOORDINATE0 = 14),
            (t.TEXTURECOORDINATE1 = 15),
            (t.NEXTTEXTURECOORDINATE1 = 16),
            (t.CORNERTEXTURECOORDINATE0 = 17),
            (t.VELOCITY0 = 18),
            (t.STARTCOLOR0 = 19),
            (t.STARTSIZE = 20),
            (t.AGEADDSCALE0 = 21),
            (t.STARTROTATION = 22),
            (t.ENDCOLOR0 = 23),
            (t.STARTLIFETIME = 24),
            (t.TIME0 = 33),
            (t.SHAPEPOSITIONSTARTLIFETIME = 30),
            (t.DIRECTIONTIME = 32),
            (t.SIZEROTATION0 = 27),
            (t.RADIUS0 = 28),
            (t.RADIAN0 = 29),
            (t.STARTSPEED = 31),
            (t.RANDOM0 = 34),
            (t.RANDOM1 = 35),
            (t.SIMULATIONWORLDPOSTION = 36),
            (t.SIMULATIONWORLDROTATION = 37),
            (t.TEXTURECOORDINATE0X = 38),
            (t.TEXTURECOORDINATE0X1 = 39),
            (t.TEXTURECOORDINATE0Y = 40),
            (t.OFFSETVECTOR = 41);
        })(),
        (function() {
          function t(t, e, i) {
            (this._position = null),
              (this._textureCoordinate0 = null),
              (this._time = NaN),
              (this._position = t),
              (this._textureCoordinate0 = e),
              (this._time = i);
          }
          a(t, 'laya.d3.graphics.VertexGlitter');
          var e = t.prototype;
          return (
            i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
            r(0, e, 'textureCoordinate', function() {
              return this._textureCoordinate0;
            }),
            r(0, e, 'position', function() {
              return this._position;
            }),
            r(0, e, 'time', function() {
              return this._time;
            }),
            r(0, e, 'vertexDeclaration', function() {
              return t._vertexDeclaration;
            }),
            r(1, t, 'vertexDeclaration', function() {
              return t._vertexDeclaration;
            }),
            n(t, [
              '_vertexDeclaration',
              function() {
                return (this._vertexDeclaration = new Tt(24, [
                  new Mt(0, 'vector3', 0),
                  new Mt(12, 'vector2', 2),
                  new Mt(20, 'single', 33)
                ]));
              }
            ]),
            t
          );
        })()),
      Lt =
        ((function() {
          function t(t, e, i, n, a, r, s, o, l, h) {
            (this._cornerTextureCoordinate = null),
              (this._position = null),
              (this._velocity = null),
              (this._startColor = null),
              (this._endColor = null),
              (this._sizeRotation = null),
              (this._radius = null),
              (this._radian = null),
              (this._ageAddScale = NaN),
              (this._time = NaN),
              (this._cornerTextureCoordinate = t),
              (this._position = e),
              (this._velocity = i),
              (this._startColor = n),
              (this._endColor = a),
              (this._sizeRotation = r),
              (this._radius = s),
              (this._radian = o),
              (this._ageAddScale = l),
              (this._time = h);
          }
          a(t, 'laya.d3.graphics.VertexParticle');
          var e = t.prototype;
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
            r(0, e, 'endColor', function() {
              return this._endColor;
            }),
            r(0, e, 'cornerTextureCoordinate', function() {
              return this._cornerTextureCoordinate;
            }),
            r(0, e, 'sizeRotation', function() {
              return this._sizeRotation;
            }),
            r(0, e, 'velocity', function() {
              return this._velocity;
            }),
            r(0, e, 'position', function() {
              return this._position;
            }),
            r(0, e, 'startColor', function() {
              return this._startColor;
            }),
            r(0, e, 'radius', function() {
              return this._radius;
            }),
            r(0, e, 'radian', function() {
              return this._radian;
            }),
            r(0, e, 'ageAddScale', function() {
              return this._ageAddScale;
            }),
            r(0, e, 'time', function() {
              return this._time;
            }),
            r(0, e, 'vertexDeclaration', function() {
              return t._vertexDeclaration;
            }),
            r(1, t, 'vertexDeclaration', function() {
              return t._vertexDeclaration;
            }),
            n(t, [
              '_vertexDeclaration',
              function() {
                return (this._vertexDeclaration = new Tt(116, [
                  new Mt(0, 'vector4', 17),
                  new Mt(16, 'vector3', 0),
                  new Mt(28, 'vector3', 18),
                  new Mt(40, 'vector4', 19),
                  new Mt(56, 'vector4', 23),
                  new Mt(72, 'vector3', 27),
                  new Mt(84, 'vector2', 28),
                  new Mt(92, 'vector4', 29),
                  new Mt(108, 'single', 24),
                  new Mt(112, 'single', 33)
                ]));
              }
            ]);
        })(),
        (function() {
          function t(t) {
            (this._position = null), (this._position = t);
          }
          a(t, 'laya.d3.graphics.VertexPosition');
          var e = t.prototype;
          return (
            i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
            r(0, e, 'position', function() {
              return this._position;
            }),
            r(0, e, 'vertexDeclaration', function() {
              return t._vertexDeclaration;
            }),
            r(1, t, 'vertexDeclaration', function() {
              return t._vertexDeclaration;
            }),
            n(t, [
              '_vertexDeclaration',
              function() {
                return (this._vertexDeclaration = new Tt(12, [
                  new Mt(0, 'vector3', 0)
                ]));
              }
            ]),
            t
          );
        })()),
      Dt = (function() {
        function t(t, e) {
          (this._position = null),
            (this._normal = null),
            (this._position = t),
            (this._normal = e);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormal');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(24, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3)
              ]));
            }
          ]),
          t
        );
      })(),
      At = (function() {
        function t(t, e, i) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColor');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(40, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1)
              ]));
            }
          ]),
          t
        );
      })(),
      Nt = (function() {
        function t(t, e, i, n, a) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._blendIndex = n),
            (this._blendWeight = a);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorSkin');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(72, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector4', 7),
                new Mt(56, 'vector4', 6)
              ]));
            }
          ]),
          t
        );
      })(),
      Rt = (function() {
        function t(t, e, i, n, a, r) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._tangent = n),
            (this._blendIndex = a),
            (this._blendWeight = r);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorSkinSTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(88, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector4', 7),
                new Mt(56, 'vector4', 6),
                new Mt(72, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Bt = (function() {
        function t(t, e, i, n, a, r) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._tangent = n),
            (this._blendIndex = a),
            (this._blendWeight = r);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorSkinTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(84, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector4', 7),
                new Mt(56, 'vector4', 6),
                new Mt(72, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      kt = (function() {
        function t(t, e, i, n) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._tangent = n);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorSTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(56, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Pt = (function() {
        function t(t, e, i, n) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._tangent = n);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(52, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Ot = (function() {
        function t(t, e, i, n) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate = n);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTexture');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(48, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2)
              ]));
            }
          ]),
          t
        );
      })(),
      Ut = (function() {
        function t(t, e, i, n, a) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate0 = n),
            (this._textureCoordinate1 = a);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTexture0Texture1');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(56, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector2', 15)
              ]));
            }
          ]),
          t
        );
      })(),
      Vt = (function() {
        function t(t, e, i, n, a, r, s) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate0 = n),
            (this._textureCoordinate1 = a),
            (this._blendIndex = r),
            (this._blendWeight = s);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTexture0Texture1Skin');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(88, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector2', 15),
                new Mt(56, 'vector4', 7),
                new Mt(72, 'vector4', 6)
              ]));
            }
          ]),
          t
        );
      })(),
      Ft = (function() {
        function t(t, e, i, n, a, r, s, o) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate0 = n),
            (this._textureCoordinate1 = a),
            (this._tangent = r),
            (this._blendIndex = s),
            (this._blendWeight = o);
        }
        a(
          t,
          'laya.d3.graphics.VertexPositionNormalColorTexture0Texture1SkinSTangent'
        );
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(104, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector2', 15),
                new Mt(56, 'vector4', 7),
                new Mt(72, 'vector4', 6),
                new Mt(88, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Ht = (function() {
        function t() {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null);
        }
        a(
          t,
          'laya.d3.graphics.VertexPositionNormalColorTexture0Texture1SkinTangent'
        );
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          (e.VertexPositionNormalColorTexture0SkinTangent = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s,
            o
          ) {
            (this._position = t),
              (this._normal = e),
              (this._color = i),
              (this._textureCoordinate0 = n),
              (this._textureCoordinate1 = a),
              (this._tangent = r),
              (this._blendIndex = s),
              (this._blendWeight = o);
          }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(100, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector2', 15),
                new Mt(56, 'vector4', 7),
                new Mt(72, 'vector4', 6),
                new Mt(88, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Gt = (function() {
        function t(t, e, i, n, a, r) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate0 = n),
            (this._textureCoordinate1 = a),
            (this._tangent = r);
        }
        a(
          t,
          'laya.d3.graphics.VertexPositionNormalColorTexture0Texture1STangent'
        );
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(72, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector2', 15),
                new Mt(56, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      zt = (function() {
        function t() {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._tangent = null);
        }
        a(
          t,
          'laya.d3.graphics.VertexPositionNormalColorTexture0Texture1Tangent'
        );
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          (e.VertexPositionNormalColorTexture0Tangent = function(
            t,
            e,
            i,
            n,
            a,
            r
          ) {
            (this._position = t),
              (this._normal = e),
              (this._color = i),
              (this._textureCoordinate0 = n),
              (this._textureCoordinate1 = a),
              (this._tangent = r);
          }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(68, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector2', 15),
                new Mt(56, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      jt = (function() {
        function t(t, e, i, n, a, r) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate = n),
            (this._blendIndex = a),
            (this._blendWeight = r);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTextureSkin');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(80, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector4', 7),
                new Mt(64, 'vector4', 6)
              ]));
            }
          ]),
          t
        );
      })(),
      Wt = (function() {
        function t(t, e, i, n, a, r, s) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate = n),
            (this._tangent = a),
            (this._blendIndex = r),
            (this._blendWeight = s);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTextureSkinSTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(96, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector4', 7),
                new Mt(64, 'vector4', 6),
                new Mt(80, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Xt = (function() {
        function t(t, e, i, n, a, r, s) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate = n),
            (this._tangent = a),
            (this._blendIndex = r),
            (this._blendWeight = s);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTextureSkinTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(92, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector4', 7),
                new Mt(64, 'vector4', 6),
                new Mt(80, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      qt = (function() {
        function t(t, e, i, n, a) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate = n),
            (this._tangent = a);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTextureSTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(64, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Yt = (function() {
        function t(t, e, i, n, a) {
          (this._position = null),
            (this._normal = null),
            (this._color = null),
            (this._textureCoordinate = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._color = i),
            (this._textureCoordinate = n),
            (this._tangent = a);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalColorTextureTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'color', function() {
            return this._color;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(60, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 1),
                new Mt(40, 'vector2', 2),
                new Mt(48, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Jt = (function() {
        function t(t, e, i) {
          (this._position = null),
            (this._normal = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._tangent = i);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalSTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(40, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Kt = (function() {
        function t(t, e, i) {
          (this._position = null),
            (this._normal = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._tangent = i);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(36, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      Zt = (function() {
        function t(t, e, i) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTexture');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(32, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2)
              ]));
            }
          ]),
          t
        );
      })(),
      Qt = (function() {
        function t(t, e, i, n) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate0 = i),
            (this._textureCoordinate1 = n);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTexture0Texture1');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(40, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector2', 15)
              ]));
            }
          ]),
          t
        );
      })(),
      $t = (function() {
        function t(t, e, i, n, a, r) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate0 = i),
            (this._textureCoordinate1 = n),
            (this._blendIndex = a),
            (this._blendWeight = r);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTexture0Texture1Skin');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(72, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector2', 15),
                new Mt(40, 'vector4', 7),
                new Mt(56, 'vector4', 6)
              ]));
            }
          ]),
          t
        );
      })(),
      te = (function() {
        function t(t, e, i, n, a, r, s) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate0 = i),
            (this._textureCoordinate1 = n),
            (this._tangent = a),
            (this._blendIndex = r),
            (this._blendWeight = s);
        }
        a(
          t,
          'laya.d3.graphics.VertexPositionNormalTexture0Texture1SkinSTangent'
        );
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(88, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector2', 15),
                new Mt(40, 'vector4', 7),
                new Mt(56, 'vector4', 6),
                new Mt(72, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      ee = (function() {
        function t() {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null);
        }
        a(
          t,
          'laya.d3.graphics.VertexPositionNormalTexture0Texture1SkinTangent'
        );
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          (e.VertexPositionNormalTexture0SkinTangent = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s
          ) {
            (this._position = t),
              (this._normal = e),
              (this._textureCoordinate0 = i),
              (this._textureCoordinate1 = n),
              (this._tangent = a),
              (this._blendIndex = r),
              (this._blendWeight = s);
          }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(84, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector2', 15),
                new Mt(40, 'vector4', 7),
                new Mt(56, 'vector4', 6),
                new Mt(72, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      ie = (function() {
        function t(t, e, i, n, a) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate0 = i),
            (this._textureCoordinate1 = n),
            (this._tangent = a);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTexture0Texture1STangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(56, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector2', 15),
                new Mt(40, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      ne = (function() {
        function t() {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._tangent = null);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTexture0Texture1Tangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          (e.VertexPositionNormalTexture0Tangent = function(t, e, i, n, a) {
            (this._position = t),
              (this._normal = e),
              (this._textureCoordinate0 = i),
              (this._textureCoordinate1 = n),
              (this._tangent = a);
          }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(52, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector2', 15),
                new Mt(40, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      ae = (function() {
        function t(t, e, i, n, a) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i),
            (this._blendIndex = n),
            (this._blendWeight = a);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTextureSkin');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(64, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector4', 7),
                new Mt(48, 'vector4', 6)
              ]));
            }
          ]),
          t
        );
      })(),
      re = (function() {
        function t(t, e, i, n, a, r) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i),
            (this._tangent = n),
            (this._blendIndex = a),
            (this._blendWeight = r);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTextureSkinSTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(80, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector4', 7),
                new Mt(48, 'vector4', 6),
                new Mt(64, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      se = (function() {
        function t(t, e, i, n, a, r) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i),
            (this._tangent = n),
            (this._blendIndex = a),
            (this._blendWeight = r);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTextureSkinTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(76, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector4', 7),
                new Mt(48, 'vector4', 6),
                new Mt(64, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      oe = (function() {
        function t(t, e, i, n) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i),
            (this._tangent = n);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTextureSTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(48, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector4', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      le = (function() {
        function t(t, e, i, n) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._tangent = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i),
            (this._tangent = n);
        }
        a(t, 'laya.d3.graphics.VertexPositionNormalTextureTangent');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(44, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector3', 5)
              ]));
            }
          ]),
          t
        );
      })(),
      he = (function() {
        function t(t, e, i) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i);
        }
        a(t, 'laya.d3.graphics.VertexPositionNTBTexture');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(56, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector3', 5),
                new Mt(36, 'vector3', 4),
                new Mt(48, 'vector2', 2)
              ]));
            }
          ]),
          t
        );
      })(),
      ce = (function() {
        function t(t, e, i, n, a, r, s, o) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate0 = null),
            (this._textureCoordinate1 = null),
            (this._blendIndex = null),
            (this._blendWeight = null),
            (this._tangent = null),
            (this.binormal = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate0 = n),
            (this._textureCoordinate1 = a),
            (this._tangent = r),
            (i = i),
            (this._blendIndex = s),
            (this._blendWeight = o);
        }
        a(t, 'laya.d3.graphics.VertexPositionNTBTexture0Texture1Skin');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'tangent', function() {
            return this._tangent;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(0, e, 'textureCoordinate1', function() {
            return this._textureCoordinate1;
          }),
          r(0, e, 'blendIndex', function() {
            return this._blendIndex;
          }),
          r(0, e, 'blendWeight', function() {
            return this._blendWeight;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(96, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector3', 5),
                new Mt(36, 'vector3', 4),
                new Mt(48, 'vector2', 2),
                new Mt(56, 'vector2', 15),
                new Mt(64, 'vector4', 7),
                new Mt(80, 'vector4', 6)
              ]));
            }
          ]),
          t
        );
      })(),
      ue = (function() {
        function t(t, e, i) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoordinate = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoordinate = i);
        }
        a(t, 'laya.d3.graphics.VertexPositionNTBTextureSkin');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'textureCoordinate', function() {
            return this._textureCoordinate;
          }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(88, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector3', 5),
                new Mt(36, 'vector3', 4),
                new Mt(48, 'vector2', 2),
                new Mt(56, 'vector4', 7),
                new Mt(72, 'vector4', 6)
              ]));
            }
          ]),
          t
        );
      })(),
      _e = (function() {
        function t(t, e, i, n) {
          (this._position = null),
            (this._normal = null),
            (this._textureCoord0 = null),
            (this._textureCoord1 = null),
            (this._position = t),
            (this._normal = e),
            (this._textureCoord0 = i),
            (this._textureCoord1 = n);
        }
        a(t, 'laya.d3.graphics.VertexPositionTerrain');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'normal', function() {
            return this._normal;
          }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoord0', function() {
            return this._textureCoord0;
          }),
          r(0, e, 'textureCoord1', function() {
            return this._textureCoord1;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(40, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector3', 3),
                new Mt(24, 'vector2', 2),
                new Mt(32, 'vector2', 15)
              ]));
            }
          ]),
          t
        );
      })(),
      de = (function() {
        function t(t, e) {
          (this._position = null),
            (this._textureCoordinate0 = null),
            (this._position = t),
            (this._textureCoordinate0 = e);
        }
        a(t, 'laya.d3.graphics.VertexPositionTexture0');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'position', function() {
            return this._position;
          }),
          r(0, e, 'textureCoordinate0', function() {
            return this._textureCoordinate0;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(20, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector2', 2)
              ]));
            }
          ]),
          t
        );
      })(),
      fe = (function() {
        function t(t, e, i, n, a, r, s, o, l, h, c, u, _, d) {
          (this._cornerTextureCoordinate = null),
            (this._positionStartLifeTime = null),
            (this._velocity = null),
            (this._startColor = null),
            (this._startSize = null),
            (this._startRotation0 = null),
            (this._startRotation1 = null),
            (this._startRotation2 = null),
            (this._startLifeTime = NaN),
            (this._time = NaN),
            (this._startSpeed = NaN),
            (this._randoms0 = null),
            (this._randoms1 = null),
            (this._simulationWorldPostion = null),
            (this._cornerTextureCoordinate = t),
            (this._positionStartLifeTime = e),
            (this._velocity = i),
            (this._startColor = n),
            (this._startSize = a),
            (this._startRotation0 = r),
            (this._startRotation1 = s),
            (this._startRotation2 = o),
            (this._startLifeTime = l),
            (this._time = h),
            (this._startSpeed = c),
            (this._randoms0 = this.random0),
            (this._randoms1 = this.random1),
            (this._simulationWorldPostion = d);
        }
        a(t, 'laya.d3.graphics.VertexShurikenParticleBillboard');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'cornerTextureCoordinate', function() {
            return this._cornerTextureCoordinate;
          }),
          r(0, e, 'random1', function() {
            return this._randoms1;
          }),
          r(0, e, 'startRotation2', function() {
            return this._startRotation2;
          }),
          r(0, e, 'positionStartLifeTime', function() {
            return this._positionStartLifeTime;
          }),
          r(0, e, 'velocity', function() {
            return this._velocity;
          }),
          r(0, e, 'random0', function() {
            return this._randoms0;
          }),
          r(0, e, 'startSize', function() {
            return this._startSize;
          }),
          r(0, e, 'startColor', function() {
            return this._startColor;
          }),
          r(0, e, 'startRotation0', function() {
            return this._startRotation0;
          }),
          r(0, e, 'startRotation1', function() {
            return this._startRotation1;
          }),
          r(0, e, 'startLifeTime', function() {
            return this._startLifeTime;
          }),
          r(0, e, 'time', function() {
            return this._time;
          }),
          r(0, e, 'startSpeed', function() {
            return this._startSpeed;
          }),
          r(0, e, 'simulationWorldPostion', function() {
            return this._simulationWorldPostion;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(152, [
                new Mt(0, 'vector4', 17),
                new Mt(16, 'vector4', 30),
                new Mt(32, 'vector4', 32),
                new Mt(48, 'vector4', 19),
                new Mt(64, 'vector3', 20),
                new Mt(76, 'vector3', 22),
                new Mt(88, 'single', 31),
                new Mt(92, 'vector4', 34),
                new Mt(108, 'vector4', 35),
                new Mt(124, 'vector3', 36),
                new Mt(136, 'vector4', 37)
              ]));
            }
          ]),
          t
        );
      })(),
      pe = (function() {
        function t(t, e, i, n, a, r, s, o, l, h, c, u, _, d) {
          (this._cornerTextureCoordinate = null),
            (this._positionStartLifeTime = null),
            (this._velocity = null),
            (this._startColor = null),
            (this._startSize = null),
            (this._startRotation0 = null),
            (this._startRotation1 = null),
            (this._startRotation2 = null),
            (this._startLifeTime = NaN),
            (this._time = NaN),
            (this._startSpeed = NaN),
            (this._randoms0 = null),
            (this._randoms1 = null),
            (this._simulationWorldPostion = null),
            (this._cornerTextureCoordinate = t),
            (this._positionStartLifeTime = e),
            (this._velocity = i),
            (this._startColor = n),
            (this._startSize = a),
            (this._startRotation0 = r),
            (this._startRotation1 = s),
            (this._startRotation2 = o),
            (this._startLifeTime = l),
            (this._time = h),
            (this._startSpeed = c),
            (this._randoms0 = this.random0),
            (this._randoms1 = this.random1),
            (this._simulationWorldPostion = d);
        }
        a(t, 'laya.d3.graphics.VertexShurikenParticleMesh');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.graphics.IVertex': !0 }),
          r(0, e, 'cornerTextureCoordinate', function() {
            return this._cornerTextureCoordinate;
          }),
          r(0, e, 'velocity', function() {
            return this._velocity;
          }),
          r(0, e, 'position', function() {
            return this._positionStartLifeTime;
          }),
          r(0, e, 'random0', function() {
            return this._randoms0;
          }),
          r(0, e, 'startSize', function() {
            return this._startSize;
          }),
          r(0, e, 'startColor', function() {
            return this._startColor;
          }),
          r(0, e, 'startRotation0', function() {
            return this._startRotation0;
          }),
          r(0, e, 'startRotation1', function() {
            return this._startRotation1;
          }),
          r(0, e, 'random1', function() {
            return this._randoms1;
          }),
          r(0, e, 'startRotation2', function() {
            return this._startRotation2;
          }),
          r(0, e, 'startLifeTime', function() {
            return this._startLifeTime;
          }),
          r(0, e, 'time', function() {
            return this._time;
          }),
          r(0, e, 'startSpeed', function() {
            return this._startSpeed;
          }),
          r(0, e, 'simulationWorldPostion', function() {
            return this._simulationWorldPostion;
          }),
          r(0, e, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          r(1, t, 'vertexDeclaration', function() {
            return t._vertexDeclaration;
          }),
          n(t, [
            '_vertexDeclaration',
            function() {
              return (this._vertexDeclaration = new Tt(172, [
                new Mt(0, 'vector3', 0),
                new Mt(12, 'vector4', 1),
                new Mt(28, 'vector2', 2),
                new Mt(36, 'vector4', 30),
                new Mt(52, 'vector4', 32),
                new Mt(68, 'vector4', 19),
                new Mt(84, 'vector3', 20),
                new Mt(96, 'vector3', 22),
                new Mt(108, 'single', 31),
                new Mt(112, 'vector4', 34),
                new Mt(128, 'vector4', 35),
                new Mt(144, 'vector3', 36),
                new Mt(156, 'vector4', 37)
              ]));
            }
          ]),
          t
        );
      })(),
      me = (function() {
        function t(t, e, i, n, a, r) {
          (this._version = null),
            (this._strings = ['BLOCK', 'DATA', 'STRINGS']),
            (this._materials = null),
            (this._subMeshes = null),
            (this._materialMap = null),
            (this._readData = null),
            (this._mesh = null),
            (this._BLOCK = { count: 0 }),
            (this._DATA = { offset: 0, size: 0 }),
            (this._STRINGS = { offset: 0, size: 0 }),
            (this._shaderAttributes = null),
            (this._mesh = i),
            (this._materials = n),
            (this._subMeshes = a),
            (this._materialMap = r),
            (this._version = e),
            this._onLoaded(t);
        }
        a(t, 'laya.d3.loaders.LoadModelV01');
        var e = t.prototype;
        return (
          (e._onLoaded = function(t) {
            (this._readData = t), this.READ_BLOCK();
            for (var e = 0; e < this._BLOCK.count; e++) {
              var i = this._readData.getUint16(),
                n = this._strings[i],
                a = this['READ_' + n];
              if (null == a)
                throw new Error(
                  'model file err,no this function:' + i + ' ' + n
                );
              if (!a.call(this)) break;
            }
            return this._mesh;
          }),
          (e.onError = function() {}),
          (e._readString = function() {
            return this._strings[this._readData.getUint16()];
          }),
          (e.READ_BLOCK = function() {
            this._readData.getUint16();
            return (this._BLOCK.count = this._readData.getUint16()), !0;
          }),
          (e.READ_DATA = function() {
            return (
              (this._DATA.offset = this._readData.getUint32()),
              (this._DATA.size = this._readData.getUint32()),
              !0
            );
          }),
          (e.READ_STRINGS = function() {
            (this._STRINGS.offset = this._readData.getUint16()),
              (this._STRINGS.size = this._readData.getUint16());
            var t = this._readData.pos;
            this._readData.pos = this._STRINGS.offset + this._DATA.offset;
            for (var e = 0; e < this._STRINGS.size; e++)
              this._strings[e] = this._readData.readUTFString();
            return (this._readData.pos = t), !0;
          }),
          (e.READ_MATERIAL = function() {
            var t = this._readData.getUint16(),
              e = (this._readString(), this._readString());
            return (
              (this._materials[t] =
                'null' !== e ? v.getRes(this._materialMap[e]) : new mi()),
              !0
            );
          }),
          (e.READ_MESH = function() {
            this._readString();
            switch (this._version) {
              case 'LAYAMODEL:01':
                console.log(
                  'Warning: The (.lm) file is converted by old fbxTools,please reConverted it use  lastest fbxTools version,later we will remove the  support of old version (.lm) support.'
                );
                break;
              case 'LAYASKINANI:01':
              case 'LAYAMODEL:02':
                var t = this._readData.__getBuffer(),
                  e = 0,
                  i = 0,
                  n = this._readData.getUint32(),
                  a = this._readData.getUint32(),
                  r =
                    (new Float32Array(
                      t.slice(n + this._DATA.offset, n + this._DATA.offset + a)
                    ),
                    this._readData.getUint32()),
                  s = this._readData.getUint32(),
                  o = new Float32Array(
                    t.slice(r + this._DATA.offset, r + this._DATA.offset + s)
                  );
                for (
                  this.mesh._inverseBindPoses = [], e = 0, i = o.length;
                  e < i;
                  e += 16
                ) {
                  var l = new Te(
                    o[e + 0],
                    o[e + 1],
                    o[e + 2],
                    o[e + 3],
                    o[e + 4],
                    o[e + 5],
                    o[e + 6],
                    o[e + 7],
                    o[e + 8],
                    o[e + 9],
                    o[e + 10],
                    o[e + 11],
                    o[e + 12],
                    o[e + 13],
                    o[e + 14],
                    o[e + 15]
                  );
                  this.mesh._inverseBindPoses.push(l);
                }
                break;
              default:
                throw new Error('LoadModel:unknown version.');
            }
            return !0;
          }),
          (e.READ_SUBMESH = function() {
            this._readString(), this._readData.getUint8();
            var e = this._readString();
            this._shaderAttributes = e.match(t._attrReg);
            var i = this._readData.getUint32(),
              n = this._readData.getUint32(),
              a =
                (this._readData.getUint32(),
                this._readData.getUint32(),
                this._readData.getUint32()),
              r = this._readData.getUint32(),
              s = this._readData.getUint32(),
              o = this._readData.getUint32(),
              l = this._readData.__getBuffer(),
              h = new Oe(this._mesh),
              c = this._getVertexDeclaration(),
              u = Yi.create(c, r / c.vertexStride, 35044, !0),
              _ = a + this._DATA.offset,
              d = l.slice(_, _ + r);
            u.setData(new Float32Array(d)), (h._vertexBuffer = u);
            for (
              var f = u.vertexDeclaration.getVertexElements(), p = 0;
              p < f.length;
              p++
            )
              h._bufferUsage[f[p].elementUsage] = u;
            var m = qi.create('ushort', n / 2, 35044, !0),
              g = i + this._DATA.offset,
              y = l.slice(g, g + n);
            m.setData(new Uint16Array(y)), (h._indexBuffer = m);
            var v = l.slice(s + this._DATA.offset, s + this._DATA.offset + o);
            return (
              (h._boneIndicesList[0] = new Uint8Array(v)),
              this._subMeshes.push(h),
              !0
            );
          }),
          (e.READ_DATAAREA = function() {
            return !1;
          }),
          (e._getVertexDeclaration = function() {
            for (
              var t = !1,
                e = !1,
                i = !1,
                n = !1,
                a = !1,
                r = !1,
                s = !1,
                o = !1,
                l = !1,
                h = 0;
              h < this._shaderAttributes.length;
              h += 8
            )
              switch (this._shaderAttributes[h]) {
                case 'POSITION':
                  t = !0;
                  break;
                case 'NORMAL':
                  e = !0;
                  break;
                case 'COLOR':
                  i = !0;
                  break;
                case 'UV':
                  n = !0;
                  break;
                case 'UV1':
                  a = !0;
                  break;
                case 'BLENDWEIGHT':
                  s = !0;
                  break;
                case 'BLENDINDICES':
                  o = !0;
                  break;
                case 'TANGENT':
                  r = !0;
                  break;
                case 'BINORMAL':
                  l = !0;
              }
            var c;
            return (
              t && e && i && n && a && s && o && r
                ? (c = Ht.vertexDeclaration)
                : t && e && i && n && a && s && o
                ? (c = Vt.vertexDeclaration)
                : t && e && n && a && s && o && r
                ? (c = ee.vertexDeclaration)
                : t && e && n && a && s && o
                ? (c = $t.vertexDeclaration)
                : t && e && i && n && s && o && r
                ? (c = Xt.vertexDeclaration)
                : t && e && i && n && s && o
                ? (c = jt.vertexDeclaration)
                : t && e && r && l && n && s && o
                ? (c = ue.vertexDeclaration)
                : t && e && n && s && o && r
                ? (c = se.vertexDeclaration)
                : t && e && n && s && o
                ? (c = ae.vertexDeclaration)
                : t && e && i && s && o && r
                ? (c = Bt.vertexDeclaration)
                : t && e && i && s && o
                ? (c = Nt.vertexDeclaration)
                : t && e && i && n && a && r
                ? (c = zt.vertexDeclaration)
                : t && e && i && n && a
                ? (c = Ut.vertexDeclaration)
                : t && e && n && a && r
                ? (c = ne.vertexDeclaration)
                : t && e && n && a
                ? (c = Qt.vertexDeclaration)
                : t && e && i && n && r
                ? (c = Yt.vertexDeclaration)
                : t && e && n && r && l
                ? (c = he.vertexDeclaration)
                : t && e && i && n
                ? (c = Ot.vertexDeclaration)
                : t && e && n && r
                ? (c = le.vertexDeclaration)
                : t && e && n
                ? (c = Zt.vertexDeclaration)
                : t && e && i && r
                ? (c = Pt.vertexDeclaration)
                : t && e && i && (c = At.vertexDeclaration),
              c
            );
          }),
          r(0, e, 'mesh', function() {
            return this._mesh;
          }),
          (t._attrReg = new RegExp('(\\w+)|([:,;])', 'g')),
          t
        );
      })(),
      ge = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.loaders.LoadModelV02'),
          (t.parse = function(e, i, n, a, r, s) {
            (t._mesh = n),
              (t._materials = a),
              (t._subMeshes = r),
              (t._materialMap = s),
              (t._version = i),
              (t._readData = e),
              t.READ_DATA(),
              t.READ_BLOCK(),
              t.READ_STRINGS();
            for (var o = 0, l = t._BLOCK.count; o < l; o++) {
              t._readData.pos = t._BLOCK.blockStarts[o];
              var h = t._readData.getUint16(),
                c = t._strings[h],
                u = t['READ_' + c];
              if (null == u)
                throw new Error(
                  'model file err,no this function:' + h + ' ' + c
                );
              u.call();
            }
            (t._strings.length = 0),
              (t._readData = null),
              (t._version = null),
              (t._mesh = null),
              (t._materials = null),
              (t._subMeshes = null),
              (t._materialMap = null);
          }),
          (t._readString = function() {
            return t._strings[t._readData.getUint16()];
          }),
          (t.READ_DATA = function() {
            (t._DATA.offset = t._readData.getUint32()),
              (t._DATA.size = t._readData.getUint32());
          }),
          (t.READ_BLOCK = function() {
            for (
              var e = (t._BLOCK.count = t._readData.getUint16()),
                i = (t._BLOCK.blockStarts = []),
                n = (t._BLOCK.blockLengths = []),
                a = 0;
              a < e;
              a++
            )
              i.push(t._readData.getUint32()), n.push(t._readData.getUint32());
          }),
          (t.READ_STRINGS = function() {
            var e = t._readData.getUint32(),
              i = t._readData.getUint16(),
              n = t._readData.pos;
            t._readData.pos = e + t._DATA.offset;
            for (var a = 0; a < i; a++)
              t._strings[a] = t._readData.readUTFString();
            t._readData.pos = n;
          }),
          (t.READ_MATERIAL = function() {
            t._readString(), t._readString();
            var e = t._readString();
            return (
              '' !== e && t._materials.push(v.getRes(t._materialMap[e])), !0
            );
          }),
          (t.READ_MESH = function() {
            t._readString();
            var e = t._readData.__getBuffer(),
              i = 0,
              n = 0,
              a = t._readData.getInt16(),
              r = t._DATA.offset;
            for (i = 0; i < a; i++) {
              var s = r + t._readData.getUint32(),
                o = t._readData.getUint32(),
                l = new Float32Array(e.slice(s, s + o)),
                h = t._readString().match(t._attrReg),
                c = t._getVertexDeclaration(h),
                u = Yi.create(c, (4 * l.length) / c.vertexStride, 35044, !0);
              u.setData(l), t._mesh._vertexBuffers.push(u);
            }
            var _ = r + t._readData.getUint32(),
              d = t._readData.getUint32(),
              f = new Uint16Array(e.slice(_, _ + d)),
              p = qi.create('ushort', d / 2, 35044, !0);
            p.setData(f), (t._mesh._indexBuffer = p);
            var m = (t._mesh._boneNames = []),
              g = t._readData.getUint16();
            for (m.length = g, i = 0; i < g; i++)
              m[i] = t._strings[t._readData.getUint16()];
            var y = t._readData.getUint32(),
              v = t._readData.getUint32(),
              b =
                (new Float32Array(e.slice(r + y, r + y + v)),
                t._readData.getUint32()),
              w = t._readData.getUint32(),
              x = new Float32Array(e.slice(r + b, r + b + w));
            for (
              t._mesh._inverseBindPoses = [], i = 0, n = x.length;
              i < n;
              i += 16
            ) {
              var I = new Te(
                x[i + 0],
                x[i + 1],
                x[i + 2],
                x[i + 3],
                x[i + 4],
                x[i + 5],
                x[i + 6],
                x[i + 7],
                x[i + 8],
                x[i + 9],
                x[i + 10],
                x[i + 11],
                x[i + 12],
                x[i + 13],
                x[i + 14],
                x[i + 15]
              );
              t._mesh._inverseBindPoses.push(I);
            }
            return (
              (t._mesh._skinnedDatas = new Float32Array(16 * x.length)), !0
            );
          }),
          (t.READ_SUBMESH = function() {
            var e = t._readData.__getBuffer(),
              i = new Oe(t._mesh),
              n = t._readData.getInt16(),
              a = t._readData.getUint32(),
              r = t._readData.getUint32();
            (i._vertexBuffer = t._mesh._vertexBuffers[n]),
              (i._vertexStart = a),
              (i._vertexCount = r);
            var s = t._readData.getUint32(),
              o = t._readData.getUint32(),
              l = t._mesh._indexBuffer;
            (i._indexBuffer = l),
              (i._indexStart = s),
              (i._indexCount = o),
              (i._indices = new Uint16Array(l.getData().buffer, 2 * s, o));
            var h = t._DATA.offset,
              c = i._subIndexBufferStart,
              u = i._subIndexBufferCount,
              _ = i._boneIndicesList,
              d = t._readData.getUint16();
            (c.length = d), (u.length = d), (_.length = d);
            for (var f = 0; f < d; f++) {
              (c[f] = t._readData.getUint32()),
                (u[f] = t._readData.getUint32());
              var p = t._readData.getUint32(),
                m = t._readData.getUint32();
              i._boneIndicesList[f] = new Uint8Array(e.slice(h + p, h + p + m));
            }
            return t._subMeshes.push(i), !0;
          }),
          (t._getVertexDeclaration = function(t) {
            for (
              var e = !1,
                i = !1,
                n = !1,
                a = !1,
                r = !1,
                s = !1,
                o = !1,
                l = !1,
                h = !1,
                c = 0;
              c < t.length;
              c++
            )
              switch (t[c]) {
                case 'POSITION':
                  e = !0;
                  break;
                case 'NORMAL':
                  i = !0;
                  break;
                case 'COLOR':
                  n = !0;
                  break;
                case 'UV':
                  a = !0;
                  break;
                case 'UV1':
                  r = !0;
                  break;
                case 'BLENDWEIGHT':
                  o = !0;
                  break;
                case 'BLENDINDICES':
                  l = !0;
                  break;
                case 'TANGENT':
                  s = !0;
                  break;
                case 'BINORMAL':
                  h = !0;
              }
            var u;
            return (
              e && i && n && a && r && o && l && s
                ? (u = Ht.vertexDeclaration)
                : e && i && n && a && r && o && l
                ? (u = Vt.vertexDeclaration)
                : e && i && a && r && o && l && s
                ? (u = ee.vertexDeclaration)
                : e && i && a && r && o && l
                ? (u = $t.vertexDeclaration)
                : e && i && n && a && o && l && s
                ? (u = Xt.vertexDeclaration)
                : e && i && n && a && o && l
                ? (u = jt.vertexDeclaration)
                : e && i && a && o && l && s
                ? (u = se.vertexDeclaration)
                : e && i && a && o && l
                ? (u = ae.vertexDeclaration)
                : e && i && n && o && l && s
                ? (u = Bt.vertexDeclaration)
                : e && i && n && o && l
                ? (u = Nt.vertexDeclaration)
                : e && i && n && a && r && s
                ? (u = zt.vertexDeclaration)
                : e && i && n && a && r
                ? (u = Ut.vertexDeclaration)
                : e && i && a && r && s
                ? (u = ne.vertexDeclaration)
                : e && i && a && r
                ? (u = Qt.vertexDeclaration)
                : e && i && n && a && s
                ? (u = Yt.vertexDeclaration)
                : e && i && a && s && h
                ? (u = he.vertexDeclaration)
                : e && i && n && a
                ? (u = Ot.vertexDeclaration)
                : e && i && a && s
                ? (u = le.vertexDeclaration)
                : e && i && a
                ? (u = Zt.vertexDeclaration)
                : e && i && n && s
                ? (u = Pt.vertexDeclaration)
                : e && i && n && (u = At.vertexDeclaration),
              u
            );
          }),
          (t._attrReg = new RegExp('(\\w+)|([:,;])', 'g')),
          (t._strings = []),
          (t._readData = null),
          (t._version = null),
          (t._mesh = null),
          (t._materials = null),
          (t._subMeshes = null),
          (t._materialMap = null),
          n(t, [
            '_BLOCK',
            function() {
              return (this._BLOCK = { count: 0 });
            },
            '_DATA',
            function() {
              return (this._DATA = { offset: 0, size: 0 });
            }
          ]),
          t
        );
      })(),
      ye = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.loaders.LoadModelV03'),
          (t.parse = function(e, i, n, a, r) {
            (t._mesh = n),
              (t._subMeshes = a),
              (t._materialMap = r),
              (t._version = i),
              (t._readData = e),
              t.READ_DATA(),
              t.READ_BLOCK(),
              t.READ_STRINGS();
            for (var s = 0, o = t._BLOCK.count; s < o; s++) {
              t._readData.pos = t._BLOCK.blockStarts[s];
              var l = t._readData.getUint16(),
                h = t._strings[l],
                c = t['READ_' + h];
              if (null == c)
                throw new Error(
                  'model file err,no this function:' + l + ' ' + h
                );
              c.call();
            }
            (t._strings.length = 0),
              (t._readData = null),
              (t._version = null),
              (t._mesh = null),
              (t._subMeshes = null),
              (t._materialMap = null);
          }),
          (t._readString = function() {
            return t._strings[t._readData.getUint16()];
          }),
          (t.READ_DATA = function() {
            (t._DATA.offset = t._readData.getUint32()),
              (t._DATA.size = t._readData.getUint32());
          }),
          (t.READ_BLOCK = function() {
            for (
              var e = (t._BLOCK.count = t._readData.getUint16()),
                i = (t._BLOCK.blockStarts = []),
                n = (t._BLOCK.blockLengths = []),
                a = 0;
              a < e;
              a++
            )
              i.push(t._readData.getUint32()), n.push(t._readData.getUint32());
          }),
          (t.READ_STRINGS = function() {
            var e = t._readData.getUint32(),
              i = t._readData.getUint16(),
              n = t._readData.pos;
            t._readData.pos = e + t._DATA.offset;
            for (var a = 0; a < i; a++)
              t._strings[a] = t._readData.readUTFString();
            t._readData.pos = n;
          }),
          (t.READ_MESH = function() {
            t._readString();
            var e = t._readData.__getBuffer(),
              i = 0,
              n = 0,
              a = t._readData.getInt16(),
              r = t._DATA.offset;
            for (i = 0; i < a; i++) {
              var s,
                o = r + t._readData.getUint32(),
                l = t._readData.getUint32(),
                h = new Float32Array(e.slice(o, o + l)),
                c = t._readString();
              switch (t._version) {
                case 'LAYAMODEL:03':
                  s = t._vertexDeclarationMap_Discard[c];
                  break;
                case 'LAYAMODEL:0301':
                  s = t._vertexDeclarationMap[c];
                  break;
                default:
                  throw new Error('LoadModelV03: unknown version.');
              }
              if (!s)
                throw new Error('LoadModelV03: unknown vertexDeclaration.');
              var u = Yi.create(s, (4 * h.length) / s.vertexStride, 35044, !0);
              u.setData(h), t._mesh._vertexBuffers.push(u);
            }
            var _ = r + t._readData.getUint32(),
              d = t._readData.getUint32(),
              f = new Uint16Array(e.slice(_, _ + d)),
              p = qi.create('ushort', d / 2, 35044, !0);
            p.setData(f), (t._mesh._indexBuffer = p);
            var m = (t._mesh._boneNames = []),
              g = t._readData.getUint16();
            for (m.length = g, i = 0; i < g; i++)
              m[i] = t._strings[t._readData.getUint16()];
            t._readData.pos += 8;
            var y = t._readData.getUint32(),
              v = t._readData.getUint32(),
              b = new Float32Array(e.slice(r + y, r + y + v));
            for (
              t._mesh._inverseBindPoses = [], i = 0, n = b.length;
              i < n;
              i += 16
            ) {
              var w = new Te(
                b[i + 0],
                b[i + 1],
                b[i + 2],
                b[i + 3],
                b[i + 4],
                b[i + 5],
                b[i + 6],
                b[i + 7],
                b[i + 8],
                b[i + 9],
                b[i + 10],
                b[i + 11],
                b[i + 12],
                b[i + 13],
                b[i + 14],
                b[i + 15]
              );
              t._mesh._inverseBindPoses.push(w);
            }
            return (
              (t._mesh._skinnedDatas = new Float32Array(16 * b.length)), !0
            );
          }),
          (t.READ_SUBMESH = function() {
            var e = t._readData.__getBuffer(),
              i = new Oe(t._mesh),
              n = t._readData.getInt16(),
              a = t._readData.getUint32(),
              r = t._readData.getUint32();
            (i._vertexBuffer = t._mesh._vertexBuffers[n]),
              (i._vertexStart = a),
              (i._vertexCount = r);
            var s = t._readData.getUint32(),
              o = t._readData.getUint32(),
              l = t._mesh._indexBuffer;
            (i._indexBuffer = l),
              (i._indexStart = s),
              (i._indexCount = o),
              (i._indices = new Uint16Array(l.getData().buffer, 2 * s, o));
            var h = t._DATA.offset,
              c = i._subIndexBufferStart,
              u = i._subIndexBufferCount,
              _ = i._boneIndicesList,
              d = t._readData.getUint16();
            (c.length = d), (u.length = d), (_.length = d);
            for (var f = 0; f < d; f++) {
              (c[f] = t._readData.getUint32()),
                (u[f] = t._readData.getUint32());
              var p = t._readData.getUint32(),
                m = t._readData.getUint32();
              _[f] = new Uint8Array(e.slice(h + p, h + p + m));
            }
            return t._subMeshes.push(i), !0;
          }),
          (t._strings = []),
          (t._readData = null),
          (t._version = null),
          (t._mesh = null),
          (t._subMeshes = null),
          (t._materialMap = null),
          n(t, [
            '_vertexDeclarationMap_Discard',
            function() {
              return (this._vertexDeclarationMap_Discard = {
                'POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  Ht.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES':
                  Vt.vertexDeclaration,
                'POSITION,NORMAL,TANGENT,BINORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,':
                  ce.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  ee.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES':
                  $t.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  Xt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES':
                  jt.vertexDeclaration,
                'POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  se.vertexDeclaration,
                'POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES':
                  ae.vertexDeclaration,
                'POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  Bt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES':
                  Nt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,UV1,TANGENT': zt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,UV1': Ut.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1,TANGENT': ne.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1': Qt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,TANGENT': Yt.vertexDeclaration,
                'POSITION,NORMAL,UV,TANGENT,BINORMAL': he.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV': Ot.vertexDeclaration,
                'POSITION,NORMAL,UV,TANGENT': le.vertexDeclaration,
                'POSITION,NORMAL,UV': Zt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,TANGENT': Pt.vertexDeclaration,
                'POSITION,NORMAL,COLOR': At.vertexDeclaration,
                'POSITION,NORMAL,TANGENT': Kt.vertexDeclaration,
                'POSITION,NORMAL': Dt.vertexDeclaration,
                'POSITION,UV': de.vertexDeclaration,
                POSITION: Lt.vertexDeclaration
              });
            },
            '_vertexDeclarationMap',
            function() {
              return (this._vertexDeclarationMap = {
                'POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  Ft.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES':
                  Vt.vertexDeclaration,
                'POSITION,NORMAL,TANGENT,BINORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,':
                  ce.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  te.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1,BLENDWEIGHT,BLENDINDICES':
                  $t.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  Wt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,BLENDWEIGHT,BLENDINDICES':
                  jt.vertexDeclaration,
                'POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  re.vertexDeclaration,
                'POSITION,NORMAL,UV,BLENDWEIGHT,BLENDINDICES':
                  ae.vertexDeclaration,
                'POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES,TANGENT':
                  Rt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,BLENDWEIGHT,BLENDINDICES':
                  Nt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,UV1,TANGENT': Gt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,UV1': Ut.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1,TANGENT': ie.vertexDeclaration,
                'POSITION,NORMAL,UV,UV1': Qt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV,TANGENT': qt.vertexDeclaration,
                'POSITION,NORMAL,UV,TANGENT,BINORMAL': he.vertexDeclaration,
                'POSITION,NORMAL,COLOR,UV': Ot.vertexDeclaration,
                'POSITION,NORMAL,UV,TANGENT': oe.vertexDeclaration,
                'POSITION,NORMAL,UV': Zt.vertexDeclaration,
                'POSITION,NORMAL,COLOR,TANGENT': kt.vertexDeclaration,
                'POSITION,NORMAL,COLOR': At.vertexDeclaration,
                'POSITION,NORMAL,TANGENT': Jt.vertexDeclaration,
                'POSITION,NORMAL': Dt.vertexDeclaration,
                'POSITION,UV': de.vertexDeclaration,
                POSITION: Lt.vertexDeclaration
              });
            },
            '_BLOCK',
            function() {
              return (this._BLOCK = { count: 0 });
            },
            '_DATA',
            function() {
              return (this._DATA = { offset: 0, size: 0 });
            }
          ]),
          t
        );
      })(),
      ve = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.loaders.MeshReader'),
          (t.read = function(e, i, n, a, r) {
            var s = new f(e);
            s.pos = 0;
            var o = s.readUTFString();
            switch (o) {
              case 'LAYAMODEL:01':
              case 'LAYASKINANI:01':
                t._readVersion01(s, o, i, n, a, r);
                break;
              case 'LAYAMODEL:02':
                ge.parse(s, o, i, n, a, r);
                break;
              case 'LAYAMODEL:03':
              case 'LAYAMODEL:0301':
                ye.parse(s, o, i, a, r);
                break;
              default:
                throw new Error('MeshReader: unknown mesh version.');
            }
            i._setSubMeshes(a);
          }),
          (t._readVersion01 = function(t, e, i, n, a, r) {
            new me(t, e, i, n, a, r);
          }),
          t
        );
      })(),
      be = (function() {
        function t(t, e) {
          (this.min = null), (this.max = null), (this.min = t), (this.max = e);
        }
        a(t, 'laya.d3.math.BoundBox');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.getCorners = function(t) {
            t.length = 8;
            var e = this.min.elements,
              i = this.max.elements,
              n = e[0],
              a = e[1],
              r = e[2],
              s = i[0],
              o = i[1],
              l = i[2];
            (t[0] = new Re(n, o, l)),
              (t[1] = new Re(s, o, l)),
              (t[2] = new Re(s, a, l)),
              (t[3] = new Re(n, a, l)),
              (t[4] = new Re(n, o, r)),
              (t[5] = new Re(s, o, r)),
              (t[6] = new Re(s, a, r)),
              (t[7] = new Re(n, a, r));
          }),
          (e.toDefault = function() {
            this.min.toDefault(), this.max.toDefault();
          }),
          (e.cloneTo = function(t) {
            var e = t;
            this.min.cloneTo(e.min), this.max.cloneTo(e.max);
          }),
          (e.clone = function() {
            var t = new this.constructor(new Re(), new Re());
            return this.cloneTo(t), t;
          }),
          (t.createfromPoints = function(t, e) {
            if (null == t) throw new Error('points');
            var i = e.min,
              n = e.max,
              a = i.elements;
            (a[0] = Number.MAX_VALUE),
              (a[1] = Number.MAX_VALUE),
              (a[2] = Number.MAX_VALUE);
            var r = n.elements;
            (r[0] = -Number.MAX_VALUE),
              (r[1] = -Number.MAX_VALUE),
              (r[2] = -Number.MAX_VALUE);
            for (var s = 0, o = t.length; s < o; ++s)
              Re.min(i, t[s], i), Re.max(n, t[s], n);
          }),
          (t.merge = function(t, e, i) {
            Re.min(t.min, e.min, i.min), Re.max(t.max, e.max, i.max);
          }),
          t
        );
      })(),
      we = (function() {
        function t(e) {
          (this._matrix = null),
            (this._near = null),
            (this._far = null),
            (this._left = null),
            (this._right = null),
            (this._top = null),
            (this._bottom = null),
            (this._matrix = e),
            (this._near = new Ee(new Re())),
            (this._far = new Ee(new Re())),
            (this._left = new Ee(new Re())),
            (this._right = new Ee(new Re())),
            (this._top = new Ee(new Re())),
            (this._bottom = new Ee(new Re())),
            t._getPlanesFromMatrix(
              this._matrix,
              this._near,
              this._far,
              this._left,
              this._right,
              this._top,
              this._bottom
            );
        }
        a(t, 'laya.d3.math.BoundFrustum');
        var e = t.prototype;
        return (
          (e.equalsBoundFrustum = function(t) {
            return this._matrix.equalsOtherMatrix(t.matrix);
          }),
          (e.equalsObj = function(t) {
            if (t instanceof laya.d3.math.BoundFrustum) {
              var e = t;
              return this.equalsBoundFrustum(e);
            }
            return !1;
          }),
          (e.getPlane = function(t) {
            switch (t) {
              case 0:
                return this._near;
              case 1:
                return this._far;
              case 2:
                return this._left;
              case 3:
                return this._right;
              case 4:
                return this._top;
              case 5:
                return this._bottom;
              default:
                return null;
            }
          }),
          (e.getCorners = function(e) {
            t
              ._get3PlaneInterPoint(this._near, this._bottom, this._right)
              .cloneTo(e[0]),
              t
                ._get3PlaneInterPoint(this._near, this._top, this._right)
                .cloneTo(e[1]),
              t
                ._get3PlaneInterPoint(this._near, this._top, this._left)
                .cloneTo(e[2]),
              t
                ._get3PlaneInterPoint(this._near, this._bottom, this._left)
                .cloneTo(e[3]),
              t
                ._get3PlaneInterPoint(this._far, this._bottom, this._right)
                .cloneTo(e[4]),
              t
                ._get3PlaneInterPoint(this._far, this._top, this._right)
                .cloneTo(e[5]),
              t
                ._get3PlaneInterPoint(this._far, this._top, this._left)
                .cloneTo(e[6]),
              t
                ._get3PlaneInterPoint(this._far, this._bottom, this._left)
                .cloneTo(e[7]);
          }),
          (e.containsPoint = function(t) {
            for (
              var e = Ee.PlaneIntersectionType_Front,
                i = Ee.PlaneIntersectionType_Front,
                n = 0;
              n < 6;
              n++
            ) {
              switch (n) {
                case 0:
                  i = Ie.intersectsPlaneAndPoint(this._near, t);
                  break;
                case 1:
                  i = Ie.intersectsPlaneAndPoint(this._far, t);
                  break;
                case 2:
                  i = Ie.intersectsPlaneAndPoint(this._left, t);
                  break;
                case 3:
                  i = Ie.intersectsPlaneAndPoint(this._right, t);
                  break;
                case 4:
                  i = Ie.intersectsPlaneAndPoint(this._top, t);
                  break;
                case 5:
                  i = Ie.intersectsPlaneAndPoint(this._bottom, t);
              }
              switch (i) {
                case Ee.PlaneIntersectionType_Back:
                  return 0;
                case Ee.PlaneIntersectionType_Intersecting:
                  e = Ee.PlaneIntersectionType_Intersecting;
              }
            }
            switch (e) {
              case Ee.PlaneIntersectionType_Intersecting:
                return 2;
              default:
                return 1;
            }
          }),
          (e.containsBoundBox = function(e) {
            for (
              var i, n = t._tempV30, a = t._tempV31, r = 1, s = 0;
              s < 6;
              s++
            ) {
              if (
                ((i = this.getPlane(s)),
                this._getBoxToPlanePVertexNVertex(e, i.normal, n, a),
                Ie.intersectsPlaneAndPoint(i, n) ===
                  Ee.PlaneIntersectionType_Back)
              )
                return 0;
              Ie.intersectsPlaneAndPoint(i, a) ===
                Ee.PlaneIntersectionType_Back && (r = 2);
            }
            return r;
          }),
          (e.containsBoundSphere = function(t) {
            for (
              var e = Ee.PlaneIntersectionType_Front,
                i = Ee.PlaneIntersectionType_Front,
                n = 0;
              n < 6;
              n++
            ) {
              switch (n) {
                case 0:
                  i = Ie.intersectsPlaneAndSphere(this._near, t);
                  break;
                case 1:
                  i = Ie.intersectsPlaneAndSphere(this._far, t);
                  break;
                case 2:
                  i = Ie.intersectsPlaneAndSphere(this._left, t);
                  break;
                case 3:
                  i = Ie.intersectsPlaneAndSphere(this._right, t);
                  break;
                case 4:
                  i = Ie.intersectsPlaneAndSphere(this._top, t);
                  break;
                case 5:
                  i = Ie.intersectsPlaneAndSphere(this._bottom, t);
              }
              switch (i) {
                case Ee.PlaneIntersectionType_Back:
                  return 0;
                case Ee.PlaneIntersectionType_Intersecting:
                  e = Ee.PlaneIntersectionType_Intersecting;
              }
            }
            switch (e) {
              case Ee.PlaneIntersectionType_Intersecting:
                return 2;
              default:
                return 1;
            }
          }),
          (e._getBoxToPlanePVertexNVertex = function(t, e, i, n) {
            var a = t.min,
              r = a.elements,
              s = t.max,
              o = s.elements,
              l = e.elements,
              h = l[0],
              c = l[1],
              u = l[2];
            a.cloneTo(i);
            var _ = i.elements;
            h >= 0 && (_[0] = o[0]),
              c >= 0 && (_[1] = o[1]),
              u >= 0 && (_[2] = o[2]),
              s.cloneTo(n);
            var d = n.elements;
            h >= 0 && (d[0] = r[0]),
              c >= 0 && (d[1] = r[1]),
              u >= 0 && (d[2] = r[2]);
          }),
          r(0, e, 'top', function() {
            return this._top;
          }),
          r(
            0,
            e,
            'matrix',
            function() {
              return this._matrix;
            },
            function(e) {
              (this._matrix = e),
                t._getPlanesFromMatrix(
                  this._matrix,
                  this._near,
                  this._far,
                  this._left,
                  this._right,
                  this._top,
                  this._bottom
                );
            }
          ),
          r(0, e, 'near', function() {
            return this._near;
          }),
          r(0, e, 'far', function() {
            return this._far;
          }),
          r(0, e, 'left', function() {
            return this._left;
          }),
          r(0, e, 'right', function() {
            return this._right;
          }),
          r(0, e, 'bottom', function() {
            return this._bottom;
          }),
          (t._getPlanesFromMatrix = function(t, e, i, n, a, r, s) {
            var o = t.elements,
              l = o[0],
              h = o[1],
              c = o[2],
              u = o[3],
              _ = o[4],
              d = o[5],
              f = o[6],
              p = o[7],
              m = o[8],
              g = o[9],
              y = o[10],
              v = o[11],
              b = o[12],
              w = o[13],
              x = o[14],
              I = o[15],
              C = e.normal.elements;
            (C[0] = u + c),
              (C[1] = p + f),
              (C[2] = v + y),
              (e.distance = I + x),
              e.normalize();
            var S = i.normal.elements;
            (S[0] = u - c),
              (S[1] = p - f),
              (S[2] = v - y),
              (i.distance = I - x),
              i.normalize();
            var T = n.normal.elements;
            (T[0] = u + l),
              (T[1] = p + _),
              (T[2] = v + m),
              (n.distance = I + b),
              n.normalize();
            var M = a.normal.elements;
            (M[0] = u - l),
              (M[1] = p - _),
              (M[2] = v - m),
              (a.distance = I - b),
              a.normalize();
            var E = r.normal.elements;
            (E[0] = u - h),
              (E[1] = p - d),
              (E[2] = v - g),
              (r.distance = I - w),
              r.normalize();
            var L = s.normal.elements;
            (L[0] = u + h),
              (L[1] = p + d),
              (L[2] = v + g),
              (s.distance = I + w),
              s.normalize();
          }),
          (t._get3PlaneInterPoint = function(e, i, n) {
            var a = e.normal,
              r = i.normal,
              s = n.normal;
            Re.cross(r, s, t._tempV30),
              Re.cross(s, a, t._tempV31),
              Re.cross(a, r, t._tempV32);
            var o = Re.dot(a, t._tempV30),
              l = Re.dot(r, t._tempV31),
              h = Re.dot(s, t._tempV32);
            Re.scale(t._tempV30, -e.distance / o, t._tempV33),
              Re.scale(t._tempV31, -i.distance / l, t._tempV34),
              Re.scale(t._tempV32, -n.distance / h, t._tempV35),
              Re.add(t._tempV33, t._tempV34, t._tempV36),
              Re.add(t._tempV35, t._tempV36, t._tempV37);
            return t._tempV37;
          }),
          n(t, [
            '_tempV30',
            function() {
              return (this._tempV30 = new Re());
            },
            '_tempV31',
            function() {
              return (this._tempV31 = new Re());
            },
            '_tempV32',
            function() {
              return (this._tempV32 = new Re());
            },
            '_tempV33',
            function() {
              return (this._tempV33 = new Re());
            },
            '_tempV34',
            function() {
              return (this._tempV34 = new Re());
            },
            '_tempV35',
            function() {
              return (this._tempV35 = new Re());
            },
            '_tempV36',
            function() {
              return (this._tempV36 = new Re());
            },
            '_tempV37',
            function() {
              return (this._tempV37 = new Re());
            }
          ]),
          t
        );
      })(),
      xe = (function() {
        function t(t, e) {
          (this.center = null),
            (this.radius = NaN),
            (this.center = t),
            (this.radius = e);
        }
        a(t, 'laya.d3.math.BoundSphere');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.toDefault = function() {
            this.center.toDefault(), (this.radius = 0);
          }),
          (e.intersectsRayDistance = function(t) {
            return Ie.intersectsRayAndSphereRD(t, this);
          }),
          (e.intersectsRayPoint = function(t, e) {
            return Ie.intersectsRayAndSphereRP(t, this, e);
          }),
          (e.cloneTo = function(t) {
            var e = t;
            this.center.cloneTo(e.center), (e.radius = this.radius);
          }),
          (e.clone = function() {
            var t = new this.constructor(new Re(), new Re());
            return this.cloneTo(t), t;
          }),
          (t.createFromSubPoints = function(e, i, n, a) {
            if (null == e) throw new Error('points');
            if (i < 0 || i >= e.length)
              throw new Error(
                'start' + i + 'Must be in the range [0, ' + (e.length - 1) + ']'
              );
            if (n < 0 || i + n > e.length)
              throw new Error(
                'count' + n + 'Must be in the range <= ' + e.length + '}'
              );
            var r = i + n,
              s = t._tempVector3;
            (s.elements[0] = 0), (s.elements[1] = 0), (s.elements[2] = 0);
            for (var o = i; o < r; ++o) Re.add(e[o], s, s);
            var l = a.center;
            Re.scale(s, 1 / n, l);
            var h = 0;
            for (o = i; o < r; ++o) {
              var c = Re.distanceSquared(l, e[o]);
              c > h && (h = c);
            }
            a.radius = Math.sqrt(h);
          }),
          (t.createfromPoints = function(e, i) {
            if (null == e) throw new Error('points');
            t.createFromSubPoints(e, 0, e.length, i);
          }),
          n(t, [
            '_tempVector3',
            function() {
              return (this._tempVector3 = new Re());
            }
          ]),
          t
        );
      })(),
      Ie = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.math.Collision'),
          (t.distancePlaneToPoint = function(t, e) {
            return Re.dot(t.normal, e) - t.distance;
          }),
          (t.distanceBoxToPoint = function(t, e) {
            var i = t.min.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = t.max.elements,
              o = s[0],
              l = s[1],
              h = s[2],
              c = e.elements,
              u = c[0],
              _ = c[1],
              d = c[2],
              f = 0;
            return (
              u < n && (f += (n - u) * (n - u)),
              u > o && (f += (o - u) * (o - u)),
              _ < a && (f += (a - _) * (a - _)),
              _ > l && (f += (l - _) * (l - _)),
              d < r && (f += (r - d) * (r - d)),
              d > h && (f += (h - d) * (h - d)),
              Math.sqrt(f)
            );
          }),
          (t.distanceBoxToBox = function(t, e) {
            var i = t.min.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = t.max.elements,
              o = s[0],
              l = s[1],
              h = s[2],
              c = e.min.elements,
              u = c[0],
              _ = c[1],
              d = c[2],
              f = e.max.elements,
              p = f[0],
              m = f[1],
              g = f[2],
              y = 0,
              v = NaN;
            return (
              n > p ? (y += (v = n - p) * v) : u > o && (y += (v = u - o) * v),
              a > m ? (y += (v = a - m) * v) : _ > l && (y += (v = _ - l) * v),
              r > g ? (y += (v = r - g) * v) : d > h && (y += (v = d - h) * v),
              Math.sqrt(y)
            );
          }),
          (t.distanceSphereToPoint = function(t, e) {
            var i = Math.sqrt(Re.distanceSquared(t.center, e));
            return (i -= t.radius), Math.max(i, 0);
          }),
          (t.distanceSphereToSphere = function(t, e) {
            var i = Math.sqrt(Re.distanceSquared(t.center, e.center));
            return (i -= t.radius + e.radius), Math.max(i, 0);
          }),
          (t.intersectsRayAndTriangleRD = function(e, i, n, a, r) {
            var s = e.origin.elements,
              o = s[0],
              l = s[1],
              h = s[2],
              c = e.direction.elements,
              u = c[0],
              _ = c[1],
              d = c[2],
              f = i.elements,
              p = f[0],
              m = f[1],
              g = f[2],
              y = n.elements,
              v = y[0],
              b = y[1],
              w = y[2],
              x = a.elements,
              I = x[0],
              C = x[1],
              S = x[2],
              T = t._tempV30.elements,
              M = T[0],
              E = T[1],
              L = T[2];
            (M = v - p), (E = b - m), (L = w - g);
            var D = t._tempV31.elements,
              A = D[0],
              N = D[1],
              R = D[2];
            (A = I - p), (N = C - m), (R = S - g);
            var B = t._tempV32.elements,
              k = B[0],
              P = B[1],
              O = B[2],
              U =
                M * (k = _ * R - d * N) +
                E * (P = d * A - u * R) +
                L * (O = u * N - _ * A);
            if (Ce.isZero(U)) return 0, !1;
            var V = 1 / U,
              F = t._tempV33.elements,
              H = F[0],
              G = F[1],
              z = F[2],
              j = (H = o - p) * k + (G = l - m) * P + (z = h - g) * O;
            if ((j *= V) < 0 || j > 1) return 0, !1;
            var W = t._tempV34.elements,
              X = W[0],
              q = W[1],
              Y = W[2],
              J =
                u * (X = G * L - z * E) +
                _ * (q = z * M - H * L) +
                d * (Y = H * E - G * M);
            if ((J *= V) < 0 || j + J > 1) return 0, !1;
            var K = A * X + N * q + R * Y;
            return (K *= V) < 0 ? (0, !1) : (K, !0);
          }),
          (t.intersectsRayAndTriangleRP = function(e, i, n, a, r) {
            return t.intersectsRayAndTriangleRD(e, i, n, a, NaN)
              ? (Re.scale(e.direction, NaN, t._tempV30),
                Re.add(e.origin, t._tempV30, r),
                !0)
              : ((r = Re.ZERO), !1);
          }),
          (t.intersectsRayAndPoint = function(e, i) {
            Re.subtract(e.origin, i, t._tempV30);
            var n = Re.dot(t._tempV30, e.direction),
              a = Re.dot(t._tempV30, t._tempV30) - Ce.zeroTolerance;
            if (a > 0 && n > 0) return !1;
            return !(n * n - a < 0);
          }),
          (t.intersectsRayAndRay = function(e, i, n) {
            var a = e.origin,
              r = a.elements,
              s = r[0],
              o = r[1],
              l = r[2],
              h = e.direction,
              c = h.elements,
              u = c[0],
              _ = c[1],
              d = c[2],
              f = i.origin,
              p = f.elements,
              m = p[0],
              g = p[1],
              y = p[2],
              v = i.direction,
              b = v.elements,
              w = b[0],
              x = b[1],
              I = b[2];
            Re.cross(h, v, t._tempV30);
            var C = t._tempV30.elements,
              S = Re.scalarLengthSquared(t._tempV30);
            if (
              Ce.isZero(S) &&
              Ce.nearEqual(m, s) &&
              Ce.nearEqual(g, o) &&
              Ce.nearEqual(y, l)
            )
              return Re.ZERO.cloneTo(n), !0;
            var T = m - s,
              M = g - o,
              E = y - l,
              L = w,
              D = x,
              A = I,
              N = C[0],
              R = C[1],
              B = C[2],
              k =
                (T * D * B +
                  M * A * N +
                  E * L * R -
                  T * A * R -
                  M * L * B -
                  E * D * N) /
                S,
              P =
                (T * (D = _) * B +
                  M * (A = d) * N +
                  E * (L = u) * R -
                  T * A * R -
                  M * L * B -
                  E * D * N) /
                S;
            Re.scale(h, k, t._tempV30),
              Re.scale(v, P, t._tempV31),
              Re.add(a, t._tempV30, t._tempV32),
              Re.add(f, t._tempV31, t._tempV33);
            var O = t._tempV32.elements,
              U = t._tempV33.elements;
            return Ce.nearEqual(U[0], O[0]) &&
              Ce.nearEqual(U[1], O[1]) &&
              Ce.nearEqual(U[2], O[2])
              ? (t._tempV32.cloneTo(n), !0)
              : (Re.ZERO.cloneTo(n), !1);
          }),
          (t.intersectsPlaneAndTriangle = function(e, i, n, a) {
            var r = t.intersectsPlaneAndPoint(e, i),
              s = t.intersectsPlaneAndPoint(e, n),
              o = t.intersectsPlaneAndPoint(e, a);
            return r == Ee.PlaneIntersectionType_Front &&
              s == Ee.PlaneIntersectionType_Front &&
              o == Ee.PlaneIntersectionType_Front
              ? Ee.PlaneIntersectionType_Front
              : r == Ee.PlaneIntersectionType_Back &&
                s == Ee.PlaneIntersectionType_Back &&
                o == Ee.PlaneIntersectionType_Back
              ? Ee.PlaneIntersectionType_Back
              : Ee.PlaneIntersectionType_Intersecting;
          }),
          (t.intersectsRayAndPlaneRD = function(t, e, i) {
            var n = e.normal,
              a = Re.dot(n, t.direction);
            if (Ce.isZero(a)) return 0, !1;
            var r = Re.dot(n, t.origin);
            return !((-e.distance - r) / a < 0);
          }),
          (t.intersectsRayAndPlaneRP = function(e, i, n) {
            return t.intersectsRayAndPlaneRD(e, i, NaN)
              ? (Re.scale(e.direction, NaN, t._tempV30),
                Re.add(e.origin, t._tempV30, t._tempV31),
                t._tempV31,
                !0)
              : (Re.ZERO, !1);
          }),
          (t.intersectsRayAndBoxRD = function(t, e) {
            var i = t.origin.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = t.direction.elements,
              o = s[0],
              l = s[1],
              h = s[2],
              c = e.min.elements,
              u = c[0],
              _ = c[1],
              d = c[2],
              f = e.max.elements,
              p = f[0],
              m = f[1],
              g = f[2],
              y = 0,
              v = Ce.MaxValue;
            if (Ce.isZero(o)) {
              if (n < u || n > p) return -1;
            } else {
              var b = 1 / o,
                w = (u - n) * b,
                x = (p - n) * b;
              if (w > x) {
                var I = w;
                (w = x), (x = I);
              }
              if (((y = Math.max(w, y)), (v = Math.min(x, v)), y > v))
                return -1;
            }
            if (Ce.isZero(l)) {
              if (a < _ || a > m) return -1;
            } else {
              var C = 1 / l,
                S = (_ - a) * C,
                T = (m - a) * C;
              if (S > T) {
                var M = S;
                (S = T), (T = M);
              }
              if (((y = Math.max(S, y)), (v = Math.min(T, v)), y > v))
                return -1;
            }
            if (Ce.isZero(h)) {
              if (r < d || r > g) return -1;
            } else {
              var E = 1 / h,
                L = (d - r) * E,
                D = (g - r) * E;
              if (L > D) {
                var A = L;
                (L = D), (D = A);
              }
              if (((y = Math.max(L, y)), (v = Math.min(D, v)), y > v))
                return -1;
            }
            return y;
          }),
          (t.intersectsRayAndBoxRP = function(e, i, n) {
            var a = t.intersectsRayAndBoxRD(e, i);
            return -1 === a
              ? (Re.ZERO.cloneTo(n), a)
              : (Re.scale(e.direction, a, t._tempV30),
                Re.add(e.origin, t._tempV30, t._tempV31),
                t._tempV31.cloneTo(n),
                a);
          }),
          (t.intersectsRayAndSphereRD = function(e, i) {
            var n = i.radius;
            Re.subtract(e.origin, i.center, t._tempV30);
            var a = Re.dot(t._tempV30, e.direction),
              r = Re.dot(t._tempV30, t._tempV30) - n * n;
            if (r > 0 && a > 0) return -1;
            var s = a * a - r;
            if (s < 0) return -1;
            var o = -a - Math.sqrt(s);
            return o < 0 && (o = 0), o;
          }),
          (t.intersectsRayAndSphereRP = function(e, i, n) {
            var a = t.intersectsRayAndSphereRD(e, i);
            return -1 === a
              ? (Re.ZERO.cloneTo(n), a)
              : (Re.scale(e.direction, a, t._tempV30),
                Re.add(e.origin, t._tempV30, t._tempV31),
                t._tempV31.cloneTo(n),
                a);
          }),
          (t.intersectsSphereAndTriangle = function(e, i, n, a) {
            var r = e.center,
              s = e.radius;
            t.closestPointPointTriangle(r, i, n, a, t._tempV30),
              Re.subtract(t._tempV30, r, t._tempV31);
            return Re.dot(t._tempV31, t._tempV31) <= s * s;
          }),
          (t.intersectsPlaneAndPoint = function(t, e) {
            var i = Re.dot(t.normal, e) + t.distance;
            return i > 0
              ? Ee.PlaneIntersectionType_Front
              : i < 0
              ? Ee.PlaneIntersectionType_Back
              : Ee.PlaneIntersectionType_Intersecting;
          }),
          (t.intersectsPlaneAndPlane = function(e, i) {
            Re.cross(e.normal, i.normal, t._tempV30);
            var n = Re.dot(t._tempV30, t._tempV30);
            return !Ce.isZero(n);
          }),
          (t.intersectsPlaneAndPlaneRL = function(e, i, n) {
            var a = e.normal,
              r = i.normal;
            Re.cross(a, r, t._tempV34);
            var s = Re.dot(t._tempV34, t._tempV34);
            return (
              !Ce.isZero(s) &&
              (Re.scale(r, e.distance, t._tempV30),
              Re.scale(a, i.distance, t._tempV31),
              Re.subtract(t._tempV30, t._tempV31, t._tempV32),
              Re.cross(t._tempV32, t._tempV34, t._tempV33),
              Re.normalize(t._tempV34, t._tempV34),
              new Ae(t._tempV33, t._tempV34),
              !0)
            );
          }),
          (t.intersectsPlaneAndBox = function(e, i) {
            var n = e.distance,
              a = e.normal,
              r = a.elements,
              s = r[0],
              o = r[1],
              l = r[2],
              h = i.min.elements,
              c = h[0],
              u = h[1],
              _ = h[2],
              d = i.max.elements,
              f = d[0],
              p = d[1],
              m = d[2];
            (t._tempV30.elements[0] = s > 0 ? c : f),
              (t._tempV30.elements[1] = o > 0 ? u : p),
              (t._tempV30.elements[2] = l > 0 ? _ : m),
              (t._tempV31.elements[0] = s > 0 ? f : c),
              (t._tempV31.elements[1] = o > 0 ? p : u),
              (t._tempV31.elements[2] = l > 0 ? m : _);
            var g = Re.dot(a, t._tempV30);
            return g + n > 0
              ? Ee.PlaneIntersectionType_Front
              : (g = Re.dot(a, t._tempV31)) + n < 0
              ? Ee.PlaneIntersectionType_Back
              : Ee.PlaneIntersectionType_Intersecting;
          }),
          (t.intersectsPlaneAndSphere = function(t, e) {
            var i = e.radius,
              n = Re.dot(t.normal, e.center) + t.distance;
            return n > i
              ? Ee.PlaneIntersectionType_Front
              : n < -i
              ? Ee.PlaneIntersectionType_Back
              : Ee.PlaneIntersectionType_Intersecting;
          }),
          (t.intersectsBoxAndBox = function(t, e) {
            var i = t.min.elements,
              n = t.max.elements,
              a = e.min.elements,
              r = e.max.elements;
            return (
              !(i[0] > r[0] || a[0] > n[0]) &&
              (!(i[1] > r[1] || a[1] > n[1]) && !(i[2] > r[2] || a[2] > n[2]))
            );
          }),
          (t.intersectsBoxAndSphere = function(e, i) {
            var n = i.center,
              a = i.radius;
            Re.Clamp(n, e.min, e.max, t._tempV30);
            return Re.distanceSquared(n, t._tempV30) <= a * a;
          }),
          (t.intersectsSphereAndSphere = function(t, e) {
            var i = t.radius + e.radius;
            return Re.distanceSquared(t.center, e.center) <= i * i;
          }),
          (t.boxContainsPoint = function(t, e) {
            var i = t.min.elements,
              n = t.max.elements,
              a = e.elements;
            return i[0] <= a[0] &&
              n[0] >= a[0] &&
              i[1] <= a[1] &&
              n[1] >= a[1] &&
              i[2] <= a[2] &&
              n[2] >= a[2]
              ? 1
              : 0;
          }),
          (t.boxContainsBox = function(t, e) {
            var i = t.min.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = t.max.elements,
              o = s[0],
              l = s[1],
              h = s[2],
              c = e.min.elements,
              u = c[0],
              _ = c[1],
              d = c[2],
              f = e.max.elements,
              p = f[0],
              m = f[1],
              g = f[2];
            return o < u || n > p
              ? 0
              : l < _ || a > m
              ? 0
              : h < d || r > g
              ? 0
              : n <= u && p <= p && a <= _ && m <= l && r <= d && g <= h
              ? 1
              : 2;
          }),
          (t.boxContainsSphere = function(e, i) {
            var n = e.min,
              a = n.elements,
              r = a[0],
              s = a[1],
              o = a[2],
              l = e.max,
              h = l.elements,
              c = h[0],
              u = h[1],
              _ = h[2],
              d = i.center,
              f = d.elements,
              p = f[0],
              m = f[1],
              g = f[2],
              y = i.radius;
            Re.Clamp(d, n, l, t._tempV30);
            return Re.distanceSquared(d, t._tempV30) > y * y
              ? 0
              : r + y <= p &&
                p <= c - y &&
                c - r > y &&
                s + y <= m &&
                m <= u - y &&
                u - s > y &&
                o + y <= g &&
                g <= _ - y &&
                _ - o > y
              ? 1
              : 2;
          }),
          (t.sphereContainsPoint = function(t, e) {
            return Re.distanceSquared(e, t.center) <= t.radius * t.radius
              ? 1
              : 0;
          }),
          (t.sphereContainsTriangle = function(e, i, n, a) {
            var r = t.sphereContainsPoint(e, i),
              s = t.sphereContainsPoint(e, n),
              o = t.sphereContainsPoint(e, a);
            return 1 == r && 1 == s && 1 == o
              ? 1
              : t.intersectsSphereAndTriangle(e, i, n, a)
              ? 2
              : 0;
          }),
          (t.sphereContainsBox = function(e, i) {
            var n = e.center.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = e.radius,
              l = i.min.elements,
              h = l[0],
              c = l[1],
              u = l[2],
              _ = i.max.elements,
              d = _[0],
              f = _[1],
              p = _[2],
              m = t._tempV30.elements;
            m[0], m[1], m[2];
            if (!t.intersectsBoxAndSphere(i, e)) return 0;
            var g = o * o;
            return (
              a - h,
              r - f,
              s - p,
              Re.scalarLengthSquared(t._tempV30) > g
                ? 2
                : (a - d,
                  r - f,
                  s - p,
                  Re.scalarLengthSquared(t._tempV30) > g
                    ? 2
                    : (a - d,
                      r - c,
                      s - p,
                      Re.scalarLengthSquared(t._tempV30) > g
                        ? 2
                        : (a - h,
                          r - c,
                          s - p,
                          Re.scalarLengthSquared(t._tempV30) > g
                            ? 2
                            : (a - h,
                              r - f,
                              s - u,
                              Re.scalarLengthSquared(t._tempV30) > g
                                ? 2
                                : (a - d,
                                  r - f,
                                  s - u,
                                  Re.scalarLengthSquared(t._tempV30) > g
                                    ? 2
                                    : (a - d,
                                      r - c,
                                      s - u,
                                      Re.scalarLengthSquared(t._tempV30) > g
                                        ? 2
                                        : (a - h,
                                          r - c,
                                          s - u,
                                          Re.scalarLengthSquared(t._tempV30) > g
                                            ? 2
                                            : 1)))))))
            );
          }),
          (t.sphereContainsSphere = function(t, e) {
            var i = t.radius,
              n = e.radius,
              a = Re.distance(t.center, e.center);
            return i + n < a ? 0 : i - n < a ? 2 : 1;
          }),
          (t.closestPointPointTriangle = function(e, i, n, a, r) {
            Re.subtract(n, i, t._tempV30),
              Re.subtract(a, i, t._tempV31),
              Re.subtract(e, i, t._tempV32),
              Re.subtract(e, n, t._tempV33),
              Re.subtract(e, a, t._tempV34);
            var s = Re.dot(t._tempV30, t._tempV32),
              o = Re.dot(t._tempV31, t._tempV32),
              l = Re.dot(t._tempV30, t._tempV33),
              h = Re.dot(t._tempV31, t._tempV33),
              c = Re.dot(t._tempV30, t._tempV34),
              u = Re.dot(t._tempV31, t._tempV34);
            if (s <= 0 && o <= 0) i.cloneTo(r);
            else if (l >= 0 && h <= l) n.cloneTo(r);
            else {
              var _ = s * h - l * o;
              if (_ <= 0 && s >= 0 && l <= 0) {
                var d = s / (s - l);
                return Re.scale(t._tempV30, d, r), void Re.add(i, r, r);
              }
              if (u >= 0 && c <= u) a.cloneTo(r);
              else {
                var f = c * o - s * u;
                if (f <= 0 && o >= 0 && u <= 0) {
                  var p = o / (o - u);
                  return Re.scale(t._tempV31, p, r), void Re.add(i, r, r);
                }
                var m = l * u - c * h;
                if (m <= 0 && h - l >= 0 && c - u >= 0) {
                  var g = (h - l) / (h - l + (c - u));
                  return (
                    Re.subtract(a, n, r),
                    Re.scale(r, g, r),
                    void Re.add(n, r, r)
                  );
                }
                var y = 1 / (m + f + _),
                  v = f * y,
                  b = _ * y;
                Re.scale(t._tempV30, v, t._tempV35),
                  Re.scale(t._tempV31, b, t._tempV36),
                  Re.add(t._tempV35, t._tempV36, r),
                  Re.add(i, r, r);
              }
            }
          }),
          (t.closestPointPlanePoint = function(e, i, n) {
            var a = e.normal,
              r = Re.dot(a, i) - e.distance;
            Re.scale(a, r, t._tempV30), Re.subtract(i, t._tempV30, n);
          }),
          (t.closestPointBoxPoint = function(e, i, n) {
            Re.max(i, e.min, t._tempV30), Re.min(t._tempV30, e.max, n);
          }),
          (t.closestPointSpherePoint = function(t, e, i) {
            var n = t.center;
            Re.subtract(e, n, i),
              Re.normalize(i, i),
              Re.scale(i, t.radius, i),
              Re.add(i, n, i);
          }),
          (t.closestPointSphereSphere = function(t, e, i) {
            var n = t.center;
            Re.subtract(e.center, n, i),
              Re.normalize(i, i),
              Re.scale(i, t.radius, i),
              Re.add(i, n, i);
          }),
          n(t, [
            '_tempV30',
            function() {
              return (this._tempV30 = new Re());
            },
            '_tempV31',
            function() {
              return (this._tempV31 = new Re());
            },
            '_tempV32',
            function() {
              return (this._tempV32 = new Re());
            },
            '_tempV33',
            function() {
              return (this._tempV33 = new Re());
            },
            '_tempV34',
            function() {
              return (this._tempV34 = new Re());
            },
            '_tempV35',
            function() {
              return (this._tempV35 = new Re());
            },
            '_tempV36',
            function() {
              return (this._tempV36 = new Re());
            }
          ]),
          t
        );
      })(),
      Ce =
        ((function() {
          function t() {}
          a(t, 'laya.d3.math.ContainmentType'),
            (t.Disjoint = 0),
            (t.Contains = 1),
            (t.Intersects = 2);
        })(),
        (function() {
          function t() {}
          return (
            a(t, 'laya.d3.math.MathUtils3D'),
            (t.isZero = function(e) {
              return Math.abs(e) < t.zeroTolerance;
            }),
            (t.nearEqual = function(e, i) {
              return !!t.isZero(e - i);
            }),
            (t.fastInvSqrt = function(e) {
              return t.isZero(e) ? e : 1 / Math.sqrt(e);
            }),
            n(t, [
              'zeroTolerance',
              function() {
                return (this.zeroTolerance = 1e-6);
              },
              'MaxValue',
              function() {
                return (this.MaxValue = 3.40282347e38);
              },
              'MinValue',
              function() {
                return (this.MinValue = -3.40282347e38);
              }
            ]),
            t
          );
        })()),
      Se = (function() {
        function t() {
          var t = (this.elements = new Float32Array(9));
          (t[0] = 1),
            (t[1] = 0),
            (t[2] = 0),
            (t[3] = 0),
            (t[4] = 1),
            (t[5] = 0),
            (t[6] = 0),
            (t[7] = 0),
            (t[8] = 1);
        }
        a(t, 'laya.d3.math.Matrix3x3');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.determinant = function() {
            var t = this.elements,
              e = t[0],
              i = t[1],
              n = t[2],
              a = t[3],
              r = t[4],
              s = t[5],
              o = t[6],
              l = t[7],
              h = t[8];
            return (
              e * (h * r - s * l) + i * (-h * a + s * o) + n * (l * a - r * o)
            );
          }),
          (e.translate = function(t, e) {
            var i = e.elements,
              n = this.elements,
              a = t.elements,
              r = n[0],
              s = n[1],
              o = n[2],
              l = n[3],
              h = n[4],
              c = n[5],
              u = n[6],
              _ = n[7],
              d = n[8],
              f = a[0],
              p = a[1];
            (i[0] = r),
              (i[1] = s),
              (i[2] = o),
              (i[3] = l),
              (i[4] = h),
              (i[5] = c),
              (i[6] = f * r + p * l + u),
              (i[7] = f * s + p * h + _),
              (i[8] = f * o + p * c + d);
          }),
          (e.rotate = function(t, e) {
            var i = e.elements,
              n = this.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = n[3],
              l = n[4],
              h = n[5],
              c = n[6],
              u = n[7],
              _ = n[8],
              d = Math.sin(t),
              f = Math.cos(t);
            (i[0] = f * a + d * o),
              (i[1] = f * r + d * l),
              (i[2] = f * s + d * h),
              (i[3] = f * o - d * a),
              (i[4] = f * l - d * r),
              (i[5] = f * h - d * s),
              (i[6] = c),
              (i[7] = u),
              (i[8] = _);
          }),
          (e.scale = function(t, e) {
            var i = e.elements,
              n = this.elements,
              a = t.elements,
              r = a[0],
              s = a[1];
            (i[0] = r * n[0]),
              (i[1] = r * n[1]),
              (i[2] = r * n[2]),
              (i[3] = s * n[3]),
              (i[4] = s * n[4]),
              (i[5] = s * n[5]),
              (i[6] = n[6]),
              (i[7] = n[7]),
              (i[8] = n[8]);
          }),
          (e.invert = function(t) {
            var e = t.elements,
              i = this.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = i[3],
              o = i[4],
              l = i[5],
              h = i[6],
              c = i[7],
              u = i[8],
              _ = u * o - l * c,
              d = -u * s + l * h,
              f = c * s - o * h,
              p = n * _ + a * d + r * f;
            p || (t = null),
              (p = 1 / p),
              (e[0] = _ * p),
              (e[1] = (-u * a + r * c) * p),
              (e[2] = (l * a - r * o) * p),
              (e[3] = d * p),
              (e[4] = (u * n - r * h) * p),
              (e[5] = (-l * n + r * s) * p),
              (e[6] = f * p),
              (e[7] = (-c * n + a * h) * p),
              (e[8] = (o * n - a * s) * p);
          }),
          (e.transpose = function(t) {
            var e = t.elements,
              i = this.elements;
            if (t === this) {
              var n = i[1],
                a = i[2],
                r = i[5];
              (e[1] = i[3]),
                (e[2] = i[6]),
                (e[3] = n),
                (e[5] = i[7]),
                (e[6] = a),
                (e[7] = r);
            } else
              (e[0] = i[0]),
                (e[1] = i[3]),
                (e[2] = i[6]),
                (e[3] = i[1]),
                (e[4] = i[4]),
                (e[5] = i[7]),
                (e[6] = i[2]),
                (e[7] = i[5]),
                (e[8] = i[8]);
          }),
          (e.identity = function() {
            var t = this.elements;
            (t[0] = 1),
              (t[1] = 0),
              (t[2] = 0),
              (t[3] = 0),
              (t[4] = 1),
              (t[5] = 0),
              (t[6] = 0),
              (t[7] = 0),
              (t[8] = 1);
          }),
          (e.cloneTo = function(t) {
            var e, i, n;
            if (((i = this.elements), (n = t.elements), i !== n))
              for (e = 0; e < 9; ++e) n[e] = i[e];
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (t.createFromTranslation = function(t, e) {
            e.elements;
            var i = t.elements;
            (e[0] = 1),
              (e[1] = 0),
              (e[2] = 0),
              (e[3] = 0),
              (e[4] = 1),
              (e[5] = 0),
              (e[6] = i[0]),
              (e[7] = i[1]),
              (e[8] = 1);
          }),
          (t.createFromRotation = function(t, e) {
            var i = e.elements,
              n = Math.sin(t),
              a = Math.cos(t);
            (i[0] = a),
              (i[1] = n),
              (i[2] = 0),
              (i[3] = -n),
              (i[4] = a),
              (i[5] = 0),
              (i[6] = 0),
              (i[7] = 0),
              (i[8] = 1);
          }),
          (t.createFromScaling = function(t, e) {
            var i = e.elements,
              n = t.elements;
            (i[0] = n[0]),
              (i[1] = 0),
              (i[2] = 0),
              (i[3] = 0),
              (i[4] = n[1]),
              (i[5] = 0),
              (i[6] = 0),
              (i[7] = 0),
              (i[8] = 1);
          }),
          (t.createFromMatrix4x4 = function(t, e) {
            (e[0] = t[0]),
              (e[1] = t[1]),
              (e[2] = t[2]),
              (e[3] = t[4]),
              (e[4] = t[5]),
              (e[5] = t[6]),
              (e[6] = t[8]),
              (e[7] = t[9]),
              (e[8] = t[10]);
          }),
          (t.multiply = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements,
              s = a[0],
              o = a[1],
              l = a[2],
              h = a[3],
              c = a[4],
              u = a[5],
              _ = a[6],
              d = a[7],
              f = a[8],
              p = r[0],
              m = r[1],
              g = r[2],
              y = r[3],
              v = r[4],
              b = r[5],
              w = r[6],
              x = r[7],
              I = r[8];
            (n[0] = p * s + m * h + g * _),
              (n[1] = p * o + m * c + g * d),
              (n[2] = p * l + m * u + g * f),
              (n[3] = y * s + v * h + b * _),
              (n[4] = y * o + v * c + b * d),
              (n[5] = y * l + v * u + b * f),
              (n[6] = w * s + x * h + I * _),
              (n[7] = w * o + x * c + I * d),
              (n[8] = w * l + x * u + I * f);
          }),
          (t.lookAt = function(e, i, n, a) {
            Re.subtract(e, i, t._tempV30),
              Re.normalize(t._tempV30, t._tempV30),
              Re.cross(n, t._tempV30, t._tempV31),
              Re.normalize(t._tempV31, t._tempV31),
              Re.cross(t._tempV30, t._tempV31, t._tempV32);
            var r = t._tempV30.elements,
              s = t._tempV31.elements,
              o = t._tempV32.elements,
              l = a.elements;
            (l[0] = s[0]),
              (l[3] = s[1]),
              (l[6] = s[2]),
              (l[1] = o[0]),
              (l[4] = o[1]),
              (l[7] = o[2]),
              (l[2] = r[0]),
              (l[5] = r[1]),
              (l[8] = r[2]);
          }),
          (t.DEFAULT = new t()),
          n(t, [
            '_tempV30',
            function() {
              return (this._tempV30 = new Re());
            },
            '_tempV31',
            function() {
              return (this._tempV31 = new Re());
            },
            '_tempV32',
            function() {
              return (this._tempV32 = new Re());
            }
          ]),
          t
        );
      })(),
      Te = (function() {
        function t(t, e, i, n, a, r, s, o, l, h, c, u, _, d, f, p) {
          void 0 === t && (t = 1),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            void 0 === r && (r = 1),
            void 0 === s && (s = 0),
            void 0 === o && (o = 0),
            void 0 === l && (l = 0),
            void 0 === h && (h = 0),
            void 0 === c && (c = 1),
            void 0 === u && (u = 0),
            void 0 === _ && (_ = 0),
            void 0 === d && (d = 0),
            void 0 === f && (f = 0),
            void 0 === p && (p = 1);
          var m = (this.elements = new Float32Array(16));
          (m[0] = t),
            (m[1] = e),
            (m[2] = i),
            (m[3] = n),
            (m[4] = a),
            (m[5] = r),
            (m[6] = s),
            (m[7] = o),
            (m[8] = l),
            (m[9] = h),
            (m[10] = c),
            (m[11] = u),
            (m[12] = _),
            (m[13] = d),
            (m[14] = f),
            (m[15] = p);
        }
        a(t, 'laya.d3.math.Matrix4x4');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.getElementByRowColumn = function(t, e) {
            if (t < 0 || t > 3)
              throw new Error(
                'row',
                'Rows and columns for matrices run from 0 to 3, inclusive.'
              );
            if (e < 0 || e > 3)
              throw new Error(
                'column',
                'Rows and columns for matrices run from 0 to 3, inclusive.'
              );
            return this.elements[4 * t + e];
          }),
          (e.setElementByRowColumn = function(t, e, i) {
            if (t < 0 || t > 3)
              throw new Error(
                'row',
                'Rows and columns for matrices run from 0 to 3, inclusive.'
              );
            if (e < 0 || e > 3)
              throw new Error(
                'column',
                'Rows and columns for matrices run from 0 to 3, inclusive.'
              );
            this.elements[4 * t + e] = i;
          }),
          (e.equalsOtherMatrix = function(t) {
            var e = this.elements,
              i = t.elements;
            return (
              Ce.nearEqual(e[0], i[0]) &&
              Ce.nearEqual(e[1], i[1]) &&
              Ce.nearEqual(e[2], i[2]) &&
              Ce.nearEqual(e[3], i[3]) &&
              Ce.nearEqual(e[4], i[4]) &&
              Ce.nearEqual(e[5], i[5]) &&
              Ce.nearEqual(e[6], i[6]) &&
              Ce.nearEqual(e[7], i[7]) &&
              Ce.nearEqual(e[8], i[8]) &&
              Ce.nearEqual(e[9], i[9]) &&
              Ce.nearEqual(e[10], i[10]) &&
              Ce.nearEqual(e[11], i[11]) &&
              Ce.nearEqual(e[12], i[12]) &&
              Ce.nearEqual(e[13], i[13]) &&
              Ce.nearEqual(e[14], i[14]) &&
              Ce.nearEqual(e[15], i[15])
            );
          }),
          (e.decomposeTransRotScale = function(e, i, n) {
            var a = t._tempMatrix4x4;
            return this.decomposeTransRotMatScale(e, a, n)
              ? (Le.createFromMatrix4x4(a, i), !0)
              : (i.identity(), !1);
          }),
          (e.decomposeTransRotMatScale = function(e, i, n) {
            var a = this.elements,
              r = e.elements,
              s = i.elements,
              o = n.elements;
            (r[0] = a[12]), (r[1] = a[13]), (r[2] = a[14]);
            var l = a[0],
              h = a[1],
              c = a[2],
              u = a[4],
              _ = a[5],
              d = a[6],
              f = a[8],
              p = a[9],
              m = a[10],
              g = (o[0] = Math.sqrt(l * l + h * h + c * c)),
              y = (o[1] = Math.sqrt(u * u + _ * _ + d * d)),
              v = (o[2] = Math.sqrt(f * f + p * p + m * m));
            if (Ce.isZero(g) || Ce.isZero(y) || Ce.isZero(v))
              return (
                (s[1] = s[2] = s[3] = s[4] = s[6] = s[7] = s[8] = s[9] = s[11] = s[12] = s[13] = s[14] = 0),
                (s[0] = s[5] = s[10] = s[15] = 1),
                !1
              );
            var b = t._tempVector0,
              w = b.elements;
            (w[0] = f / v), (w[1] = p / v), (w[2] = m / v);
            var x = t._tempVector1,
              I = x.elements;
            (I[0] = l / g), (I[1] = h / g), (I[2] = c / g);
            var C = t._tempVector2;
            Re.cross(b, x, C);
            var S = t._tempVector1;
            return (
              Re.cross(C, b, S),
              (s[3] = s[7] = s[11] = s[12] = s[13] = s[14] = 0),
              (s[15] = 1),
              (s[0] = S.x),
              (s[1] = S.y),
              (s[2] = S.z),
              (s[4] = C.x),
              (s[5] = C.y),
              (s[6] = C.z),
              (s[8] = b.x),
              (s[9] = b.y),
              (s[10] = b.z),
              s[0] * l + s[1] * h + s[2] * c < 0 && (o[0] = -g),
              s[4] * u + s[5] * _ + s[6] * d < 0 && (o[1] = -y),
              s[8] * f + s[9] * p + s[10] * m < 0 && (o[2] = -v),
              !0
            );
          }),
          (e.decomposeYawPitchRoll = function(t) {
            var e = t.elements,
              i = Math.asin(-this.elements[9]);
            e[1] = i;
            Math.cos(i) > Ce.zeroTolerance
              ? ((e[2] = Math.atan2(this.elements[1], this.elements[5])),
                (e[0] = Math.atan2(this.elements[8], this.elements[10])))
              : ((e[2] = Math.atan2(-this.elements[4], this.elements[0])),
                (e[0] = 0));
          }),
          (e.normalize = function() {
            var t = this.elements,
              e = t[0],
              i = t[1],
              n = t[2],
              a = Math.sqrt(e * e + i * i + n * n);
            if (!a) return (t[0] = 0), (t[1] = 0), void (t[2] = 0);
            1 != a &&
              ((a = 1 / a), (t[0] = e * a), (t[1] = i * a), (t[2] = n * a));
          }),
          (e.transpose = function() {
            var t, e;
            return (
              (t = this.elements),
              (e = t[1]),
              (t[1] = t[4]),
              (t[4] = e),
              (e = t[2]),
              (t[2] = t[8]),
              (t[8] = e),
              (e = t[3]),
              (t[3] = t[12]),
              (t[12] = e),
              (e = t[6]),
              (t[6] = t[9]),
              (t[9] = e),
              (e = t[7]),
              (t[7] = t[13]),
              (t[13] = e),
              (e = t[11]),
              (t[11] = t[14]),
              (t[14] = e),
              this
            );
          }),
          (e.invert = function(t) {
            var e = this.elements,
              i = t.elements,
              n = e[0],
              a = e[1],
              r = e[2],
              s = e[3],
              o = e[4],
              l = e[5],
              h = e[6],
              c = e[7],
              u = e[8],
              _ = e[9],
              d = e[10],
              f = e[11],
              p = e[12],
              m = e[13],
              g = e[14],
              y = e[15],
              v = n * l - a * o,
              b = n * h - r * o,
              w = n * c - s * o,
              x = a * h - r * l,
              I = a * c - s * l,
              C = r * c - s * h,
              S = u * m - _ * p,
              T = u * g - d * p,
              M = u * y - f * p,
              E = _ * g - d * m,
              L = _ * y - f * m,
              D = d * y - f * g,
              A = v * D - b * L + w * E + x * M - I * T + C * S;
            0 !== Math.abs(A) &&
              ((A = 1 / A),
              (i[0] = (l * D - h * L + c * E) * A),
              (i[1] = (r * L - a * D - s * E) * A),
              (i[2] = (m * C - g * I + y * x) * A),
              (i[3] = (d * I - _ * C - f * x) * A),
              (i[4] = (h * M - o * D - c * T) * A),
              (i[5] = (n * D - r * M + s * T) * A),
              (i[6] = (g * w - p * C - y * b) * A),
              (i[7] = (u * C - d * w + f * b) * A),
              (i[8] = (o * L - l * M + c * S) * A),
              (i[9] = (a * M - n * L - s * S) * A),
              (i[10] = (p * I - m * w + y * v) * A),
              (i[11] = (_ * w - u * I - f * v) * A),
              (i[12] = (l * T - o * E - h * S) * A),
              (i[13] = (n * E - a * T + r * S) * A),
              (i[14] = (m * b - p * x - g * v) * A),
              (i[15] = (u * x - _ * b + d * v) * A));
          }),
          (e.identity = function() {
            var t = this.elements;
            (t[1] = t[2] = t[3] = t[4] = t[6] = t[7] = t[8] = t[9] = t[11] = t[12] = t[13] = t[14] = 0),
              (t[0] = t[5] = t[10] = t[15] = 1);
          }),
          (e.cloneTo = function(t) {
            var e, i, n;
            if (((i = this.elements), (n = t.elements), i !== n))
              for (e = 0; e < 16; ++e) n[e] = i[e];
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (e.getTranslationVector = function(t) {
            var e = this.elements,
              i = t.elements;
            (i[0] = e[12]), (i[1] = e[13]), (i[2] = e[14]);
          }),
          (e.setTranslationVector = function(t) {
            var e = this.elements,
              i = t.elements;
            (e[12] = i[0]), (e[13] = i[1]), (e[14] = i[2]);
          }),
          (e.getForward = function(t) {
            var e = this.elements,
              i = t.elements;
            (i[0] = -e[8]), (i[1] = -e[9]), (i[2] = -e[10]);
          }),
          (e.setForward = function(t) {
            var e = this.elements,
              i = t.elements;
            (e[8] = -i[0]), (e[9] = -i[1]), (e[10] = -i[2]);
          }),
          (t.createRotationX = function(t, e) {
            var i = e.elements,
              n = Math.sin(t),
              a = Math.cos(t);
            (i[1] = i[2] = i[3] = i[4] = i[7] = i[8] = i[11] = i[12] = i[13] = i[14] = 0),
              (i[0] = i[15] = 1),
              (i[5] = i[10] = a),
              (i[6] = n),
              (i[9] = -n);
          }),
          (t.createRotationY = function(t, e) {
            var i = e.elements,
              n = Math.sin(t),
              a = Math.cos(t);
            (i[1] = i[3] = i[4] = i[6] = i[7] = i[9] = i[11] = i[12] = i[13] = i[14] = 0),
              (i[5] = i[15] = 1),
              (i[0] = i[10] = a),
              (i[2] = -n),
              (i[8] = n);
          }),
          (t.createRotationZ = function(t, e) {
            var i = e.elements,
              n = Math.sin(t),
              a = Math.cos(t);
            (i[2] = i[3] = i[6] = i[7] = i[8] = i[9] = i[11] = i[12] = i[13] = i[14] = 0),
              (i[10] = i[15] = 1),
              (i[0] = i[5] = a),
              (i[1] = n),
              (i[4] = -n);
          }),
          (t.createRotationYawPitchRoll = function(e, i, n, a) {
            Le.createFromYawPitchRoll(e, i, n, t._tempQuaternion),
              t.createRotationQuaternion(t._tempQuaternion, a);
          }),
          (t.createRotationAxis = function(t, e, i) {
            var n = t.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = Math.cos(e),
              l = Math.sin(e),
              h = a * a,
              c = r * r,
              u = s * s,
              _ = a * r,
              d = a * s,
              f = r * s,
              p = i.elements;
            (p[3] = p[7] = p[11] = p[12] = p[13] = p[14] = 0),
              (p[15] = 1),
              (p[0] = h + o * (1 - h)),
              (p[1] = _ - o * _ + l * s),
              (p[2] = d - o * d - l * r),
              (p[4] = _ - o * _ - l * s),
              (p[5] = c + o * (1 - c)),
              (p[6] = f - o * f + l * a),
              (p[8] = d - o * d + l * r),
              (p[9] = f - o * f - l * a),
              (p[10] = u + o * (1 - u));
          }),
          (t.createRotationQuaternion = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = i[0],
              r = i[1],
              s = i[2],
              o = i[3],
              l = a * a,
              h = r * r,
              c = s * s,
              u = a * r,
              _ = s * o,
              d = s * a,
              f = r * o,
              p = r * s,
              m = a * o;
            (n[3] = n[7] = n[11] = n[12] = n[13] = n[14] = 0),
              (n[15] = 1),
              (n[0] = 1 - 2 * (h + c)),
              (n[1] = 2 * (u + _)),
              (n[2] = 2 * (d - f)),
              (n[4] = 2 * (u - _)),
              (n[5] = 1 - 2 * (c + l)),
              (n[6] = 2 * (p + m)),
              (n[8] = 2 * (d + f)),
              (n[9] = 2 * (p - m)),
              (n[10] = 1 - 2 * (h + l));
          }),
          (t.createTranslate = function(t, e) {
            var i = t.elements,
              n = e.elements;
            (n[4] = n[8] = n[1] = n[9] = n[2] = n[6] = n[3] = n[7] = n[11] = 0),
              (n[0] = n[5] = n[10] = n[15] = 1),
              (n[12] = i[0]),
              (n[13] = i[1]),
              (n[14] = i[2]);
          }),
          (t.createScaling = function(t, e) {
            var i = t.elements,
              n = e.elements;
            (n[0] = i[0]),
              (n[5] = i[1]),
              (n[10] = i[2]),
              (n[1] = n[4] = n[8] = n[12] = n[9] = n[13] = n[2] = n[6] = n[14] = n[3] = n[7] = n[11] = 0),
              (n[15] = 1);
          }),
          (t.multiply = function(t, e, i) {
            var n, a, r, s, o, l, h, c;
            if (((a = i.elements), (r = t.elements), (s = e.elements), a === s))
              for (s = new Float32Array(16), n = 0; n < 16; ++n) s[n] = a[n];
            for (n = 0; n < 4; n++)
              (o = r[n]),
                (l = r[n + 4]),
                (h = r[n + 8]),
                (c = r[n + 12]),
                (a[n] = o * s[0] + l * s[1] + h * s[2] + c * s[3]),
                (a[n + 4] = o * s[4] + l * s[5] + h * s[6] + c * s[7]),
                (a[n + 8] = o * s[8] + l * s[9] + h * s[10] + c * s[11]),
                (a[n + 12] = o * s[12] + l * s[13] + h * s[14] + c * s[15]);
          }),
          (t.createFromQuaternion = function(t, e) {
            var i = e.elements,
              n = t.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = n[3],
              l = a + a,
              h = r + r,
              c = s + s,
              u = a * l,
              _ = r * l,
              d = r * h,
              f = s * l,
              p = s * h,
              m = s * c,
              g = o * l,
              y = o * h,
              v = o * c;
            (i[0] = 1 - d - m),
              (i[1] = _ + v),
              (i[2] = f - y),
              (i[3] = 0),
              (i[4] = _ - v),
              (i[5] = 1 - u - m),
              (i[6] = p + g),
              (i[7] = 0),
              (i[8] = f + y),
              (i[9] = p - g),
              (i[10] = 1 - u - d),
              (i[11] = 0),
              (i[12] = 0),
              (i[13] = 0),
              (i[14] = 0),
              (i[15] = 1);
          }),
          (t.createAffineTransformation = function(t, e, i, n) {
            var a = t.elements,
              r = e.elements,
              s = i.elements,
              o = n.elements,
              l = r[0],
              h = r[1],
              c = r[2],
              u = r[3],
              _ = l + l,
              d = h + h,
              f = c + c,
              p = l * _,
              m = l * d,
              g = l * f,
              y = h * d,
              v = h * f,
              b = c * f,
              w = u * _,
              x = u * d,
              I = u * f,
              C = s[0],
              S = s[1],
              T = s[2];
            (o[0] = (1 - (y + b)) * C),
              (o[1] = (m + I) * C),
              (o[2] = (g - x) * C),
              (o[3] = 0),
              (o[4] = (m - I) * S),
              (o[5] = (1 - (p + b)) * S),
              (o[6] = (v + w) * S),
              (o[7] = 0),
              (o[8] = (g + x) * T),
              (o[9] = (v - w) * T),
              (o[10] = (1 - (p + y)) * T),
              (o[11] = 0),
              (o[12] = a[0]),
              (o[13] = a[1]),
              (o[14] = a[2]),
              (o[15] = 1);
          }),
          (t.createLookAt = function(e, i, n, a) {
            var r = a.elements,
              s = t._tempVector0,
              o = t._tempVector1,
              l = t._tempVector2;
            Re.subtract(e, i, l),
              Re.normalize(l, l),
              Re.cross(n, l, s),
              Re.normalize(s, s),
              Re.cross(l, s, o),
              a.identity(),
              (r[0] = s.x),
              (r[4] = s.y),
              (r[8] = s.z),
              (r[1] = o.x),
              (r[5] = o.y),
              (r[9] = o.z),
              (r[2] = l.x),
              (r[6] = l.y),
              (r[10] = l.z),
              (r[12] = -Re.dot(s, e)),
              (r[13] = -Re.dot(o, e)),
              (r[14] = -Re.dot(l, e));
          }),
          (t.createPerspective = function(t, e, i, n, a) {
            var r = a.elements,
              s = 1 / Math.tan(t / 2),
              o = 1 / (i - n);
            (r[0] = s / e),
              (r[5] = s),
              (r[10] = (n + i) * o),
              (r[11] = -1),
              (r[14] = 2 * n * i * o),
              (r[1] = r[2] = r[3] = r[4] = r[6] = r[7] = r[8] = r[9] = r[12] = r[13] = r[15] = 0);
          }),
          (t.createOrthoOffCenterRH = function(t, e, i, n, a, r, s) {
            var o = s.elements,
              l = 1 / (t - e),
              h = 1 / (i - n),
              c = 1 / (a - r);
            (o[1] = o[2] = o[3] = o[4] = o[6] = o[7] = o[8] = o[9] = o[11] = 0),
              (o[15] = 1),
              (o[0] = -2 * l),
              (o[5] = -2 * h),
              (o[10] = 2 * c),
              (o[12] = (t + e) * l),
              (o[13] = (n + i) * h),
              (o[14] = (r + a) * c);
          }),
          (t.translation = function(t, e) {
            var i = t.elements,
              n = e.elements;
            (n[0] = n[5] = n[10] = n[15] = 1),
              (n[12] = i[0]),
              (n[13] = i[1]),
              (n[14] = i[2]);
          }),
          n(t, [
            '_tempMatrix4x4',
            function() {
              return (this._tempMatrix4x4 = new t());
            },
            '_tempVector0',
            function() {
              return (this._tempVector0 = new Re());
            },
            '_tempVector1',
            function() {
              return (this._tempVector1 = new Re());
            },
            '_tempVector2',
            function() {
              return (this._tempVector2 = new Re());
            },
            '_tempQuaternion',
            function() {
              return (this._tempQuaternion = new Le());
            },
            'DEFAULT',
            function() {
              return (this.DEFAULT = new t());
            },
            'ZERO',
            function() {
              return (this.ZERO = new t(
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ));
            }
          ]),
          t
        );
      })(),
      Me = (function() {
        function t(t, e) {
          (this.extents = null),
            (this.transformation = null),
            (this.extents = t),
            (this.transformation = e);
        }
        a(t, 'laya.d3.math.OrientedBoundBox');
        var e = t.prototype;
        return (
          (e.getCorners = function(e) {
            var i = t._tempV30.elements,
              n = t._tempV31.elements,
              a = t._tempV32.elements,
              r = this.extents.elements;
            (i[0] = r[0]),
              (i[1] = i[2] = 0),
              (n[1] = r[1]),
              (n[0] = n[2] = 0),
              (a[2] = r[2]),
              (a[0] = a[1] = 0),
              Re.TransformNormal(t._tempV30, this.transformation, t._tempV30),
              Re.TransformNormal(t._tempV31, this.transformation, t._tempV31),
              Re.TransformNormal(t._tempV32, this.transformation, t._tempV32);
            var s = t._tempV33;
            this.transformation.getTranslationVector(s),
              (e.length = 8),
              Re.add(s, t._tempV30, t._tempV34),
              Re.add(t._tempV34, t._tempV31, t._tempV34),
              Re.add(t._tempV34, t._tempV32, e[0]),
              Re.add(s, t._tempV30, t._tempV34),
              Re.add(t._tempV34, t._tempV31, t._tempV34),
              Re.subtract(t._tempV34, t._tempV32, e[1]),
              Re.subtract(s, t._tempV30, t._tempV34),
              Re.add(t._tempV34, t._tempV31, t._tempV34),
              Re.subtract(t._tempV34, t._tempV32, e[2]),
              Re.subtract(s, t._tempV30, t._tempV34),
              Re.add(t._tempV34, t._tempV31, t._tempV34),
              Re.add(t._tempV34, t._tempV32, e[3]),
              Re.add(s, t._tempV30, t._tempV34),
              Re.subtract(t._tempV34, t._tempV31, t._tempV34),
              Re.add(t._tempV34, t._tempV32, e[4]),
              Re.add(s, t._tempV30, t._tempV34),
              Re.subtract(t._tempV34, t._tempV31, t._tempV34),
              Re.subtract(t._tempV34, t._tempV32, e[5]),
              Re.subtract(s, t._tempV30, t._tempV34),
              Re.subtract(t._tempV34, t._tempV31, t._tempV34),
              Re.subtract(t._tempV34, t._tempV32, e[6]),
              Re.subtract(s, t._tempV30, t._tempV34),
              Re.subtract(t._tempV34, t._tempV31, t._tempV34),
              Re.add(t._tempV34, t._tempV32, e[7]);
          }),
          (e.transform = function(t) {
            Te.multiply(this.transformation, t, this.transformation);
          }),
          (e.scale = function(t) {
            Re.multiply(this.extents, t, this.extents);
          }),
          (e.translate = function(e) {
            this.transformation.getTranslationVector(t._tempV30),
              Re.add(t._tempV30, e, t._tempV31),
              this.transformation.setTranslationVector(t._tempV31);
          }),
          (e.Size = function(t) {
            Re.scale(this.extents, 2, t);
          }),
          (e.getSize = function(e) {
            var i = this.extents.elements;
            (t._tempV30.x = i[0]),
              (t._tempV31.y = i[1]),
              (t._tempV32.z = i[2]),
              Re.TransformNormal(t._tempV30, this.transformation, t._tempV30),
              Re.TransformNormal(t._tempV31, this.transformation, t._tempV31),
              Re.TransformNormal(t._tempV31, this.transformation, t._tempV32);
            var n = e.elements;
            (n[0] = Re.scalarLength(t._tempV30)),
              (n[1] = Re.scalarLength(t._tempV31)),
              (n[2] = Re.scalarLength(t._tempV32));
          }),
          (e.getSizeSquared = function(e) {
            var i = this.extents.elements;
            (t._tempV30.x = i[0]),
              (t._tempV31.y = i[1]),
              (t._tempV32.z = i[2]),
              Re.TransformNormal(t._tempV30, this.transformation, t._tempV30),
              Re.TransformNormal(t._tempV31, this.transformation, t._tempV31),
              Re.TransformNormal(t._tempV31, this.transformation, t._tempV32);
            var n = e.elements;
            (n[0] = Re.scalarLengthSquared(t._tempV30)),
              (n[1] = Re.scalarLengthSquared(t._tempV31)),
              (n[2] = Re.scalarLengthSquared(t._tempV32));
          }),
          (e.getCenter = function(t) {
            this.transformation.getTranslationVector(t);
          }),
          (e.containsPoint = function(e) {
            var i = this.extents.elements,
              n = i[0],
              a = i[1],
              r = i[2];
            this.transformation.invert(t._tempM0),
              Re.transformCoordinate(e, t._tempM0, t._tempV30);
            var s = t._tempV30.elements,
              o = Math.abs(s[0]),
              l = Math.abs(s[1]),
              h = Math.abs(s[2]);
            return Ce.nearEqual(o, n) &&
              Ce.nearEqual(l, a) &&
              Ce.nearEqual(h, r)
              ? 2
              : o < n && l < a && h < r
              ? 1
              : 0;
          }),
          (e.containsPoints = function(e) {
            var i = this.extents.elements,
              n = i[0],
              a = i[1],
              r = i[2];
            this.transformation.invert(t._tempM0);
            for (var s = !0, o = !1, l = 0; l < e.length; l++) {
              Re.transformCoordinate(e[l], t._tempM0, t._tempV30);
              var h = t._tempV30.elements,
                c = Math.abs(h[0]),
                u = Math.abs(h[1]),
                _ = Math.abs(h[2]);
              Ce.nearEqual(c, n) &&
                Ce.nearEqual(u, a) &&
                Ce.nearEqual(_, r) &&
                (o = !0),
                c < n && u < a && _ < r ? (o = !0) : (s = !1);
            }
            return s ? 1 : o ? 2 : 0;
          }),
          (e.containsSphere = function(e, i) {
            void 0 === i && (i = !1);
            var n = this.extents.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = e.radius;
            this.transformation.invert(t._tempM0),
              Re.transformCoordinate(e.center, t._tempM0, t._tempV30);
            var l = NaN;
            i
              ? (l = o)
              : (Re.scale(Re.UnitX, o, t._tempV31),
                Re.TransformNormal(t._tempV31, t._tempM0, t._tempV31),
                (l = Re.scalarLength(t._tempV31))),
              Re.scale(this.extents, -1, t._tempV32),
              Re.Clamp(t._tempV30, t._tempV32, this.extents, t._tempV33);
            if (Re.distanceSquared(t._tempV30, t._tempV33) > l * l) return 0;
            var h = t._tempV30.elements,
              c = h[0],
              u = h[1],
              _ = h[2],
              d = t._tempV32.elements,
              f = d[0],
              p = d[1],
              m = d[2];
            return f + l <= c &&
              c <= a - l &&
              a - f > l &&
              p + l <= u &&
              u <= r - l &&
              r - p > l &&
              m + l <= _ &&
              _ <= s - l &&
              s - m > l
              ? 1
              : 2;
          }),
          (e.containsOrientedBoundBox = function(e) {
            var i = 0,
              n = 0;
            e.getCorners(t._corners);
            var a = this.containsPoints(t._corners);
            if (0 != a) return a;
            var r = this.extents.elements;
            e.extents.cloneTo(t._tempV35);
            var s = t._tempV35.elements;
            t._getRows(this.transformation, t._rows1),
              t._getRows(e.transformation, t._rows2);
            var o = NaN,
              l = NaN,
              h = NaN;
            for (i = 0; i < 4; i++)
              for (n = 0; n < 4; n++)
                3 == i || 3 == n
                  ? (t._tempM0.setElementByRowColumn(i, n, 0),
                    t._tempM1.setElementByRowColumn(i, n, 0))
                  : ((h = Re.dot(t._rows1[i], t._rows2[n])),
                    t._tempM0.setElementByRowColumn(i, n, h),
                    t._tempM1.setElementByRowColumn(i, n, Math.abs(h)));
            e.getCenter(t._tempV34),
              this.getCenter(t._tempV36),
              Re.subtract(t._tempV34, t._tempV36, t._tempV30);
            var c = t._tempV31.elements;
            (c[0] = Re.dot(t._tempV30, t._rows1[0])),
              (c[1] = Re.dot(t._tempV30, t._rows1[1])),
              (c[2] = Re.dot(t._tempV30, t._rows1[2]));
            var u = t._tempV32.elements,
              _ = t._tempV33.elements;
            for (i = 0; i < 3; i++)
              if (
                ((u[0] = t._tempM1.getElementByRowColumn(i, 0)),
                (u[1] = t._tempM1.getElementByRowColumn(i, 1)),
                (u[2] = t._tempM1.getElementByRowColumn(i, 2)),
                (o = r[i]),
                (l = Re.dot(t._tempV35, t._tempV32)),
                Math.abs(c[i]) > o + l)
              )
                return 0;
            for (n = 0; n < 3; n++)
              if (
                ((u[0] = t._tempM1.getElementByRowColumn(0, n)),
                (u[1] = t._tempM1.getElementByRowColumn(1, n)),
                (u[2] = t._tempM1.getElementByRowColumn(2, n)),
                (_[0] = t._tempM0.getElementByRowColumn(0, n)),
                (_[1] = t._tempM0.getElementByRowColumn(1, n)),
                (_[2] = t._tempM0.getElementByRowColumn(2, n)),
                (o = Re.dot(this.extents, t._tempV32)),
                (l = s[n]),
                Math.abs(Re.dot(t._tempV31, t._tempV33)) > o + l)
              )
                return 0;
            for (i = 0; i < 3; i++)
              for (n = 0; n < 3; n++) {
                var d = (i + 1) % 3,
                  f = (i + 2) % 3,
                  p = (n + 1) % 3,
                  m = (n + 2) % 3;
                if (
                  ((o =
                    r[d] * t._tempM1.getElementByRowColumn(f, n) +
                    r[f] * t._tempM1.getElementByRowColumn(d, n)),
                  (l =
                    s[p] * t._tempM1.getElementByRowColumn(i, m) +
                    s[m] * t._tempM1.getElementByRowColumn(i, p)),
                  Math.abs(
                    c[f] * t._tempM0.getElementByRowColumn(d, n) -
                      c[d] * t._tempM0.getElementByRowColumn(f, n)
                  ) >
                    o + l)
                )
                  return 0;
              }
            return 2;
          }),
          (e.containsLine = function(e, i) {
            (t._corners[0] = e), (t._corners[1] = i);
            var n = this.containsPoints(t._corners);
            if (0 != n) return n;
            var a = this.extents.elements,
              r = a[0],
              s = a[1],
              o = a[2];
            this.transformation.invert(t._tempM0),
              Re.transformCoordinate(e, t._tempM0, t._tempV30),
              Re.transformCoordinate(i, t._tempM0, t._tempV31),
              Re.add(t._tempV30, t._tempV31, t._tempV32),
              Re.scale(t._tempV32, 0.5, t._tempV32),
              Re.subtract(t._tempV30, t._tempV32, t._tempV33);
            var l = t._tempV33.elements,
              h = l[0],
              c = l[1],
              u = l[2],
              _ = t._tempV34.elements,
              d = (_[0] = Math.abs(l[0])),
              f = (_[1] = Math.abs(l[1])),
              p = (_[2] = Math.abs(l[2])),
              m = t._tempV32.elements,
              g = m[0],
              y = m[1],
              v = m[2];
            return Math.abs(g) > r + d
              ? 0
              : Math.abs(y) > s + f
              ? 0
              : Math.abs(v) > o + p
              ? 0
              : Math.abs(y * u - v * c) > s * p + o * f
              ? 0
              : Math.abs(g * u - v * h) > r * p + o * d
              ? 0
              : Math.abs(g * c - y * h) > r * f + s * d
              ? 0
              : 2;
          }),
          (e.containsBoundBox = function(e) {
            var i = 0,
              n = 0,
              a = e.min,
              r = e.max;
            e.getCorners(t._corners);
            var s = this.containsPoints(t._corners);
            if (0 != s) return s;
            Re.subtract(r, a, t._tempV30),
              Re.scale(t._tempV30, 0.5, t._tempV30),
              Re.add(a, t._tempV30, t._tempV30),
              Re.subtract(r, t._tempV30, t._tempV31);
            var o = this.extents.elements,
              l = t._tempV31.elements;
            t._getRows(this.transformation, t._rows1),
              this.transformation.invert(t._tempM0);
            var h = NaN,
              c = NaN;
            for (i = 0; i < 3; i++)
              for (n = 0; n < 3; n++)
                t._tempM1.setElementByRowColumn(
                  i,
                  n,
                  Math.abs(t._tempM0.getElementByRowColumn(i, n))
                );
            this.getCenter(t._tempV35),
              Re.subtract(t._tempV30, t._tempV35, t._tempV32);
            var u = t._tempV31.elements;
            (u[0] = Re.dot(t._tempV32, t._rows1[0])),
              (u[1] = Re.dot(t._tempV32, t._rows1[1])),
              (u[2] = Re.dot(t._tempV32, t._rows1[2]));
            var _ = t._tempV33.elements,
              d = t._tempV34.elements;
            for (i = 0; i < 3; i++)
              if (
                ((_[0] = t._tempM1.getElementByRowColumn(i, 0)),
                (_[1] = t._tempM1.getElementByRowColumn(i, 1)),
                (_[2] = t._tempM1.getElementByRowColumn(i, 2)),
                (h = o[i]),
                (c = Re.dot(t._tempV31, t._tempV33)),
                Math.abs(u[i]) > h + c)
              )
                return 0;
            for (n = 0; n < 3; n++)
              if (
                ((_[0] = t._tempM1.getElementByRowColumn(0, n)),
                (_[1] = t._tempM1.getElementByRowColumn(1, n)),
                (_[2] = t._tempM1.getElementByRowColumn(2, n)),
                (d[0] = t._tempM0.getElementByRowColumn(0, n)),
                (d[1] = t._tempM0.getElementByRowColumn(1, n)),
                (d[2] = t._tempM0.getElementByRowColumn(2, n)),
                (h = Re.dot(this.extents, t._tempV33)),
                (c = l[n]),
                Math.abs(Re.dot(t._tempV31, t._tempV34)) > h + c)
              )
                return 0;
            for (i = 0; i < 3; i++)
              for (n = 0; n < 3; n++) {
                var f = (i + 1) % 3,
                  p = (i + 2) % 3,
                  m = (n + 1) % 3,
                  g = (n + 2) % 3;
                if (
                  ((h =
                    o[f] * t._tempM1.getElementByRowColumn(p, n) +
                    o[p] * t._tempM1.getElementByRowColumn(f, n)),
                  (c =
                    l[m] * t._tempM1.getElementByRowColumn(i, g) +
                    l[g] * t._tempM1.getElementByRowColumn(i, m)),
                  Math.abs(
                    u[p] * t._tempM0.getElementByRowColumn(f, n) -
                      u[f] * t._tempM0.getElementByRowColumn(p, n)
                  ) >
                    h + c)
                )
                  return 0;
              }
            return 2;
          }),
          (e.intersectsRay = function(e, i) {
            Re.scale(this.extents, -1, t._tempV30),
              this.transformation.invert(t._tempM0),
              Re.TransformNormal(e.direction, t._tempM0, t._ray.direction),
              Re.transformCoordinate(e.origin, t._tempM0, t._ray.origin),
              (t._boxBound1.min = t._tempV30),
              (t._boxBound1.max = this.extents);
            var n = Ie.intersectsRayAndBoxRP(t._ray, t._boxBound1, i);
            return (
              -1 !== n && Re.transformCoordinate(i, this.transformation, i), n
            );
          }),
          (e._getLocalCorners = function(e) {
            e.length = 8;
            var i = this.extents.elements;
            (t._tempV30.x = i[0]),
              (t._tempV31.y = i[1]),
              (t._tempV32.z = i[2]),
              Re.add(t._tempV30, t._tempV31, t._tempV33),
              Re.add(t._tempV33, t._tempV32, e[0]),
              Re.add(t._tempV30, t._tempV31, t._tempV33),
              Re.subtract(t._tempV33, t._tempV32, e[1]),
              Re.subtract(t._tempV31, t._tempV30, t._tempV33),
              Re.subtract(t._tempV33, t._tempV30, e[2]),
              Re.subtract(t._tempV31, t._tempV30, t._tempV33),
              Re.add(t._tempV33, t._tempV32, e[3]),
              Re.subtract(t._tempV30, t._tempV31, t._tempV33),
              Re.add(t._tempV33, t._tempV32, e[4]),
              Re.subtract(t._tempV30, t._tempV31, t._tempV33),
              Re.subtract(t._tempV33, t._tempV32, e[5]),
              Re.scale(e[0], -1, e[6]),
              Re.subtract(t._tempV32, t._tempV30, t._tempV33),
              Re.subtract(t._tempV33, t._tempV31, e[7]);
          }),
          (e.equals = function(t) {
            return (
              this.extents == t.extents &&
              this.transformation == t.transformation
            );
          }),
          (e.cloneTo = function(t) {
            var e = t;
            this.extents.cloneTo(e.extents),
              this.transformation.cloneTo(e.transformation);
          }),
          (t.createByBoundBox = function(e, i) {
            var n = e.min,
              a = e.max;
            Re.subtract(a, n, t._tempV30),
              Re.scale(t._tempV30, 0.5, t._tempV30),
              Re.add(n, t._tempV30, t._tempV31),
              Re.subtract(a, t._tempV31, t._tempV32),
              Te.translation(t._tempV31, t._tempM0);
            var r = t._tempV32.clone(),
              s = t._tempM0.clone();
            (i.extents = r), (i.transformation = s);
          }),
          (t.createByMinAndMaxVertex = function(e, i) {
            Re.subtract(i, e, t._tempV30),
              Re.scale(t._tempV30, 0.5, t._tempV30),
              Re.add(e, t._tempV30, t._tempV31),
              Re.subtract(i, t._tempV31, t._tempV32),
              Te.translation(t._tempV31, t._tempM0);
            return new t(t._tempV32, t._tempM0);
          }),
          (t._getRows = function(t, e) {
            e.length = 3;
            var i = t.elements,
              n = e[0].elements;
            (n[0] = i[0]), (n[1] = i[1]), (n[2] = i[2]);
            var a = e[1].elements;
            (a[0] = i[4]), (a[1] = i[5]), (a[2] = i[6]);
            var r = e[2].elements;
            (r[0] = i[8]), (r[1] = i[9]), (r[2] = i[10]);
          }),
          (t.getObbtoObbMatrix4x4 = function(e, i, n, a) {
            var r = e.transformation,
              s = i.transformation;
            if (n) {
              t._getRows(r, t._rows1), t._getRows(s, t._rows2);
              for (var o = 0; o < 3; o++)
                for (var l = 0; l < 3; l++)
                  a.setElementByRowColumn(
                    o,
                    l,
                    Re.dot(t._rows2[o], t._rows1[l])
                  );
              i.getCenter(t._tempV30),
                e.getCenter(t._tempV31),
                Re.subtract(t._tempV30, t._tempV31, t._tempV32);
              var h = a.elements;
              (h[12] = Re.dot(t._tempV32, t._rows1[0])),
                (h[13] = Re.dot(t._tempV32, t._rows1[1])),
                (h[14] = Re.dot(t._tempV32, t._rows1[2])),
                (h[15] = 1);
            } else r.invert(t._tempM0), Te.multiply(s, t._tempM0, a);
          }),
          (t.merge = function(e, i, n) {
            var a = e.extents,
              r = e.transformation;
            t.getObbtoObbMatrix4x4(e, i, n, t._tempM0),
              i._getLocalCorners(t._corners),
              Re.transformCoordinate(t._corners[0], t._tempM0, t._corners[0]),
              Re.transformCoordinate(t._corners[1], t._tempM0, t._corners[1]),
              Re.transformCoordinate(t._corners[2], t._tempM0, t._corners[2]),
              Re.transformCoordinate(t._corners[3], t._tempM0, t._corners[3]),
              Re.transformCoordinate(t._corners[4], t._tempM0, t._corners[4]),
              Re.transformCoordinate(t._corners[5], t._tempM0, t._corners[5]),
              Re.transformCoordinate(t._corners[6], t._tempM0, t._corners[6]),
              Re.transformCoordinate(t._corners[7], t._tempM0, t._corners[7]),
              Re.scale(a, -1, t._boxBound1.min),
              a.cloneTo(t._boxBound1.max),
              be.createfromPoints(t._corners, t._boxBound2),
              be.merge(t._boxBound2, t._boxBound1, t._boxBound3);
            var s = t._boxBound3.min,
              o = t._boxBound3.max;
            Re.subtract(o, s, t._tempV30),
              Re.scale(t._tempV30, 0.5, t._tempV30),
              Re.add(s, t._tempV30, t._tempV32),
              Re.subtract(o, t._tempV32, a),
              Re.transformCoordinate(t._tempV32, r, t._tempV33);
          }),
          n(t, [
            '_tempV30',
            function() {
              return (this._tempV30 = new Re());
            },
            '_tempV31',
            function() {
              return (this._tempV31 = new Re());
            },
            '_tempV32',
            function() {
              return (this._tempV32 = new Re());
            },
            '_tempV33',
            function() {
              return (this._tempV33 = new Re());
            },
            '_tempV34',
            function() {
              return (this._tempV34 = new Re());
            },
            '_tempV35',
            function() {
              return (this._tempV35 = new Re());
            },
            '_tempV36',
            function() {
              return (this._tempV36 = new Re());
            },
            '_tempM0',
            function() {
              return (this._tempM0 = new Te());
            },
            '_tempM1',
            function() {
              return (this._tempM1 = new Te());
            },
            '_corners',
            function() {
              return (this._corners = [
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re()
              ]);
            },
            '_rows1',
            function() {
              return (this._rows1 = [new Re(), new Re(), new Re()]);
            },
            '_rows2',
            function() {
              return (this._rows2 = [new Re(), new Re(), new Re()]);
            },
            '_ray',
            function() {
              return (this._ray = new Ae(new Re(), new Re()));
            },
            '_boxBound1',
            function() {
              return (this._boxBound1 = new be(new Re(), new Re()));
            },
            '_boxBound2',
            function() {
              return (this._boxBound2 = new be(new Re(), new Re()));
            },
            '_boxBound3',
            function() {
              return (this._boxBound3 = new be(new Re(), new Re()));
            }
          ]),
          t
        );
      })(),
      Ee = (function() {
        function t(t, e) {
          (this.normal = null),
            (this.distance = NaN),
            void 0 === e && (e = 0),
            (this.normal = t),
            (this.distance = e);
        }
        a(t, 'laya.d3.math.Plane');
        return (
          (t.prototype.normalize = function() {
            var t = this.normal.elements,
              e = t[0],
              i = t[1],
              n = t[2],
              a = 1 / Math.sqrt(e * e + i * i + n * n);
            (t[0] = e * a),
              (t[1] = i * a),
              (t[2] = n * a),
              (this.distance *= a);
          }),
          (t.createPlaneBy3P = function(e, i, n) {
            var a = e.elements,
              r = i.elements,
              s = n.elements,
              o = r[0] - a[0],
              l = r[1] - a[1],
              h = r[2] - a[2],
              c = s[0] - a[0],
              u = s[1] - a[1],
              _ = s[2] - a[2],
              d = l * _ - h * u,
              f = h * c - o * _,
              p = o * u - l * c,
              m = 1 / Math.sqrt(d * d + f * f + p * p),
              g = d * m,
              y = f * m,
              v = p * m,
              b = t._TEMPVec3.elements;
            (b[0] = g), (b[1] = y), (b[2] = v);
            var w = -(g * a[0] + y * a[1] + v * a[2]);
            return new t(t._TEMPVec3, w);
          }),
          (t.PlaneIntersectionType_Back = 0),
          (t.PlaneIntersectionType_Front = 1),
          (t.PlaneIntersectionType_Intersecting = 2),
          n(t, [
            '_TEMPVec3',
            function() {
              return (this._TEMPVec3 = new Re());
            }
          ]),
          t
        );
      })(),
      Le = (function() {
        function t(t, e, i, n) {
          (this.elements = new Float32Array(4)),
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 1),
            (this.elements[0] = t),
            (this.elements[1] = e),
            (this.elements[2] = i),
            (this.elements[3] = n);
        }
        a(t, 'laya.d3.math.Quaternion');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.scaling = function(t, e) {
            var i = e.elements,
              n = this.elements;
            (i[0] = n[0] * t),
              (i[1] = n[1] * t),
              (i[2] = n[2] * t),
              (i[3] = n[3] * t);
          }),
          (e.normalize = function(t) {
            var e = t.elements,
              i = this.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = i[3],
              o = n * n + a * a + r * r + s * s;
            o > 0 &&
              ((o = 1 / Math.sqrt(o)),
              (e[0] = n * o),
              (e[1] = a * o),
              (e[2] = r * o),
              (e[3] = s * o));
          }),
          (e.length = function() {
            var t = this.elements,
              e = t[0],
              i = t[1],
              n = t[2],
              a = t[3];
            return Math.sqrt(e * e + i * i + n * n + a * a);
          }),
          (e.rotateX = function(t, e) {
            var i = e.elements,
              n = this.elements;
            t *= 0.5;
            var a = n[0],
              r = n[1],
              s = n[2],
              o = n[3],
              l = Math.sin(t),
              h = Math.cos(t);
            (i[0] = a * h + o * l),
              (i[1] = r * h + s * l),
              (i[2] = s * h - r * l),
              (i[3] = o * h - a * l);
          }),
          (e.rotateY = function(t, e) {
            var i = e.elements,
              n = this.elements;
            t *= 0.5;
            var a = n[0],
              r = n[1],
              s = n[2],
              o = n[3],
              l = Math.sin(t),
              h = Math.cos(t);
            (i[0] = a * h - s * l),
              (i[1] = r * h + o * l),
              (i[2] = s * h + a * l),
              (i[3] = o * h - r * l);
          }),
          (e.rotateZ = function(t, e) {
            var i = e.elements,
              n = this.elements;
            t *= 0.5;
            var a = n[0],
              r = n[1],
              s = n[2],
              o = n[3],
              l = Math.sin(t),
              h = Math.cos(t);
            (i[0] = a * h + r * l),
              (i[1] = r * h - a * l),
              (i[2] = s * h + o * l),
              (i[3] = o * h - s * l);
          }),
          (e.getYawPitchRoll = function(e) {
            Re.transformQuat(Re.ForwardRH, this, t.TEMPVector31),
              Re.transformQuat(Re.Up, this, t.TEMPVector32);
            var i = t.TEMPVector32.elements;
            t.angleTo(Re.ZERO, t.TEMPVector31, t.TEMPVector33);
            var n = t.TEMPVector33.elements;
            n[0] == Math.PI / 2
              ? ((n[1] = t.arcTanAngle(i[2], i[0])), (n[2] = 0))
              : n[0] == -Math.PI / 2
              ? ((n[1] = t.arcTanAngle(-i[2], -i[0])), (n[2] = 0))
              : (Te.createRotationY(-n[1], t.TEMPMatrix0),
                Te.createRotationX(-n[0], t.TEMPMatrix1),
                Re.transformCoordinate(
                  t.TEMPVector32,
                  t.TEMPMatrix0,
                  t.TEMPVector32
                ),
                Re.transformCoordinate(
                  t.TEMPVector32,
                  t.TEMPMatrix1,
                  t.TEMPVector32
                ),
                (n[2] = t.arcTanAngle(i[1], -i[0]))),
              n[1] <= -Math.PI && (n[1] = Math.PI),
              n[2] <= -Math.PI && (n[2] = Math.PI),
              n[1] >= Math.PI &&
                n[2] >= Math.PI &&
                ((n[1] = 0), (n[2] = 0), (n[0] = Math.PI - n[0]));
            var a = e.elements;
            (a[0] = n[1]), (a[1] = n[0]), (a[2] = n[2]);
          }),
          (e.invert = function(t) {
            var e = t.elements,
              i = this.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = i[3],
              o = n * n + a * a + r * r + s * s,
              l = o ? 1 / o : 0;
            (e[0] = -n * l), (e[1] = -a * l), (e[2] = -r * l), (e[3] = s * l);
          }),
          (e.identity = function() {
            var t = this.elements;
            (t[0] = 0), (t[1] = 0), (t[2] = 0), (t[3] = 1);
          }),
          (e.fromArray = function(t, e) {
            void 0 === e && (e = 0),
              (this.elements[0] = t[e + 0]),
              (this.elements[1] = t[e + 1]),
              (this.elements[2] = t[e + 2]),
              (this.elements[3] = t[e + 3]);
          }),
          (e.cloneTo = function(t) {
            var e, i, n;
            if (((i = this.elements), (n = t.elements), i !== n))
              for (e = 0; e < 4; ++e) n[e] = i[e];
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (e.equals = function(t) {
            var e = this.elements,
              i = t.elements;
            return (
              Ce.nearEqual(e[0], i[0]) &&
              Ce.nearEqual(e[1], i[1]) &&
              Ce.nearEqual(e[2], i[2]) &&
              Ce.nearEqual(e[3], i[3])
            );
          }),
          (e.lengthSquared = function() {
            var t = this.elements[0],
              e = this.elements[1],
              i = this.elements[2],
              n = this.elements[3];
            return t * t + e * e + i * i + n * n;
          }),
          r(0, e, 'x', function() {
            return this.elements[0];
          }),
          r(0, e, 'y', function() {
            return this.elements[1];
          }),
          r(0, e, 'z', function() {
            return this.elements[2];
          }),
          r(0, e, 'w', function() {
            return this.elements[3];
          }),
          (t.createFromYawPitchRoll = function(t, e, i, n) {
            var a = 0.5 * i,
              r = 0.5 * e,
              s = 0.5 * t,
              o = Math.sin(a),
              l = Math.cos(a),
              h = Math.sin(r),
              c = Math.cos(r),
              u = Math.sin(s),
              _ = Math.cos(s),
              d = n.elements;
            (d[0] = _ * h * l + u * c * o),
              (d[1] = u * c * l - _ * h * o),
              (d[2] = _ * c * o - u * h * l),
              (d[3] = _ * c * l + u * h * o);
          }),
          (t.multiply = function(t, e, i) {
            var n = t.elements,
              a = e.elements,
              r = i.elements,
              s = n[0],
              o = n[1],
              l = n[2],
              h = n[3],
              c = a[0],
              u = a[1],
              _ = a[2],
              d = a[3],
              f = o * _ - l * u,
              p = l * c - s * _,
              m = s * u - o * c,
              g = s * c + o * u + l * _;
            (r[0] = s * d + c * h + f),
              (r[1] = o * d + u * h + p),
              (r[2] = l * d + _ * h + m),
              (r[3] = h * d - g);
          }),
          (t.arcTanAngle = function(t, e) {
            return 0 == t
              ? 1 == e
                ? Math.PI / 2
                : -Math.PI / 2
              : t > 0
              ? Math.atan(e / t)
              : t < 0
              ? e > 0
                ? Math.atan(e / t) + Math.PI
                : Math.atan(e / t) - Math.PI
              : 0;
          }),
          (t.angleTo = function(e, i, n) {
            Re.subtract(i, e, t.TEMPVector30),
              Re.normalize(t.TEMPVector30, t.TEMPVector30),
              (n.elements[0] = Math.asin(t.TEMPVector30.y)),
              (n.elements[1] = t.arcTanAngle(
                -t.TEMPVector30.z,
                -t.TEMPVector30.x
              ));
          }),
          (t.createFromAxisAngle = function(t, e, i) {
            var n = i.elements,
              a = t.elements;
            e *= 0.5;
            var r = Math.sin(e);
            (n[0] = r * a[0]),
              (n[1] = r * a[1]),
              (n[2] = r * a[2]),
              (n[3] = Math.cos(e));
          }),
          (t.createFromMatrix3x3 = function(t, e) {
            var i,
              n = e.elements,
              a = t.elements,
              r = a[0] + a[4] + a[8];
            if (r > 0)
              (i = Math.sqrt(r + 1)),
                (n[3] = 0.5 * i),
                (i = 0.5 / i),
                (n[0] = (a[5] - a[7]) * i),
                (n[1] = (a[6] - a[2]) * i),
                (n[2] = (a[1] - a[3]) * i);
            else {
              var s = 0;
              a[4] > a[0] && (s = 1), a[8] > a[3 * s + s] && (s = 2);
              var o = (s + 1) % 3,
                l = (s + 2) % 3;
              (i = Math.sqrt(a[3 * s + s] - a[3 * o + o] - a[3 * l + l] + 1)),
                (n[s] = 0.5 * i),
                (i = 0.5 / i),
                (n[3] = (a[3 * o + l] - a[3 * l + o]) * i),
                (n[o] = (a[3 * o + s] + a[3 * s + o]) * i),
                (n[l] = (a[3 * l + s] + a[3 * s + l]) * i);
            }
          }),
          (t.createFromMatrix4x4 = function(t, e) {
            var i,
              n,
              a = t.elements,
              r = e.elements,
              s = a[0] + a[5] + a[10];
            s > 0
              ? ((i = Math.sqrt(s + 1)),
                (r[3] = 0.5 * i),
                (i = 0.5 / i),
                (r[0] = (a[6] - a[9]) * i),
                (r[1] = (a[8] - a[2]) * i),
                (r[2] = (a[1] - a[4]) * i))
              : a[0] >= a[5] && a[0] >= a[10]
              ? ((n = 0.5 / (i = Math.sqrt(1 + a[0] - a[5] - a[10]))),
                (r[0] = 0.5 * i),
                (r[1] = (a[1] + a[4]) * n),
                (r[2] = (a[2] + a[8]) * n),
                (r[3] = (a[6] - a[9]) * n))
              : a[5] > a[10]
              ? ((n = 0.5 / (i = Math.sqrt(1 + a[5] - a[0] - a[10]))),
                (r[0] = (a[4] + a[1]) * n),
                (r[1] = 0.5 * i),
                (r[2] = (a[9] + a[6]) * n),
                (r[3] = (a[8] - a[2]) * n))
              : ((n = 0.5 / (i = Math.sqrt(1 + a[10] - a[0] - a[5]))),
                (r[0] = (a[8] + a[2]) * n),
                (r[1] = (a[9] + a[6]) * n),
                (r[2] = 0.5 * i),
                (r[3] = (a[1] - a[4]) * n));
          }),
          (t.slerp = function(t, e, i, n) {
            var a,
              r,
              s,
              o,
              l,
              h = t.elements,
              c = e.elements,
              u = n.elements,
              _ = h[0],
              d = h[1],
              f = h[2],
              p = h[3],
              m = c[0],
              g = c[1],
              y = c[2],
              v = c[3];
            return (
              (r = _ * m + d * g + f * y + p * v) < 0 &&
                ((r = -r), (m = -m), (g = -g), (y = -y), (v = -v)),
              1 - r > 1e-6
                ? ((a = Math.acos(r)),
                  (s = Math.sin(a)),
                  (o = Math.sin((1 - i) * a) / s),
                  (l = Math.sin(i * a) / s))
                : ((o = 1 - i), (l = i)),
              (u[0] = o * _ + l * m),
              (u[1] = o * d + l * g),
              (u[2] = o * f + l * y),
              (u[3] = o * p + l * v),
              u
            );
          }),
          (t.lerp = function(t, e, i, n) {
            var a = n.elements,
              r = t.elements,
              s = e.elements,
              o = r[0],
              l = r[1],
              h = r[2],
              c = r[3];
            (a[0] = o + i * (s[0] - o)),
              (a[1] = l + i * (s[1] - l)),
              (a[2] = h + i * (s[2] - h)),
              (a[3] = c + i * (s[3] - c));
          }),
          (t.add = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = a[0] + r[0]),
              (n[1] = a[1] + r[1]),
              (n[2] = a[2] + r[2]),
              (n[3] = a[3] + r[3]);
          }),
          (t.dot = function(t, e) {
            var i = t.elements,
              n = e.elements;
            return i[0] * n[0] + i[1] * n[1] + i[2] * n[2] + i[3] * n[3];
          }),
          (t.rotationLookAt = function(e, i, n) {
            t.lookAt(Re.ZERO, e, i, n);
          }),
          (t.lookAt = function(e, i, n, a) {
            Se.lookAt(e, i, n, t._tempMatrix3x3),
              t.rotationMatrix(t._tempMatrix3x3, a);
          }),
          (t.invert = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = t.lengthSquared();
            Ce.isZero(a) ||
              ((a = 1 / a),
              (n[0] = -i[0] * a),
              (n[1] = -i[1] * a),
              (n[2] = -i[2] * a),
              (n[3] = i[3] * a));
          }),
          (t.rotationMatrix = function(t, e) {
            var i = t.elements,
              n = i[0],
              a = i[1],
              r = i[2],
              s = i[3],
              o = i[4],
              l = i[5],
              h = i[6],
              c = i[7],
              u = i[8],
              _ = e.elements,
              d = NaN,
              f = NaN,
              p = n + o + u;
            p > 0
              ? ((d = Math.sqrt(p + 1)),
                (_[3] = 0.5 * d),
                (d = 0.5 / d),
                (_[0] = (l - c) * d),
                (_[1] = (h - r) * d),
                (_[2] = (a - s) * d))
              : n >= o && n >= u
              ? ((f = 0.5 / (d = Math.sqrt(1 + n - o - u))),
                (_[0] = 0.5 * d),
                (_[1] = (a + s) * f),
                (_[2] = (r + h) * f),
                (_[3] = (l - c) * f))
              : o > u
              ? ((f = 0.5 / (d = Math.sqrt(1 + o - n - u))),
                (_[0] = (s + a) * f),
                (_[1] = 0.5 * d),
                (_[2] = (c + l) * f),
                (_[3] = (h - r) * f))
              : ((f = 0.5 / (d = Math.sqrt(1 + u - n - o))),
                (_[0] = (h + r) * f),
                (_[1] = (c + l) * f),
                (_[2] = 0.5 * d),
                (_[3] = (a - s) * f));
          }),
          (t.DEFAULT = new t()),
          n(t, [
            'TEMPVector30',
            function() {
              return (this.TEMPVector30 = new Re());
            },
            'TEMPVector31',
            function() {
              return (this.TEMPVector31 = new Re());
            },
            'TEMPVector32',
            function() {
              return (this.TEMPVector32 = new Re());
            },
            'TEMPVector33',
            function() {
              return (this.TEMPVector33 = new Re());
            },
            'TEMPMatrix0',
            function() {
              return (this.TEMPMatrix0 = new Te());
            },
            'TEMPMatrix1',
            function() {
              return (this.TEMPMatrix1 = new Te());
            },
            '_tempMatrix3x3',
            function() {
              return (this._tempMatrix3x3 = new Se());
            },
            'NAN',
            function() {
              return (this.NAN = new t(NaN, NaN, NaN, NaN));
            }
          ]),
          t
        );
      })(),
      De = (function() {
        function t(t) {
          (this._temp = new Uint32Array(1)),
            (this.seeds = new Uint32Array(4)),
            (this.seeds[0] = t),
            (this.seeds[1] = 1812433253 * this.seeds[0] + 1),
            (this.seeds[2] = 1812433253 * this.seeds[1] + 1),
            (this.seeds[3] = 1812433253 * this.seeds[2] + 1);
        }
        a(t, 'laya.d3.math.Rand');
        var e = t.prototype;
        return (
          (e.getUint = function() {
            return (
              (this._temp[0] = this.seeds[0] ^ (this.seeds[0] << 11)),
              (this.seeds[0] = this.seeds[1]),
              (this.seeds[1] = this.seeds[2]),
              (this.seeds[2] = this.seeds[3]),
              (this.seeds[3] =
                this.seeds[3] ^
                (this.seeds[3] >>> 19) ^
                this._temp[0] ^
                (this._temp[0] >>> 8)),
              this.seeds[3]
            );
          }),
          (e.getFloat = function() {
            return this.getUint(), (8388607 & this.seeds[3]) * (1 / 8388607);
          }),
          (e.getSignedFloat = function() {
            return 2 * this.getFloat() - 1;
          }),
          r(
            0,
            e,
            'seed',
            function() {
              return this.seeds[0];
            },
            function(t) {
              (this.seeds[0] = t),
                (this.seeds[1] = 1812433253 * this.seeds[0] + 1),
                (this.seeds[2] = 1812433253 * this.seeds[1] + 1),
                (this.seeds[3] = 1812433253 * this.seeds[2] + 1);
            }
          ),
          (t.getFloatFromInt = function(t) {
            return (1 / 8388607) * (8388607 & t);
          }),
          (t.getByteFromInt = function(t) {
            return (8388607 & t) >>> 15;
          }),
          t
        );
      })(),
      Ae =
        ((function() {
          function t(t) {
            if (
              ((this._state0U = NaN),
              (this._state0L = NaN),
              (this._state1U = NaN),
              (this._state1L = NaN),
              !(t instanceof Array) || 4 !== t.length)
            )
              throw new Error('Rand:Seed must be an array with 4 numbers');
            (this._state0U = 0 | t[0]),
              (this._state0L = 0 | t[1]),
              (this._state1U = 0 | t[2]),
              (this._state1L = 0 | t[3]);
          }
          a(t, 'laya.d3.math.RandX');
          var e = t.prototype;
          (e.randomint = function() {
            var t = this._state0U,
              e = this._state0L,
              i = this._state1U,
              n = this._state1L,
              a = (n >>> 0) + (e >>> 0),
              r = (i + t + ((a / 2) >>> 31)) >>> 0,
              s = a >>> 0;
            (this._state0U = i), (this._state0L = n);
            var o = 0,
              l = 0,
              h = 0,
              c = 0;
            (o = (t ^= o = (t << 23) | ((-512 & e) >>> 9)) ^ i),
              (l = (e ^= l = e << 23) ^ n);
            (o ^= h = t >>> 18), (l ^= c = (e >>> 18) | ((262143 & t) << 14));
            return (
              (h = i >>> 5),
              (c = (n >>> 5) | ((31 & i) << 27)),
              (o ^= h),
              (l ^= c),
              (this._state1U = o),
              (this._state1L = l),
              [r, s]
            );
          }),
            (e.random = function() {
              var e = this.randomint(),
                i = e[0],
                n = (1023 << 20) | (i >>> 12),
                a = 0 | ((e[1] >>> 12) | ((4095 & i) << 20));
              t._CONVERTION_BUFFER.setUint32(0, n, !1),
                t._CONVERTION_BUFFER.setUint32(4, a, !1);
              return De._CONVERTION_BUFFER.getFloat64(0, !1) - 1;
            }),
            n(t, [
              '_CONVERTION_BUFFER',
              function() {
                return (this._CONVERTION_BUFFER = new DataView(
                  new ArrayBuffer(8)
                ));
              },
              'defaultRand',
              function() {
                return (this.defaultRand = new De([
                  0,
                  Date.now() / 65536,
                  0,
                  Date.now() % 65536
                ]));
              }
            ]);
        })(),
        (function() {
          function t(t, e) {
            (this.origin = null),
              (this.direction = null),
              (this.origin = t),
              (this.direction = e);
          }
          return a(t, 'laya.d3.math.Ray'), t;
        })()),
      Ne = (function() {
        function t(t, e) {
          (this.elements = new Float32Array(2)),
            void 0 === t && (t = 0),
            void 0 === e && (e = 0);
          var i = this.elements;
          (i[0] = t), (i[1] = e);
        }
        a(t, 'laya.d3.math.Vector2');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.fromArray = function(t, e) {
            void 0 === e && (e = 0),
              (this.elements[0] = t[e + 0]),
              (this.elements[1] = t[e + 1]);
          }),
          (e.cloneTo = function(t) {
            var e = t.elements,
              i = this.elements;
            (e[0] = i[0]), (e[1] = i[1]);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(
            0,
            e,
            'x',
            function() {
              return this.elements[0];
            },
            function(t) {
              this.elements[0] = t;
            }
          ),
          r(
            0,
            e,
            'y',
            function() {
              return this.elements[1];
            },
            function(t) {
              this.elements[1] = t;
            }
          ),
          (t.scale = function(t, e, i) {
            var n = i.elements,
              a = t.elements;
            (n[0] = a[0] * e), (n[1] = a[1] * e);
          }),
          n(t, [
            'ZERO',
            function() {
              return (this.ZERO = new t(0, 0));
            },
            'ONE',
            function() {
              return (this.ONE = new t(1, 1));
            }
          ]),
          t
        );
      })(),
      Re = (function() {
        function t(t, e, i) {
          (this.elements = new Float32Array(3)),
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0);
          var n = this.elements;
          (n[0] = t), (n[1] = e), (n[2] = i);
        }
        a(t, 'laya.d3.math.Vector3');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.fromArray = function(t, e) {
            void 0 === e && (e = 0),
              (this.elements[0] = t[e + 0]),
              (this.elements[1] = t[e + 1]),
              (this.elements[2] = t[e + 2]);
          }),
          (e.cloneTo = function(t) {
            var e = t.elements,
              i = this.elements;
            (e[0] = i[0]), (e[1] = i[1]), (e[2] = i[2]);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (e.toDefault = function() {
            (this.elements[0] = 0),
              (this.elements[1] = 0),
              (this.elements[2] = 0);
          }),
          r(
            0,
            e,
            'x',
            function() {
              return this.elements[0];
            },
            function(t) {
              this.elements[0] = t;
            }
          ),
          r(
            0,
            e,
            'y',
            function() {
              return this.elements[1];
            },
            function(t) {
              this.elements[1] = t;
            }
          ),
          r(
            0,
            e,
            'z',
            function() {
              return this.elements[2];
            },
            function(t) {
              this.elements[2] = t;
            }
          ),
          (t.distanceSquared = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = i[0] - n[0],
              r = i[1] - n[1],
              s = i[2] - n[2];
            return a * a + r * r + s * s;
          }),
          (t.distance = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = i[0] - n[0],
              r = i[1] - n[1],
              s = i[2] - n[2];
            return Math.sqrt(a * a + r * r + s * s);
          }),
          (t.min = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = Math.min(a[0], r[0])),
              (n[1] = Math.min(a[1], r[1])),
              (n[2] = Math.min(a[2], r[2]));
          }),
          (t.max = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = Math.max(a[0], r[0])),
              (n[1] = Math.max(a[1], r[1])),
              (n[2] = Math.max(a[2], r[2]));
          }),
          (t.transformQuat = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements,
              s = a[0],
              o = a[1],
              l = a[2],
              h = r[0],
              c = r[1],
              u = r[2],
              _ = r[3],
              d = _ * s + c * l - u * o,
              f = _ * o + u * s - h * l,
              p = _ * l + h * o - c * s,
              m = -h * s - c * o - u * l;
            (n[0] = d * _ + m * -h + f * -u - p * -c),
              (n[1] = f * _ + m * -c + p * -h - d * -u),
              (n[2] = p * _ + m * -u + d * -c - f * -h);
          }),
          (t.scalarLength = function(t) {
            var e = t.elements,
              i = e[0],
              n = e[1],
              a = e[2];
            return Math.sqrt(i * i + n * n + a * a);
          }),
          (t.scalarLengthSquared = function(t) {
            var e = t.elements,
              i = e[0],
              n = e[1],
              a = e[2];
            return i * i + n * n + a * a;
          }),
          (t.normalize = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = i[0],
              r = i[1],
              s = i[2],
              o = a * a + r * r + s * s;
            o > 0 &&
              ((o = 1 / Math.sqrt(o)),
              (n[0] = i[0] * o),
              (n[1] = i[1] * o),
              (n[2] = i[2] * o));
          }),
          (t.multiply = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = a[0] * r[0]), (n[1] = a[1] * r[1]), (n[2] = a[2] * r[2]);
          }),
          (t.scale = function(t, e, i) {
            var n = i.elements,
              a = t.elements;
            (n[0] = a[0] * e), (n[1] = a[1] * e), (n[2] = a[2] * e);
          }),
          (t.lerp = function(t, e, i, n) {
            var a = n.elements,
              r = t.elements,
              s = e.elements,
              o = r[0],
              l = r[1],
              h = r[2];
            (a[0] = o + i * (s[0] - o)),
              (a[1] = l + i * (s[1] - l)),
              (a[2] = h + i * (s[2] - h));
          }),
          (t.transformV3ToV3 = function(e, i, n) {
            var a = t._tempVector4;
            t.transformV3ToV4(e, i, a);
            var r = a.elements,
              s = n.elements;
            (s[0] = r[0]), (s[1] = r[1]), (s[2] = r[2]);
          }),
          (t.transformV3ToV4 = function(t, e, i) {
            var n = t.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = e.elements,
              l = i.elements;
            (l[0] = a * o[0] + r * o[4] + s * o[8] + o[12]),
              (l[1] = a * o[1] + r * o[5] + s * o[9] + o[13]),
              (l[2] = a * o[2] + r * o[6] + s * o[10] + o[14]),
              (l[3] = a * o[3] + r * o[7] + s * o[11] + o[15]);
          }),
          (t.TransformNormal = function(t, e, i) {
            var n = t.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = e.elements,
              l = i.elements;
            (l[0] = a * o[0] + r * o[4] + s * o[8]),
              (l[1] = a * o[1] + r * o[5] + s * o[9]),
              (l[2] = a * o[2] + r * o[6] + s * o[10]);
          }),
          (t.transformCoordinate = function(e, i, n) {
            var a = t._tempVector4.elements,
              r = e.elements,
              s = r[0],
              o = r[1],
              l = r[2],
              h = i.elements;
            (a[0] = s * h[0] + o * h[4] + l * h[8] + h[12]),
              (a[1] = s * h[1] + o * h[5] + l * h[9] + h[13]),
              (a[2] = s * h[2] + o * h[6] + l * h[10] + h[14]),
              (a[3] = 1 / (s * h[3] + o * h[7] + l * h[11] + h[15]));
            var c = n.elements;
            (c[0] = a[0] * a[3]), (c[1] = a[1] * a[3]), (c[2] = a[2] * a[3]);
          }),
          (t.Clamp = function(t, e, i, n) {
            var a = t.elements,
              r = a[0],
              s = a[1],
              o = a[2],
              l = e.elements,
              h = l[0],
              c = l[1],
              u = l[2],
              _ = i.elements,
              d = _[0],
              f = _[1],
              p = _[2],
              m = n.elements;
            (r = (r = r > d ? d : r) < h ? h : r),
              (s = (s = s > f ? f : s) < c ? c : s),
              (o = (o = o > p ? p : o) < u ? u : o),
              (m[0] = r),
              (m[1] = s),
              (m[2] = o);
          }),
          (t.add = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = a[0] + r[0]), (n[1] = a[1] + r[1]), (n[2] = a[2] + r[2]);
          }),
          (t.subtract = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = a[0] - r[0]), (n[1] = a[1] - r[1]), (n[2] = a[2] - r[2]);
          }),
          (t.cross = function(t, e, i) {
            var n = t.elements,
              a = e.elements,
              r = i.elements,
              s = n[0],
              o = n[1],
              l = n[2],
              h = a[0],
              c = a[1],
              u = a[2];
            (r[0] = o * u - l * c),
              (r[1] = l * h - s * u),
              (r[2] = s * c - o * h);
          }),
          (t.dot = function(t, e) {
            var i = t.elements,
              n = e.elements;
            return i[0] * n[0] + i[1] * n[1] + i[2] * n[2];
          }),
          (t.equals = function(t, e) {
            var i = t.elements,
              n = e.elements;
            return (
              Ce.nearEqual(Math.abs(i[0]), Math.abs(n[0])) &&
              Ce.nearEqual(Math.abs(i[1]), Math.abs(n[1])) &&
              Ce.nearEqual(Math.abs(i[2]), Math.abs(n[2]))
            );
          }),
          (t.ZERO = new t(0, 0, 0)),
          (t.ONE = new t(1, 1, 1)),
          (t.NegativeUnitX = new t(-1, 0, 0)),
          (t.UnitX = new t(1, 0, 0)),
          (t.UnitY = new t(0, 1, 0)),
          (t.UnitZ = new t(0, 0, 1)),
          (t.ForwardRH = new t(0, 0, -1)),
          (t.ForwardLH = new t(0, 0, 1)),
          (t.Up = new t(0, 1, 0)),
          (t.NAN = new t(NaN, NaN, NaN)),
          n(t, [
            '_tempVector4',
            function() {
              return (this._tempVector4 = new Be());
            }
          ]),
          t
        );
      })(),
      Be = (function() {
        function t(t, e, i, n) {
          (this.elements = new Float32Array(4)),
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0);
          var a = this.elements;
          (a[0] = t), (a[1] = e), (a[2] = i), (a[3] = n);
        }
        a(t, 'laya.d3.math.Vector4');
        var e = t.prototype;
        return (
          i.imps(e, { 'laya.d3.core.IClone': !0 }),
          (e.fromArray = function(t, e) {
            void 0 === e && (e = 0),
              (this.elements[0] = t[e + 0]),
              (this.elements[1] = t[e + 1]),
              (this.elements[2] = t[e + 2]),
              (this.elements[3] = t[e + 3]);
          }),
          (e.cloneTo = function(t) {
            var e = t.elements,
              i = this.elements;
            (e[0] = i[0]), (e[1] = i[1]), (e[2] = i[2]), (e[3] = i[3]);
          }),
          (e.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (e.length = function() {
            return Math.sqrt(
              this.x * this.x +
                this.y * this.y +
                this.z * this.z +
                this.w * this.w
            );
          }),
          (e.lengthSquared = function() {
            return (
              this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
            );
          }),
          r(
            0,
            e,
            'x',
            function() {
              return this.elements[0];
            },
            function(t) {
              this.elements[0] = t;
            }
          ),
          r(
            0,
            e,
            'y',
            function() {
              return this.elements[1];
            },
            function(t) {
              this.elements[1] = t;
            }
          ),
          r(
            0,
            e,
            'z',
            function() {
              return this.elements[2];
            },
            function(t) {
              this.elements[2] = t;
            }
          ),
          r(
            0,
            e,
            'w',
            function() {
              return this.elements[3];
            },
            function(t) {
              this.elements[3] = t;
            }
          ),
          (t.lerp = function(t, e, i, n) {
            var a = n.elements,
              r = t.elements,
              s = e.elements,
              o = r[0],
              l = r[1],
              h = r[2],
              c = r[3];
            (a[0] = o + i * (s[0] - o)),
              (a[1] = l + i * (s[1] - l)),
              (a[2] = h + i * (s[2] - h)),
              (a[3] = c + i * (s[3] - c));
          }),
          (t.transformByM4x4 = function(t, e, i) {
            var n = t.elements,
              a = n[0],
              r = n[1],
              s = n[2],
              o = n[3],
              l = e.elements,
              h = i.elements;
            (h[0] = a * l[0] + r * l[4] + s * l[8] + o * l[12]),
              (h[1] = a * l[1] + r * l[5] + s * l[9] + o * l[13]),
              (h[2] = a * l[2] + r * l[6] + s * l[10] + o * l[14]),
              (h[3] = a * l[3] + r * l[7] + s * l[11] + o * l[15]);
          }),
          (t.equals = function(t, e) {
            var i = t.elements,
              n = e.elements;
            return (
              Ce.nearEqual(Math.abs(i[0]), Math.abs(n[0])) &&
              Ce.nearEqual(Math.abs(i[1]), Math.abs(n[1])) &&
              Ce.nearEqual(Math.abs(i[2]), Math.abs(n[2])) &&
              Ce.nearEqual(Math.abs(i[3]), Math.abs(n[3]))
            );
          }),
          (t.normalize = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = t.length();
            a > 0 &&
              ((n[0] = i[0] * a),
              (n[1] = i[1] * a),
              (n[2] = i[2] * a),
              (n[3] = i[3] * a));
          }),
          (t.add = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = a[0] + r[0]),
              (n[1] = a[1] + r[1]),
              (n[2] = a[2] + r[2]),
              (n[3] = a[3] + r[3]);
          }),
          (t.subtract = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = a[0] - r[0]),
              (n[1] = a[1] - r[1]),
              (n[2] = a[2] - r[2]),
              (n[3] = a[3] - r[3]);
          }),
          (t.multiply = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = a[0] * r[0]),
              (n[1] = a[1] * r[1]),
              (n[2] = a[2] * r[2]),
              (n[3] = a[3] * r[3]);
          }),
          (t.scale = function(t, e, i) {
            var n = i.elements,
              a = t.elements;
            (n[0] = a[0] * e),
              (n[1] = a[1] * e),
              (n[2] = a[2] * e),
              (n[3] = a[3] * e);
          }),
          (t.Clamp = function(t, e, i, n) {
            var a = t.elements,
              r = a[0],
              s = a[1],
              o = a[2],
              l = a[3],
              h = e.elements,
              c = h[0],
              u = h[1],
              _ = h[2],
              d = h[3],
              f = i.elements,
              p = f[0],
              m = f[1],
              g = f[2],
              y = f[3],
              v = n.elements;
            (r = (r = r > p ? p : r) < c ? c : r),
              (s = (s = s > m ? m : s) < u ? u : s),
              (o = (o = o > g ? g : o) < _ ? _ : o),
              (l = (l = l > y ? y : l) < d ? d : l),
              (v[0] = r),
              (v[1] = s),
              (v[2] = o),
              (v[3] = l);
          }),
          (t.distanceSquared = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = i[0] - n[0],
              r = i[1] - n[1],
              s = i[2] - n[2],
              o = i[3] - n[3];
            return a * a + r * r + s * s + o * o;
          }),
          (t.distance = function(t, e) {
            var i = t.elements,
              n = e.elements,
              a = i[0] - n[0],
              r = i[1] - n[1],
              s = i[2] - n[2],
              o = i[3] - n[3];
            return Math.sqrt(a * a + r * r + s * s + o * o);
          }),
          (t.dot = function(t, e) {
            var i = t.elements,
              n = e.elements;
            return i[0] * n[0] + i[1] * n[1] + i[2] * n[2] + i[3] * n[3];
          }),
          (t.min = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = Math.min(a[0], r[0])),
              (n[1] = Math.min(a[1], r[1])),
              (n[2] = Math.min(a[2], r[2])),
              (n[3] = Math.min(a[3], r[3]));
          }),
          (t.max = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e.elements;
            (n[0] = Math.max(a[0], r[0])),
              (n[1] = Math.max(a[1], r[1])),
              (n[2] = Math.max(a[2], r[2])),
              (n[3] = Math.max(a[3], r[3]));
          }),
          n(t, [
            'ZERO',
            function() {
              return (this.ZERO = new t());
            },
            'ONE',
            function() {
              return (this.ONE = new t(1, 1, 1, 1));
            },
            'UnitX',
            function() {
              return (this.UnitX = new t(1, 0, 0, 0));
            },
            'UnitY',
            function() {
              return (this.UnitY = new t(0, 1, 0, 0));
            },
            'UnitZ',
            function() {
              return (this.UnitZ = new t(0, 0, 1, 0));
            },
            'UnitW',
            function() {
              return (this.UnitW = new t(0, 0, 0, 1));
            }
          ]),
          t
        );
      })(),
      ke = (function() {
        function t(t, e, i, n) {
          (this.minDepth = 0),
            (this.maxDepth = 1),
            (this.x = t),
            (this.y = e),
            (this.width = i),
            (this.height = n);
        }
        a(t, 'laya.d3.math.Viewport');
        var e = t.prototype;
        return (
          (e.project = function(t, e, i) {
            Re.transformV3ToV3(t, e, i);
            var n = t.elements,
              a = e.elements,
              r = i.elements,
              s = n[0] * a[3] + n[1] * a[7] + n[2] * a[11] + a[15];
            1 !== s &&
              ((r[0] = r[0] / s), (r[1] = r[1] / s), (r[2] = r[2] / s)),
              (r[0] = 0.5 * (r[0] + 1) * this.width + this.x),
              (r[1] = 0.5 * (1 - r[1]) * this.height + this.y),
              (r[2] = r[2] * (this.maxDepth - this.minDepth) + this.minDepth);
          }),
          (e.unprojectFromMat = function(t, e, i) {
            var n = t.elements,
              a = e.elements,
              r = i.elements;
            (r[0] = ((n[0] - this.x) / this.width) * 2 - 1),
              (r[1] = -(((n[1] - this.y) / this.height) * 2 - 1));
            var s = (this.maxDepth - this.minDepth) / 2;
            r[2] = (n[2] - this.minDepth - s) / s;
            var o = r[0] * a[3] + r[1] * a[7] + r[2] * a[11] + a[15];
            Re.transformV3ToV3(i, e, i),
              1 !== o &&
                ((r[0] = r[0] / o), (r[1] = r[1] / o), (r[2] = r[2] / o));
          }),
          (e.unprojectFromWVP = function(e, i, n, a, r) {
            Te.multiply(i, n, t._tempMatrix4x4),
              a && Te.multiply(t._tempMatrix4x4, a, t._tempMatrix4x4),
              t._tempMatrix4x4.invert(t._tempMatrix4x4),
              this.unprojectFromMat(e, t._tempMatrix4x4, r);
          }),
          n(t, [
            '_tempMatrix4x4',
            function() {
              return (this._tempMatrix4x4 = new Te());
            }
          ]),
          t
        );
      })(),
      Pe = (function() {
        function t() {
          (this._alphaBlending = 1),
            (this._colorIntensity = 1),
            (this._shaderValue = new Fe());
        }
        a(t, 'laya.d3.resource.models.Sky');
        var e = t.prototype;
        return (
          (e._setEnvironmentDiffuse = function() {
            this._environmentDiffuse.loaded
              ? this.__ownerCamera._shaderValues.setValue(
                  7,
                  this._environmentDiffuse
                )
              : this._environmentDiffuse.on(
                  'loaded',
                  this,
                  this._environmentDiffuseLoaded
                );
          }),
          (e._setEnvironmentSpecular = function() {
            if (this._environmentSpecular.loaded) {
              var t = this._environmentSpecular.simLodInfo;
              t &&
                t instanceof Float32Array &&
                this.__ownerCamera._shaderValues.setValue(9, t),
                this.__ownerCamera._shaderValues.setValue(
                  8,
                  this._environmentSpecular
                );
            } else
              this._environmentSpecular.on(
                'loaded',
                this,
                this._environmentSpecularLoaded
              );
          }),
          (e._environmentDiffuseLoaded = function() {
            this.__ownerCamera._shaderValues.setValue(
              7,
              this._environmentDiffuse
            );
          }),
          (e._environmentSpecularLoaded = function() {
            var t = this._environmentSpecular.simLodInfo;
            t &&
              t instanceof Float32Array &&
              this.__ownerCamera._shaderValues.setValue(9, t),
              this.__ownerCamera._shaderValues.setValue(
                8,
                this._environmentSpecular
              );
          }),
          (e._render = function(t) {}),
          (e.destroy = function() {
            this.__ownerCamera = null;
          }),
          r(0, e, '_ownerCamera', null, function(t) {
            (this.__ownerCamera = t),
              this._environmentDiffuse && this._setEnvironmentDiffuse(),
              this._environmentSpecular && this._setEnvironmentSpecular();
          }),
          r(
            0,
            e,
            'alphaBlending',
            function() {
              return this._alphaBlending;
            },
            function(t) {
              (this._alphaBlending = t),
                this._alphaBlending < 0 && (this._alphaBlending = 0),
                this._alphaBlending > 1 && (this._alphaBlending = 1);
            }
          ),
          r(0, e, 'envDiffuseSHBlue', null, function(t) {
            this.__ownerCamera._shaderValues.setValue(12, t);
          }),
          r(
            0,
            e,
            'colorIntensity',
            function() {
              return this._colorIntensity;
            },
            function(t) {
              (this._colorIntensity = t),
                this._colorIntensity < 0 && (this._colorIntensity = 0);
            }
          ),
          r(0, e, 'envDiffuseSHGreen', null, function(t) {
            this.__ownerCamera._shaderValues.setValue(11, t);
          }),
          r(0, e, 'envDiffuseSHRed', null, function(t) {
            this.__ownerCamera._shaderValues.setValue(10, t);
          }),
          r(
            0,
            e,
            'environmentDiffuse',
            function() {
              return this._environmentDiffuse;
            },
            function(t) {
              (t.minFifter = 9728),
                (this._environmentDiffuse = t),
                this.__ownerCamera && this._setEnvironmentDiffuse();
            }
          ),
          r(
            0,
            e,
            'environmentSpecular',
            function() {
              return this._environmentSpecular;
            },
            function(t) {
              (this._environmentSpecular = t),
                this.__ownerCamera && this._setEnvironmentSpecular();
            }
          ),
          (t.MVPMATRIX = 0),
          (t.INTENSITY = 1),
          (t.ALPHABLENDING = 2),
          (t.DIFFUSETEXTURE = 3),
          t
        );
      })(),
      Oe = (function() {
        function t(t) {
          (this._mesh = null),
            (this._boneIndicesList = null),
            (this._subIndexBufferStart = null),
            (this._subIndexBufferCount = null),
            (this._skinAnimationDatas = null),
            (this._bufferUsage = null),
            (this._indexInMesh = 0),
            (this._vertexBuffer = null),
            (this._vertexStart = 0),
            (this._vertexCount = 0),
            (this._indexBuffer = null),
            (this._indexStart = 0),
            (this._indexCount = 0),
            (this._indices = null),
            (this._bufferUsage = {}),
            (this._mesh = t),
            (this._boneIndicesList = []),
            (this._subIndexBufferStart = []),
            (this._subIndexBufferCount = []);
        }
        a(t, 'laya.d3.resource.models.SubMesh');
        var e = t.prototype;
        return (
          i.imps(e, {
            'laya.d3.core.render.IRenderable': !0,
            'laya.resource.IDispose': !0
          }),
          (e._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
          }),
          (e._getIndexBuffer = function() {
            return this._indexBuffer;
          }),
          (e._getStaticBatchBakedVertexs = function(e, i) {
            var n,
              a,
              r = this._vertexBuffer,
              s = r.vertexDeclaration,
              o = s.getVertexElementByUsage(0).offset / 4,
              l = s.getVertexElementByUsage(3).offset / 4,
              h = i.meshRender.lightmapScaleOffset,
              c = 0,
              u = 0,
              _ = 0,
              d = 0,
              f = 0,
              p = 0;
            if (h)
              if ((a = s.getVertexElementByUsage(15)))
                (_ = s.vertexStride / 4),
                  (n =
                    this._vertexCount > 0
                      ? r
                          .getData()
                          .slice(
                            this._vertexStart * _,
                            (this._vertexStart + this._vertexCount) * _
                          )
                      : r.getData().slice()),
                  (d = a.offset / 4);
              else {
                (_ = (p = s.vertexStride / 4) + 2),
                  (n = this._vertexCount
                    ? new Float32Array(
                        this._vertexCount *
                          (r.vertexDeclaration.vertexStride / 4 + 2)
                      )
                    : new Float32Array(
                        r.vertexCount *
                          (r.vertexDeclaration.vertexStride / 4 + 2)
                      )),
                  (d = (f = s.getVertexElementByUsage(2).offset / 4) + 2);
                var m = r.getData();
                for (c = 0, u = m.length / p; c < u; c++) {
                  var g = 0;
                  g =
                    this._vertexCount > 0 ? (this._vertexStart + c) * p : c * p;
                  var y = c * _,
                    v = 0;
                  for (v = 0; v < d; v++) n[y + v] = m[g + v];
                  for (v = d; v < p; v++) n[y + v + 2] = m[g + v];
                }
              }
            else
              (_ = s.vertexStride / 4),
                (n = this._vertexCount
                  ? r
                      .getData()
                      .slice(
                        this._vertexStart * _,
                        (this._vertexStart + this._vertexCount) * _
                      )
                  : r.getData().slice());
            if (e) {
              var b = e.worldMatrix,
                w = t._tempMatrix4x40;
              b.invert(w);
              var x = t._tempMatrix4x41,
                I = i.transform.worldMatrix;
              Te.multiply(w, I, x);
            } else x = i.transform.worldMatrix;
            var C = t._tempQuaternion0;
            for (
              x.decomposeTransRotScale(t._tempVector30, C, t._tempVector31),
                c = 0,
                u = n.length / _;
              c < u;
              c++
            ) {
              var S = c * _ + o,
                T = c * _ + l;
              if (
                (Ke.transformVector3ArrayToVector3ArrayCoordinate(
                  n,
                  S,
                  x,
                  n,
                  S
                ),
                Ke.transformVector3ArrayByQuat(n, T, C, n, T),
                h)
              ) {
                var M = c * _ + d;
                if (a) Ke.transformLightingMapTexcoordByUV1Array(n, M, h, n, M);
                else {
                  var E = c * p + f;
                  Ke.transformLightingMapTexcoordByUV0Array(m, E, h, n, M);
                }
              }
            }
            return n;
          }),
          (e._getVertexBuffers = function() {
            return null;
          }),
          (e._beforeRender = function(t) {
            return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
          }),
          (e._render = function(t) {
            var e,
              i = 0,
              n = t.renderElement;
            if (this._indexCount > 1) {
              var a = this._boneIndicesList.length;
              if (a > 1) {
                for (var r = 0; r < a; r++)
                  (e = n._skinAnimationDatas || this._skinAnimationDatas) &&
                    (n._shaderValue.setValue(0, e[r]),
                    t._shader.uploadRenderElementUniforms(n._shaderValue.data)),
                    R.mainContext.drawElements(
                      4,
                      this._subIndexBufferCount[r],
                      5123,
                      2 * this._subIndexBufferStart[r]
                    );
                L.drawCall += a;
              } else
                (e = n._skinAnimationDatas || this._skinAnimationDatas) &&
                  (n._shaderValue.setValue(0, e[0]),
                  t._shader.uploadRenderElementUniforms(n._shaderValue.data)),
                  R.mainContext.drawElements(
                    4,
                    this._indexCount,
                    5123,
                    2 * this._indexStart
                  ),
                  L.drawCall++;
              i = this._indexCount;
            } else
              (i = this._indexBuffer.indexCount),
                (e = n._skinAnimationDatas || this._skinAnimationDatas) &&
                  (n._shaderValue.setValue(0, e[0]),
                  t._shader.uploadRenderElementUniforms(n._shaderValue.data)),
                R.mainContext.drawElements(4, i, 5123, 0),
                L.drawCall++;
            L.trianglesFaces += i / 3;
          }),
          (e.getIndices = function() {
            return this._indexCount > 0
              ? this._indices
              : this._indexBuffer.getData();
          }),
          (e.dispose = function() {
            this._indexBuffer.destroy(),
              this._vertexBuffer.destroy(),
              (this._mesh = null),
              (this._boneIndicesList = null),
              (this._subIndexBufferStart = null),
              (this._subIndexBufferCount = null),
              (this._skinAnimationDatas = null),
              (this._bufferUsage = null),
              (this._vertexBuffer = null),
              (this._indexBuffer = null);
          }),
          r(0, e, '_vertexBufferCount', function() {
            return 1;
          }),
          r(0, e, 'triangleCount', function() {
            return this._indexBuffer.indexCount / 3;
          }),
          n(t, [
            '_tempVector30',
            function() {
              return (this._tempVector30 = new Re());
            },
            '_tempVector31',
            function() {
              return (this._tempVector31 = new Re());
            },
            '_tempQuaternion0',
            function() {
              return (this._tempQuaternion0 = new Le());
            },
            '_tempMatrix4x40',
            function() {
              return (this._tempMatrix4x40 = new Te());
            },
            '_tempMatrix4x41',
            function() {
              return (this._tempMatrix4x41 = new Te());
            }
          ]),
          t
        );
      })(),
      Ue = (function() {
        function t(t) {
          (this.defineCounter = 0),
            (this.defines = null),
            t
              ? ((this.defineCounter = t.defineCounter),
                (this.defines = t.defines.slice()))
              : ((this.defineCounter = 0), (this.defines = []));
        }
        a(t, 'laya.d3.shader.ShaderDefines', null, 'ShaderDefines$1');
        return (
          (t.prototype.registerDefine = function(t) {
            var e = Math.pow(2, this.defineCounter++);
            return (this.defines[e] = t), e;
          }),
          t
        );
      })(),
      Ve = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.shader.ShaderInit3D'),
          (t.__init__ = function() {
            ci._globalRegDefine('HIGHPRECISION', ci.SHADERDEFINE_HIGHPRECISION),
              ci._globalRegDefine('FOG', ci.SHADERDEFINE_FOG),
              ci._globalRegDefine(
                'DIRECTIONLIGHT',
                ci.SHADERDEFINE_DIRECTIONLIGHT
              ),
              ci._globalRegDefine('POINTLIGHT', ci.SHADERDEFINE_POINTLIGHT),
              ci._globalRegDefine('SPOTLIGHT', ci.SHADERDEFINE_SPOTLIGHT),
              ci._globalRegDefine('UV', ci.SHADERDEFINE_UV0),
              ci._globalRegDefine('COLOR', ci.SHADERDEFINE_COLOR),
              ci._globalRegDefine('UV1', ci.SHADERDEFINE_UV1),
              ci._globalRegDefine('CASTSHADOW', He.SHADERDEFINE_CAST_SHADOW),
              ci._globalRegDefine(
                'SHADOWMAP_PSSM1',
                He.SHADERDEFINE_SHADOW_PSSM1
              ),
              ci._globalRegDefine(
                'SHADOWMAP_PSSM2',
                He.SHADERDEFINE_SHADOW_PSSM2
              ),
              ci._globalRegDefine(
                'SHADOWMAP_PSSM3',
                He.SHADERDEFINE_SHADOW_PSSM3
              ),
              ci._globalRegDefine(
                'SHADOWMAP_PCF_NO',
                He.SHADERDEFINE_SHADOW_PCF_NO
              ),
              ci._globalRegDefine(
                'SHADOWMAP_PCF1',
                He.SHADERDEFINE_SHADOW_PCF1
              ),
              ci._globalRegDefine(
                'SHADOWMAP_PCF2',
                He.SHADERDEFINE_SHADOW_PCF2
              ),
              ci._globalRegDefine(
                'SHADOWMAP_PCF3',
                He.SHADERDEFINE_SHADOW_PCF3
              ),
              ci._globalRegDefine('DEPTHFOG', ci.SAHDERDEFINE_DEPTHFOG),
              Oi.addInclude(
                'LightHelper.glsl',
                '\nstruct DirectionLight\n{\n vec3 Direction;\n vec3 Diffuse;\n};\n\nstruct PointLight\n{\n vec3 Diffuse;\n vec3 Attenuation;\n vec3 Position;\n float Range;\n};\n\nstruct SpotLight\n{\n vec3 Diffuse;\n vec3 Attenuation;\n vec3 Position;\n vec3 Direction;\n float Spot;\n float Range;\n};\n\n\nvec3 NormalSampleToWorldSpace(vec3 normalMapSample, vec3 unitNormal, vec3 tangent)\n{\n\tvec3 normalT = 2.0*normalMapSample - 1.0;\n\n\t// Build orthonormal basis.\n\tvec3 N = normalize(unitNormal);\n\tvec3 T = normalize(tangent- dot(tangent, N)*N);\n\tvec3 B = cross(T, N);\n\n\tmat3 TBN = mat3(T, B, N);\n\n\t// Transform from tangent space to world space.\n\tvec3 bumpedNormal = TBN*normalT;\n\n\treturn bumpedNormal;\n}\n\n\nvoid  computeDirectionLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in DirectionLight dirLight,in vec3 ambinentColor,in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tdif=vec3(0.0);//不初始化在IOS中闪烁，PC中不会闪烁\n\tamb=vec3(0.0);\n\tspec=vec3(0.0);\n\tvec3 lightVec=-normalize(dirLight.Direction);\n\t\n\tamb=matAmb*ambinentColor;\n\t\n\tfloat  diffuseFactor=dot(lightVec, normal);\n\t\n\tif(diffuseFactor>0.0)\n\t{\n\t   vec3 v = reflect(-lightVec, normal);\n\t   float specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t   \n\t   dif = diffuseFactor * matDif * dirLight.Diffuse;\n\t   spec = specFactor * matSpe.rgb;\n\t}\n\t\n}\n\nvoid computePointLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in PointLight poiLight,in vec3 ambinentColor, in vec3 pos,in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tdif=vec3(0.0);\n\tamb=vec3(0.0);\n\tspec=vec3(0.0);\n\tvec3 lightVec = poiLight.Position - pos;\n\t\t\n\tfloat d = length(lightVec);\n\t\n\tif( d > poiLight.Range )\n\t\treturn;\n\t\t\n\tlightVec /= d; \n\t\n\tamb = matAmb*ambinentColor;\t\n\n\tfloat diffuseFactor = dot(lightVec, normal);\n\n\tif( diffuseFactor > 0.0 )\n\t{\n\t\tvec3 v= reflect(-lightVec, normal);\n\t\tfloat specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t\t\t\t\t\n\t\tdif = diffuseFactor * matDif * poiLight.Diffuse;\n\t\tspec = specFactor * matSpe.rgb;\n\t}\n\n\tfloat attenuate = 1.0 / dot(poiLight.Attenuation, vec3(1.0, d, d*d));\n\n\tdif *= attenuate;\n\tspec*= attenuate;\n}\n\nvoid ComputeSpotLight(in vec3 matDif,in vec3 matAmb,in vec4 matSpe,in SpotLight spoLight,in vec3 ambinentColor,in vec3 pos, in vec3 normal,in vec3 toEye,out vec3 dif,out vec3 amb,out vec3 spec)\n{\n\tamb = vec3(0.0);\n\tdif =vec3(0.0);\n\tspec= vec3(0.0);\n\tvec3 lightVec = spoLight.Position - pos;\n\t\t\n\tfloat d = length(lightVec);\n\t\n\tif( d > spoLight.Range)\n\t\treturn;\n\t\t\n\tlightVec /= d; \n\t\n\tamb = matAmb*ambinentColor;\t\n\n\tfloat diffuseFactor = dot(lightVec, normal);\n\n\tif(diffuseFactor > 0.0)\n\t{\n\t\tvec3 v= reflect(-lightVec, normal);\n\t\tfloat specFactor = pow(max(dot(v, toEye), 0.0), matSpe.w);\n\t\t\t\t\t\n\t\tdif = diffuseFactor * matDif * spoLight.Diffuse;\n\t\tspec = specFactor * matSpe.rgb;\n\t}\n\t\n\tfloat spot = pow(max(dot(-lightVec, normalize(spoLight.Direction)), 0.0), spoLight.Spot);\n\n\tfloat attenuate = spot/dot(spoLight.Attenuation, vec3(1.0, d, d*d));\n\n\tamb *= spot;\n\tdif *= attenuate;\n\tspec*= attenuate;\n}\n\n'
              ),
              Oi.addInclude(
                'Lighting.glsl',
                '\nstruct DirectionLight\n{\n\tvec3 Color;\n\tvec3 Direction;\n};\n\nstruct PointLight\n{\n\tvec3 Color;\n\tvec3 Position;\n\tfloat Range;\n};\n\nstruct SpotLight\n{\n\tvec3 Color;\n\tvec3 Position;\n\tvec3 Direction;\n\tfloat Spot;\n\tfloat Range;\n};\n\n// U3D中使用衰减纹理,此函数模拟并非正确\n//float U3DAttenuation(in vec3 L,in float invLightRadius)\n//{\n//\tfloat fRatio = clamp(length(L) * invLightRadius,0.0,1.0);\n//\tfRatio *= fRatio;\n//\treturn 1.0 / (1.0 + 25.0 * fRatio)* clamp(4.0*(1.0 - fRatio),0.0,1.0); //fade to black as if 4 pixel texture\n//} \n\n// Same as Just Cause 2 and Crysis 2 (you can read GPU Pro 1 book for more information)\nfloat BasicAttenuation(in vec3 L,in float invLightRadius)\n{\n\tvec3 distance = L * invLightRadius;\n\tfloat attenuation = clamp(1.0 - dot(distance, distance),0.0,1.0); // Equals float attenuation = saturate(1.0f - dot(L, L) / (lightRadius *  lightRadius)); \t\n\treturn attenuation * attenuation;\n} \n\n// Inspired on http://fools.slindev.com/viewtopic.php?f=11&t=21&view=unread#unread\t\nfloat NaturalAttenuation(in vec3 L,in float invLightRadius)\n{\n\tfloat attenuationFactor = 30.0;\n\tvec3 distance = L * invLightRadius;\n\tfloat attenuation = dot(distance, distance); // Equals float attenuation = dot(L, L) / (lightRadius *  lightRadius);\n\tattenuation = 1.0 / (attenuation * attenuationFactor + 1.0);\n\t// Second we move down the function therewith it reaches zero at abscissa 1:\n\tattenuationFactor = 1.0 / (attenuationFactor + 1.0); //attenuationFactor contains now the value we have to subtract\n\tattenuation = max(attenuation - attenuationFactor, 0.0); // The max fixes a bug.\n\t// Finally we expand the equation along the y-axis so that it starts with a function value of 1 again.\n\tattenuation /= 1.0 - attenuationFactor;\n\treturn attenuation;\n} \n\nvoid LayaAirBlinnPhongLight (in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir,in vec3 lightColor, in vec3 lightVec,out vec3 diffuseColor,out vec3 specularColor)\n{\n    mediump vec3 h = normalize(viewDir-lightVec);\n    lowp float ln = max (0.0, dot (-lightVec,normal));\n    float nh = max (0.0, dot (h,normal));\n\tdiffuseColor=lightColor * ln;\n\tspecularColor=lightColor *specColor*pow (nh, specColorIntensity*128.0) * gloss;\n}\n\nvoid LayaAirBlinnPhongDiectionLight (in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in DirectionLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec=normalize(light.Direction);\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,lightVec,diffuseColor,specularColor);\n}\n\nvoid LayaAirBlinnPhongPointLight (in vec3 pos,in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in PointLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec =  pos-light.Position;\n\t//if( length(lightVec) > light.Range )\n\t//\treturn;\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,lightVec/length(lightVec),diffuseColor,specularColor);\n\tfloat attenuate = BasicAttenuation(lightVec, 1.0/light.Range);\n\tdiffuseColor *= attenuate;\n\tspecularColor*= attenuate;\n}\n\nvoid LayaAirBlinnPhongSpotLight (in vec3 pos,in vec3 specColor,in float specColorIntensity,in vec3 normal,in vec3 gloss, in vec3 viewDir, in SpotLight light,out vec3 diffuseColor,out vec3 specularColor)\n{\n\tvec3 lightVec =  pos-light.Position;\n\t//if( length(lightVec) > light.Range )\n\t//\treturn;\n\tvec3 normalLightVec=lightVec/length(lightVec);\n\tLayaAirBlinnPhongLight(specColor,specColorIntensity,normal,gloss,viewDir,light.Color,normalLightVec,diffuseColor,specularColor);\n\tfloat spot = pow(max(dot(normalLightVec, normalize(light.Direction)), 0.0), light.Spot);\n\tfloat attenuate = spot*BasicAttenuation(lightVec, 1.0/light.Range);\n\tdiffuseColor *= attenuate;\n\tspecularColor*= attenuate;\n}\n\nvec3 NormalSampleToWorldSpace(vec3 normalMapSample, vec3 unitNormal, vec3 tangent,vec3 binormal)\n{\n\tvec3 normalT =vec3(2.0*normalMapSample.x - 1.0,1.0-2.0*normalMapSample.y,2.0*normalMapSample.z - 1.0);\n\t\n\t// Build orthonormal basis.\n\tvec3 N = normalize(unitNormal);\n\tvec3 T = normalize(tangent);\n\tvec3 B = normalize(binormal);\n\tmat3 TBN = mat3(T, B, N);\n\t\n\t// Transform from tangent space to world space.\n\tvec3 bumpedNormal = TBN*normalT;\n\n\treturn bumpedNormal;\n}\n\n\n'
              ),
              Oi.addInclude(
                'ShadowHelper.glsl',
                'uniform sampler2D u_shadowMap1;\nuniform sampler2D u_shadowMap2;\nuniform sampler2D u_shadowMap3;\nuniform vec2\t  u_shadowPCFoffset;\nuniform vec4     u_shadowPSSMDistance;\nvec4 packDepth(const in float depth)\n{\n\tconst vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n\tconst vec4 bitMask\t= vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n\tvec4 res = mod(depth*bitShift*vec4(255), vec4(256))/vec4(255);\n\tres -= res.xxyz * bitMask;\n\treturn res;\n}\nfloat unpackDepth(const in vec4 rgbaDepth)\n{\n\tconst vec4 bitShift = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n\tfloat depth = dot(rgbaDepth, bitShift);\n\treturn depth;\n}\nfloat tex2DPCF( sampler2D shadowMap,vec2 texcoord,vec2 invsize,float zRef )\n{\n\tvec2 texelpos =texcoord / invsize;\n\tvec2 lerps = fract( texelpos );\n\tfloat sourcevals[4];\n\tsourcevals[0] = float( unpackDepth(texture2D(shadowMap,texcoord)) > zRef );\n\tsourcevals[1] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(invsize.x,0))) > zRef );\n\tsourcevals[2] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(0,invsize.y))) > zRef );\n\tsourcevals[3] = float( unpackDepth(texture2D(shadowMap,texcoord + vec2(invsize.x, invsize.y) )) > zRef );\n\treturn mix( mix(sourcevals[0],sourcevals[2],lerps.y),mix(sourcevals[1],sourcevals[3],lerps.y),lerps.x );\n}\nfloat getShadowPSSM3( sampler2D shadowMap1,sampler2D shadowMap2,sampler2D shadowMap3,mat4 lightShadowVP[4],vec4 pssmDistance,vec2 shadowPCFOffset,vec3 worldPos,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tint nPSNum = int(posViewZ>pssmDistance.x);\n\tnPSNum += int(posViewZ>pssmDistance.y);\n\tnPSNum += int(posViewZ>pssmDistance.z);\n\t//真SB,webgl不支持在PS中直接访问数组\n\tmat4 lightVP;\n\tif( nPSNum == 0 )\n\t{\n\t\tlightVP = lightShadowVP[1];\n\t}\n\telse if( nPSNum == 1 )\n\t{\n\t\tlightVP = lightShadowVP[2];\n\t}\n\telse if( nPSNum == 2 )\n\t{\n\t\tlightVP = lightShadowVP[3];\n\t}\n\tvec4 vLightMVPPos = lightVP * vec4(worldPos,1.0);\n\t//为了效率，在CPU计算/2.0 + 0.5\n\t//vec3 vText = (vLightMVPPos.xyz / vLightMVPPos.w)/2.0 + 0.5;\n\tvec3 vText = vLightMVPPos.xyz / vLightMVPPos.w;\n\tfloat fMyZ = vText.z - zBias;\n\t/*\n\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\tbool bInFrustum = all( bInFrustumVec );\n\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\tbool bFrustumTest = all( bFrustumTestVec );\n\tif ( bFrustumTest ) \n\t*/\n\tif( fMyZ <= 1.0 )\n\t{\n\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue = value/4.0;\n\t\t} \n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF2\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap2,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap3,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF_NO\n\t\tvec4 color;\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap1,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap2,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 2 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap3,vText.xy );\n\t\t}\n\t\tzdepth = unpackDepth(color);\n\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t}\n\treturn value;\n}\nfloat getShadowPSSM2( sampler2D shadowMap1,sampler2D shadowMap2,mat4 lightShadowVP[4],vec4 pssmDistance,vec2 shadowPCFOffset,vec3 worldPos,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tint nPSNum = int(posViewZ>pssmDistance.x);\n\tnPSNum += int(posViewZ>pssmDistance.y);\n\t//真SB,webgl不支持在PS中直接访问数组\n\tmat4 lightVP;\n\tif( nPSNum == 0 )\n\t{\n\t\tlightVP = lightShadowVP[1];\n\t}\n\telse if( nPSNum == 1 )\n\t{\n\t\tlightVP = lightShadowVP[2];\n\t}\n\tvec4 vLightMVPPos = lightVP * vec4(worldPos,1.0);\n\t//为了效率，在CPU计算/2.0 + 0.5\n\t//vec3 vText = (vLightMVPPos.xyz / vLightMVPPos.w)/2.0 + 0.5;\n\tvec3 vText = vLightMVPPos.xyz / vLightMVPPos.w;\n\tfloat fMyZ = vText.z - zBias;\n\t/*\n\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\tbool bInFrustum = all( bInFrustumVec );\n\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\tbool bFrustumTest = all( bFrustumTestVec );\n\tif ( bFrustumTest ) \n\t*/\n\tif( fMyZ <= 1.0 )\n\t{\n\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,\tfMyZ );\n\t\t\tvalue = value/4.0;\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF2\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap2,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tvec4 color = texture2D( shadowMap2,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n\t\t}\n#endif\n#ifdef SHADOWMAP_PCF_NO\n\t\tvec4 color;\n\t\tif ( nPSNum == 0 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap1,vText.xy );\n\t\t}\n\t\telse if( nPSNum == 1 )\n\t\t{\n\t\t\tcolor = texture2D( shadowMap2,vText.xy );\n\t\t}\n\t\tzdepth = unpackDepth(color);\n\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t}\n\treturn value;\n}\nfloat getShadowPSSM1( sampler2D shadowMap1,vec4 lightMVPPos,vec4 pssmDistance,vec2 shadowPCFOffset,float posViewZ,float zBias )\n{\n\tfloat value = 1.0;\n\tif( posViewZ < pssmDistance.x )\n\t{\n\t\tvec3 vText = lightMVPPos.xyz / lightMVPPos.w;\n\t\tfloat fMyZ = vText.z - zBias;\n\t\t/*\n\t\tbvec4 bInFrustumVec = bvec4 ( vText.x >= 0.0, vText.x <= 1.0, vText.y >= 0.0, vText.y <= 1.0 );\n\t\tbool bInFrustum = all( bInFrustumVec );\n\t\tbvec2 bFrustumTestVec = bvec2( bInFrustum, fMyZ <= 1.0 );\n\t\tbool bFrustumTest = all( bFrustumTestVec );\n\t\t*/\n\t\tif ( fMyZ <= 1.0 ) \n\t\t{\n\t\t\tfloat zdepth=0.0;\n#ifdef SHADOWMAP_PCF3\n\t\t\tvalue =  tex2DPCF( shadowMap1, vText.xy,shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.xy),shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(shadowPCFOffset.x,0),shadowPCFOffset,fMyZ );\n\t\t\tvalue += tex2DPCF( shadowMap1, vText.xy+vec2(0,shadowPCFOffset.y),shadowPCFOffset,fMyZ );\n\t\t\tvalue = value/4.0;\n#endif\n#ifdef SHADOWMAP_PCF2\t\t\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n#endif\n#ifdef SHADOWMAP_PCF1\n\t\t\tvalue = tex2DPCF( shadowMap1,vText.xy,shadowPCFOffset,fMyZ);\n#endif\n#ifdef SHADOWMAP_PCF_NO\t\t\n\t\t\tvec4 color = texture2D( shadowMap1,vText.xy );\n\t\t\tzdepth = unpackDepth(color);\n\t\t\tvalue = float(fMyZ < zdepth);\n#endif\n\t\t}\n\t}\n\treturn value;\n}'
              ),
              Oi.addInclude(
                'WaveFunction.glsl',
                '\nuniform vec2 u_WaveInfoD[20];\nuniform vec4 u_WaveInfo[20];\n\nuniform float TEXWAVE_UV_SCALE ;//= 20.0; //每texwidth像素代表的实际距离\n/**\n\t这里的计算都是\n*/\n\n/**\n* 计算一个波形\n*  开始计算的时候都按照z向上，最后输出的时候，颠倒一下。\n* @param tm {float} 毫秒\n*/\nvoid calcGerstnerWave(float curtm, vec3 pos, float deep, vec2 uvpos, out vec3 opos, out vec3 B, out vec3 T, out vec3 N, out float foamS){\n\tfloat tm = curtm/1000.;\n\topos = pos;\n\tvec3 wpos=vec3(0.);\t\t//累加的位置\n\tN=vec3(0.,0.,0.);\t//输出的法线初始化一下\n\tT=vec3(0.,0.,0.);\n\tB=vec3(0.,0.,0.);\n\tvec2 cD ;//= D;\n\t//float deepAtt = max(0.,min(deep,1.0));\n\t//A*=deepAtt; //TODO\n\t\n\tfor( int i=0; i<4; i++){\n\t\tcD = u_WaveInfoD[i];//vec2(wi.winfo[0],wi.winfo[1]);// wi.vDir;\n\t\tfloat Q = u_WaveInfo[i].x;//wi.QorK;\n\t\tfloat A = u_WaveInfo[i].y;//wi.A;\n\t\tfloat W = u_WaveInfo[i].z;//wi.omega;\n\t\tfloat P = u_WaveInfo[i].w;//wi.phi;\n\t\tfloat dop = dot(cD,uvpos);\n\t\tfloat c = cos(dop*W - tm*P);//TODO 优化\n\t\tfloat s = sin(dop*W - tm*P);\n\t\tfloat AWs = A*W*s;\n\t\tfloat AWc = A*W*c;\n\t\tfloat _QxyAWs = -Q*cD.x*cD.y*AWs;\n\t\t\n\t\twpos += vec3(Q*A*cD.x*c,\n\t\t\t\t\tQ*A*cD.y*c,\n\t\t\t\t\tA*s);\n\t\tN += vec3(-cD.x*AWc,\n\t\t\t\t-cD.y*AWc,\n\t\t\t\tQ*AWs);//记得最后1-\n\t\tT += vec3(_QxyAWs,\n\t\t\t\tQ*cD.y*cD.y*AWs,//记得1-\n\t\t\t\tcD.y*AWc\n\t\t\t);\n\t\tB += vec3(Q*cD.x*cD.x*AWs,//记得1-\n\t\t\t\t_QxyAWs,\n\t\t\t\tcD.x*AWc\n\t\t\t);\n\t\t//float v1 = exp(-tan((dop*W - tm*P)/2.+1.07));//除2，+pi/2 这样正好能对齐\n#ifdef USE_FOAM\t\t\n\t\tfloat v1 = 0.5-sin((dop*W - tm*P)/1.+2.0)/2.;\n\t\tfoamS += pow(v1,9.)/4.;\n#endif\n\t}\n\tT.y=1.-T.y; B.x=1.-B.x;N.z=1.-N.z;\n\topos += vec3(wpos.x,wpos.z*min(deep/10.,1.),wpos.y);\n\t//y和z交换一下。现在根据uv计算的位置，所以直接交换yz就行。其他情况下有问题么\n\tT.xyz=T.xzy;\n\tB.xyz=B.xzy;\n\tN.xyz=N.xzy;\n}\n\n\nvoid calcWave(float curtm, vec2 uv, out vec3 B, out vec3 T, out vec3 N){\n\tfloat tm = curtm/1000.;\n\tN=vec3(0.,0.,0.);\t//输出的法线初始化一下\n\tvec2 uvpos = uv*TEXWAVE_UV_SCALE; //TODO 这个范围是什么 就是1？\n\tuvpos.y*=-1.;\n\tvec2 cD;// = D;\n\tconst int NumWaves = 4;\n\tfloat scale = 1./float(NumWaves);\n\tfor( int i=0; i<NumWaves; i++){\n\t\tcD = u_WaveInfoD[i];//vec2(wi.winfo[0],wi.winfo[1]);// wi.vDir;\n\t\tfloat k = 1.5;//u_WaveInfo[i].x;//wi.QorK; TODO  不知道为什么，这个取u_WaveInfo[i].x，在mi3w上就会闪。测试发现实际值也传过来了，就是1.5\n\t\tfloat A = u_WaveInfo[i].y;//wi.A;\n\t\tfloat W = u_WaveInfo[i].z;//wi.omega;\n\t\tfloat P = u_WaveInfo[i].w;//wi.phi;\n\t\t\n\t\tfloat dop = dot(cD,uvpos);\n\t\tfloat c = cos(dop*W - tm*P);//TODO 优化\n\t\tfloat s = sin(dop*W - tm*P);\n\t\t/*\n\t\tfloat AWs = A*W*s;\n\t\tfloat AWc = A*W*c;\n\t\tfloat _QxyAWs = -Q*cD.x*cD.y*AWs;\n\t\t\n\t\tN += vec3(-cD.x*AWc,\n\t\t\t\t-cD.y*AWc,\n\t\t\t\tQ*AWs);//记得最后1-\n\t\t*/\n\t\tfloat kWAc = scale*c;//k*W*A*c;  为了提高精度，这里只保留sin，cos部分，实际使用的时候再乘回来。\n\t\t//float kWAc = k*W*A*c;  \n\t\tN += vec3(\n\t\t\t-kWAc*cD.x*pow((s+1.)/2.,k-1.),\n\t\t\t-kWAc*cD.y*pow((s+1.)/2.,k-1.),\n\t\t\t1.\n\t\t);\n\t}\n\t//N.z=1.-N.z;\n\t//y和z交换一下。现在根据uv计算的位置，所以直接交换yz就行。其他情况下有问题么\n\tN.xyz=N.xzy;\n}\n'
              ),
              Oi.addInclude(
                'BRDF.glsl',
                'vec4 LayaAirBRDF(in vec3 diffuseColor, in vec3 specularColor, in float oneMinusReflectivity, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat perceptualRoughness = SmoothnessToPerceptualRoughness(smoothness);\n\tvec3 halfDir = SafeNormalize(viewDir - lightDir);\n\t\n\tfloat nv = abs(dot(normal, viewDir));\n\t\n\tfloat nl = clamp(dot(normal,   -lightDir),  0.0, 1.0);\n\tfloat nh = clamp(dot(normal,     halfDir),  0.0, 1.0);\n\tfloat lv = clamp(dot(lightDir,   viewDir),  0.0, 1.0);\n\tfloat lh = clamp(dot(lightDir,  -halfDir),  0.0, 1.0);\n\t\n\tfloat diffuseTerm = DisneyDiffuse(nv, nl, lh, perceptualRoughness) * nl;\n\t\n\tfloat roughness = PerceptualRoughnessToRoughness(perceptualRoughness);\n\t\n\t//#if UNITY_BRDF_GGX\n\tfloat V = SmithJointGGXVisibilityTerm(nl, nv, roughness);\n\tfloat D = GGXTerm(nh, roughness);\n\t\n\tfloat specularTerm = V * D * PI;\n\t\n\tspecularTerm = sqrt(max(0.0001, specularTerm));\n\tspecularTerm = max(0.0, specularTerm * nl);\n\t\n\tvec4 color;\n\tcolor.rgb = diffuseColor * (gi + lightColor * diffuseTerm) + specularTerm * lightColor * FresnelTerm (specularColor, lh);\n\t\n\tcolor.a = 1.0;\n\treturn color;\n}'
              ),
              Oi.addInclude(
                'PBRUtils.glsl',
                'struct DirectionLight\n{\n\tvec3 Color;\n\tvec3 Direction;\n};\n\nvec3 UnpackScaleNormal(in vec2 uv0)\n{\n\t#ifdef NORMALTEXTURE\n\t\tvec3 normalT;\n\t\tvec4 normalMapSample = texture2D(u_NormalTexture, uv0);\n\t\tnormalT.x = 2.0 * normalMapSample.x - 1.0;\n\t\tnormalT.y = 1.0 - 2.0 * normalMapSample.y;\n\t\tnormalT.xy *= u_normalScale;\n\t\tnormalT.z = sqrt(1.0 - clamp(dot(normalT.xy, normalT.xy), 0.0, 1.0));\n\t\t\n\t\tvec3 T = normalize(v_Tangent);\n\t\tvec3 B = normalize(v_Binormal);\n\t\tvec3 N = normalize(v_Normal);\n\t\tmat3 TBN = mat3(T, B, N);\n\t\t\n\t\tvec3 bumpedNormal = TBN * normalize(normalT);\n\t\treturn bumpedNormal;\n\t#else\n\t\treturn normalize(v_Normal);\n\t#endif\n}\n\nvec4 DielectricSpecularColor = vec4(0.220916301, 0.220916301, 0.220916301, 1.0 - 0.220916301);\n\nfloat PI = 3.14159265359;\n\nvec3 FresnelTerm (in vec3 F0, in float cosA)\n{\n\treturn F0 + (vec3(1.0) - F0) * pow(1.0 - cosA, 5.0);\n}\n\nfloat PerceptualRoughnessToRoughness(in float perceptualRoughness)\n{\n\treturn perceptualRoughness * perceptualRoughness;\n}\n\nfloat PerceptualRoughnessToSpecularPower(in float perceptualRoughness)\n{\n\tfloat m = PerceptualRoughnessToRoughness(perceptualRoughness);\n\tfloat sq = max(0.0001, m * m);\n\tfloat n = (2.0 / sq) - 2.0;\n\tn = max(n, 0.0001);\n\treturn n;\n}\n\nfloat RoughnessToPerceptualRoughness(in float roughness)\n{\n\treturn sqrt(roughness);\n}\n\nfloat SmoothnessToRoughness(in float smoothness)\n{\n\treturn (1.0 - smoothness) * (1.0 - smoothness);\n}\n\nfloat SmoothnessToPerceptualRoughness(in float smoothness)\n{\n\treturn (1.0 - smoothness);\n}\n\nvec3 SafeNormalize(in vec3 inVec)\n{\n\tfloat dp3 = max(0.001,dot(inVec,inVec));\n\treturn inVec * (1.0 / sqrt(dp3));\n}\n\nfloat DisneyDiffuse(in float NdotV, in float NdotL, in float LdotH, in float perceptualRoughness)\n{\n\tfloat fd90 = 0.5 + 2.0 * LdotH * LdotH * perceptualRoughness;\n\tfloat lightScatter\t= (1.0 + (fd90 - 1.0) * pow(1.0 - NdotL,5.0));\n\tfloat viewScatter\t= (1.0 + (fd90 - 1.0) * pow(1.0 - NdotV,5.0));\n\n\treturn lightScatter * viewScatter;\n}\n\nfloat SmithJointGGXVisibilityTerm (float NdotL, float NdotV, float roughness)\n{\n\tfloat a = roughness;\n\tfloat lambdaV = NdotL * (NdotV * (1.0 - a) + a);\n\tfloat lambdaL = NdotV * (NdotL * (1.0 - a) + a);\n\n\treturn 0.5 / (lambdaV + lambdaL + 0.00001);\n}\n\nfloat GGXTerm (float NdotH, float roughness)\n{\n\tfloat a2 = roughness * roughness;\n\tfloat d = (NdotH * a2 - NdotH) * NdotH + 1.0;\n\treturn 0.31830988618 * a2 / (d * d + 0.0000001);\n}\n\nfloat OneMinusReflectivityFromMetallic(in float metallic)\n{\n\tfloat oneMinusDielectricSpec = DielectricSpecularColor.a;\n\treturn oneMinusDielectricSpec - metallic * oneMinusDielectricSpec;\n}\n\nfloat SpecularStrength(vec3 specular)\n{\n    //(SHADER_TARGET < 30)return specular.r; \n    return max (max (specular.r, specular.g), specular.b);\n}\n\nvec3 DiffuseAndSpecularFromMetallic(in vec3 diffuseColor, in float metallic, out vec3 specularColor, out float oneMinusReflectivity)\n{\n\tspecularColor = mix(DielectricSpecularColor.rgb, diffuseColor, metallic);\n\toneMinusReflectivity = OneMinusReflectivityFromMetallic(metallic);\n\treturn diffuseColor * oneMinusReflectivity;\n}\n\nvec3 EnergyConservationBetweenDiffuseAndSpecular(in vec3 diffuseColor, in vec3 specularColor, out float oneMinusReflectivity)\n{\n\toneMinusReflectivity = 1.0 - SpecularStrength(specularColor);\n\treturn diffuseColor * oneMinusReflectivity;\n}\n\nvec4 Occlusion(in vec2 uv0){\n\t#ifdef OCCLUSIONTEXTURE\n\t\tvec4 occlusionTextureColor = texture2D(u_OcclusionTexture, uv0);\n\t\tfloat occ = occlusionTextureColor.g;\n\t\tfloat oneMinusT = 1.0 - u_occlusionStrength;\n\t\tfloat lerpOneTo = oneMinusT + occ * u_occlusionStrength;\n\t\treturn occlusionTextureColor * lerpOneTo;\n\t#else\n\t\treturn vec4(1.0);\n\t#endif\n}\n\nvec2 ParallaxOffset(in vec3 viewDir){\n\t#ifdef PARALLAXTEXTURE\n\t\tfloat h = texture2D(u_ParallaxTexture, v_Texcoord0).g;\n\t\th = h * u_parallaxScale - u_parallaxScale / 2.0;\n\t\tvec3 v = viewDir;\n\t\tv.z += 0.42;\n\t\tvec2 offset = h * (v.xy / v.z);\n\t\treturn v_Texcoord0 + offset;\n\t#else\n\t\treturn v_Texcoord0;\n\t#endif\n}\n\n'
              ),
              Oi.addInclude(
                'PBRStandardLighting.glsl',
                '#include "PBRUtils.glsl"\n#include "BRDF.glsl"\n\nvec4 PBRStandardLight(in vec3 diffuseColor, in float metallic, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat oneMinusReflectivity;\n\tvec3 specularColor;\n\tdiffuseColor = DiffuseAndSpecularFromMetallic (diffuseColor, metallic, specularColor, oneMinusReflectivity);\n\t\n\tvec4 color = LayaAirBRDF(diffuseColor, specularColor, oneMinusReflectivity, smoothness, normal, viewDir, lightDir, lightColor, gi);\n\treturn color;\n}\n\nvec4 PBRStandardDiectionLight (in vec3 diffuseColor, in float metallic, in float smoothness, in vec3 normal, in vec3 viewDir, in DirectionLight light, in vec3 gi)\n{\n\tvec3 lightVec = normalize(light.Direction);\n\treturn PBRStandardLight(diffuseColor, metallic, smoothness, normal, viewDir, lightVec, light.Color, gi);\n}\n\nvec2 MetallicGloss(in float diffuseTextureAlpha, in vec2 uv0)\n{\n\tvec2 mg;\n\t\n\t#ifdef METALLICGLOSSTEXTURE\n\t\tvec4 metallicGlossTextureColor = texture2D(u_MetallicGlossTexture, uv0);\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tmg.r = metallicGlossTextureColor.r;\n\t\t\tmg.g = diffuseTextureAlpha;\n\t\t#else\n\t\t    mg = metallicGlossTextureColor.ra;\n\t\t#endif\n\t\tmg.g *= u_smoothnessScale;\n\t#else\n\t\tmg.r = u_metallic;\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tmg.g = diffuseTextureAlpha * u_smoothnessScale;\n\t\t#else\n\t\t\tmg.g = u_smoothness;\n\t\t#endif\n\t#endif\n\t\n\treturn mg;\n}\n\n'
              ),
              Oi.addInclude(
                'PBRSpecularLighting.glsl',
                '#include "PBRUtils.glsl"\n#include "BRDF.glsl"\n\nvec4 PBRSpecularLight(in vec3 diffuseColor, in vec3 specularColor, in float smoothness, in vec3 normal, in vec3 viewDir, in vec3 lightDir, in vec3 lightColor, in vec3 gi)\n{\n\tfloat oneMinusReflectivity;\n\tdiffuseColor = EnergyConservationBetweenDiffuseAndSpecular (diffuseColor, specularColor, oneMinusReflectivity);\n\t\n\tvec4 color = LayaAirBRDF(diffuseColor, specularColor, oneMinusReflectivity, smoothness, normal, viewDir, lightDir, lightColor, gi);\n\treturn color;\n}\n\nvec4 PBRSpecularDiectionLight (in vec3 diffuseColor, in vec3 specularColor, in float smoothness, in vec3 normal, in vec3 viewDir, in DirectionLight light, in vec3 gi)\n{\n\tvec3 lightVec = normalize(light.Direction);\n\treturn PBRSpecularLight(diffuseColor, specularColor, smoothness, normal, viewDir, lightVec, light.Color, gi);\n}\n\nvec4 SpecularGloss(float diffuseTextureAlpha, in vec2 uv0)\n{\n    vec4 sg;\n\t\n\t#ifdef SPECULARTEXTURE\n\t\tvec4 specularTextureColor = texture2D(u_SpecularTexture, uv0);\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tsg.rgb = specularTextureColor.rgb;\n\t\t\tsg.a = diffuseTextureAlpha;\n\t\t#else\n\t\t\tsg = specularTextureColor;\n\t\t#endif\n\t\tsg.a *= u_smoothnessScale;\n\t#else\n\t\tsg.rgb = u_SpecularColor.rgb;\n\t\t#ifdef SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA\n\t\t\tsg.a = diffuseTextureAlpha * u_smoothnessScale;\n\t\t#else\n\t\t\tsg.a = u_smoothness;\n\t\t#endif\n\t#endif\n\t\n    return sg;\n}\n\n'
              );
            var t,
              e,
              i = {
                a_Position: 0,
                a_Color: 1,
                a_Normal: 3,
                a_Texcoord0: 2,
                a_Texcoord1: 15,
                a_BoneWeights: 7,
                a_BoneIndices: 6,
                a_Tangent0: 5
              },
              n = {
                u_Bones: [0, 0],
                u_DiffuseTexture: [1, 1],
                u_SpecularTexture: [3, 1],
                u_NormalTexture: [2, 1],
                u_ReflectTexture: [5, 1],
                u_AlphaTestValue: [0, 1],
                u_DiffuseColor: [6, 1],
                u_MaterialSpecular: [8, 1],
                u_Shininess: [9, 1],
                u_MaterialReflect: [10, 1],
                u_TilingOffset: [11, 1],
                u_WorldMat: [0, 2],
                u_MvpMatrix: [1, 2],
                u_LightmapScaleOffset: [2, 2],
                u_LightMap: [3, 2],
                u_CameraPos: [0, 3],
                u_FogStart: [1, 4],
                u_FogRange: [2, 4],
                u_FogColor: [0, 4],
                'u_DirectionLight.Color': [4, 4],
                'u_DirectionLight.Direction': [3, 4],
                'u_PointLight.Position': [5, 4],
                'u_PointLight.Range': [6, 4],
                'u_PointLight.Color': [8, 4],
                'u_SpotLight.Position': [9, 4],
                'u_SpotLight.Direction': [10, 4],
                'u_SpotLight.Range': [12, 4],
                'u_SpotLight.Spot': [11, 4],
                'u_SpotLight.Color': [14, 4],
                u_AmbientColor: [21, 4],
                u_shadowMap1: [18, 4],
                u_shadowMap2: [19, 4],
                u_shadowMap3: [20, 4],
                u_shadowPSSMDistance: [15, 4],
                u_lightShadowVP: [16, 4],
                u_shadowPCFoffset: [17, 4]
              },
              a = Oi.nameKey.add('BLINNPHONG');
            (t =
              'attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\n\tattribute vec2 a_Texcoord0;\n\tvarying vec2 v_Texcoord0;\n#endif\n\n#if defined(LIGHTMAP)&&defined(UV1)\n\tattribute vec2 a_Texcoord1;\n#endif\n\n#ifdef LIGHTMAP\n\tuniform vec4 u_LightmapScaleOffset;\n\tvarying vec2 v_LightMapUV;\n#endif\n\n#ifdef COLOR\n\tattribute vec4 a_Color;\n\tvarying vec4 v_Color;\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal; \n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_ViewDir; \n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP))&&defined(NORMALMAP)\n\tattribute vec4 a_Tangent0;\n\tvarying vec3 v_Tangent;\n\tvarying vec3 v_Binormal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position=skinTransform*a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0=a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position=skinTransform*a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tmat3 worldMat;\n\t\t#ifdef BONE\n\t\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\t#else\n\t\t\tworldMat=mat3(u_WorldMat);\n\t\t#endif  \n\t\tv_Normal=worldMat*a_Normal;//TODO:法线可以用"魔法"矩阵\n\t\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\t\tv_Tangent=worldMat*a_Tangent0.xyz;\n\t\t\tv_Binormal=cross(v_Normal,v_Tangent)*a_Tangent0.w;\n\t\t#endif\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\t\t#ifdef BONE\n\t\t\tv_PositionWorld=(u_WorldMat*position).xyz;\n\t\t#else\n\t\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t\t#endif\n\t#endif\n\t\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tv_ViewDir=u_CameraPos-v_PositionWorld;\n\t#endif\n\n\t#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\n\t\tv_Texcoord0=a_Texcoord0;\n\t\t#ifdef TILINGOFFSET\n\t\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0+v_Texcoord0.y);\n\t\t#endif\n\t#endif\n\n\t#ifdef LIGHTMAP\n\t\t#ifdef SCALEOFFSETLIGHTINGMAPUV\n\t\t\t#ifdef UV1\n\t\t\t\tv_LightMapUV=vec2(a_Texcoord1.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,1.0+a_Texcoord1.y*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t\t\t#else\n\t\t\t\tv_LightMapUV=vec2(a_Texcoord0.x,a_Texcoord0.y-1.0)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\n\t\t\t#endif \n\t\t#else\n\t\t\t#ifdef UV1\n\t\t\t\tv_LightMapUV=a_Texcoord1;\n\t\t\t#else\n\t\t\t\tv_LightMapUV=a_Texcoord0;\n\t\t\t#endif \n\t\t#endif \n\t#endif\n\n\t#ifdef COLOR\n\t\tv_Color=a_Color;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}'),
              (e =
                '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "Lighting.glsl";\n\nuniform vec4 u_DiffuseColor;\n\n#ifdef COLOR\n\tvarying vec4 v_Color;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvarying vec3 v_ViewDir; \n#endif\n\n#ifdef ALPHATEST\n\tuniform float u_AlphaTestValue;\n#endif\n\n#ifdef DIFFUSEMAP\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n\n#ifdef REFLECTMAP\n\tuniform samplerCube u_ReflectTexture;\n\tuniform vec3 u_MaterialReflect;\n#endif\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(SPECULARMAP)||defined(NORMALMAP)))\n\tvarying vec2 v_Texcoord0;\n#endif\n\n#ifdef LIGHTMAP\n\tvarying vec2 v_LightMapUV;\n\tuniform sampler2D u_LightMap;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tuniform vec3 u_MaterialSpecular;\n\tuniform float u_Shininess;\n\t#ifdef SPECULARMAP \n\t\tuniform sampler2D u_SpecularTexture;\n\t#endif\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\tuniform sampler2D u_NormalTexture;\n\tvarying vec3 v_Tangent;\n\tvarying vec3 v_Binormal;\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n\n#if defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#include "ShadowHelper.glsl"\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nvoid main_castShadow()\n{\n\t//gl_FragColor=vec4(v_posViewZ,0.0,0.0,1.0);\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\nvoid main_normal()\n{\n\tvec4 mainColor=u_DiffuseColor;\n\t#ifdef DIFFUSEMAP\n\t\tvec4 difTexColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n\t\tmainColor=mainColor*difTexColor;\n\t#endif \n\t#ifdef COLOR\n\t\tmainColor=mainColor*v_Color;\n\t#endif \n    \n\t#ifdef ALPHATEST\n\t\tif(mainColor.a<u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n  \n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\t\tvec3 normal;\n\t\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\t\tvec3 normalMapSample = texture2D(u_NormalTexture, v_Texcoord0).rgb;\n\t\t\tnormal = normalize(NormalSampleToWorldSpace(normalMapSample, v_Normal, v_Tangent,v_Binormal));\n\t\t#else\n\t\t\tnormal = normalize(v_Normal);\n\t\t#endif\n\t#endif\n\t\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tvec3 viewDir= normalize(v_ViewDir);\n\t\tvec3 diffuse = vec3(0.0);\n\t\tvec3 specular= vec3(0.0);\n\t\tvec3 dif,spe;\n\t\t#ifdef SPECULARMAP\n\t\t\tvec3 gloss=texture2D(u_SpecularTexture, v_Texcoord0).rgb;\n\t\t#else\n\t\t\t#ifdef DIFFUSEMAP\n\t\t\t\tvec3 gloss=vec3(difTexColor.a);\n\t\t\t#else\n\t\t\t\tvec3 gloss=vec3(1.0);\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\n\t\n\t#ifdef DIRECTIONLIGHT\n\t\tLayaAirBlinnPhongDiectionLight(u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_DirectionLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n \n\t#ifdef POINTLIGHT\n\t\tLayaAirBlinnPhongPointLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_PointLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n\n\t#ifdef SPOTLIGHT\n\t\tLayaAirBlinnPhongSpotLight(v_PositionWorld,u_MaterialSpecular,u_Shininess,normal,gloss,viewDir,u_SpotLight,dif,spe);\n\t\tdiffuse+=dif;\n\t\tspecular+=spe;\n\t#endif\n\n\t\n\tvec3 finalDiffuse;\n\t#ifdef LIGHTMAP\n\t\tfinalDiffuse=texture2D(u_LightMap, v_LightMapUV).rgb*2.0;\n\t\t//float exponent = texture2D(u_LightMap, v_LightMapUV).a;\n\t\t//finalDiffuse = texture2D(u_LightMap, v_LightMapUV).rgb;\n\t\t//float ratio = pow(2.0, exponent * 255.0 - (128.0 + 8.0));\n\t\t//finalDiffuse = finalDiffuse * 255.0 * ratio;\t\n\t\t//finalDiffuse = sqrt(finalDiffuse);\n\t#else\n\t\tfinalDiffuse=vec3(0.0);\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tfinalDiffuse+=diffuse;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor =vec4(mainColor.rgb*(u_AmbientColor + finalDiffuse)*shadowValue,mainColor.a);\n\t#else\n\t\tgl_FragColor =vec4(mainColor.rgb*(u_AmbientColor + finalDiffuse),mainColor.a);\n\t#endif\n\t\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\t#ifdef RECEIVESHADOW\n\t\t\tgl_FragColor.rgb+=specular*shadowValue;\n\t\t#else\n\t\t\tgl_FragColor.rgb+=specular;\n\t\t#endif\n\t#endif\n\n\n\t#ifdef REFLECTMAP\n\t\tvec3 incident = -viewDir;\n\t\tvec3 reflectionVector = reflect(incident,normal);\n\t\tvec3 reflectionColor  = textureCube(u_ReflectTexture,reflectionVector).rgb;\n\t\tgl_FragColor.rgb += u_MaterialReflect*reflectionColor;\n\t#endif\n\t  \n\t#ifdef FOG\n\t\tfloat lerpFact=clamp((1.0/gl_FragCoord.w-u_FogStart)/u_FogRange,0.0,1.0);\n\t\t#ifdef ADDTIVEFOG\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t\t#else\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t  main_normal();\n\t#endif  \n}\n\n');
            var r = ci.add(a, t, e, i, n);
            (Ui.SHADERDEFINE_DIFFUSEMAP = r.registerMaterialDefine(
              'DIFFUSEMAP'
            )),
              (Ui.SHADERDEFINE_NORMALMAP = r.registerMaterialDefine(
                'NORMALMAP'
              )),
              (Ui.SHADERDEFINE_SPECULARMAP = r.registerMaterialDefine(
                'SPECULARMAP'
              )),
              (Ui.SHADERDEFINE_REFLECTMAP = r.registerMaterialDefine(
                'REFLECTMAP'
              )),
              (Ui.SHADERDEFINE_TILINGOFFSET = r.registerMaterialDefine(
                'TILINGOFFSET'
              )),
              (Ui.SHADERDEFINE_ADDTIVEFOG = r.registerMaterialDefine(
                'ADDTIVEFOG'
              )),
              (i = {
                a_Position: 0,
                a_Color: 1,
                a_Normal: 3,
                a_Texcoord0: 2,
                a_Texcoord1: 15,
                a_TexcoordNext0: 14,
                a_BoneWeights: 7,
                a_BoneIndices: 6,
                a_Tangent0: 5
              }),
              (n = {
                u_Bones: [0, 0],
                u_DiffuseTexture: [1, 1],
                u_SpecularTexture: [3, 1],
                u_NormalTexture: [2, 1],
                u_AmbientTexture: [5, 1],
                u_ReflectTexture: [6, 1],
                u_AlphaTestValue: [0, 1],
                u_Albedo: [7, 1],
                u_UVMatrix: [13, 1],
                u_UVAge: [14, 1],
                u_UVAniAge: [8, 1],
                u_MaterialDiffuse: [10, 1],
                u_MaterialAmbient: [9, 1],
                u_MaterialSpecular: [11, 1],
                u_MaterialReflect: [12, 1],
                u_TilingOffset: [15, 1],
                u_WorldMat: [0, 2],
                u_MvpMatrix: [1, 2],
                u_LightmapScaleOffset: [2, 2],
                u_LightMap: [3, 2],
                u_CameraPos: [0, 3],
                u_FogStart: [1, 4],
                u_FogRange: [2, 4],
                u_FogColor: [0, 4],
                'u_DirectionLight.Direction': [3, 4],
                'u_DirectionLight.Diffuse': [4, 4],
                'u_PointLight.Position': [5, 4],
                'u_PointLight.Range': [6, 4],
                'u_PointLight.Attenuation': [7, 4],
                'u_PointLight.Diffuse': [8, 4],
                'u_SpotLight.Position': [9, 4],
                'u_SpotLight.Direction': [10, 4],
                'u_SpotLight.Range': [12, 4],
                'u_SpotLight.Spot': [11, 4],
                'u_SpotLight.Attenuation': [13, 4],
                'u_SpotLight.Diffuse': [14, 4],
                u_AmbientColor: [21, 4],
                u_shadowMap1: [18, 4],
                u_shadowMap2: [19, 4],
                u_shadowMap3: [20, 4],
                u_shadowPSSMDistance: [15, 4],
                u_lightShadowVP: [16, 4],
                u_shadowPCFoffset: [17, 4]
              });
            var s = Oi.nameKey.add('SIMPLE');
            (t =
              'attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\n\n\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))||(defined(LIGHTMAP)&&defined(UV))\nattribute vec2 a_Texcoord0;\nvarying vec2 v_Texcoord0;\n  #ifdef UVTRANSFORM \n  uniform mat4 u_UVMatrix;\n  #endif\n#endif\n\n#if defined(AMBIENTMAP)||(defined(LIGHTMAP)&&defined(UV1))\nattribute vec2 a_Texcoord1;\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\nuniform vec4 u_LightmapScaleOffset;\nvarying vec2 v_LightMapUV;\n#endif\n\n\n#ifdef COLOR\nattribute vec4 a_Color;\nvarying vec4 v_Color;\n#endif\n\n#ifdef BONE\nattribute vec4 a_BoneIndices;\nattribute vec4 a_BoneWeights;\nconst int c_MaxBoneCount = 24;\nuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\nattribute vec3 a_Normal;\nvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP))&&defined(NORMALMAP)\nattribute vec3 a_Tangent0;\nvarying vec3 v_Tangent0;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\nuniform mat4 u_WorldMat;\nvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvoid main_castShadow()\n{\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tvec4 position=skinTransform*a_Position;\n\tgl_Position = u_MvpMatrix * position;\n#else\n\tgl_Position = u_MvpMatrix * a_Position;\n#endif\n \n//TODO没考虑UV动画呢\n#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\tv_Texcoord0=a_Texcoord0;\n#endif\n\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tvec4 position=skinTransform*a_Position;\n\tgl_Position = u_MvpMatrix * position;\n#else\n\tgl_Position = u_MvpMatrix * a_Position;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t#else\n\t\tworldMat=mat3(u_WorldMat);\n\t#endif  \n\tv_Normal=worldMat*a_Normal;\n\t#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\tv_Tangent0=worldMat*a_Tangent0;\n\t#endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||defined(RECEIVESHADOW)\n\t#ifdef BONE\n\t\tv_PositionWorld=(u_WorldMat*position).xyz;\n\t#else\n\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t#endif\n#endif\n\n#if defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))\n\tv_Texcoord0=a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,v_Texcoord0.y+1.0);\n\t#endif\n\t#ifdef UVTRANSFORM\n\t\tv_Texcoord0=(u_UVMatrix*vec4(v_Texcoord0,0.0,1.0)).xy;\n\t#endif\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\n\t#ifdef SCALEOFFSETLIGHTINGMAPUV\n\t\t#ifdef UV1\n\t\t\tv_LightMapUV=vec2(a_Texcoord1.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,1.0+a_Texcoord1.y*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t\t#else\n\t\t\tv_LightMapUV=vec2(a_Texcoord0.x,a_Texcoord0.y-1.0)*u_LightmapScaleOffset.xy+u_LightmapScaleOffset.zw;\n\t\t#endif \n\t#else\n\t\t#ifdef UV1\n\t\t\tv_LightMapUV=a_Texcoord1;\n\t\t#else\n\t\t\tv_LightMapUV=a_Texcoord0;\n\t\t#endif \n\t#endif \n#endif\n\n#ifdef COLOR\n\tv_Color=a_Color;\n#endif\n\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.w;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t#endif\n#endif\n}\n\nvoid main()\n{\n#ifdef CASTSHADOW\n\tmain_castShadow();\n#else\n\tmain_normal();\n#endif\n}'),
              (e =
                '#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\nuniform vec4 u_Albedo;\n\n#ifdef ALPHATEST\nuniform float u_AlphaTestValue;\n#endif\n\n#ifdef DIFFUSEMAP\nuniform sampler2D u_DiffuseTexture;\n#endif\n\n#ifdef REFLECTMAP\nuniform samplerCube u_ReflectTexture;\nuniform vec3 u_MaterialReflect;\n#endif\n\n#if   defined(DIFFUSEMAP)||((defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&(defined(COLOR)&&defined(SPECULARMAP)||defined(NORMALMAP)))\nvarying vec2 v_Texcoord0;\n#endif\n\n#if defined(AMBIENTMAP)||defined(LIGHTMAP)\nvarying vec2 v_LightMapUV;\n#endif\n#ifdef AMBIENTMAP\nuniform sampler2D u_AmbientTexture;\n#endif\n#ifdef LIGHTMAP\nuniform sampler2D u_LightMap;\n#endif\n\n#ifdef COLOR\nvarying vec4 v_Color;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\nuniform vec3 u_MaterialDiffuse;\nuniform vec4 u_MaterialSpecular;\n  #if (defined(DIFFUSEMAP)||defined(COLOR))&&defined(SPECULARMAP) \n  uniform sampler2D u_SpecularTexture;\n  #endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(AMBIENTMAP)||defined(LIGHTMAP)\nuniform vec3 u_MaterialAmbient;\n#endif\n\n#if defined(FOG)||defined(DEPTHFOG)\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\nvarying vec3 v_Normal;\n#endif\n\n#if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\nuniform sampler2D u_NormalTexture;\nvarying vec3 v_Tangent0;\n#endif\n\n#ifdef DIRECTIONLIGHT\nuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\nuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\nuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)||(defined(RECEIVESHADOW)&&(defined(SHADOWMAP_PSM2)||defined(SHADOWMAP_PSM3)))\nuniform vec3 u_CameraPos;\n#endif\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(DEPTHFOG)||defined(REFLECTMAP)\nvarying vec3 v_PositionWorld;\n#endif\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\n\nvoid main_castShadow()\n{\n\t//gl_FragColor=vec4(v_posViewZ,0.0,0.0,1.0);\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\nvoid main_normal()\n{\n#if defined(DIFFUSEMAP)&&!defined(COLOR)\n\tgl_FragColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n#endif \n  \n#if defined(COLOR)&&!defined(DIFFUSEMAP)\n\tgl_FragColor=v_Color;\n#endif \n  \n#if defined(DIFFUSEMAP)&&defined(COLOR)\n\tvec4 texColor=texture2D(u_DiffuseTexture, v_Texcoord0);\n\tgl_FragColor=texColor*v_Color;\n#endif\n  \n#if !defined(DIFFUSEMAP)&&!defined(COLOR)\n\tgl_FragColor=vec4(1.0,1.0,1.0,1.0);\n#endif \n    \n#ifdef ALPHATEST\n\tif(gl_FragColor.a-u_AlphaTestValue<0.0)\n\t\tdiscard;\n#endif\n  \n  \n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(REFLECTMAP)\n\tvec3 normal;\n    #if (defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT))&&defined(NORMALMAP)\n\t\tvec3 normalMapSample = texture2D(u_NormalTexture, v_Texcoord0).rgb;\n\t\tnormal = normalize(NormalSampleToWorldSpace(normalMapSample, v_Normal, v_Tangent0));\n\t#else\n\t\tnormal = normalize(v_Normal);\n    #endif\n#endif\n\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n  \n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||defined(REFLECTMAP)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\t\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef AMBIENTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb); \n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_AmbientTexture, v_LightMapUV).rgb); \n\t\t#endif\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb); \n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb); \n\t\t#endif\n\t#endif\n#endif\n\ngl_FragColor=gl_FragColor*u_Albedo;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#if (defined(DIFFUSEMAP)||defined(COLOR))&&defined(SPECULARMAP)\n\t\tspecular =specular*texture2D(u_SpecularTexture, v_Texcoord0).rgb;\n    #endif\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular*shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular,gl_FragColor.a);\n\t#endif\n#endif\n  \n#ifdef REFLECTMAP\n\tvec3 incident = -toEye;\n\tvec3 reflectionVector = reflect(incident,normal);\n\tvec3 reflectionColor  = textureCube(u_ReflectTexture,reflectionVector).rgb;\n\tgl_FragColor.rgb += u_MaterialReflect*reflectionColor;\n#endif\n  \n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\t#ifdef ADDTIVEFOG\n\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t#else\n\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t#endif\n#endif\n#ifdef DEPTHFOG\n\tfloat lerpFact = (-v_PositionWorld.y-u_FogStart)/u_FogRange;\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\nvoid main()\n{\n#ifdef CASTSHADOW\t\t\n\tmain_castShadow();\n#else\n  main_normal();\n#endif  \n}\n\n'),
              (r = ci.add(s, t, e, i, n)),
              (ji.SHADERDEFINE_DIFFUSEMAP = r.registerMaterialDefine(
                'DIFFUSEMAP'
              )),
              (ji.SHADERDEFINE_NORMALMAP = r.registerMaterialDefine(
                'NORMALMAP'
              )),
              (ji.SHADERDEFINE_SPECULARMAP = r.registerMaterialDefine(
                'SPECULARMAP'
              )),
              (ji.SHADERDEFINE_EMISSIVEMAP = r.registerMaterialDefine(
                'EMISSIVEMAP'
              )),
              (ji.SHADERDEFINE_AMBIENTMAP = r.registerMaterialDefine(
                'AMBIENTMAP'
              )),
              (ji.SHADERDEFINE_REFLECTMAP = r.registerMaterialDefine(
                'REFLECTMAP'
              )),
              (ji.SHADERDEFINE_UVTRANSFORM = r.registerMaterialDefine(
                'UVTRANSFORM'
              )),
              (ji.SHADERDEFINE_TILINGOFFSET = r.registerMaterialDefine(
                'TILINGOFFSET'
              )),
              (ji.SHADERDEFINE_ADDTIVEFOG = r.registerMaterialDefine(
                'ADDTIVEFOG'
              )),
              (i = { a_Position: 0, a_Color: 1 }),
              (n = { u_MvpMatrix: [1, 2] });
            var o = Oi.nameKey.add('LINE');
            (t =
              'attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\nattribute vec4 a_Color;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\n  gl_Position = u_MvpMatrix * a_Position;\n  v_Color=a_Color;\n}'),
              (e =
                '#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\n\nvoid main()\n{\n  gl_FragColor=v_Color; \n}\n\n'),
              ci.add(o, t, e, i, n),
              (i = {
                a_position: 0,
                a_normal: 3,
                tangent: 5,
                binormal: 4,
                uv: 2,
                a_BoneWeights: 7,
                a_BoneIndices: 6,
                a_Tangent0: 5
              }),
              (n = {
                u_Bones: [0, 0],
                u_lodRect: [9, 3],
                irrad_mat_red: [10, 3],
                irrad_mat_green: [11, 3],
                irrad_mat_blue: [12, 3],
                u_hdrexposure: [13, 3],
                u_aoObjPos: [14, 1],
                texBaseColor: [1, 1],
                texNormal: [2, 1],
                texPbrInfo: [3, 1],
                texPrefilterdEnv: [8, 3],
                texHSNoise: [15, 1],
                texPrefilterDiff: [7, 3],
                u_AlphaTestValue: [0, 1],
                texBRDFLUT: [4, 1],
                u_UVAniAge: [5, 1],
                u_roughness: [6, 1],
                u_metaless: [7, 1],
                u_UVMatrix: [8, 1],
                u_UVAge: [9, 1],
                modelMatrix: [0, 2],
                mvp: [1, 2],
                cameraPosition: [0, 3],
                u_View: [1, 3],
                u_Project: [2, 3],
                u_FogStart: [1, 4],
                u_FogRange: [2, 4],
                u_FogColor: [0, 4],
                'u_DirectionLight.Direction': [3, 4],
                'u_DirectionLight.Diffuse': [4, 4],
                'u_PointLight.Position': [5, 4],
                'u_PointLight.Range': [6, 4],
                'u_PointLight.Attenuation': [7, 4],
                'u_PointLight.Diffuse': [8, 4],
                'u_SpotLight.Position': [9, 4],
                'u_SpotLight.Direction': [10, 4],
                'u_SpotLight.Range': [12, 4],
                'u_SpotLight.Spot': [11, 4],
                'u_SpotLight.Attenuation': [13, 4],
                'u_SpotLight.Diffuse': [14, 4],
                u_shadowMap1: [18, 4],
                u_shadowMap2: [19, 4],
                u_shadowMap3: [20, 4],
                u_shadowPSSMDistance: [15, 4],
                u_lightShadowVP: [16, 4],
                u_shadowPCFoffset: [17, 4]
              });
            var l = Oi.nameKey.add('PBR');
            (t =
              '\nuniform mat4 modelMatrix;\n//uniform mat4 modelViewMatrix;\n//uniform mat4 projectionMatrix;\nuniform mat4 u_View;\nuniform mat4 u_Project;\nuniform mat4 mvp;\n//uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\n#ifdef HAS_TANGENT\nattribute vec3 tangent;\nattribute vec3 binormal;\n#endif\nattribute vec2 uv;\n#ifdef BONE\nattribute vec4 a_BoneIndices;\nattribute vec4 a_BoneWeights;\nconst int c_MaxBoneCount = 24;\nuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying vec3 vLightDir;\nvarying vec3 vViewDir;\n#ifdef HAS_TANGENT\nvarying vec3 vWorldTangent;\nvarying vec3 vWorldBinormal;\n#endif\n\n#ifdef RECEIVESHADOW\nvarying float v_posViewZ;\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\nvoid main() {\n#ifdef BONE\n\tmat4 skinTransform=mat4(0.0);\n\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\tgl_Position = mvp*skinTransform*vec4(a_position,1.);\n\tmat4 modelMat = modelMatrix*skinTransform;\n#else\n\tgl_Position = mvp*vec4(a_position,1.);\n\tmat4 modelMat = modelMatrix;\n#endif\t\n\tvWorldPos = modelMat*vec4(a_position,1.);\n\n#ifdef CASTSHADOW \n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tvUv = uv;\n\t#endif\t\n#else\n    vUv = uv;\n\tvWorldNorm = normalize((modelMat*vec4(a_normal,0.0)).xyz);\n\t#ifdef HAS_TANGENT\n\tvWorldTangent = normalize((modelMat*vec4(tangent,0.0)).xyz);\n\tvWorldBinormal = normalize((modelMat*vec4(binormal,0.0)).xyz);\n\t#endif\n    \n    vViewDir = (vWorldPos.xyz-cameraPosition);//这个不能normalize。否则无法线性差值了\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.z;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tv_lightMVPPos = u_lightShadowVP[0] * vWorldPos;\n\t#endif\n#endif\t\n#endif\n}\n'),
              (e =
                '//#version 300 es\n\nprecision highp float;\nprecision lowp int;\n\nconst float PI = 3.14159265358979323846264;\nconst float _2PI = 6.2831853071796;\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\n#ifdef HAS_TANGENT\nvarying vec3 vWorldTangent;\nvarying vec3 vWorldBinormal;\n#endif\nvarying vec3 vViewDir;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\n//\nuniform sampler2D texBaseColor;\nuniform sampler2D texNormal;\n//预计算的贴图\nuniform sampler2D texPrefilterdEnv;\nuniform sampler2D texBRDFLUT;\nuniform sampler2D texPrefilterDiff;\n#ifdef HAS_PBRINFO\nuniform sampler2D texPbrInfo;   //Ao, Roughness, Metallic\n#endif\nuniform float u_hdrexposure;\nuniform float u_AlphaTestValue;\n\nuniform float u_roughness;\nuniform float u_metaless;\nconst float maxlv = 7.;\t//现在只支持512分辨率的环境贴图\nconst int nmaxlv = 9;//\n\t\t\t\t\t\t\t\nuniform mat4 irrad_mat_red;\nuniform mat4 irrad_mat_green;\nuniform mat4 irrad_mat_blue;\t\t\t\t\t\t\t\n\nvec3 speccontrib = vec3(0.);\n\nconst float _maxu8 = 255.0;\nconst float _maxu16 = 65535.0;\nconst float _shift8 = 256.0;    //平移的话是*256而不是255\nvec2 _RGBAToU16(const in vec4 rgba){\n    return vec2((rgba.r*_maxu8+rgba.g*_maxu8*_shift8)/_maxu16, (rgba.b*_maxu8+rgba.a*_maxu8*_shift8)/_maxu16);\n}\nvec3 _RGBEToRGB( const in vec4 rgba ){\n    float f = pow(2.0, rgba.w * 255.0 - (128.0 + 8.0));\n    return rgba.rgb * (255.0 * f);\n}\n\nfloat saturate(float v){\n    return min(max(v,0.),1.);\n}\n\nvec4 tex2dLod(sampler2D tex, float u, float v, float lod){\n\tvec2 uv = vec2(u,v);\n\tuv+=mod(gl_FragCoord.xy-vec2(0.5),2.0)*vec2(128.,0.);\n\treturn texture2D(tex,uv,lod-16.);\n}\n\n/*\n* 对一个全景图进行采样。假设x轴指向中心。\n*/\nvec4 texPanorama(sampler2D tex, const in vec3 dir){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn texture2D(tex,vec2(envu,envv));\n}\n\nvec4 texPanoramaLod(sampler2D tex, const in vec3 dir, float lod){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn tex2dLod(tex,envu,envv,lod);\n}\n\n/*\n    计算sh光照。\n    使用level=2，所以需要9个系数。\n    https://cseweb.ucsd.edu/~ravir/papers/envmap/envmap.pdf\n*/\nfloat environment_exposure = 1.0;\nvec3 diff_sh9(vec3 dir){\n\tvec4 shDir = vec4(dir.x,-dir.z,dir.y,1.0);\n  return max(vec3(0.0), vec3(\n\tdot(shDir, irrad_mat_red * shDir),\n\tdot(shDir, irrad_mat_green * shDir),\n\tdot(shDir, irrad_mat_blue * shDir)\n\t)) * environment_exposure;\t\n}\n\n#ifdef HAS_TANGENT\nvec3 applyNormalTex( vec3 norm, vec3 surf_norm ) {\n    vec3 mapN = norm * 2.0 - 1.0;\n    //mapN.xy = normalScale * mapN.xy;\n    mat3 tsn = mat3( vWorldTangent, vWorldBinormal, surf_norm );\n    return normalize( tsn * mapN );\n}\n#endif\n\nvec4 pbrlight(vec3 normal, float rough, float NoV, vec3 R){\n    vec4 basecolor = texture2D(texBaseColor,vUv);\n\tbasecolor.rgb = pow(basecolor.rgb,vec3(2.2));\n\tfloat metaless = 1.0; \t\n\tconst float ismetalinfov = (128./255.);\n\tif(basecolor.a>=ismetalinfov){//这时候表示金属度\n\t\tmetaless = (basecolor.a-ismetalinfov)*2.;\n\t\tbasecolor.a = 1.0;\n\t}else{\n\t\tmetaless = 0.;\n\t\tbasecolor.a = basecolor.a*2.0;\n\t}\n\t#ifdef FIX_METALESS\n\tmetaless = u_metaless;\n\t#endif\n\t#ifdef HAS_PBRINFO\t\n\tvec4 pbrinfo = texture2D(texPbrInfo, vUv);\n\tmetaless = pbrinfo.b;\n\trough = pbrinfo.g;\n\t#endif\n    const vec3 nonmetalF0 =vec3(0.02);\n    vec3 F0 =  mix(nonmetalF0, basecolor.rgb, metaless);\n\t\n    vec4 PrefilteredColor = texPanoramaLod(texPrefilterdEnv, R, rough*maxlv);\n    PrefilteredColor.rgb = _RGBEToRGB(PrefilteredColor);\n    vec4 EnvBRDF = texture2D(texBRDFLUT,vec2(rough , NoV));//TODO lod\n    vec2 rg = _RGBAToU16(EnvBRDF);    \n    speccontrib = (F0* rg.x + saturate( 50.0 * PrefilteredColor.g ) * rg.y);\n\tvec3 color_spec = PrefilteredColor.rgb*speccontrib;\n\t\n\tvec3 color_diff=diff_sh9(normal);\n\tvec3 outc =  color_diff*mix(basecolor.rgb,vec3(0.),metaless)*(vec3(1.0)-speccontrib)+color_spec;\n\t#ifdef HAS_PBRINFO\n\toutc*=pbrinfo.r;\n\t#endif\n\treturn vec4(outc, basecolor.a);\n}\n\nvec3 oldlight(vec4 normal, float NoV, vec3 R){\n    vec4 basecolor = texture2D(texBaseColor,vUv);\n\tconst vec3 lightdir=normalize(vec3(1.,1.,0.));\n\tconst vec3 spcecol = vec3(1.,0.8,0.8);\n\tconst vec3 amb = vec3(0.5);\n\tvec3 diffv =  (vec3(saturate(dot(lightdir,normal.xyz)))+amb);\n\t//vec3 spec = spcecol* pow(saturate(dot(R,lightdir)),(1.-pbrinfo.g)*5.);\n\treturn diffv*basecolor.rgb;//+spec;\n}\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\nvarying float v_posViewZ;\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nvoid main() {\n#ifdef CASTSHADOW\n\tgl_FragColor=packDepth(gl_FragCoord.w);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(texBaseColor,vUv).w;\n\t\tif( alpha < u_AlphaTestValue ){\n\t\t\tdiscard;\n\t\t}\n\t#endif\n#else\n\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,vWorldPos.xyz,v_posViewZ,0.0001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,vWorldPos.xyz,v_posViewZ,0.0001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.0001);\n\t\t#endif\n\t#endif\t\n\t\n    vec3 normal =  normalize(vWorldNorm);\n\tvec4 normtex = texture2D( texNormal, vUv );\n\t#ifdef HAS_TANGENT\t\n\tnormal = applyNormalTex(normtex.xyz, normal);\n\t#endif\n    vec3 view   = -normalize(vViewDir);\n    float NoV = saturate(dot( view, normal ));\n    vec3 R = 2. * NoV * normal - view;\n\tfloat roughness = normtex.a;\n\t#ifdef FIX_ROUGHNESS\n\troughness = u_roughness;\n\t#endif\n\t\n\tvec4 pbrl = pbrlight(normal,roughness,NoV,R)*u_hdrexposure;\n    gl_FragColor.rgb =  pow(pbrl.rgb,vec3(0.45455));\n\t//gl_FragColor.rgb = oldlight(normtex,NoV,R);\n\t#ifdef RECEIVESHADOW\n\tgl_FragColor.rgb *= max(shadowValue,0.7);\n\t#endif\n\t\n    gl_FragColor.a = pbrl.a;\n\n#endif\n}\n'),
              (r = ci.add(l, t, e, i, n)),
              (Hi.SHADERDEFINE_FIX_METALESS = r.registerMaterialDefine(
                'FIX_METALESS'
              )),
              (Hi.SHADERDEFINE_FIX_ROUGHNESS = r.registerMaterialDefine(
                'FIX_ROUGHNESS'
              )),
              (Hi.SHADERDEFINE_HAS_TANGENT = r.registerMaterialDefine(
                'HAS_TANGENT'
              )),
              (Hi.SHADERDEFINE_HAS_PBRINFO = r.registerMaterialDefine(
                'HAS_PBRINFO'
              )),
              (Hi.SHADERDEFINE_USE_GROUNDTRUTH = r.registerMaterialDefine(
                'USE_GROUNDTRUTH'
              )),
              (Hi.SHADERDEFINE_TEST_CLIPZ = r.registerMaterialDefine('CLIPZ')),
              (i = {
                a_Position: 0,
                a_Normal: 3,
                a_Tangent0: 5,
                a_Texcoord0: 2,
                a_BoneWeights: 7,
                a_BoneIndices: 6
              }),
              (n = {
                u_Bones: [0, 0],
                u_MvpMatrix: [1, 2],
                u_WorldMat: [0, 2],
                u_CameraPos: [0, 3],
                u_AlphaTestValue: [0, 1],
                u_DiffuseColor: [7, 1],
                u_EmissionColor: [8, 1],
                u_DiffuseTexture: [1, 1],
                u_NormalTexture: [3, 1],
                u_ParallaxTexture: [4, 1],
                u_MetallicGlossTexture: [2, 1],
                u_OcclusionTexture: [5, 1],
                u_EmissionTexture: [6, 1],
                u_metallic: [9, 1],
                u_smoothness: [10, 1],
                u_smoothnessScale: [11, 1],
                u_occlusionStrength: [13, 1],
                u_normalScale: [14, 1],
                u_parallaxScale: [15, 1],
                u_TilingOffset: [17, 1],
                'u_DirectionLight.Direction': [3, 4],
                'u_DirectionLight.Color': [4, 4],
                u_AmbientColor: [21, 4],
                u_shadowMap1: [18, 4],
                u_shadowMap2: [19, 4],
                u_shadowMap3: [20, 4],
                u_shadowPSSMDistance: [15, 4],
                u_lightShadowVP: [16, 4],
                u_shadowPCFoffset: [17, 4]
              });
            var h = Oi.nameKey.add('PBRStandard');
            (t =
              'attribute vec4 a_Position;\nattribute vec3 a_Normal;\nattribute vec4 a_Tangent0;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_WorldMat;\nuniform vec3 u_CameraPos;\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\nvarying vec3 v_PositionWorld;\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n\t  varying vec4 v_lightMVPPos;\n\t  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0 = a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tmat4 skinTransform = mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\tv_PositionWorld = (u_WorldMat * position).xyz;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t\tworldMat = mat3(u_WorldMat);\n\t\tv_PositionWorld = (u_WorldMat * a_Position).xyz;\n\t#endif\n\t\n\tv_Normal = worldMat * a_Normal;\n\tv_Tangent = worldMat * a_Tangent0.xyz;\n\tv_Binormal = cross(v_Normal, v_Tangent) * a_Tangent0.w;\n  \n\tv_Texcoord0 = a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t#endif\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0 + v_Texcoord0.y);\n  \n\tv_ViewDir = u_CameraPos - v_PositionWorld;\n  \n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}'),
              (e =
                '#ifdef FSHIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\n\nuniform vec4 u_AmbientColor;\nuniform vec4 u_DiffuseColor;\n\n#ifdef DIFFUSETEXTURE\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n#ifdef METALLICGLOSSTEXTURE\n\tuniform sampler2D u_MetallicGlossTexture;\n#endif\n#ifdef NORMALTEXTURE\n\tuniform sampler2D u_NormalTexture;\n\tuniform float u_normalScale;\n#endif\n#ifdef PARALLAXTEXTURE\n\tuniform sampler2D u_ParallaxTexture;\n\tuniform float u_parallaxScale;\n#endif\n#ifdef OCCLUSIONTEXTURE\n\tuniform sampler2D u_OcclusionTexture;\n\tuniform float u_occlusionStrength;\n#endif\n#ifdef EMISSION\n\t#ifdef EMISSIONTEXTURE\n\t\tuniform sampler2D u_EmissionTexture;\n\t#endif\n\tuniform vec4 u_EmissionColor;\n#endif\n\nuniform float u_AlphaTestValue;\nuniform float u_metallic;\nuniform float u_smoothness;\nuniform float u_smoothnessScale;\n\n#include "PBRStandardLighting.glsl"\n#include "ShadowHelper.glsl"\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nuniform DirectionLight u_DirectionLight;\n\nvoid main_castShadow()\n{\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\n\nvoid main_normal()\n{\t\n\tvec3 viewDir = normalize(v_ViewDir);\n\t\n\tvec2 uv0 = ParallaxOffset(viewDir);\n\t\n\tvec2 mg;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 diffuseTextureColor = texture2D(u_DiffuseTexture, uv0);\n\t\tvec4 diffuseColor = diffuseTextureColor * u_DiffuseColor;\n\t\tmg = MetallicGloss(diffuseTextureColor.a, uv0);\n\t#else\n\t\tvec4 diffuseColor = u_DiffuseColor;\n\t\tmg = MetallicGloss(1.0, uv0);\n\t#endif\n\t\n\t#ifdef ALPHATEST\n\t\tif(diffuseColor.a < u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n\t\n\tgl_FragColor = diffuseColor;\n\t\n\tvec3 normal = UnpackScaleNormal(uv0);\n  \n\tvec3 gi = (u_AmbientColor * Occlusion(uv0)).rgb;\n  \n\tvec4 color = PBRStandardDiectionLight(diffuseColor.rgb, mg.r, mg.g, normal, viewDir, u_DirectionLight, gi);\n\t\n\tcolor.a = diffuseColor.a;\n\t\n\t#ifdef EMISSION\n\t\tvec4 emissionColor = u_EmissionColor;\n\t\t#ifdef EMISSIONTEXTURE\n\t\t\temissionColor *=  texture2D(u_EmissionTexture, uv0);\n\t\t#endif\n\t\tcolor.rgb += emissionColor.rgb;\n\t#endif\n\t\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor = vec4(color.rgb * shadowValue, color.a);\n\t#else\n\t\tgl_FragColor = color;\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif  \n}\n\n'),
              (r = ci.add(h, t, e, i, n)),
              (zi.SHADERDEFINE_DIFFUSETEXTURE = r.registerMaterialDefine(
                'DIFFUSETEXTURE'
              )),
              (zi.SHADERDEFINE_METALLICGLOSSTEXTURE = r.registerMaterialDefine(
                'METALLICGLOSSTEXTURE'
              )),
              (zi.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = r.registerMaterialDefine(
                'SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA'
              )),
              (zi.SHADERDEFINE_NORMALTEXTURE = r.registerMaterialDefine(
                'NORMALTEXTURE'
              )),
              (zi.SHADERDEFINE_PARALLAXTEXTURE = r.registerMaterialDefine(
                'PARALLAXTEXTURE'
              )),
              (zi.SHADERDEFINE_OCCLUSIONTEXTURE = r.registerMaterialDefine(
                'OCCLUSIONTEXTURE'
              )),
              (zi.SHADERDEFINE_EMISSION = r.registerMaterialDefine('EMISSION')),
              (zi.SHADERDEFINE_EMISSIONTEXTURE = r.registerMaterialDefine(
                'EMISSIONTEXTURE'
              )),
              (zi.SHADERDEFINE_TILINGOFFSET = r.registerMaterialDefine(
                'TILINGOFFSET'
              )),
              (i = {
                a_Position: 0,
                a_Normal: 3,
                a_Tangent0: 5,
                a_Texcoord0: 2,
                a_BoneWeights: 7,
                a_BoneIndices: 6
              }),
              (n = {
                u_Bones: [0, 0],
                u_MvpMatrix: [1, 2],
                u_WorldMat: [0, 2],
                u_CameraPos: [0, 3],
                u_AlphaTestValue: [0, 1],
                u_DiffuseColor: [7, 1],
                u_SpecularColor: [8, 1],
                u_EmissionColor: [9, 1],
                u_DiffuseTexture: [1, 1],
                u_NormalTexture: [3, 1],
                u_ParallaxTexture: [4, 1],
                u_SpecularTexture: [2, 1],
                u_OcclusionTexture: [5, 1],
                u_EmissionTexture: [6, 1],
                u_smoothness: [10, 1],
                u_smoothnessScale: [11, 1],
                u_occlusionStrength: [13, 1],
                u_normalScale: [14, 1],
                u_parallaxScale: [15, 1],
                u_TilingOffset: [17, 1],
                'u_DirectionLight.Direction': [3, 4],
                'u_DirectionLight.Color': [4, 4],
                u_AmbientColor: [21, 4],
                u_shadowMap1: [18, 4],
                u_shadowMap2: [19, 4],
                u_shadowMap3: [20, 4],
                u_shadowPSSMDistance: [15, 4],
                u_lightShadowVP: [16, 4],
                u_shadowPCFoffset: [17, 4]
              });
            var c = Oi.nameKey.add('PBRSpecular');
            (t =
              'attribute vec4 a_Position;\nattribute vec3 a_Normal;\nattribute vec4 a_Tangent0;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_WorldMat;\nuniform vec3 u_CameraPos;\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\nvarying vec3 v_PositionWorld;\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n\t  varying vec4 v_lightMVPPos;\n\t  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef BONE\n\tconst int c_MaxBoneCount = 24;\n\tattribute vec4 a_BoneIndices;\n\tattribute vec4 a_BoneWeights;\n\tuniform mat4 u_Bones[c_MaxBoneCount];\n#endif\n\nvoid main_castShadow()\n{\n\t#ifdef BONE\n\t\tmat4 skinTransform=mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t#endif\n\t \n\t//TODO没考虑UV动画呢\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tv_Texcoord0 = a_Texcoord0;\n\t#endif\n\t\tv_posViewZ = gl_Position.z;\n}\n\nvoid main_normal()\n{\n\tmat3 worldMat;\n\t#ifdef BONE\n\t\tmat4 skinTransform = mat4(0.0);\n\t\tskinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n\t\tskinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n\t\tvec4 position = skinTransform * a_Position;\n\t\tgl_Position = u_MvpMatrix * position;\n\t\tworldMat=mat3(u_WorldMat*skinTransform);\n\t\tv_PositionWorld = (u_WorldMat * position).xyz;\n\t#else\n\t\tgl_Position = u_MvpMatrix * a_Position;\n\t\tworldMat = mat3(u_WorldMat);\n\t\tv_PositionWorld = (u_WorldMat * a_Position).xyz;\n\t#endif\n\t\n\tv_Normal = worldMat * a_Normal;\n\tv_Tangent = worldMat * a_Tangent0.xyz;\n\tv_Binormal = cross(v_Normal, v_Tangent) * a_Tangent0.w;\n  \n\tv_Texcoord0 = a_Texcoord0;\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0=(vec2(v_Texcoord0.x,v_Texcoord0.y-1.0)*u_TilingOffset.xy)+u_TilingOffset.zw;\n\t#endif\n\t\tv_Texcoord0=vec2(v_Texcoord0.x,1.0 + v_Texcoord0.y);\n  \n\tv_ViewDir = u_CameraPos - v_PositionWorld;\n  \n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1 \n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif\n}'),
              (e =
                '#ifdef FSHIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nvarying vec2 v_Texcoord0;\nvarying vec3 v_Normal;\nvarying vec3 v_Tangent;\nvarying vec3 v_Binormal;\nvarying vec3 v_ViewDir;\n\nuniform vec4 u_AmbientColor;\nuniform vec4 u_DiffuseColor;\nuniform vec4 u_SpecularColor;\n\n#ifdef DIFFUSETEXTURE\n\tuniform sampler2D u_DiffuseTexture;\n#endif\n#ifdef SPECULARTEXTURE\n\tuniform sampler2D u_SpecularTexture;\n#endif\n#ifdef NORMALTEXTURE\n\tuniform sampler2D u_NormalTexture;\n\tuniform float u_normalScale;\n#endif\n#ifdef PARALLAXTEXTURE\n\tuniform sampler2D u_ParallaxTexture;\n\tuniform float u_parallaxScale;\n#endif\n#ifdef OCCLUSIONTEXTURE\n\tuniform sampler2D u_OcclusionTexture;\n\tuniform float u_occlusionStrength;\n#endif\n#ifdef EMISSION\n\t#ifdef EMISSIONTEXTURE\n\t\tuniform sampler2D u_EmissionTexture;\n\t#endif\n\tuniform vec4 u_EmissionColor;\n#endif\n\nuniform float u_AlphaTestValue;\nuniform float u_metallic;\nuniform float u_smoothness;\nuniform float u_smoothnessScale;\n\n#include "PBRSpecularLighting.glsl"\n#include "ShadowHelper.glsl"\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\n\nuniform DirectionLight u_DirectionLight;\n\nvoid main_castShadow()\n{\n\tgl_FragColor=packDepth(v_posViewZ);\n\t#if defined(DIFFUSEMAP)&&defined(ALPHATEST)\n\t\tfloat alpha = texture2D(u_DiffuseTexture,v_Texcoord0).w;\n\t\tif( alpha < u_AlphaTestValue )\n\t\t{\n\t\t\tdiscard;\n\t\t}\n\t#endif\n}\n\nvoid main_normal()\n{\t\n\tvec3 viewDir = normalize(v_ViewDir);\n\t\n\tvec2 uv0 = ParallaxOffset(viewDir);\n\t\n\tvec4 sg;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 diffuseTextureColor = texture2D(u_DiffuseTexture, uv0);\n\t\tvec4 diffuseColor = diffuseTextureColor * u_DiffuseColor;\n\t\tsg = SpecularGloss(diffuseTextureColor.a, uv0);\n\t#else\n\t\tvec4 diffuseColor = u_DiffuseColor;\n\t\tsg = SpecularGloss(1.0, uv0);\n\t#endif\n\t\n\t#ifdef ALPHATEST\n\t\tif(diffuseColor.a < u_AlphaTestValue)\n\t\t\tdiscard;\n\t#endif\n  \n\tvec3 normal = UnpackScaleNormal(uv0);\n\t\n\tvec3 gi = (u_AmbientColor * Occlusion(uv0)).rgb;\n\t\n\t//float a = (sg.r+sg.g+sg.b) / 3.0;\n  \n\tvec4 color = PBRSpecularDiectionLight(diffuseColor.rgb, sg.rgb, sg.a, normal,viewDir, u_DirectionLight, gi);\n\t\n\tcolor.a = diffuseColor.a;\n\t\n\t#ifdef EMISSION\n\t\tvec4 emissionColor = u_EmissionColor;\n\t\t#ifdef EMISSIONTEXTURE\n\t\t\temissionColor *=  texture2D(u_EmissionTexture, uv0);\n\t\t#endif\n\t\tcolor.rgb += emissionColor.rgb;\n\t#endif\n\t\n\t#ifdef RECEIVESHADOW\n\t\tfloat shadowValue = 1.0;\n\t\t#ifdef SHADOWMAP_PSSM3\n\t\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif\n\t\t#ifdef SHADOWMAP_PSSM2\n\t\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t\t#endif \n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t\t#endif\n\t\tgl_FragColor = vec4(color.rgb * shadowValue, color.a);\n\t#else\n\t\tgl_FragColor = color;\n\t#endif\n}\n\nvoid main()\n{\n\t#ifdef CASTSHADOW\t\t\n\t\tmain_castShadow();\n\t#else\n\t\tmain_normal();\n\t#endif  \n}\n\n'),
              (r = ci.add(c, t, e, i, n)),
              (Gi.SHADERDEFINE_DIFFUSETEXTURE = r.registerMaterialDefine(
                'DIFFUSETEXTURE'
              )),
              (Gi.SHADERDEFINE_SPECULARTEXTURE = r.registerMaterialDefine(
                'SPECULARTEXTURE'
              )),
              (Gi.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = r.registerMaterialDefine(
                'SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA'
              )),
              (Gi.SHADERDEFINE_NORMALTEXTURE = r.registerMaterialDefine(
                'NORMALTEXTURE'
              )),
              (Gi.SHADERDEFINE_PARALLAXTEXTURE = r.registerMaterialDefine(
                'PARALLAXTEXTURE'
              )),
              (Gi.SHADERDEFINE_OCCLUSIONTEXTURE = r.registerMaterialDefine(
                'OCCLUSIONTEXTURE'
              )),
              (Gi.SHADERDEFINE_EMISSION = r.registerMaterialDefine('EMISSION')),
              (Gi.SHADERDEFINE_EMISSIONTEXTURE = r.registerMaterialDefine(
                'EMISSIONTEXTURE'
              )),
              (Gi.SHADERDEFINE_TILINGOFFSET = r.registerMaterialDefine(
                'TILINGOFFSET'
              )),
              (i = { a_position: 0, a_normal: 3, uv: 2 }),
              (n = {
                irrad_mat_red: [10, 3],
                irrad_mat_green: [11, 3],
                irrad_mat_blue: [12, 3],
                u_hdrexposure: [13, 3],
                texBaseColor: [1, 1],
                texNormal: [2, 1],
                texSky: [11, 1],
                texUnderWater: [3, 1],
                texPrefilterdEnv: [8, 3],
                texPrefilterDiff: [7, 3],
                texWaterDisp: [4, 1],
                texWaveDetail: [9, 1],
                texDeepColor: [10, 1],
                texWaterInfo: [16, 1],
                texFoam: [17, 1],
                GEOWAVE_UV_SCALE: [18, 1],
                modelMatrix: [0, 2],
                mvp: [1, 2],
                cameraPosition: [0, 3],
                u_curTm: [8, 1],
                u_scrsize: [15, 1],
                u_WaveInfoD: [13, 1],
                u_WaveInfo: [12, 1],
                u_WaveMainDir: [14, 1],
                u_DeepScale: [20, 1],
                u_SeaColor: [19, 1],
                u_View: [1, 3],
                u_Project: [2, 3],
                u_FogStart: [1, 4],
                u_FogRange: [2, 4],
                u_FogColor: [0, 4],
                'u_DirectionLight.Direction': [3, 4],
                'u_DirectionLight.Diffuse': [4, 4],
                'u_PointLight.Position': [5, 4],
                'u_PointLight.Range': [6, 4],
                'u_PointLight.Attenuation': [7, 4],
                'u_PointLight.Diffuse': [8, 4],
                'u_SpotLight.Position': [9, 4],
                'u_SpotLight.Direction': [10, 4],
                'u_SpotLight.Range': [12, 4],
                'u_SpotLight.Spot': [11, 4],
                'u_SpotLight.Attenuation': [13, 4],
                'u_SpotLight.Diffuse': [14, 4]
              });
            var u = Oi.nameKey.add('Water');
            (t =
              '\nuniform mat4 modelMatrix;\n//uniform mat4 modelViewMatrix;\n//uniform mat4 projectionMatrix;\nuniform mat4 u_View;\nuniform mat4 u_Project;\nuniform mat4 mvp;\n//uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\nuniform float u_curTm;\n\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 uv;\n//uniform sampler2D texWaterDisp;\n#ifdef USE_VERTEX_DEEPINFO\n#else\nuniform sampler2D texWaterInfo;\nvarying vec4 vWaterInfo;\nuniform float u_DeepScale;//texWaterInfo.r*vDeepScale\n#endif\nuniform float u_WaveMainDir;\t//主波方向\nuniform float GEOWAVE_UV_SCALE ;//= 100.0;\n\n\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec3 vWorldTan;\nvarying vec3 vWorldBin;\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying vec3 vLightDir;\nvarying vec3 vViewDir;\nvarying vec3 vDisp;\nvarying float fDeep;\nvarying mat2 matUVTrans;\nvarying float fFoam;\n\nconst float PI = 3.14159265358979323846264;\n\n#include "WaveFunction.glsl"\n\nvec2 getPosFromUV(vec2 uv){\n\treturn uv*50.;\n}\n\nvoid main() {\n\tvec3 pos = a_position;\n    vUv = uv;\n\t\n\t//vDisp = texture2D(texWaterDisp,uv).rgb;\n\t//vec3 disp = vDisp;\n\t\n\t//TODO 这里有个潜规则。\n\tfloat tt = pos.y; pos.y=pos.z; pos.z=-tt;\n\t\n\t#ifdef USE_VERTEX_DEEPINFO\n\tfDeep = -pos.y;\n\tpos.y=0.0;\n\t#else\n\tvWaterInfo = texture2D(texWaterInfo,uv);\n\tfDeep = vWaterInfo.r*u_DeepScale;\n\t#endif\n\t\n\t\n\t//计算波形\n\tmat4 modelMat = modelMatrix;\n\tvec3 opos, T,B,N;\n\tfloat foams=0.;\n\tvec2 uvpos = uv*GEOWAVE_UV_SCALE+vec2(modelMat[3][0],0.);//TODO 如果有旋转缩放怎么办\n\tcalcGerstnerWave(u_curTm, pos,fDeep, uvpos,opos,B,T,N,foams);\n\tfFoam = foams;\n\tgl_Position = mvp*vec4(opos,1.);\n\tvWorldPos = modelMat*vec4(opos,1.);\n\n\tvWorldNorm = normalize((modelMatrix*vec4(N,0.0)).xyz);\n\tvWorldTan = normalize((modelMatrix*vec4(T,0.0)).xyz);\n\tvWorldBin = normalize((modelMatrix*vec4(B,0.0)).xyz);\n    vViewDir = vWorldPos.xyz-cameraPosition; //这个不能取normalize，否则会引入非线性\n\t\n\tfloat s = sin(u_WaveMainDir);\n\tfloat c = cos(u_WaveMainDir);\n\tmatUVTrans = mat2(c,-s,s,c);\n}\n'),
              (e =
                '//#version 300 es\n\nprecision highp float;\nprecision lowp int;\n\nconst float PI = 3.14159265358979323846264;\nconst float _2PI = 6.2831853071796;\nvarying vec2 vUv;\nvarying vec3 vWorldNorm;\nvarying vec3 vWorldTan;\nvarying vec3 vWorldBin;\nvarying vec3 vViewDir;//入射。pos-cam\nvarying vec4 vViewPos;\nvarying vec4 vWorldPos;\nvarying float fDeep;\nvarying mat2 matUVTrans;\n#ifdef USE_VERTEX_DEEPINFO\n#else\nvarying vec4 vWaterInfo;\n#endif\nmat3 matTBNOff;//\n\n//\nuniform sampler2D texBaseColor;\nuniform sampler2D texNormal;\n#ifdef CUBE_ENV\nuniform samplerCube texSky;\n#else\nuniform sampler2D texSky;\n#endif\nuniform sampler2D texUnderWater;\nuniform sampler2D texWaveDetail;\n//uniform sampler2D texDeepColor;\nuniform sampler2D texFoam;\nvarying float fFoam;\nuniform float u_curTm;\nuniform vec2 u_scrsize;\nuniform vec3 u_SeaColor;//\n\nconst int NumTexWaves=4;\nconst float Amp_over_L = 0.01;\n//const vec3 SEA_COLOR1 = vec3(0.0292,0.672,0.7467);//大洋\n//const vec3 SEA_COLOR2 = vec3(0,0.927,0.43);//近海\n\nconst float _maxu8 = 255.0;\nconst float _maxu16 = 65535.0;\nconst float _shift8 = 256.0;    //平移的话是*256而不是255\nvec2 _RGBAToU16(const in vec4 rgba){\n    return vec2((rgba.r*_maxu8+rgba.g*_maxu8*_shift8)/_maxu16, (rgba.b*_maxu8+rgba.a*_maxu8*_shift8)/_maxu16);\n}\nvec3 _RGBEToRGB( const in vec4 rgba ){\n    float f = pow(2.0, rgba.w * 255.0 - (128.0 + 8.0));\n    return rgba.rgb * (255.0 * f);\n}\n\nfloat saturate(float v){\n    return min(max(v,0.),1.);\n}\n\n/*\n\t各种 ToneMap\n*/\n//Reinhard\nvec3 ReinhardToneMapping(vec3 color, float adapted_lum) {\n    const float MIDDLE_GREY = 1.;\n    color *= MIDDLE_GREY / adapted_lum;\n    return color / (1.0 + color);\n}\n\n//CE2\nvec3 CEToneMapping(vec3 color, float adapted_lum){\n    return 1. - exp(-adapted_lum * color);\n}\n\n//UC2\nvec3 F1(vec3 x){\n\tconst float A = 0.22;\n\tconst float B = 0.30;\n\tconst float C = 0.10;\n\tconst float D = 0.20;\n\tconst float E = 0.01;\n\tconst float F = 0.30;\n \n\treturn ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F;\n}\n\nvec3 Uncharted2ToneMapping(vec3 color, float adapted_lum){\n\tconst vec3 WHITE = vec3(11.2);\n\treturn F1(1.6 * adapted_lum * color) / F1(WHITE);\n}\n\n//ACES\nvec3 ACESToneMapping(vec3 color, float adapted_lum){\n\tconst float A = 2.51;\n\tconst float B = 0.03;\n\tconst float C = 2.43;\n\tconst float D = 0.59;\n\tconst float E = 0.14;\n\n\tcolor *= adapted_lum;\n\treturn (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n\n/*\n* 对一个全景图进行采样。假设x轴指向中心。\n*/\nvec4 texPanorama(sampler2D tex, const in vec3 dir){\n\tfloat envu = atan(dir.z,dir.x)/_2PI+0.5; \t\n\tfloat envv = acos(dir.y)/PI;//(1.0-dir.y)/2.0;\n\treturn texture2D(tex,vec2(envu,envv));\n}\n\n/*\n\t与位于0点的测试棒的相交测试交点\n\t这个是瞎写的，只是为了测试\n*/\nbool hitClydiner(vec3 pos, vec3 dir, out vec3 hitpos, out vec3 hitnormal){\n\tconst float r = 0.5;\n\tfloat a = dir.x*dir.x+dir.z*dir.z;\n\tfloat b = 2.*dir.x*pos.x+2.*dir.z*pos.z;\n\tfloat c = pos.x*pos.x+pos.z*pos.z-r*r;\n\tfloat d = b*b-4.*a*c;\n\tif(d>=0.0){\n\t\tfloat t = (-b+sqrt(d))/2./a;\n\t\tt =min(t, (-b-sqrt(d))/2./a);\n\t\thitpos = pos+dir*t;\n\t\treturn true;\n\t}\n\t/*\n\tvec3 v1 = normalize(cross(dir,vec3(0.,1.,0.)));//公垂线\n\tfloat dist = dot(pos,v1);//最短距离\n\tif(abs(dist)<r){\n\t\treturn true;\n\t}\n\t*/\n\treturn false;\n}\n\n///* 根据散射公式来计算某个方向的颜色 *///\n//\nfloat phase_function(float costheta, float g, float g2){\n\treturn 1.5*( (1.0-g2) / (2.0+g2) ) * (1.0+costheta*costheta) / pow(1.0+g2-2.0*g*costheta, 1.5);\t\n}\n\nconst float _density = .2;\nconst vec3 _vLightDir=vec3(0.,-1.,0.);//必须是规格化的\nconst int _SAMPLENUM = 20;\nconst float _K1 = 1.0;\nconst float _g = -0.93;\n//\nvec3 calcScatter(vec3 start, vec3 dir, vec3 end){\n\tfloat len = length(end-start);\n\tfloat costheta = dot(dir,_vLightDir);\n\tfloat g2 = _g*_g;\n\tfloat K = _K1*len*_density*phase_function(costheta,_g,g2);\n\t//用分段的方式来积分\n\tfloat dlen = len/float(_SAMPLENUM);//距离平分\n\tfloat ddeep = (start.y-end.y)/float(_SAMPLENUM);//深度平分\n\tfloat sum=0.;\n\tfor( int i=0; i<_SAMPLENUM; i++){\n\t\tfloat fi = float(i);\n\t\tfloat v1 = exp(-_density*(dlen+ddeep)*fi);//TODO 应该可以用分析法计算出来\n\t\tsum += v1;\n\t}\n\treturn vec3(K*sum);\n}\n///* 根据散射公式来计算某个方向的亮度  END *///\n\nconst float cDeep = -2.;\t//假设水的深度\nvec3 getShuiDiColor(vec3 pos, vec3 dir, vec3 normal){\n\t//一个无限大的水底，黑白格纹理。纹理长度为1米\n\tfloat t = ( cDeep-pos.y )/dir.y;\n\tif(t<0.) return vec3(1.,0.,0.);//TEST\n\tbool bhit = false;\n\tvec3 hitpos;\n\tvec3 hitcolor;\n\tvec3 hn;\n\tif(hitClydiner(pos,dir,hitpos,hn) && hitpos.y>cDeep && hitpos.y<pos.y){\n\t\tbhit=true;\n\t\thitcolor = vec3(.8,.8,.8);\n\n\t}else\n\t{\n\t\thitpos = pos+dir*t;\n\t\tvec3 hp = floor(hitpos);\n\t\tfloat a = mod((hp.x+hp.z),2.);\n\t\thitcolor = (a<.9)?vec3(0.,0.,0.):vec3(1.,1.,1.);\n\t\t//hitcolor = texture2D(texUnderWater,hitpos.xz/10.).rgb;\n\t}\n\t\n\tfloat l = length(hitpos-pos);\n\t//return texture2D(texDeepColor,vec2(min(max(l/400.,0.),1.),0.5)).rgb;\n\t//return SEA_COLOR1*calcScatter(pos,dir,hitpos);\n\tfloat left = pow(0.8,l);//假设透过率为80%，则到达水底的时候的光强。\n\treturn mix(hitcolor,u_SeaColor,1.-left);\n}\n\n/*\n\tview已经normalize了\n*/\nvec3 getRefractColor(vec3 view,vec3 normal){\n\tvec3 T = refract(-view, normal, 0.7);\n\treturn getShuiDiColor(vWorldPos.xyz,T,normal); \n}\n\nvec4 calcWaterC(vec3 view, vec3 normal, float von, vec3 R, float rough){\n\t/*\n\t只有浪顶的法线向下，也就是波形形成了交叠的时候，才会这样，所以要通过参数控制避免出现这种情况，而不是在这里保护。\n\tif(dot(R,vec3(0.,1.,0.))<0.){\n\t\tR = -R;\n\t}\n\t*/\n\t//vec3 refr = getRefractColor(-view,normal);\n#ifdef USE_REFR_TEX\t\n\tvec3 refr = texture2D(texUnderWater, gl_FragCoord.xy/u_scrsize+normal.xz/8.).rgb;\n#else\n\tvec3 refr = u_SeaColor;\n#endif\n\tfloat F0=0.02;\n\t//菲涅尔，越大反射越强\n\tfloat f =  F0+(1.0-F0)*exp2((-5.55473*von-6.98316)*von);\n\t//float f = F0+(1.0-F0)*pow(1.-von,5.);\n\t//能看到水底的程度。反射剩余的*水中的衰减\n\t//float a = (1.-f)*(1.-deepk);\n#ifdef CUBE_ENV\n\tvec4 reflc = textureCube(texSky,R);\n#else\n\tvec4 reflc = texPanorama(texSky, R);\n#endif\n#ifdef HDR_ENV\n\tvec3 refl = _RGBEToRGB(reflc)*f;\n#else\n\tvec3 refl = reflc.rgb*f;\n#endif\n\t//return vec4(refl*(1.-rough),1.);\n\t\n\t//vec3 refl = reflc.rgb*f;\n\tvec3 final = mix(refr, u_SeaColor, min(fDeep/10.,1.))+refl*(max(0.,1.-rough));\n#ifdef HDR_ENV\n\tfinal = ACESToneMapping(final,1.);//TODO 这个要uniform传入\n#endif\n\treturn vec4(final,f);\n}\n\nvoid main() {\n    vec3 normal =  normalize(vWorldNorm);\n\t//如果uv=1为100米，希望每个细节纹理表示20米的小波形，则uv缩放是 100/20。细节纹理内部也要用这个值，即pos=uv*20\n\tvec2 ruv = matUVTrans*vUv;\n\tvec3 detailNorm = texture2D(texWaveDetail,fract(ruv*5.)).rgb*2.-vec3(1.);//TODO uv怎么算\n\tfloat texNormScale = 2.*PI*float(NumTexWaves)*Amp_over_L*2.5;\n\tdetailNorm *= vec3(texNormScale,1.,texNormScale);\n\t//旋转\n\t//细节纹理来自rendertarget，因此需要颠倒z\n\t\n\tmatTBNOff = mat3(matUVTrans[0][0],0.,matUVTrans[1][0],\n\t0.,1.,0.,\n\tmatUVTrans[0][1],0.,matUVTrans[1][1]\n\t);\n\t\n\t/*\n\tmatTBNOff = mat3(0.,0.,1.,\n\t0.,1.,0.,\n\t-1.,0.,0.\n\t);\n\t*/\n\n    mat3 tsn = mat3( vWorldBin, normal, vWorldTan);\t\n    //normal = normalize(tsn * matTBNOff * detailNorm);\n\tnormal = normalize(tsn * detailNorm); //这个应该更正确。因为本身方向就是根据uv算的，如果是静态图片才需要转换。\n\t//vec4 normtex = texture2D( texNormal, vUv );\n    vec3 view   = -normalize(vViewDir);//view 是指向camera的\n    float NoV = saturate(dot( view, normal ));\n    //vec3 R = 2. * NoV * normal - view;\n\t\n#ifdef USE_FOAM\t\n\tvec4 foamc = (texture2D(texFoam,vUv*50.)+texture2D(texFoam,vUv*20.))/2.;\n\tfloat nearcoast = 1.-min(fDeep/10.,1.);// 1.-vWaterInfo.r;\n\tfloat foams = (nearcoast/4.+fFoam)*2.*nearcoast;\n#else\n\tfloat foams =0.;\n#endif\n\t\n\tvec3 R = reflect(-view,normal);\n\tvec4 wc = calcWaterC(view, normal,NoV,R, foams);\n\n\tgl_FragColor.rgb = wc.rgb;//normalize(detailNorm).rrr;//((normal)+vec3(0.0))/1.;//normalize(normal).rgb;//texture2D(texWaveDetail,vUv).rgb;// fracColor * texture2D(texUnderWater, vUv*20.0).rgb;// vec3(1.0);//pbrl.rgb;\n    gl_FragColor.a = 1.0;//wc.a;\n#ifdef USE_FOAM\n\tgl_FragColor.rgb = mix(gl_FragColor.rgb,vec3(1.),foamc.a*foams);\n\tgl_FragColor.a = foamc.r;\n#endif\n\t//if(mod(vUv.x*100.,1.0)<0.02 || mod(vUv.y*100.,1.0)<0.02) gl_FragColor.rgb=vec3(0.5,.5,.5);\n\t//gl_FragColor.rgb = detailNorm;\n}\n'),
              (r = ci.add(u, t, e, i, n)),
              (Xi.SHADERDEFINE_CUBE_ENV = r.registerMaterialDefine('CUBE_ENV')),
              (Xi.SHADERDEFINE_HDR_ENV = r.registerMaterialDefine('HDR_ENV')),
              (Xi.SHADERDEFINE_SHOW_NORMAL = r.registerMaterialDefine(
                'SHOW_NORMAL'
              )),
              (Xi.SHADERDEFINE_USEVERTEXHEIGHT = r.registerMaterialDefine(
                'USE_VERTEX_DEEPINFO'
              )),
              (Xi.SHADERDEFINE_USE_FOAM = r.registerMaterialDefine('USE_FOAM')),
              (Xi.SHADERDEFINE_USE_REFRACT_TEX = r.registerMaterialDefine(
                'USE_REFR_TEX'
              )),
              (i = {
                a_CornerTextureCoordinate: 17,
                a_MeshPosition: 0,
                a_MeshColor: 1,
                a_MeshTextureCoordinate: 2,
                a_ShapePositionStartLifeTime: 30,
                a_DirectionTime: 32,
                a_StartColor: 19,
                a_EndColor: 23,
                a_StartSize: 20,
                a_StartRotation0: 22,
                a_StartSpeed: 31,
                a_Random0: 34,
                a_Random1: 35,
                a_SimulationWorldPostion: 36,
                a_SimulationWorldRotation: 37
              }),
              (n = {
                u_Tintcolor: [2, 1],
                u_TilingOffset: [3, 1],
                u_texture: [1, 1],
                u_WorldPosition: [0, 2],
                u_WorldRotation: [1, 2],
                u_PositionScale: [4, 2],
                u_SizeScale: [5, 2],
                u_ScalingMode: [6, 2],
                u_Gravity: [7, 2],
                u_ThreeDStartRotation: [8, 2],
                u_StretchedBillboardLengthScale: [9, 2],
                u_StretchedBillboardSpeedScale: [10, 2],
                u_SimulationSpace: [11, 2],
                u_CurrentTime: [12, 2],
                u_ColorOverLifeGradientAlphas: [22, 2],
                u_ColorOverLifeGradientColors: [23, 2],
                u_MaxColorOverLifeGradientAlphas: [24, 2],
                u_MaxColorOverLifeGradientColors: [25, 2],
                u_VOLVelocityConst: [13, 2],
                u_VOLVelocityGradientX: [14, 2],
                u_VOLVelocityGradientY: [15, 2],
                u_VOLVelocityGradientZ: [16, 2],
                u_VOLVelocityConstMax: [17, 2],
                u_VOLVelocityGradientMaxX: [18, 2],
                u_VOLVelocityGradientMaxY: [19, 2],
                u_VOLVelocityGradientMaxZ: [20, 2],
                u_VOLSpaceType: [21, 2],
                u_SOLSizeGradient: [26, 2],
                u_SOLSizeGradientX: [27, 2],
                u_SOLSizeGradientY: [28, 2],
                u_SOLSizeGradientZ: [29, 2],
                u_SOLSizeGradientMax: [30, 2],
                u_SOLSizeGradientMaxX: [31, 2],
                u_SOLSizeGradientMaxY: [32, 2],
                u_SOLSizeGradientMaxZ: [33, 2],
                u_ROLAngularVelocityConst: [34, 2],
                u_ROLAngularVelocityConstSeprarate: [35, 2],
                u_ROLAngularVelocityGradient: [36, 2],
                u_ROLAngularVelocityGradientX: [37, 2],
                u_ROLAngularVelocityGradientY: [38, 2],
                u_ROLAngularVelocityGradientZ: [39, 2],
                u_ROLAngularVelocityGradientW: [40, 2],
                u_ROLAngularVelocityConstMax: [41, 2],
                u_ROLAngularVelocityConstMaxSeprarate: [42, 2],
                u_ROLAngularVelocityGradientMax: [43, 2],
                u_ROLAngularVelocityGradientMaxX: [44, 2],
                u_ROLAngularVelocityGradientMaxY: [45, 2],
                u_ROLAngularVelocityGradientMaxZ: [46, 2],
                u_ROLAngularVelocityGradientMaxW: [47, 2],
                u_TSACycles: [48, 2],
                u_TSASubUVLength: [49, 2],
                u_TSAGradientUVs: [50, 2],
                u_TSAMaxGradientUVs: [51, 2],
                u_CameraPosition: [0, 3],
                u_CameraDirection: [5, 3],
                u_CameraUp: [6, 3],
                u_View: [1, 3],
                u_Projection: [2, 3],
                u_FogStart: [1, 4],
                u_FogRange: [2, 4],
                u_FogColor: [0, 4]
              });
            var _ = Oi.nameKey.add('PARTICLESHURIKEN');
            (t =
              '#ifdef HIGHPRECISION\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\n#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\n\tattribute vec4 a_CornerTextureCoordinate;\n#endif\n#ifdef RENDERMODE_MESH\n\tattribute vec3 a_MeshPosition;\n\tattribute vec4 a_MeshColor;\n\tattribute vec2 a_MeshTextureCoordinate;\n\tvarying vec4 v_MeshColor;\n#endif\n\nattribute vec4 a_ShapePositionStartLifeTime;\nattribute vec4 a_DirectionTime;\nattribute vec4 a_StartColor;\nattribute vec3 a_StartSize;\nattribute vec3 a_StartRotation0;\nattribute float a_StartSpeed;\n#if defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n  attribute vec4 a_Random0;\n#endif\n#if defined(TEXTURESHEETANIMATIONRANDOMCURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  attribute vec4 a_Random1;\n#endif\nattribute vec3 a_SimulationWorldPostion;\nattribute vec4 a_SimulationWorldRotation;\n\nvarying float v_Discard;\nvarying vec4 v_Color;\n#ifdef DIFFUSEMAP\n\tvarying vec2 v_TextureCoordinate;\n#endif\n\nuniform float u_CurrentTime;\nuniform vec3 u_Gravity;\n\nuniform vec3 u_WorldPosition;\nuniform vec4 u_WorldRotation;\nuniform bool u_ThreeDStartRotation;\nuniform int u_ScalingMode;\nuniform vec3 u_PositionScale;\nuniform vec3 u_SizeScale;\nuniform mat4 u_View;\nuniform mat4 u_Projection;\n\n#ifdef STRETCHEDBILLBOARD\n\tuniform vec3 u_CameraPosition;\n#endif\nuniform vec3 u_CameraDirection;//TODO:只有几种广告牌模式需要用\nuniform vec3 u_CameraUp;\n\nuniform  float u_StretchedBillboardLengthScale;\nuniform  float u_StretchedBillboardSpeedScale;\nuniform int u_SimulationSpace;\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  uniform  int  u_VOLSpaceType;\n#endif\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\n  uniform  vec3 u_VOLVelocityConst;\n#endif\n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n  uniform  vec2 u_VOLVelocityGradientX[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientY[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientZ[4];//x为key,y为速度\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n  uniform  vec3 u_VOLVelocityConstMax;\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n  uniform  vec2 u_VOLVelocityGradientMaxX[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientMaxY[4];//x为key,y为速度\n  uniform  vec2 u_VOLVelocityGradientMaxZ[4];//x为key,y为速度\n#endif\n\n#ifdef COLOROVERLIFETIME\n  uniform  vec4 u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n#endif\n#ifdef RANDOMCOLOROVERLIFETIME\n  uniform  vec4 u_ColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_ColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n  uniform  vec4 u_MaxColorOverLifeGradientColors[4];//x为key,yzw为Color\n  uniform  vec2 u_MaxColorOverLifeGradientAlphas[4];//x为key,y为Alpha\n#endif\n\n\n#if defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMERANDOMCURVES)\n  uniform  vec2 u_SOLSizeGradient[4];//x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\n  uniform  vec2 u_SOLSizeGradientMax[4];//x为key,y为尺寸\n#endif\n#if defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\n  uniform  vec2 u_SOLSizeGradientX[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientY[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientZ[4];//x为key,y为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n  uniform  vec2 u_SOLSizeGradientMaxX[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientMaxY[4];//x为key,y为尺寸\n  uniform  vec2 u_SOLSizeGradientMaxZ[4];//x为key,y为尺寸\n#endif\n\n\n#ifdef ROTATIONOVERLIFETIME\n  #if defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\n    uniform  float u_ROLAngularVelocityConst;\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    uniform  float u_ROLAngularVelocityConstMax;\n  #endif\n  #if defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n    uniform  vec2 u_ROLAngularVelocityGradient[4];//x为key,y为旋转\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    uniform  vec2 u_ROLAngularVelocityGradientMax[4];//x为key,y为旋转\n  #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n  #if defined(ROTATIONOVERLIFETIMECONSTANT)||defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\n    uniform  vec3 u_ROLAngularVelocityConstSeprarate;\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n    uniform  vec3 u_ROLAngularVelocityConstMaxSeprarate;\n  #endif\n  #if defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n    uniform  vec2 u_ROLAngularVelocityGradientX[4];\n    uniform  vec2 u_ROLAngularVelocityGradientY[4];\n    uniform  vec2 u_ROLAngularVelocityGradientZ[4];\n\tuniform  vec2 u_ROLAngularVelocityGradientW[4];\n  #endif\n  #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n    uniform  vec2 u_ROLAngularVelocityGradientMaxX[4];\n    uniform  vec2 u_ROLAngularVelocityGradientMaxY[4];\n    uniform  vec2 u_ROLAngularVelocityGradientMaxZ[4];\n\tuniform  vec2 u_ROLAngularVelocityGradientMaxW[4];\n  #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\n  uniform  float u_TSACycles;\n  uniform  vec2 u_TSASubUVLength;\n  uniform  vec2 u_TSAGradientUVs[4];//x为key,y为frame\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n  uniform  vec2 u_TSAMaxGradientUVs[4];//x为key,y为frame\n#endif\n\n#ifdef FOG\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef TILINGOFFSET\n\tuniform vec4 u_TilingOffset;\n#endif\n\nvec3 rotationByEuler(in vec3 vector,in vec3 rot)\n{\n\tfloat halfRoll = rot.z * 0.5;\n    float halfPitch = rot.x * 0.5;\n\tfloat halfYaw = rot.y * 0.5;\n\n\tfloat sinRoll = sin(halfRoll);\n\tfloat cosRoll = cos(halfRoll);\n\tfloat sinPitch = sin(halfPitch);\n\tfloat cosPitch = cos(halfPitch);\n\tfloat sinYaw = sin(halfYaw);\n\tfloat cosYaw = cos(halfYaw);\n\n\tfloat quaX = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\n\tfloat quaY = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\n\tfloat quaZ = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\n\tfloat quaW = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\n\t\n\t//vec4 q=vec4(quaX,quaY,quaZ,quaW);\n\t//vec3 temp = cross(q.xyz, vector) + q.w * vector;\n\t//return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\t\n\tfloat x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n\tfloat xx = quaX * x;\n    float xy = quaX * y;\n\tfloat xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n                ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n                ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n\t\n}\n\n//假定axis已经归一化\nvec3 rotationByAxis(in vec3 vector,in vec3 axis, in float angle)\n{\n\tfloat halfAngle = angle * 0.5;\n\tfloat sin = sin(halfAngle);\n\t\n\tfloat quaX = axis.x * sin;\n\tfloat quaY = axis.y * sin;\n\tfloat quaZ = axis.z * sin;\n\tfloat quaW = cos(halfAngle);\n\t\n\t//vec4 q=vec4(quaX,quaY,quaZ,quaW);\n\t//vec3 temp = cross(q.xyz, vector) + q.w * vector;\n\t//return (cross(temp, -q.xyz) + dot(q.xyz,vector) * q.xyz + q.w * temp);\n\t\n\tfloat x = quaX + quaX;\n    float y = quaY + quaY;\n    float z = quaZ + quaZ;\n    float wx = quaW * x;\n    float wy = quaW * y;\n    float wz = quaW * z;\n\tfloat xx = quaX * x;\n    float xy = quaX * y;\n\tfloat xz = quaX * z;\n    float yy = quaY * y;\n    float yz = quaY * z;\n    float zz = quaZ * z;\n\n    return vec3(((vector.x * ((1.0 - yy) - zz)) + (vector.y * (xy - wz))) + (vector.z * (xz + wy)),\n                ((vector.x * (xy + wz)) + (vector.y * ((1.0 - xx) - zz))) + (vector.z * (yz - wx)),\n                ((vector.x * (xz - wy)) + (vector.y * (yz + wx))) + (vector.z * ((1.0 - xx) - yy)));\n\t\n}\n\nvec3 rotationByQuaternions(in vec3 v,in vec4 q) \n{\n\treturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n \n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(SIZEOVERLIFETIMECURVE)||defined(SIZEOVERLIFETIMECURVESEPERATE)||defined(SIZEOVERLIFETIMERANDOMCURVES)||defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\nfloat getCurValueFromGradientFloat(in vec2 gradientNumbers[4],in float normalizedAge)\n{\n\tfloat curValue;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientNumber=gradientNumbers[i];\n\t\tfloat key=gradientNumber.x;\n\t\tif(key>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientNumber=gradientNumbers[i-1];\n\t\t\tfloat lastKey=lastGradientNumber.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\tcurValue=mix(lastGradientNumber.y,gradientNumber.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn curValue;\n}\n#endif\n\n#if defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)||defined(ROTATIONOVERLIFETIMECURVE)||defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nfloat getTotalValueFromGradientFloat(in vec2 gradientNumbers[4],in float normalizedAge)\n{\n\tfloat totalValue=0.0;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientNumber=gradientNumbers[i];\n\t\tfloat key=gradientNumber.x;\n\t\tvec2 lastGradientNumber=gradientNumbers[i-1];\n\t\tfloat lastValue=lastGradientNumber.y;\n\t\t\n\t\tif(key>=normalizedAge){\n\t\t\tfloat lastKey=lastGradientNumber.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\ttotalValue+=(lastValue+mix(lastValue,gradientNumber.y,age))/2.0*a_ShapePositionStartLifeTime.w*(normalizedAge-lastKey);\n\t\t\tbreak;\n\t\t}\n\t\telse{\n\t\t\ttotalValue+=(lastValue+gradientNumber.y)/2.0*a_ShapePositionStartLifeTime.w*(key-lastGradientNumber.x);\n\t\t}\n\t}\n\treturn totalValue;\n}\n#endif\n\n#if defined(COLOROVERLIFETIME)||defined(RANDOMCOLOROVERLIFETIME)\nvec4 getColorFromGradient(in vec2 gradientAlphas[4],in vec4 gradientColors[4],in float normalizedAge)\n{\n\tvec4 overTimeColor;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientAlpha=gradientAlphas[i];\n\t\tfloat alphaKey=gradientAlpha.x;\n\t\tif(alphaKey>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientAlpha=gradientAlphas[i-1];\n\t\t\tfloat lastAlphaKey=lastGradientAlpha.x;\n\t\t\tfloat age=(normalizedAge-lastAlphaKey)/(alphaKey-lastAlphaKey);\n\t\t\toverTimeColor.a=mix(lastGradientAlpha.y,gradientAlpha.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec4 gradientColor=gradientColors[i];\n\t\tfloat colorKey=gradientColor.x;\n\t\tif(colorKey>=normalizedAge)\n\t\t{\n\t\t\tvec4 lastGradientColor=gradientColors[i-1];\n\t\t\tfloat lastColorKey=lastGradientColor.x;\n\t\t\tfloat age=(normalizedAge-lastColorKey)/(colorKey-lastColorKey);\n\t\t\toverTimeColor.rgb=mix(gradientColors[i-1].yzw,gradientColor.yzw,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn overTimeColor;\n}\n#endif\n\n\n#if defined(TEXTURESHEETANIMATIONCURVE)||defined(TEXTURESHEETANIMATIONRANDOMCURVE)\nfloat getFrameFromGradient(in vec2 gradientFrames[4],in float normalizedAge)\n{\n\tfloat overTimeFrame;\n\tfor(int i=1;i<4;i++)\n\t{\n\t\tvec2 gradientFrame=gradientFrames[i];\n\t\tfloat key=gradientFrame.x;\n\t\tif(key>=normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientFrame=gradientFrames[i-1];\n\t\t\tfloat lastKey=lastGradientFrame.x;\n\t\t\tfloat age=(normalizedAge-lastKey)/(key-lastKey);\n\t\t\toverTimeFrame=mix(lastGradientFrame.y,gradientFrame.y,age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn floor(overTimeFrame);\n}\n#endif\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nvec3 computeParticleLifeVelocity(in float normalizedAge)\n{\n  vec3 outLifeVelocity;\n  #ifdef VELOCITYOVERLIFETIMECONSTANT\n\t outLifeVelocity=u_VOLVelocityConst; \n  #endif\n  #ifdef VELOCITYOVERLIFETIMECURVE\n     outLifeVelocity= vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\n  #endif\n  #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n\t outLifeVelocity=mix(u_VOLVelocityConst,u_VOLVelocityConstMax,vec3(a_Random1.y,a_Random1.z,a_Random1.w)); \n  #endif\n  #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n     outLifeVelocity=vec3(mix(getCurValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y),\n\t                 mix(getCurValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z),\n\t\t\t\t\t mix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\n  #endif\n\t\t\t\t\t\n  return outLifeVelocity;\n} \n#endif\n\nvec3 computeParticlePosition(in vec3 startVelocity, in vec3 lifeVelocity,in float age,in float normalizedAge,vec3 gravityVelocity,vec4 worldRotation)\n{\n   vec3 startPosition;\n   vec3 lifePosition;\n   #if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t#ifdef VELOCITYOVERLIFETIMECONSTANT\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=lifeVelocity*age;\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMECURVE\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge));\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=lifeVelocity*age;\n\t#endif\n\t#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n\t\t  startPosition=startVelocity*age;\n\t\t  lifePosition=vec3(mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX,normalizedAge),a_Random1.y)\n\t      ,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY,normalizedAge),a_Random1.z)\n\t      ,mix(getTotalValueFromGradientFloat(u_VOLVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ,normalizedAge),a_Random1.w));\n\t#endif\n\t\n\tvec3 finalPosition;\n\tif(u_VOLSpaceType==0){\n\t  if(u_ScalingMode!=2)\n\t   finalPosition =rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition),worldRotation);\n\t  else\n\t   finalPosition =rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition+lifePosition,worldRotation);\n\t}\n\telse{\n\t  if(u_ScalingMode!=2)\n\t    finalPosition = rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation)+lifePosition;\n\t  else\n\t    finalPosition = rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation)+lifePosition;\n\t}\n  #else\n\t startPosition=startVelocity*age;\n\t vec3 finalPosition;\n\t if(u_ScalingMode!=2)\n\t   finalPosition = rotationByQuaternions(u_PositionScale*(a_ShapePositionStartLifeTime.xyz+startPosition),worldRotation);\n\t else\n\t   finalPosition = rotationByQuaternions(u_PositionScale*a_ShapePositionStartLifeTime.xyz+startPosition,worldRotation);\n  #endif\n  \n  if(u_SimulationSpace==0)\n    finalPosition=finalPosition+a_SimulationWorldPostion;\n  else if(u_SimulationSpace==1) \n    finalPosition=finalPosition+u_WorldPosition;\n  \n  finalPosition+=0.5*gravityVelocity*age;\n \n  return  finalPosition;\n}\n\n\nvec4 computeParticleColor(in vec4 color,in float normalizedAge)\n{\n\t#ifdef COLOROVERLIFETIME\n\t  color*=getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge);\n\t#endif\n\t\n\t#ifdef RANDOMCOLOROVERLIFETIME\n\t  color*=mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,u_ColorOverLifeGradientColors,normalizedAge),getColorFromGradient(u_MaxColorOverLifeGradientAlphas,u_MaxColorOverLifeGradientColors,normalizedAge),a_Random0.y);\n\t#endif\n\n    return color;\n}\n\nvec2 computeParticleSizeBillbard(in vec2 size,in float normalizedAge)\n{\n\t#ifdef SIZEOVERLIFETIMECURVE\n\t\tsize*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVES\n\t    size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z); \n\t#endif\n\t#ifdef SIZEOVERLIFETIMECURVESEPERATE\n\t\tsize*=vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge));\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n\t    size*=vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\n\t    ,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z));\n\t#endif\n\treturn size;\n}\n\n#ifdef RENDERMODE_MESH\nvec3 computeParticleSizeMesh(in vec3 size,in float normalizedAge)\n{\n\t#ifdef SIZEOVERLIFETIMECURVE\n\t\tsize*=getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge);\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVES\n\t    size*=mix(getCurValueFromGradientFloat(u_SOLSizeGradient,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMax,normalizedAge),a_Random0.z); \n\t#endif\n\t#ifdef SIZEOVERLIFETIMECURVESEPERATE\n\t\tsize*=vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge));\n\t#endif\n\t#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n\t    size*=vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxX,normalizedAge),a_Random0.z)\n\t    ,mix(getCurValueFromGradientFloat(u_SOLSizeGradientY,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxY,normalizedAge),a_Random0.z)\n\t\t,mix(getCurValueFromGradientFloat(u_SOLSizeGradientZ,normalizedAge),getCurValueFromGradientFloat(u_SOLSizeGradientMaxZ,normalizedAge),a_Random0.z));\n\t#endif\n\treturn size;\n}\n#endif\n\nfloat computeParticleRotationFloat(in float rotation,in float age,in float normalizedAge)\n{ \n\t#ifdef ROTATIONOVERLIFETIME\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConst*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\n\t\t#endif\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConstSeprarate.z*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConstSeprarate.z,u_ROLAngularVelocityConstMaxSeprarate.z,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\n\t\t#endif\n\t#endif\n\treturn rotation;\n}\n\n\n#if defined(RENDERMODE_MESH)&&(defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE))\nvec3 computeParticleRotationVec3(in vec3 rotation,in float age,in float normalizedAge)\n{ \n\t#ifdef ROTATIONOVERLIFETIME\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot=u_ROLAngularVelocityConst*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot=mix(u_ROLAngularVelocityConst,u_ROLAngularVelocityConstMax,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,normalizedAge),a_Random0.w);\n\t\t#endif\n\t#endif\n\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tvec3 ageRot=u_ROLAngularVelocityConstSeprarate*age;\n\t        rotation+=ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation+=vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge));\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tvec3 ageRot=mix(u_ROLAngularVelocityConstSeprarate,u_ROLAngularVelocityConstMaxSeprarate,a_Random0.w)*age;\n\t        rotation+=ageRot;\n\t    #endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation+=vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,normalizedAge),a_Random0.w)\n\t        ,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,normalizedAge),a_Random0.w)\n\t        ,mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,normalizedAge),getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,normalizedAge),a_Random0.w));\n\t\t#endif\n\t#endif\n\treturn rotation;\n}\n#endif\n\nvec2 computeParticleUV(in vec2 uv,in float normalizedAge)\n{ \n\t#ifdef TEXTURESHEETANIMATIONCURVE\n\t\tfloat cycleNormalizedAge=normalizedAge*u_TSACycles;\n\t\tfloat frame=getFrameFromGradient(u_TSAGradientUVs,cycleNormalizedAge-floor(cycleNormalizedAge));\n\t\tfloat totalULength=frame*u_TSASubUVLength.x;\n\t\tfloat floorTotalULength=floor(totalULength);\n\t    uv.x+=totalULength-floorTotalULength;\n\t\tuv.y+=floorTotalULength*u_TSASubUVLength.y;\n    #endif\n\t#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n\t\tfloat cycleNormalizedAge=normalizedAge*u_TSACycles;\n\t\tfloat uvNormalizedAge=cycleNormalizedAge-floor(cycleNormalizedAge);\n\t    float frame=floor(mix(getFrameFromGradient(u_TSAGradientUVs,uvNormalizedAge),getFrameFromGradient(u_TSAMaxGradientUVs,uvNormalizedAge),a_Random1.x));\n\t\tfloat totalULength=frame*u_TSASubUVLength.x;\n\t\tfloat floorTotalULength=floor(totalULength);\n\t    uv.x+=totalULength-floorTotalULength;\n\t\tuv.y+=floorTotalULength*u_TSASubUVLength.y;\n    #endif\n\treturn uv;\n}\n\nvoid main()\n{\n\tfloat age = u_CurrentTime - a_DirectionTime.w;\n\tfloat normalizedAge = age/a_ShapePositionStartLifeTime.w;\n\tvec3 lifeVelocity;\n\tif(normalizedAge<1.0){ \n\tvec3 startVelocity=a_DirectionTime.xyz*a_StartSpeed;\n\t#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t\tlifeVelocity= computeParticleLifeVelocity(normalizedAge);//计算粒子生命周期速度\n\t#endif \n\tvec3 gravityVelocity=u_Gravity*age;\n\t\n\tvec4 worldRotation;\n\tif(u_SimulationSpace==0)\n\t\tworldRotation=a_SimulationWorldRotation;\n\telse\n\t\tworldRotation=u_WorldRotation;\n\t\n\tvec3 center=computeParticlePosition(startVelocity, lifeVelocity, age, normalizedAge,gravityVelocity,worldRotation);//计算粒子位置\n   \n   \n   #ifdef SPHERHBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        vec3 cameraUpVector =normalize(u_CameraUp);//TODO:是否外面归一化\n        vec3 sideVector = normalize(cross(u_CameraDirection,cameraUpVector));\n        vec3 upVector = normalize(cross(sideVector,u_CameraDirection));\n\t    corner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n\t\t#if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tvec3 rotation=vec3(a_StartRotation0.xy,computeParticleRotationFloat(a_StartRotation0.z,age,normalizedAge));\n\t\t\t\tcenter += u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,rotation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n\t\t\t\tfloat c = cos(rot);\n\t\t\t\tfloat s = sin(rot);\n\t\t\t\tmat2 rotation= mat2(c, -s, s, c);\n\t\t\t\tcorner=rotation*corner;\n\t\t\t\tcenter += u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n\t\t\t}\n\t\t#else\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tcenter += u_SizeScale.xzy*rotationByEuler(corner.x*sideVector+corner.y*upVector,a_StartRotation0);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfloat c = cos(a_StartRotation0.x);\n\t\t\t\tfloat s = sin(a_StartRotation0.x);\n\t\t\t\tmat2 rotation= mat2(c, -s, s, c);\n\t\t\t\tcorner=rotation*corner;\n\t\t\t\tcenter += u_SizeScale.xzy*(corner.x*sideVector+corner.y*upVector);\n\t\t\t}\n\t\t#endif\n   #endif\n   \n   #ifdef STRETCHEDBILLBOARD\n\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n\tvec3 velocity;\n\t#if defined(VELOCITYOVERLIFETIMECONSTANT)||defined(VELOCITYOVERLIFETIMECURVE)||defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)||defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    if(u_VOLSpaceType==0)\n\t\t  velocity=rotationByQuaternions(u_SizeScale*(startVelocity+lifeVelocity),worldRotation)+gravityVelocity;\n\t    else\n\t\t  velocity=rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+lifeVelocity+gravityVelocity;\n    #else\n\t    velocity= rotationByQuaternions(u_SizeScale*startVelocity,worldRotation)+gravityVelocity;\n    #endif\t\n\t\tvec3 cameraUpVector = normalize(velocity);\n\t\tvec3 direction = normalize(center-u_CameraPosition);\n        vec3 sideVector = normalize(cross(direction,normalize(velocity)));\n\t\t\n\t\tsideVector=u_SizeScale.xzy*sideVector;\n\t\tcameraUpVector=length(vec3(u_SizeScale.x,0.0,0.0))*cameraUpVector;\n\t\t\n\t    vec2 size=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n\t\t\n\t    const mat2 rotaionZHalfPI=mat2(0.0, -1.0, 1.0, 0.0);\n\t    corner=rotaionZHalfPI*corner;\n\t    corner.y=corner.y-abs(corner.y);\n\t\t\n\t    float speed=length(velocity);//TODO:\n\t    center +=sign(u_SizeScale.x)*(sign(u_StretchedBillboardLengthScale)*size.x*corner.x*sideVector+(speed*u_StretchedBillboardSpeedScale+size.y*u_StretchedBillboardLengthScale)*corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef HORIZONTALBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        const vec3 cameraUpVector=vec3(0.0,0.0,1.0);\n\t    const vec3 sideVector = vec3(-1.0,0.0,0.0);\n\t\t\n\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n        float c = cos(rot);\n        float s = sin(rot);\n        mat2 rotation= mat2(c, -s, s, c);\n\t    corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\n\t\tcorner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n        center +=u_SizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef VERTICALBILLBOARD\n\t\tvec2 corner=a_CornerTextureCoordinate.xy;//Billboard模式z轴无效\n        const vec3 cameraUpVector =vec3(0.0,1.0,0.0);\n        vec3 sideVector = normalize(cross(u_CameraDirection,cameraUpVector));\n\t\t\n\t\tfloat rot = computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n        float c = cos(rot);\n        float s = sin(rot);\n        mat2 rotation= mat2(c, -s, s, c);\n\t    corner=rotation*corner*cos(0.78539816339744830961566084581988);//TODO:临时缩小cos45,不确定U3D原因\n\t\tcorner*=computeParticleSizeBillbard(a_StartSize.xy,normalizedAge);\n        center +=u_SizeScale.xzy*(corner.x*sideVector+ corner.y*cameraUpVector);\n   #endif\n   \n   #ifdef RENDERMODE_MESH\n\t    vec3 size=computeParticleSizeMesh(a_StartSize,normalizedAge);\n\t\t#if defined(ROTATIONOVERLIFETIME)||defined(ROTATIONOVERLIFETIMESEPERATE)\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tvec3 rotation=vec3(a_StartRotation0.xy,-computeParticleRotationFloat(a_StartRotation0.z, age,normalizedAge));\n\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,rotation),worldRotation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t#ifdef ROTATIONOVERLIFETIME\n\t\t\t\t\tfloat angle=computeParticleRotationFloat(a_StartRotation0.x, age,normalizedAge);\n\t\t\t\t\tif(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\n\t\t\t\t\t\tcenter+= (rotationByQuaternions(rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),angle),worldRotation));//已验证\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t#ifdef SHAPE\n\t\t\t\t\t\t\tcenter+= u_SizeScale.xzy*(rotationByQuaternions(rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),angle),worldRotation));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\t\tcenter+=rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle);//已验证\n\t\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\t\tcenter+=rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),angle),worldRotation);//已验证\n\t\t\t\t\t\t#endif\n\t\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t\t\t\t//TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\n\t\t\t\t\tvec3 angle=computeParticleRotationVec3(vec3(0.0,0.0,a_StartRotation0.z), age,normalizedAge);\n\t\t\t\t\tcenter+= (rotationByQuaternions(rotationByEuler(u_SizeScale*a_MeshPosition*size,vec3(angle.x,angle.y,angle.z)),worldRotation));//已验证\n\t\t\t\t#endif\t\n\t\t\t}\n\t\t#else\n\t\t\tif(u_ThreeDStartRotation){\n\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByEuler(a_MeshPosition*size,a_StartRotation0),worldRotation);//已验证\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a_ShapePositionStartLifeTime.x!=0.0||a_ShapePositionStartLifeTime.y!=0.0){\n\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\tcenter+= rotationByAxis(u_SizeScale*a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x);\n\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\tcenter+= (rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,normalize(cross(vec3(0.0,0.0,1.0),vec3(a_ShapePositionStartLifeTime.xy,0.0))),a_StartRotation0.x),worldRotation));//已验证\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t#ifdef SHAPE\n\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\tcenter+= u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x);\n\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,-1.0,0.0),a_StartRotation0.x),worldRotation);\t\n\t\t\t\t\t#else\n\t\t\t\t\t\tif(u_SimulationSpace==0)\n\t\t\t\t\t\t\tcenter+= rotationByAxis(u_SizeScale*a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x);\n\t\t\t\t\t\telse if(u_SimulationSpace==1)\n\t\t\t\t\t\t\tcenter+= rotationByQuaternions(u_SizeScale*rotationByAxis(a_MeshPosition*size,vec3(0.0,0.0,-1.0),a_StartRotation0.x),worldRotation);//已验证\n\t\t\t\t\t#endif\n\t\t\t\t}\n\t\t\t}\n\t\t#endif\n\t\tv_MeshColor=a_MeshColor;\n   #endif\n   \n    gl_Position=u_Projection*u_View*vec4(center,1.0);\n    v_Color = computeParticleColor(a_StartColor, normalizedAge);\n\t#ifdef DIFFUSEMAP\n\t\t#if defined(SPHERHBILLBOARD)||defined(STRETCHEDBILLBOARD)||defined(HORIZONTALBILLBOARD)||defined(VERTICALBILLBOARD)\n\t\t\tv_TextureCoordinate =computeParticleUV(a_CornerTextureCoordinate.zw, normalizedAge);\n\t\t#endif\n\t\t#ifdef RENDERMODE_MESH\n\t\t\tv_TextureCoordinate =computeParticleUV(a_MeshTextureCoordinate, normalizedAge);\n\t\t#endif\n\t\t\n\t\t#ifdef TILINGOFFSET\n\t\t\tv_TextureCoordinate=vec2(v_TextureCoordinate.x,1.0-v_TextureCoordinate.y)*u_TilingOffset.xy+vec2(u_TilingOffset.z,-u_TilingOffset.w);//需要特殊处理\n\t\t\tv_TextureCoordinate=vec2(v_TextureCoordinate.x,1.0-v_TextureCoordinate.y);//需要特殊处理\n\t\t#endif\n\t#endif\n    v_Discard=0.0;\n\t  \n\t#ifdef FOG\n\t\tv_PositionWorld=center;\n\t#endif\n   }\n   else\n\t{\n\t\tv_Discard=1.0;\n\t}\n}\n\n'),
              (e =
                '#ifdef HIGHPRECISION\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n\nvarying float v_Discard;\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\nuniform vec4 u_Tintcolor;\n\n#ifdef RENDERMODE_MESH\n\tvarying vec4 v_MeshColor;\n#endif\n\n#ifdef FOG\n\tvarying vec3 v_PositionWorld;\n\tuniform vec3 u_CameraPosition;\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\t#ifdef ADDTIVEFOG\n\t#else\n\t\tuniform vec3 u_FogColor;\n\t#endif\n#endif\n\n\nvoid main()\n{\t\n\t#ifdef RENDERMODE_MESH\n\t\tgl_FragColor=v_MeshColor;\n\t#else\n\t\tgl_FragColor=vec4(1.0);\t\n\t#endif\n\t\t\n\t#ifdef DIFFUSEMAP\n\t\tif(v_Discard!=0.0)\n\t\t\tdiscard;\n\t\t#ifdef TINTCOLOR\n\t\t\tgl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*u_Tintcolor*2.0*v_Color;\n\t\t#else\n\t\t\tgl_FragColor*=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\t\t#endif\n\t#else\n\t\t#ifdef TINTCOLOR\n\t\t\tgl_FragColor*=u_Tintcolor*2.0*v_Color;\n\t\t#else\n\t\t\tgl_FragColor*=v_Color;\n\t\t#endif\n\t#endif\n\t\n\t#ifdef FOG\n\t\tvec3 toEye=u_CameraPosition-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t\t\n\t\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\t\t#ifdef ADDTIVEFOG\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,vec3(0.0,0.0,0.0),lerpFact);\n\t\t#else\n\t\t\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n\t\t#endif\n\t#endif\n}'),
              (r = ci.add(_, t, e, i, n)),
              (Ji.SHADERDEFINE_DIFFUSEMAP = r.registerMaterialDefine(
                'DIFFUSEMAP'
              )),
              (Ji.SHADERDEFINE_TINTCOLOR = r.registerMaterialDefine(
                'TINTCOLOR'
              )),
              (Ji.SHADERDEFINE_ADDTIVEFOG = r.registerMaterialDefine(
                'ADDTIVEFOG'
              )),
              (Ji.SHADERDEFINE_TILINGOFFSET = r.registerMaterialDefine(
                'TILINGOFFSET'
              )),
              (yn.SHADERDEFINE_RENDERMODE_BILLBOARD = r.registerSpriteDefine(
                'SPHERHBILLBOARD'
              )),
              (yn.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = r.registerSpriteDefine(
                'STRETCHEDBILLBOARD'
              )),
              (yn.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = r.registerSpriteDefine(
                'HORIZONTALBILLBOARD'
              )),
              (yn.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = r.registerSpriteDefine(
                'VERTICALBILLBOARD'
              )),
              (yn.SHADERDEFINE_COLOROVERLIFETIME = r.registerSpriteDefine(
                'COLOROVERLIFETIME'
              )),
              (yn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = r.registerSpriteDefine(
                'RANDOMCOLOROVERLIFETIME'
              )),
              (yn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = r.registerSpriteDefine(
                'VELOCITYOVERLIFETIMECONSTANT'
              )),
              (yn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = r.registerSpriteDefine(
                'VELOCITYOVERLIFETIMECURVE'
              )),
              (yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = r.registerSpriteDefine(
                'VELOCITYOVERLIFETIMERANDOMCONSTANT'
              )),
              (yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = r.registerSpriteDefine(
                'VELOCITYOVERLIFETIMERANDOMCURVE'
              )),
              (yn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = r.registerSpriteDefine(
                'TEXTURESHEETANIMATIONCURVE'
              )),
              (yn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = r.registerSpriteDefine(
                'TEXTURESHEETANIMATIONRANDOMCURVE'
              )),
              (yn.SHADERDEFINE_ROTATIONOVERLIFETIME = r.registerSpriteDefine(
                'ROTATIONOVERLIFETIME'
              )),
              (yn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = r.registerSpriteDefine(
                'ROTATIONOVERLIFETIMESEPERATE'
              )),
              (yn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = r.registerSpriteDefine(
                'ROTATIONOVERLIFETIMECONSTANT'
              )),
              (yn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = r.registerSpriteDefine(
                'ROTATIONOVERLIFETIMECURVE'
              )),
              (yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = r.registerSpriteDefine(
                'ROTATIONOVERLIFETIMERANDOMCONSTANTS'
              )),
              (yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = r.registerSpriteDefine(
                'ROTATIONOVERLIFETIMERANDOMCURVES'
              )),
              (yn.SHADERDEFINE_SIZEOVERLIFETIMECURVE = r.registerSpriteDefine(
                'SIZEOVERLIFETIMECURVE'
              )),
              (yn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = r.registerSpriteDefine(
                'SIZEOVERLIFETIMECURVESEPERATE'
              )),
              (yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = r.registerSpriteDefine(
                'SIZEOVERLIFETIMERANDOMCURVES'
              )),
              (yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = r.registerSpriteDefine(
                'SIZEOVERLIFETIMERANDOMCURVESSEPERATE'
              )),
              (yn.SHADERDEFINE_RENDERMODE_MESH = r.registerSpriteDefine(
                'RENDERMODE_MESH'
              )),
              (yn.SHADERDEFINE_SHAPE = r.registerSpriteDefine('SHAPE')),
              (i = { a_Position: 0, a_Texcoord0: 2, a_Time: 33 }),
              (n = {
                u_Texture: [1, 1],
                u_Albedo: [2, 1],
                u_Color: [3, 1],
                u_CurrentTime: [2, 2],
                u_Duration: [3, 2],
                u_MvpMatrix: [1, 2]
              });
            var d = Oi.nameKey.add('GLITTER');
            (t =
              'attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\nattribute float a_Time;\n\nuniform mat4 u_MvpMatrix;\nuniform  float u_CurrentTime;\nuniform  vec4 u_Color;\nuniform float u_Duration;\n\nvarying vec2 v_Texcoord;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\n  gl_Position = u_MvpMatrix * a_Position;\n  \n  float age = u_CurrentTime-a_Time;\n  float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   \n  v_Texcoord=a_Texcoord0;\n  \n  v_Color=u_Color;\n  v_Color.a*=1.0-normalizedAge;\n}\n'),
              (e =
                '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nuniform vec4 u_Albedo;\nuniform sampler2D u_Texture;\n\nvarying vec2 v_Texcoord;\nvarying vec4 v_Color;\n\n\nvoid main()\n{\t\n  gl_FragColor=texture2D(u_Texture, v_Texcoord)*v_Color;\n  gl_FragColor=gl_FragColor*u_Albedo;\n}\n\n'),
              (r = ci.add(d, t, e, i, n)),
              (i = { a_Position: 0 }),
              (n = {
                u_Intensity: [1, 1],
                u_AlphaBlending: [2, 1],
                u_CubeTexture: [3, 1],
                u_MvpMatrix: [4, 3]
              });
            var f = Oi.nameKey.add('SkyBox');
            (t =
              'attribute vec4 a_Position;\nuniform mat4 u_MvpMatrix;\nvarying vec3 v_Texcoord;\n\n\nvoid main()\n{\n  gl_Position = (u_MvpMatrix*a_Position).xyww;\n  v_Texcoord=a_Position.xyz;\n}\n'),
              (e =
                '#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform float u_Intensity;\nuniform float u_AlphaBlending;\nuniform samplerCube u_CubeTexture;\n\nvarying vec3 v_Texcoord;\n\n\nvoid main()\n{\t\n  gl_FragColor=vec4(textureCube(u_CubeTexture, v_Texcoord).rgb*u_Intensity,u_AlphaBlending);\n}\n\n'),
              ci.add(f, t, e, i, n),
              (i = { a_Position: 0, a_Texcoord0: 2 }),
              (n = {
                u_Intensity: [1, 1],
                u_AlphaBlending: [2, 1],
                u_texture: [3, 1],
                u_MvpMatrix: [4, 3]
              });
            var p = Oi.nameKey.add('SkyDome');
            (t =
              'attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\nuniform mat4 u_MvpMatrix;\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\n  gl_Position = (u_MvpMatrix*a_Position).xyww;\n  v_Texcoord = a_Texcoord0;\n}\n'),
              (e =
                '#ifdef HIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform float u_Intensity;\nuniform float u_AlphaBlending;\nuniform sampler2D u_texture;\n\nvarying vec2 v_Texcoord;\n\n\nvoid main()\n{\t\n  gl_FragColor=vec4(texture2D(u_texture, v_Texcoord).rgb*u_Intensity,u_AlphaBlending);\n}\n\n'),
              ci.add(p, t, e, i, n),
              (i = {
                a_Position: 0,
                a_Normal: 3,
                a_Texcoord0: 2,
                a_Texcoord1: 15
              }),
              (n = {
                u_MvpMatrix: [1, 2],
                u_WorldMat: [0, 2],
                u_LightmapScaleOffset: [2, 2],
                u_LightMap: [3, 2],
                u_SplatAlphaTexture: [0, 1],
                u_NormalTexture: [1, 1],
                u_DiffuseTexture1: [2, 1],
                u_DiffuseTexture2: [3, 1],
                u_DiffuseTexture3: [4, 1],
                u_DiffuseTexture4: [5, 1],
                u_DiffuseScale1: [6, 1],
                u_DiffuseScale2: [7, 1],
                u_DiffuseScale3: [8, 1],
                u_DiffuseScale4: [9, 1],
                u_MaterialDiffuse: [11, 1],
                u_MaterialAmbient: [10, 1],
                u_MaterialSpecular: [12, 1],
                u_CameraPos: [0, 3],
                u_FogStart: [1, 4],
                u_FogRange: [2, 4],
                u_FogColor: [0, 4],
                'u_DirectionLight.Direction': [3, 4],
                'u_DirectionLight.Diffuse': [4, 4],
                'u_PointLight.Position': [5, 4],
                'u_PointLight.Range': [6, 4],
                'u_PointLight.Attenuation': [7, 4],
                'u_PointLight.Diffuse': [8, 4],
                'u_SpotLight.Position': [9, 4],
                'u_SpotLight.Direction': [10, 4],
                'u_SpotLight.Range': [12, 4],
                'u_SpotLight.Spot': [11, 4],
                'u_SpotLight.Attenuation': [13, 4],
                'u_SpotLight.Diffuse': [14, 4],
                u_AmbientColor: [21, 4],
                u_shadowMap1: [18, 4],
                u_shadowMap2: [19, 4],
                u_shadowMap3: [20, 4],
                u_shadowPSSMDistance: [15, 4],
                u_lightShadowVP: [16, 4],
                u_shadowPCFoffset: [17, 4]
              });
            var m = Oi.nameKey.add('Terrain');
            (t =
              'attribute vec4 a_Position;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\nvarying float v_posViewZ;\n#ifdef RECEIVESHADOW\n  #ifdef SHADOWMAP_PSSM1 \n  varying vec4 v_lightMVPPos;\n  uniform mat4 u_lightShadowVP[4];\n  #endif\n#endif\n\n#ifdef LIGHTMAP\n\tuniform vec4 u_LightmapScaleOffset;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nattribute vec2 a_Texcoord0;\nattribute vec2 a_Texcoord1;\nvarying vec2 v_Texcoord0;\nvarying vec2 v_Texcoord1;\nuniform mat4 u_MvpMatrix;\n\nvoid main()\n{\n\tgl_Position = u_MvpMatrix * a_Position;\n\tv_Texcoord0=a_Texcoord0;\n\tv_Texcoord1=a_Texcoord1;\n\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tv_Normal=a_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n#endif\n\n#ifdef LIGHTMAP\n\t//这个地方使用a_Normal 并不是真的代表normal，其实凑巧法线图的uv正好是符合 light_Map的UV\n\tv_LightMapUV=vec2(a_Normal.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,(a_Normal.y-1.0)*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n#endif\n\n#ifdef RECEIVESHADOW\n\tv_posViewZ = gl_Position.w;\n\t#ifdef SHADOWMAP_PSSM1\n\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t#endif\n#endif\n\n}'),
              (e =
                '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\tuniform vec3 u_MaterialDiffuse;\n\tuniform vec4 u_MaterialSpecular;\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_Normal;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tuniform vec3 u_MaterialAmbient;\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\tuniform vec3 u_FogColor;\n#endif\n\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\nuniform sampler2D u_SplatAlphaTexture;\nuniform sampler2D u_NormalTexture;\nuniform sampler2D u_DiffuseTexture1;\nuniform sampler2D u_DiffuseTexture2;\nuniform sampler2D u_DiffuseTexture3;\nuniform sampler2D u_DiffuseTexture4;\nuniform vec2 u_DiffuseScale1;\nuniform vec2 u_DiffuseScale2;\nuniform vec2 u_DiffuseScale3;\nuniform vec2 u_DiffuseScale4;\nvarying vec2 v_Texcoord0;\nvarying vec2 v_Texcoord1;\n\n#ifdef LIGHTMAP\n\tuniform sampler2D u_LightMap;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nvoid main()\n{\n#ifdef DETAIL_NUM1\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz;\n#endif\n#ifdef DETAIL_NUM2\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-splatAlpha.r) + color2.xyz * splatAlpha.r;\n#endif\n#ifdef DETAIL_NUM3\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord1/u_DiffuseScale3);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-(splatAlpha.r+splatAlpha.g)) + color2.xyz * splatAlpha.r + color3.xyz * splatAlpha.g;\n#endif\n#ifdef DETAIL_NUM4\n\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord1/u_DiffuseScale1);\n\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord1/u_DiffuseScale2);\n\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord1/u_DiffuseScale3);\n\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord1/u_DiffuseScale4);\n\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\tgl_FragColor.xyz = color1.xyz * (1.0-(splatAlpha.r+splatAlpha.g+splatAlpha.b))+ color2.xyz * splatAlpha.r + color3.xyz * splatAlpha.g + color4.xyz * splatAlpha.b;\n#endif\n\tgl_FragColor.w = splatAlpha.a;\n\t\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n    vec3 normal = texture2D(u_NormalTexture,v_Normal.xy).xyz;\n\tnormal = normal*2.0 - vec3(1.0);\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t#else\n\t\t#if defined(RECEIVESHADOW)\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t\t#endif\n\t#endif\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular * shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular, gl_FragColor.a);\n\t#endif\n#endif\n\n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\n');
            var g = ci.add(m, t, e, i, n);
            (Wi.SHADERDEFINE_DETAIL_NUM1 = g.registerMaterialDefine(
              'DETAIL_NUM1'
            )),
              (Wi.SHADERDEFINE_DETAIL_NUM2 = g.registerMaterialDefine(
                'DETAIL_NUM2'
              )),
              (Wi.SHADERDEFINE_DETAIL_NUM4 = g.registerMaterialDefine(
                'DETAIL_NUM4'
              )),
              (Wi.SHADERDEFINE_DETAIL_NUM3 = g.registerMaterialDefine(
                'DETAIL_NUM3'
              )),
              (i = { a_Position: 0, a_Normal: 3, a_Texcoord0: 2 }),
              (n = {
                u_MvpMatrix: [1, 2],
                u_WorldMat: [0, 2],
                u_CameraPos: [0, 3],
                u_LightmapScaleOffset: [2, 2],
                u_LightMap: [3, 2],
                u_SplatAlphaTexture: [0, 1],
                u_DiffuseTexture1: [1, 1],
                u_DiffuseTexture2: [2, 1],
                u_DiffuseTexture3: [3, 1],
                u_DiffuseTexture4: [4, 1],
                u_DiffuseTexture5: [5, 1],
                u_DiffuseScaleOffset1: [6, 1],
                u_DiffuseScaleOffset2: [7, 1],
                u_DiffuseScaleOffset3: [8, 1],
                u_DiffuseScaleOffset4: [9, 1],
                u_DiffuseScaleOffset5: [10, 1],
                u_MaterialAlbedo: [14, 1],
                u_MaterialDiffuse: [12, 1],
                u_MaterialAmbient: [11, 1],
                u_MaterialSpecular: [13, 1],
                u_FogStart: [1, 4],
                u_FogRange: [2, 4],
                u_FogColor: [0, 4],
                'u_DirectionLight.Direction': [3, 4],
                'u_DirectionLight.Diffuse': [4, 4],
                'u_PointLight.Position': [5, 4],
                'u_PointLight.Range': [6, 4],
                'u_PointLight.Attenuation': [7, 4],
                'u_PointLight.Diffuse': [8, 4],
                'u_SpotLight.Position': [9, 4],
                'u_SpotLight.Direction': [10, 4],
                'u_SpotLight.Range': [12, 4],
                'u_SpotLight.Spot': [11, 4],
                'u_SpotLight.Attenuation': [13, 4],
                'u_SpotLight.Diffuse': [14, 4],
                u_AmbientColor: [21, 4],
                u_shadowMap1: [18, 4],
                u_shadowMap2: [19, 4],
                u_shadowMap3: [20, 4],
                u_shadowPSSMDistance: [15, 4],
                u_lightShadowVP: [16, 4],
                u_shadowPCFoffset: [17, 4]
              });
            var y = Oi.nameKey.add('ExtendTerrain');
            (t =
              'attribute vec4 a_Position;\nattribute vec2 a_Texcoord0;\n\nuniform mat4 u_MvpMatrix;\n\nvarying vec2 v_Texcoord0;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(LIGHTMAP)\n\tattribute vec3 a_Normal;\n\tvarying vec3 v_Normal;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\tuniform mat4 u_WorldMat;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef LIGHTMAP\n\tvarying vec2 v_LightMapUV;\n\tuniform vec4 u_LightmapScaleOffset;\n#endif\n\n#ifdef RECEIVESHADOW\n\tvarying float v_posViewZ;\n\t#ifdef SHADOWMAP_PSSM1 \n\t\tvarying vec4 v_lightMVPPos;\n\t\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n#endif\n\nvoid main()\n{\n\tgl_Position = u_MvpMatrix * a_Position;\n  \n\tv_Texcoord0 = a_Texcoord0;\n  \n\t#ifdef LIGHTMAP\n\t\tv_LightMapUV = vec2(a_Texcoord0.x*u_LightmapScaleOffset.x+u_LightmapScaleOffset.z,(a_Texcoord0.y-1.0)*u_LightmapScaleOffset.y+u_LightmapScaleOffset.w);\n\t#endif\n  \n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tv_Normal = a_Normal;\n\t#endif\n\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)||(defined(RECEIVESHADOW)&&defined(SHADOWMAP_PSSM1))\n\t\tv_PositionWorld=(u_WorldMat*a_Position).xyz;\n\t#endif\n\n\t#ifdef RECEIVESHADOW\n\t\tv_posViewZ = gl_Position.w;\n\t\t#ifdef SHADOWMAP_PSSM1\n\t\t\tv_lightMVPPos = u_lightShadowVP[0] * vec4(v_PositionWorld,1.0);\n\t\t#endif\n\t#endif\n}'),
              (e =
                '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\n#include "LightHelper.glsl";\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tuniform vec3 u_MaterialDiffuse;\n\tuniform vec4 u_MaterialSpecular;\n\tuniform vec3 u_CameraPos;\n\tvarying vec3 v_Normal;\n\tvarying vec3 v_PositionWorld;\n#endif\n\n#ifdef FOG\n\tuniform float u_FogStart;\n\tuniform float u_FogRange;\n\tuniform vec3 u_FogColor;\n#endif\n\n\n#ifdef DIRECTIONLIGHT\n\tuniform DirectionLight u_DirectionLight;\n#endif\n\n#ifdef POINTLIGHT\n\tuniform PointLight u_PointLight;\n#endif\n\n#ifdef SPOTLIGHT\n\tuniform SpotLight u_SpotLight;\n#endif\n\nuniform vec3 u_AmbientColor;\n\n#include "ShadowHelper.glsl"\n#ifdef RECEIVESHADOW\n\t#if defined(SHADOWMAP_PSSM2)||defined(SHADOWMAP_PSSM3)\n\tuniform mat4 u_lightShadowVP[4];\n\t#endif\n\t#ifdef SHADOWMAP_PSSM1 \n\tvarying vec4 v_lightMVPPos;\n\t#endif\n#endif\nvarying float v_posViewZ;\n\n\nuniform sampler2D u_SplatAlphaTexture;\n\nuniform sampler2D u_DiffuseTexture1;\nuniform sampler2D u_DiffuseTexture2;\nuniform sampler2D u_DiffuseTexture3;\nuniform sampler2D u_DiffuseTexture4;\nuniform sampler2D u_DiffuseTexture5;\n\nuniform vec4 u_DiffuseScaleOffset1;\nuniform vec4 u_DiffuseScaleOffset2;\nuniform vec4 u_DiffuseScaleOffset3;\nuniform vec4 u_DiffuseScaleOffset4;\nuniform vec4 u_DiffuseScaleOffset5;\n\nvarying vec2 v_Texcoord0;\n\nuniform vec3 u_MaterialAmbient;\nuniform vec4 u_MaterialAlbedo;\n\n#ifdef LIGHTMAP\n\tuniform sampler2D u_LightMap;\n\tvarying vec2 v_LightMapUV;\n#endif\n\nvoid main()\n{\n\t#ifdef ExtendTerrain_DETAIL_NUM1\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r;\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM2\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r + color2.xyz * (1.0 - splatAlpha.r);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM3\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * (1.0 - splatAlpha.r - splatAlpha.g);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM4\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord0 * u_DiffuseScaleOffset4.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * splatAlpha.b + color4.xyz * (1.0 - splatAlpha.r - splatAlpha.g - splatAlpha.b);\n\t#endif\n\t#ifdef ExtendTerrain_DETAIL_NUM5\n\t\tvec4 splatAlpha = texture2D(u_SplatAlphaTexture, v_Texcoord0);\n\t\tvec4 color1 = texture2D(u_DiffuseTexture1, v_Texcoord0 * u_DiffuseScaleOffset1.xy);\n\t\tvec4 color2 = texture2D(u_DiffuseTexture2, v_Texcoord0 * u_DiffuseScaleOffset2.xy);\n\t\tvec4 color3 = texture2D(u_DiffuseTexture3, v_Texcoord0 * u_DiffuseScaleOffset3.xy);\n\t\tvec4 color4 = texture2D(u_DiffuseTexture4, v_Texcoord0 * u_DiffuseScaleOffset4.xy);\n\t\tvec4 color5 = texture2D(u_DiffuseTexture5, v_Texcoord0 * u_DiffuseScaleOffset5.xy);\n\t\tgl_FragColor.xyz = color1.xyz * splatAlpha.r  + color2.xyz * splatAlpha.g + color3.xyz * splatAlpha.b + color4.xyz * splatAlpha.a + color5.xyz * (1.0 - splatAlpha.r - splatAlpha.g - splatAlpha.b - splatAlpha.a);\n\t#endif\n\t\tgl_FragColor.w = splatAlpha.a;\n\t\t\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n    vec3 normal = v_Normal;\n\tvec3 diffuse = vec3(0.0);\n\tvec3 ambient = vec3(0.0);\n\tvec3 specular= vec3(0.0);\n\tvec3 dif, amb, spe;\n#endif\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)||defined(FOG)\n\tvec3 toEye;\n\t#ifdef FOG\n\t\ttoEye=u_CameraPos-v_PositionWorld;\n\t\tfloat toEyeLength=length(toEye);\n\t\ttoEye/=toEyeLength;\n\t#else\n\t\ttoEye=normalize(u_CameraPos-v_PositionWorld);\n\t#endif\n#endif\n\n#ifdef DIRECTIONLIGHT\n\tcomputeDirectionLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_DirectionLight,u_AmbientColor,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n \n#ifdef POINTLIGHT\n\tcomputePointLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_PointLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef SPOTLIGHT\n\tComputeSpotLight(u_MaterialDiffuse,u_MaterialAmbient,u_MaterialSpecular,u_SpotLight,u_AmbientColor,v_PositionWorld,normal,toEye, dif, amb, spe);\n\tdiffuse+=dif;\n\tambient+=amb;\n\tspecular+=spe;\n#endif\n\n#ifdef RECEIVESHADOW\n\tfloat shadowValue = 1.0;\n\t#ifdef SHADOWMAP_PSSM3\n\t\tshadowValue = getShadowPSSM3( u_shadowMap1,u_shadowMap2,u_shadowMap3,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif\n\t#ifdef SHADOWMAP_PSSM2\n\t\tshadowValue = getShadowPSSM2( u_shadowMap1,u_shadowMap2,u_lightShadowVP,u_shadowPSSMDistance,u_shadowPCFoffset,v_PositionWorld,v_posViewZ,0.001);\n\t#endif \n\t#ifdef SHADOWMAP_PSSM1\n\t\tshadowValue = getShadowPSSM1( u_shadowMap1,v_lightMVPPos,u_shadowPSSMDistance,u_shadowPCFoffset,v_posViewZ,0.001);\n\t#endif\n#endif\n\n#ifdef LIGHTMAP\n\t#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t#else\n\t\t#if defined(RECEIVESHADOW)\t\t\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient+texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue);\n\t\t\t//vec3 tColor= u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb * shadowValue + mix(vec3(0.15,0.15,0.15),vec3(0.0),shadowValue);\n\t\t\t//gl_FragColor.rgb*=tColor;\n\t\t#else\n\t\t\tgl_FragColor.rgb=gl_FragColor.rgb*(u_MaterialAmbient + texture2D(u_LightMap, v_LightMapUV).rgb);\n\t\t#endif\n\t#endif\n#endif\n\ngl_FragColor=gl_FragColor*u_MaterialAlbedo;\n\n#if defined(DIRECTIONLIGHT)||defined(POINTLIGHT)||defined(SPOTLIGHT)\n\t#ifdef RECEIVESHADOW\n\t\tgl_FragColor = vec4( gl_FragColor.rgb*(ambient + diffuse*shadowValue) + specular * shadowValue,gl_FragColor.a);\n\t#else\n\t\tgl_FragColor =vec4( gl_FragColor.rgb*(ambient + diffuse) + specular, gl_FragColor.a);\n\t#endif\n#endif\n\n#ifdef FOG\n\tfloat lerpFact=clamp((toEyeLength-u_FogStart)/u_FogRange,0.0,1.0);\n\tgl_FragColor.rgb=mix(gl_FragColor.rgb,u_FogColor,lerpFact);\n#endif\n}\n\n\n\n\n\n');
            var v = ci.add(y, t, e, i, n);
            v.addSpriteDefines(_n.shaderDefines),
              v.addMaterialDefines(Vi.shaderDefines),
              (i = {
                a_Position: 0,
                a_OffsetVector: 41,
                a_Texcoord0X: 38,
                a_Texcoord0Y: 40,
                a_BirthTime: 33
              }),
              (n = {
                u_MvpMatrix: [1, 2],
                u_VMatrix: [1, 3],
                u_PMatrix: [2, 3],
                u_TilingOffset: [3, 1],
                u_MainTexture: [1, 1],
                u_MainColor: [2, 1],
                u_CurTime: [3, 2],
                u_LifeTime: [4, 2],
                u_WidthCurve: [5, 2],
                u_WidthCurveKeyLength: [6, 2],
                u_GradientColorkey: [7, 2],
                u_GradientAlphakey: [8, 2]
              });
            var b = Oi.nameKey.add('Trail');
            (t =
              'attribute vec3 a_Position;\nattribute vec3 a_OffsetVector;\nattribute vec4 a_Color;\nattribute float a_Texcoord0X;\nattribute float a_Texcoord0Y;\nattribute float a_BirthTime;\n\nuniform mat4 u_VMatrix;\nuniform mat4 u_PMatrix;\n\nuniform vec4 u_TilingOffset;\n\nuniform float u_CurTime;\nuniform float u_LifeTime;\nuniform vec4 u_WidthCurve[10];\nuniform int u_WidthCurveKeyLength;\n\nuniform vec4 u_GradientColorkey[10];\nuniform vec2 u_GradientAlphakey[10];\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nfloat hermiteInterpolate(float t, float outTangent, float inTangent, float duration, float value1, float value2)\n{\n\tfloat t2 = t * t;\n\tfloat t3 = t2 * t;\n\tfloat a = 2.0 * t3 - 3.0 * t2 + 1.0;\n\tfloat b = t3 - 2.0 * t2 + t;\n\tfloat c = t3 - t2;\n\tfloat d = -2.0 * t3 + 3.0 * t2;\n\treturn a * value1 + b * outTangent * duration + c * inTangent * duration + d * value2;\n}\n\nfloat getCurWidth(in float normalizeTime)\n{\n\tif(normalizeTime == 0.0){\n\t\treturn u_WidthCurve[0].w;\n\t}\n\telse if(normalizeTime >= 1.0){\n\t\treturn u_WidthCurve[u_WidthCurveKeyLength - 1].w;\n\t}\n\telse{\n\t\tfor(int i = 0; i < 10; i ++ )\n\t\t{\n\t\t\tif(normalizeTime == u_WidthCurve[i].x)\n\t\t\t{\n\t\t\t\treturn u_WidthCurve[i].w;\n\t\t\t}\n\t\t\t\n\t\t\tvec4 lastFrame = u_WidthCurve[i];\n\t\t\tvec4 nextFrame = u_WidthCurve[i + 1];\n\t\t\tif(normalizeTime > lastFrame.x && normalizeTime < nextFrame.x)\n\t\t\t{\n\t\t\t\tfloat duration = nextFrame.x - lastFrame.x;\n\t\t\t\tfloat t = (normalizeTime - lastFrame.x) / duration;\n\t\t\t\tfloat outTangent = lastFrame.z;\n\t\t\t\tfloat inTangent = nextFrame.y;\n\t\t\t\tfloat value1 = lastFrame.w;\n\t\t\t\tfloat value2 = nextFrame.w;\n\t\t\t\treturn hermiteInterpolate(t, outTangent, inTangent, duration, value1, value2);\n\t\t\t}\n\t\t}\t\n\t}\n}\t\n\nvec4 getColorFromGradientByBlend(in vec4 gradientColors[10], in vec2 gradientAlphas[10], in float normalizeTime)\n{\n\tvec4 color;\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec4 gradientColor = gradientColors[i];\n\t\tfloat colorKey = gradientColor.w;\n\t\tif(colorKey >= normalizeTime)\n\t\t{\n\t\t\tvec4 lastGradientColor = gradientColors[i-1];\n\t\t\tfloat lastColorKey = lastGradientColor.w;\n\t\t\tfloat age = (normalizeTime - lastColorKey) / (colorKey - lastColorKey);\n\t\t\tcolor.rgb = mix(gradientColors[i-1].xyz, gradientColor.xyz, age);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec2 gradientAlpha = gradientAlphas[i];\n\t\tfloat alphaKey = gradientAlpha.y;\n\t\tif(alphaKey >= normalizeTime)\n\t\t{\n\t\t\tvec2 lastGradientAlpha = gradientAlphas[i-1];\n\t\t\tfloat lastAlphaKey = lastGradientAlpha.y;\n\t\t\tfloat age = (normalizeTime - lastAlphaKey) / (alphaKey - lastAlphaKey);\n\t\t\tcolor.a = mix(lastGradientAlpha.x, gradientAlpha.x, age);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn color;\n}\n\nvec4 getColorFromGradientByFixed(in vec4 gradientColors[10], in vec2 gradientAlphas[10], in float normalizeTime)\n{\n\tvec4 color;\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec4 gradientColor = gradientColors[i];\n\t\tif(gradientColor.w >= normalizeTime)\n\t\t{\n\t\t\tcolor.rgb = gradientColor.xyz;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1; i < 10; i++)\n\t{\n\t\tvec2 gradientAlpha = gradientAlphas[i];\n\t\tif(gradientAlpha.y >= normalizeTime)\n\t\t{\n\t\t\tcolor.a = gradientAlpha.x;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn color;\n}\n\nvoid main()\n{\n\tfloat normalizeTime = (u_CurTime - a_BirthTime) / u_LifeTime;\n\t\n\tgl_Position = u_PMatrix * u_VMatrix * vec4(a_Position + a_OffsetVector * getCurWidth(normalizeTime),1.0);\n\t\n\t#ifdef TILINGOFFSET\n\t\tv_Texcoord0 = (vec2(a_Texcoord0X, a_Texcoord0Y) * u_TilingOffset.xy) + u_TilingOffset.zw;\n\t#else\n\t\tv_Texcoord0 = vec2(a_Texcoord0X, a_Texcoord0Y);\n\t#endif\n\t\n\t#ifdef GRADIENTMODE_BLEND\n\t\tv_Color = getColorFromGradientByBlend(u_GradientColorkey, u_GradientAlphakey, normalizeTime);\n\t#else\n\t\tv_Color = getColorFromGradientByFixed(u_GradientColorkey, u_GradientAlphakey, normalizeTime);\n\t#endif\n}\n\n\n\n'),
              (e =
                '#ifdef HIGHPRECISION\n\tprecision highp float;\n#else\n\tprecision mediump float;\n#endif\n\nuniform sampler2D u_MainTexture;\nuniform vec4 u_MainColor;\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nvoid main()\n{\t\n\tvec4 color = 2.0 * u_MainColor * v_Color;\n\t#ifdef DIFFUSETEXTURE\n\t\tvec4 mainTextureColor = texture2D(u_MainTexture, v_Texcoord0);\n\t\tcolor *= mainTextureColor;\n\t#endif\n\tgl_FragColor = color;\n}\n\n');
            var w = ci.add(b, t, e, i, n);
            (Ki.SHADERDEFINE_DIFFUSETEXTURE = w.registerMaterialDefine(
              'DIFFUSETEXTURE'
            )),
              (Ki.SHADERDEFINE_TILINGOFFSET = w.registerSpriteDefine(
                'TILINGOFFSET'
              )),
              (bn.SHADERDEFINE_GRADIENTMODE_BLEND = w.registerSpriteDefine(
                'GRADIENTMODE_BLEND'
              ));
          }),
          t
        );
      })(),
      Fe = (function() {
        function t() {
          (this._data = null), (this._data = []);
        }
        a(t, 'laya.d3.shader.ValusArray');
        var e = t.prototype;
        return (
          (e.setValue = function(t, e) {
            this._data[t] = e;
          }),
          r(0, e, 'data', function() {
            return this._data;
          }),
          t
        );
      })(),
      He = (function() {
        function t() {
          (this._currentPSSM = -1),
            (this._numberOfPSSM = 3),
            (this._maxDistance = 200),
            (this._ratioOfDistance = 1 / this._numberOfPSSM),
            (this._statesDirty = !0),
            (this._lightCulling = null),
            (this._renderTarget = null),
            (this._lightVPMatrix = null),
            (this._lightCameras = null),
            (this._shadowQuenes = null),
            (this._shadowMapTextureSize = 1024),
            (this._scene = null),
            (this._PCFType = 0),
            (this._shaderValueLightVP = null),
            (this._shaderValueVPs = null),
            (this._spiltDistance = new Array(4)),
            (this._globalParallelLightDir = new Re(0, -1, 0)),
            (this._boundingSphere = new Array(4)),
            (this._boundingBox = new Array(4)),
            (this._frustumPos = new Array(16)),
            (this._uniformDistance = new Array(4)),
            (this._logDistance = new Array(4)),
            (this._dimension = new Array(4)),
            (this._tempLookAt3 = new Re()),
            (this._tempLookAt4 = new Be()),
            (this._tempValue = new Be()),
            (this._tempPos = new Re()),
            (this._tempLightUp = new Re()),
            (this._tempMin = new Be()),
            (this._tempMax = new Be()),
            (this._tempMatrix44 = new Te()),
            (this._splitFrustumCulling = new we(Te.DEFAULT)),
            (this._tempScaleMatrix44 = new Te()),
            (this._shadowPCFOffset = new Ne(1 / 1024, 1 / 1024)),
            (this._shaderValueDistance = new Be());
          var t = 0;
          for (t = 0; t < this._spiltDistance.length; t++)
            this._spiltDistance[t] = 0;
          for (t = 0; t < this._dimension.length; t++)
            this._dimension[t] = new Ne();
          for (t = 0; t < this._frustumPos.length; t++)
            this._frustumPos[t] = new Re();
          for (t = 0; t < this._boundingBox.length; t++)
            this._boundingBox[t] = new be(new Re(), new Re());
          for (t = 0; t < this._boundingSphere.length; t++)
            this._boundingSphere[t] = new xe(new Re(), 0);
          Te.createScaling(new Re(0.5, 0.5, 1), this._tempScaleMatrix44),
            (this._tempScaleMatrix44.elements[12] = 0.5),
            (this._tempScaleMatrix44.elements[13] = 0.5);
        }
        a(t, 'laya.d3.shadowMap.ParallelSplitShadowMap');
        var e = t.prototype;
        return (
          (e.setInfo = function(t, e, i, n, a, r) {
            a > 3 && (this._numberOfPSSM = 3),
              (this._scene = t),
              (this._maxDistance = e),
              (this.PSSMNum = a),
              (this._globalParallelLightDir = i),
              (this._ratioOfDistance = 1 / this._numberOfPSSM);
            for (var s = 0; s < this._spiltDistance.length; s++)
              this._spiltDistance[s] = 0;
            (this._shadowMapTextureSize = n),
              (this._shadowPCFOffset.x = 1 / this._shadowMapTextureSize),
              (this._shadowPCFOffset.y = 1 / this._shadowMapTextureSize),
              this.setPCFType(r),
              (this._statesDirty = !0);
          }),
          (e.setPCFType = function(t) {
            switch (((this._PCFType = t), this._PCFType)) {
              case 0:
                this._scene.addShaderDefine(
                  laya.d3.shadowMap.ParallelSplitShadowMap
                    .SHADERDEFINE_SHADOW_PCF_NO
                ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF1
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF2
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF3
                  );
                break;
              case 1:
                this._scene.addShaderDefine(
                  laya.d3.shadowMap.ParallelSplitShadowMap
                    .SHADERDEFINE_SHADOW_PCF1
                ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF_NO
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF2
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF3
                  );
                break;
              case 2:
                this._scene.addShaderDefine(
                  laya.d3.shadowMap.ParallelSplitShadowMap
                    .SHADERDEFINE_SHADOW_PCF2
                ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF_NO
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF1
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF3
                  );
                break;
              case 3:
                this._scene.addShaderDefine(
                  laya.d3.shadowMap.ParallelSplitShadowMap
                    .SHADERDEFINE_SHADOW_PCF3
                ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF_NO
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF1
                  ),
                  this._scene.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PCF2
                  );
            }
          }),
          (e.getPCFType = function() {
            return this._PCFType;
          }),
          (e.setFarDistance = function(t) {
            this._maxDistance != t &&
              ((this._maxDistance = t), (this._statesDirty = !0));
          }),
          (e.getFarDistance = function() {
            return this._maxDistance;
          }),
          (e._setGlobalParallelLightDir = function(t) {
            this._globalParallelLightDir = t;
          }),
          (e.getGlobalParallelLightDir = function() {
            return this._globalParallelLightDir;
          }),
          (e.getCurrentPSSM = function() {
            return this._currentPSSM;
          }),
          (e.getLightCamera = function(t) {
            return this._lightCameras[t];
          }),
          (e._beginSampler = function(t, e) {
            if (t < 0 || t > this._numberOfPSSM)
              throw new Error(
                'ParallelSplitShadowMap: beginSample invalid index'
              );
            (this._currentPSSM = t), this._update(e);
          }),
          (e.endSampler = function(t) {
            this._currentPSSM = -1;
          }),
          (e._calcAllLightCameraInfo = function(t) {
            if (1 === this._numberOfPSSM)
              this._beginSampler(0, t), this.endSampler(t);
            else
              for (var e = 0, i = this._numberOfPSSM + 1; e < i; e++)
                this._beginSampler(e, t), this.endSampler(t);
          }),
          (e._recalculate = function(t, e, i) {
            this._calcSplitDistance(t),
              this._calcBoundingBox(e, i),
              this._rebuildRenderInfo();
          }),
          (e._update = function(t) {
            var e = t.nearPlane,
              i = t.fieldOfView,
              n = t.aspectRatio;
            (this._statesDirty ||
              this.lastNearPlane !== e ||
              this.lastFieldOfView !== i ||
              this.lastAspectRatio !== n) &&
              (this._recalculate(e, i, n),
              this._uploadShaderValue(),
              (this._statesDirty = !1),
              (this.lastNearPlane = e),
              (this.lastFieldOfView = i),
              (this.lastAspectRatio = n)),
              this._calcLightViewProject(t);
          }),
          (e._uploadShaderValue = function() {
            var t = this._scene;
            switch (this._numberOfPSSM) {
              case 1:
                t.addShaderDefine(
                  laya.d3.shadowMap.ParallelSplitShadowMap
                    .SHADERDEFINE_SHADOW_PSSM1
                ),
                  t.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PSSM2
                  ),
                  t.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PSSM3
                  );
                break;
              case 2:
                t.addShaderDefine(
                  laya.d3.shadowMap.ParallelSplitShadowMap
                    .SHADERDEFINE_SHADOW_PSSM2
                ),
                  t.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PSSM1
                  ),
                  t.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PSSM3
                  );
                break;
              case 3:
                t.addShaderDefine(
                  laya.d3.shadowMap.ParallelSplitShadowMap
                    .SHADERDEFINE_SHADOW_PSSM3
                ),
                  t.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PSSM1
                  ),
                  t.removeShaderDefine(
                    laya.d3.shadowMap.ParallelSplitShadowMap
                      .SHADERDEFINE_SHADOW_PSSM2
                  );
            }
            var e = t._shaderValues;
            switch (
              (e.setValue(15, this._shaderValueDistance.elements),
              e.setValue(16, this._shaderValueLightVP),
              e.setValue(17, this._shadowPCFOffset.elements),
              this._numberOfPSSM)
            ) {
              case 3:
                e.setValue(18, this.getRenderTarget(1)),
                  e.setValue(19, this.getRenderTarget(2)),
                  e.setValue(20, this.getRenderTarget(3));
                break;
              case 2:
                e.setValue(18, this.getRenderTarget(1)),
                  e.setValue(19, this.getRenderTarget(2));
                break;
              case 1:
                e.setValue(18, this.getRenderTarget(1));
            }
          }),
          (e._calcSplitDistance = function(t) {
            var e = this._maxDistance,
              i = 1 / this._numberOfPSSM,
              n = 0;
            for (n = 0; n <= this._numberOfPSSM; n++)
              this._uniformDistance[n] = t + (e - t) * n * i;
            var a = e / t;
            for (n = 0; n <= this._numberOfPSSM; n++) {
              var r = Math.pow(a, n * i);
              this._logDistance[n] = t * r;
            }
            for (n = 0; n <= this._numberOfPSSM; n++)
              this._spiltDistance[n] =
                this._uniformDistance[n] * this._ratioOfDistance +
                this._logDistance[n] * (1 - this._ratioOfDistance);
            (this._shaderValueDistance.x = this._spiltDistance[1]),
              (this._shaderValueDistance.y = this._spiltDistance[2]),
              (this._shaderValueDistance.z = this._spiltDistance[3]),
              (this._shaderValueDistance.w = this._spiltDistance[4]);
          }),
          (e._calcBoundingBox = function(t, e) {
            var i = (3.1415926 * t) / 180,
              n = Math.tan(i / 2),
              a = NaN,
              r = NaN,
              s = NaN,
              o = 0;
            for (o = 0; o <= this._numberOfPSSM; o++) {
              r = (a = (s = this._spiltDistance[o]) * n) * e;
              var l = this._frustumPos[4 * o + 0].elements;
              (l[0] = -r),
                (l[1] = -a),
                (l[2] = -s),
                ((l = this._frustumPos[4 * o + 1].elements)[0] = r),
                (l[1] = -a),
                (l[2] = -s),
                ((l = this._frustumPos[4 * o + 2].elements)[0] = -r),
                (l[1] = a),
                (l[2] = -s),
                ((l = this._frustumPos[4 * o + 3].elements)[0] = r),
                (l[1] = a),
                (l[2] = -s),
                ((l = this._dimension[o].elements)[0] = r),
                (l[1] = a);
            }
            var h, c, u, _;
            for (o = 1; o <= this._numberOfPSSM; o++)
              (h = this._dimension[o].elements),
                ((c = this._boundingBox[o].min.elements)[0] = -h[0]),
                (c[1] = -h[1]),
                (c[2] = -this._spiltDistance[o]),
                ((u = this._boundingBox[o].max.elements)[0] = h[0]),
                (u[1] = h[1]),
                (u[2] = -this._spiltDistance[o - 1]),
                ((_ = this._boundingSphere[o].center.elements)[0] =
                  0.5 * (c[0] + u[0])),
                (_[1] = 0.5 * (c[1] + u[1])),
                (_[2] = 0.5 * (c[2] + u[2])),
                (this._boundingSphere[o].radius =
                  0.5 *
                  Math.sqrt(
                    Math.pow(u[0] - c[0], 2) +
                      Math.pow(u[1] - c[1], 2) +
                      Math.pow(u[2] - c[2], 2)
                  ));
            (c = this._boundingBox[0].min.elements),
              (h = this._dimension[this._numberOfPSSM].elements),
              (c[0] = -h[0]),
              (c[1] = -h[1]),
              (c[2] = -this._spiltDistance[this._numberOfPSSM]),
              ((u = this._boundingBox[0].max.elements)[0] = h[0]),
              (u[1] = h[1]),
              (u[2] = -this._spiltDistance[0]),
              ((_ = this._boundingSphere[0].center.elements)[0] =
                0.5 * (c[0] + u[0])),
              (_[1] = 0.5 * (c[1] + u[1])),
              (_[2] = 0.5 * (c[2] + u[2])),
              (this._boundingSphere[0].radius =
                0.5 *
                Math.sqrt(
                  Math.pow(u[0] - c[0], 2) +
                    Math.pow(u[1] - c[1], 2) +
                    Math.pow(u[2] - c[2], 2)
                ));
          }),
          (e.calcSplitFrustum = function(t) {
            this._currentPSSM > 0
              ? Te.createPerspective(
                  (3.1416 * t.fieldOfView) / 180,
                  t.aspectRatio,
                  this._spiltDistance[this._currentPSSM - 1],
                  this._spiltDistance[this._currentPSSM],
                  this._tempMatrix44
                )
              : Te.createPerspective(
                  (3.1416 * t.fieldOfView) / 180,
                  t.aspectRatio,
                  this._spiltDistance[0],
                  this._spiltDistance[this._numberOfPSSM],
                  this._tempMatrix44
                ),
              Te.multiply(this._tempMatrix44, t.viewMatrix, this._tempMatrix44),
              (this._splitFrustumCulling.matrix = this._tempMatrix44);
          }),
          (e._rebuildRenderInfo = function() {
            var t = this._numberOfPSSM + 1,
              e = 0;
            if (null == this._renderTarget)
              for (
                this._renderTarget = s(t), this._renderTarget[0] = null, e = 1;
                e < t;
                e++
              )
                this._renderTarget[e] = new rn(
                  this._shadowMapTextureSize,
                  this._shadowMapTextureSize,
                  6408,
                  5121,
                  33189,
                  !1,
                  !1,
                  9728,
                  9728
                );
            else if (this._renderTarget.length != t)
              for (
                this.disposeAllRenderTarget(),
                  this._renderTarget.length = t,
                  this._renderTarget[0] = null,
                  e = 1;
                e < t;
                e++
              )
                this._renderTarget[e] = new rn(
                  this._shadowMapTextureSize,
                  this._shadowMapTextureSize,
                  6408,
                  5121,
                  33189,
                  !1,
                  !1,
                  9728,
                  9728
                );
            else
              for (e = 1; e < t; e++)
                (null != this._renderTarget[e] &&
                  this._renderTarget[e].width == this._shadowMapTextureSize &&
                  this._renderTarget[e].height == this._shadowMapTextureSize) ||
                  (null != this._renderTarget[e] &&
                    this._renderTarget[e].destroy(),
                  (this._renderTarget[e] = new rn(
                    this._shadowMapTextureSize,
                    this._shadowMapTextureSize,
                    6408,
                    5121,
                    33189,
                    !1,
                    !1,
                    9728,
                    9728
                  )));
            if (null == this._lightCulling || this._lightCulling.length != t)
              for (
                this._lightCulling
                  ? (this._lightCulling.length = t)
                  : (this._lightCulling = s(t)),
                  e = 0;
                e < this._lightCulling.length;
                e++
              )
                this._lightCulling[e] = new we(Te.DEFAULT);
            if (null == this._lightVPMatrix || this._lightVPMatrix.length != t)
              for (
                this._lightVPMatrix
                  ? (this._lightVPMatrix.length = t)
                  : (this._lightVPMatrix = s(t)),
                  e = 0;
                e < this._lightVPMatrix.length;
                e++
              )
                this._lightVPMatrix[e] = new Te();
            if (null == this._lightCameras || this._lightCameras.length != t)
              for (
                this._lightCameras
                  ? (this._lightCameras.length = t)
                  : (this._lightCameras = s(t)),
                  e = 0;
                e < this._lightCameras.length;
                e++
              )
                (this._lightCameras[e] = new pn()),
                  (this._lightCameras[e].name = 'lightCamera' + e);
            if (
              null == this._shadowQuenes ||
              this._shadowQuenes.length != this._numberOfPSSM
            )
              for (
                this._shadowQuenes
                  ? (this._shadowQuenes.length = this._numberOfPSSM)
                  : (this._shadowQuenes = s(this._numberOfPSSM)),
                  e = 0;
                e < this._shadowQuenes.length;
                e++
              )
                this._shadowQuenes[e] = new ut(this._scene);
            if (
              null == this._shaderValueVPs ||
              this._shaderValueVPs.length != t
            )
              for (
                this._shaderValueVPs
                  ? (this._shaderValueVPs.length = t)
                  : (this._shaderValueVPs = s(t)),
                  this._shaderValueLightVP = new Float32Array(16 * t),
                  e = 0;
                e < t;
                e++
              )
                this._shaderValueVPs[e] = new Float32Array(
                  this._shaderValueLightVP.buffer,
                  64 * e
                );
          }),
          (e._calcLightViewProject = function(e) {
            var i = this._boundingSphere[this._currentPSSM],
              n = e.transform.worldMatrix;
            i.radius;
            i.center.cloneTo(this._tempLookAt3),
              Re.transformV3ToV4(this._tempLookAt3, n, this._tempLookAt4);
            var a = this._tempLookAt3.elements,
              r = this._tempLookAt4.elements;
            (a[0] = r[0]), (a[1] = r[1]), (a[2] = r[2]);
            var s = this._tempLightUp.elements,
              o = e.forward.elements;
            (s[0] = o[0]),
              (s[1] = 1),
              (s[2] = o[2]),
              Re.normalize(this._tempLightUp, this._tempLightUp),
              Re.scale(
                this._globalParallelLightDir,
                4 * i.radius,
                this._tempPos
              ),
              Re.subtract(this._tempLookAt3, this._tempPos, this._tempPos);
            var l = this._lightCameras[this._currentPSSM];
            (l.transform.position = this._tempPos),
              l.transform.lookAt(this._tempLookAt3, this._tempLightUp, !1);
            var h = this._tempMax.elements,
              c = this._tempMin.elements;
            (h[0] = h[1] = h[2] = -1e5),
              (h[3] = 1),
              (c[0] = c[1] = c[2] = 1e5),
              (c[3] = 1),
              Te.multiply(l.viewMatrix, n, this._tempMatrix44);
            var u = this._tempValue.elements,
              _ = [];
            (_.length = 8), this._boundingBox[this._currentPSSM].getCorners(_);
            for (var d = 0; d < 8; d++) {
              var f = _[d].elements;
              (u[0] = f[0]),
                (u[1] = f[1]),
                (u[2] = f[2]),
                (u[3] = 1),
                Be.transformByM4x4(
                  this._tempValue,
                  this._tempMatrix44,
                  this._tempValue
                ),
                (c[0] = u[0] < c[0] ? u[0] : c[0]),
                (c[1] = u[1] < c[1] ? u[1] : c[1]),
                (c[2] = u[2] < c[2] ? u[2] : c[2]),
                (h[0] = u[0] > h[0] ? u[0] : h[0]),
                (h[1] = u[1] > h[1] ? u[1] : h[1]),
                (h[2] = u[2] > h[2] ? u[2] : h[2]);
            }
            Be.add(this._tempMax, this._tempMin, this._tempValue),
              (u[0] *= 0.5),
              (u[1] *= 0.5),
              (u[2] *= 0.5),
              (u[3] = 1),
              Be.transformByM4x4(
                this._tempValue,
                l.transform.worldMatrix,
                this._tempValue
              );
            var p = Math.abs(-this._tempMax.z),
              m = p > this._maxDistance ? p : this._maxDistance;
            Re.scale(this._globalParallelLightDir, m, this._tempPos);
            var g = this._tempPos.elements;
            (g[0] = u[0] - g[0]),
              (g[1] = u[1] - g[1]),
              (g[2] = u[2] - g[2]),
              (l.transform.position = this._tempPos),
              l.transform.lookAt(this._tempLookAt3, this._tempLightUp, !1),
              Te.createOrthoOffCenterRH(
                c[0],
                h[0],
                c[1],
                h[1],
                1,
                m + 0.5 * (h[2] - c[2]),
                l.projectionMatrix
              ),
              l.projectionViewMatrix.cloneTo(
                this._lightVPMatrix[this._currentPSSM]
              ),
              (this._lightCulling[
                this._currentPSSM
              ].matrix = this._lightVPMatrix[this._currentPSSM]),
              t.multiplyMatrixOutFloat32Array(
                this._tempScaleMatrix44,
                this._lightVPMatrix[this._currentPSSM],
                this._shaderValueVPs[this._currentPSSM]
              );
          }),
          (e.getLightFrustumCulling = function(t) {
            return this._lightCulling[t];
          }),
          (e.getSplitFrustumCulling = function() {
            return this._splitFrustumCulling;
          }),
          (e.getSplitDistance = function(t) {
            return this._spiltDistance[t];
          }),
          (e.setShadowMapTextureSize = function(t) {
            t !== this._shadowMapTextureSize &&
              ((this._shadowMapTextureSize = t),
              (this._shadowPCFOffset.x = 1 / this._shadowMapTextureSize),
              (this._shadowPCFOffset.y = 1 / this._shadowMapTextureSize),
              (this._statesDirty = !0));
          }),
          (e.getShadowMapTextureSize = function() {
            return this._shadowMapTextureSize;
          }),
          (e.beginRenderTarget = function(t) {
            this._renderTarget[t].start();
          }),
          (e.endRenderTarget = function(t) {
            this._renderTarget[t].end();
          }),
          (e.getRenderTarget = function(t) {
            return this._renderTarget[t];
          }),
          (e.disposeAllRenderTarget = function() {
            for (var t = 0, e = this._numberOfPSSM + 1; t < e; t++)
              this._renderTarget[t] &&
                (this._renderTarget[t].destroy(),
                (this._renderTarget[t] = null));
          }),
          r(
            0,
            e,
            'PSSMNum',
            function() {
              return this._numberOfPSSM;
            },
            function(t) {
              (t = (t = t > 0 ? t : 1) <= 3 ? t : 3),
                this._numberOfPSSM != t &&
                  ((this._numberOfPSSM = t),
                  (this._ratioOfDistance = 1 / this._numberOfPSSM),
                  (this._statesDirty = !0));
            }
          ),
          (t.multiplyMatrixOutFloat32Array = function(t, e, i) {
            var n, a, r, s, o, l, h;
            for (a = t.elements, r = e.elements, n = 0; n < 4; n++)
              (s = a[n]),
                (o = a[n + 4]),
                (l = a[n + 8]),
                (h = a[n + 12]),
                (i[n] = s * r[0] + o * r[1] + l * r[2] + h * r[3]),
                (i[n + 4] = s * r[4] + o * r[5] + l * r[6] + h * r[7]),
                (i[n + 8] = s * r[8] + o * r[9] + l * r[10] + h * r[11]),
                (i[n + 12] = s * r[12] + o * r[13] + l * r[14] + h * r[15]);
          }),
          (t.SHADERDEFINE_RECEIVE_SHADOW = 1),
          (t.SHADERDEFINE_CAST_SHADOW = 512),
          (t.SHADERDEFINE_SHADOW_PSSM1 = 1024),
          (t.SHADERDEFINE_SHADOW_PSSM2 = 2048),
          (t.SHADERDEFINE_SHADOW_PSSM3 = 4096),
          (t.SHADERDEFINE_SHADOW_PCF_NO = 8192),
          (t.SHADERDEFINE_SHADOW_PCF1 = 16384),
          (t.SHADERDEFINE_SHADOW_PCF2 = 32768),
          (t.SHADERDEFINE_SHADOW_PCF3 = 65536),
          (t.MAX_PSSM_COUNT = 3),
          t
        );
      })(),
      Ge = (function() {
        function t() {
          (this._boundingSphere = null),
            (this._boundingBox = null),
            (this._sizeOfY = null),
            (this._currentLODLevel = 0),
            (this._lastDistanceToEye = NaN),
            (this._originalBoundingSphere = null),
            (this._originalBoundingBox = null),
            (this._originalBoundingBoxCorners = null),
            (this._bUseStrip = !1),
            (this._gridSize = NaN),
            (this._beginGridX = 0),
            (this._beginGridZ = 0),
            (this._LODError = null),
            t.__init__(),
            (this._currentLODLevel = 0);
        }
        a(t, 'laya.d3.terrain.TerrainLeaf');
        var e = t.prototype;
        return (
          (e.calcVertextNorml = function(e, i, n, a, r, s) {
            var o = 0,
              l = 0;
            (l = -1 * t.getHeightFromTerrainHeightData(e - 1, i - 1, n, a, r)),
              (l += -1 * t.getHeightFromTerrainHeightData(e - 1, i, n, a, r)),
              (l +=
                -1 * t.getHeightFromTerrainHeightData(e - 1, i + 1, n, a, r)),
              (l +=
                1 * t.getHeightFromTerrainHeightData(e + 1, i - 1, n, a, r)),
              (l += 1 * t.getHeightFromTerrainHeightData(e + 1, i, n, a, r)),
              (l +=
                1 * t.getHeightFromTerrainHeightData(e + 1, i + 1, n, a, r)),
              (o =
                -1 * t.getHeightFromTerrainHeightData(e - 1, i - 1, n, a, r)),
              (o += -1 * t.getHeightFromTerrainHeightData(e, i - 1, n, a, r)),
              (o +=
                -1 * t.getHeightFromTerrainHeightData(e + 1, i - 1, n, a, r)),
              (o +=
                1 * t.getHeightFromTerrainHeightData(e - 1, i + 1, n, a, r)),
              (o += 1 * t.getHeightFromTerrainHeightData(e, i + 1, n, a, r)),
              (o +=
                1 * t.getHeightFromTerrainHeightData(e + 1, i + 1, n, a, r)),
              (s.x = -l),
              (s.y = 6),
              (s.z = -o),
              Re.normalize(s, s);
          }),
          (e.calcVertextNormlUV = function(t, e, i, n, a) {
            (a.x = t / i), (a.y = e / n), (a.z = e / n);
          }),
          (e.calcVertextBuffer = function(e, i, n, a, r, s, o, l, h, c, u, _) {
            if (1 == _ && !t.__ADAPT_MATRIX__) {
              t.__ADAPT_MATRIX__ = new Te();
              var d = new Te();
              Te.createRotationY(Math.PI, t.__ADAPT_MATRIX__),
                Te.createTranslate(new Re(0, 0, (u - 1) * r), d),
                Te.multiply(d, t.__ADAPT_MATRIX__, t.__ADAPT_MATRIX__),
                (t.__ADAPT_MATRIX_INV__ = new Te()),
                t.__ADAPT_MATRIX__.invert(t.__ADAPT_MATRIX_INV__);
            }
            (this._gridSize = r),
              (this._beginGridX = e * t.CHUNK_GRID_NUM + n),
              (this._beginGridZ = i * t.CHUNK_GRID_NUM + a);
            for (
              var f = o * l,
                p = 2147483647,
                m = -2147483648,
                g = new Re(),
                y = 0,
                v = t.LEAF_GRID_NUM + 1;
              y < v;
              y++
            )
              for (var b = 0, w = t.LEAF_GRID_NUM + 1; b < w; b++)
                (t.__VECTOR3__.x = (this._beginGridX + b) * this._gridSize),
                  (t.__VECTOR3__.z = (this._beginGridZ + y) * this._gridSize),
                  (t.__VECTOR3__.y =
                    h[(this._beginGridZ + y) * c + (this._beginGridX + b)]),
                  (p = t.__VECTOR3__.y < p ? t.__VECTOR3__.y : p),
                  (m = t.__VECTOR3__.y > m ? t.__VECTOR3__.y : m),
                  t.__ADAPT_MATRIX__ &&
                    Re.transformV3ToV3(
                      t.__VECTOR3__,
                      t.__ADAPT_MATRIX__,
                      t.__VECTOR3__
                    ),
                  (s[f] = t.__VECTOR3__.x),
                  (s[++f] = t.__VECTOR3__.y),
                  (s[++f] = t.__VECTOR3__.z),
                  f++,
                  this.calcVertextNormlUV(
                    this._beginGridX + b,
                    this._beginGridZ + y,
                    c,
                    u,
                    g
                  ),
                  (s[f] = g.x),
                  (s[++f] = g.y),
                  (s[++f] = g.z),
                  (s[++f] = (n + b) / t.CHUNK_GRID_NUM),
                  (s[++f] = (a + y) / t.CHUNK_GRID_NUM),
                  (s[++f] = this._beginGridX + b),
                  (s[++f] = this._beginGridZ + y),
                  f++;
            (this._sizeOfY = new Ne(p - 1, m + 1)),
              this.calcLODErrors(h, c, u),
              this.calcOriginalBoudingBoxAndSphere();
          }),
          (e.calcSkirtVertextBuffer = function(
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h,
            c,
            u
          ) {
            (this._gridSize = r),
              (this._beginGridX = e * t.CHUNK_GRID_NUM + n),
              (this._beginGridZ = i * t.CHUNK_GRID_NUM + a);
            var _ = o * l,
              d = 0,
              f = 0,
              p = t.LEAF_GRID_NUM + 1,
              m = new Re(),
              g = 0,
              y = 0;
            for (d = 0; d < 2; d++)
              for (f = 0; f < p; f++)
                (t.__VECTOR3__.x = (this._beginGridX + f) * this._gridSize),
                  (t.__VECTOR3__.y =
                    1 == d
                      ? h[this._beginGridZ * c + (this._beginGridX + f)]
                      : -this._gridSize),
                  (t.__VECTOR3__.z = (this._beginGridZ + 0) * this._gridSize),
                  t.__ADAPT_MATRIX__ &&
                    Re.transformV3ToV3(
                      t.__VECTOR3__,
                      t.__ADAPT_MATRIX__,
                      t.__VECTOR3__
                    ),
                  (s[_] = t.__VECTOR3__.x),
                  (s[++_] = t.__VECTOR3__.y),
                  (s[++_] = t.__VECTOR3__.z),
                  _++,
                  (g = 0 == d ? this._beginGridZ - 1 : this._beginGridZ),
                  this.calcVertextNormlUV(this._beginGridX + f, g, c, u, m),
                  (s[_] = m.x),
                  (s[++_] = m.y),
                  (s[++_] = m.z),
                  (s[++_] = (n + f) / t.CHUNK_GRID_NUM),
                  (s[++_] = (a + 0) / t.CHUNK_GRID_NUM),
                  (s[++_] = this._beginGridX + f),
                  (s[++_] = g),
                  _++;
            for (d = 0; d < 2; d++)
              for (f = 0; f < p; f++)
                (t.__VECTOR3__.x = (this._beginGridX + f) * this._gridSize),
                  (t.__VECTOR3__.y =
                    0 == d
                      ? h[
                          (this._beginGridZ + t.LEAF_GRID_NUM) * c +
                            (this._beginGridX + f)
                        ]
                      : -this._gridSize),
                  (t.__VECTOR3__.z =
                    (this._beginGridZ + t.LEAF_GRID_NUM) * this._gridSize),
                  t.__ADAPT_MATRIX__ &&
                    Re.transformV3ToV3(
                      t.__VECTOR3__,
                      t.__ADAPT_MATRIX__,
                      t.__VECTOR3__
                    ),
                  (s[_] = t.__VECTOR3__.x),
                  (s[++_] = t.__VECTOR3__.y),
                  (s[++_] = t.__VECTOR3__.z),
                  _++,
                  (g =
                    0 == d
                      ? this._beginGridZ + t.LEAF_GRID_NUM
                      : this._beginGridZ + t.LEAF_GRID_NUM + 1),
                  this.calcVertextNormlUV(this._beginGridX + f, g, c, u, m),
                  (s[_] = m.x),
                  (s[++_] = m.y),
                  (s[++_] = m.z),
                  (s[++_] = (n + f) / t.CHUNK_GRID_NUM),
                  (s[++_] = (a + t.LEAF_GRID_NUM) / t.CHUNK_GRID_NUM),
                  (s[++_] = this._beginGridX + f),
                  (s[++_] = g),
                  _++;
            for (d = 0; d < 2; d++)
              for (f = 0; f < p; f++)
                (t.__VECTOR3__.x = (this._beginGridX + 0) * this._gridSize),
                  (t.__VECTOR3__.y =
                    0 == d
                      ? h[(this._beginGridZ + f) * c + (this._beginGridX + 0)]
                      : -this._gridSize),
                  (t.__VECTOR3__.z = (this._beginGridZ + f) * this._gridSize),
                  t.__ADAPT_MATRIX__ &&
                    Re.transformV3ToV3(
                      t.__VECTOR3__,
                      t.__ADAPT_MATRIX__,
                      t.__VECTOR3__
                    ),
                  (s[_] = t.__VECTOR3__.x),
                  (s[++_] = t.__VECTOR3__.y),
                  (s[++_] = t.__VECTOR3__.z),
                  _++,
                  (y = 0 == d ? this._beginGridX : this._beginGridX - 1),
                  this.calcVertextNormlUV(y, this._beginGridZ + f, c, u, m),
                  (s[_] = m.x),
                  (s[++_] = m.y),
                  (s[++_] = m.z),
                  (s[++_] = (n + 0) / t.CHUNK_GRID_NUM),
                  (s[++_] = (a + f) / t.CHUNK_GRID_NUM),
                  (s[++_] = y),
                  (s[++_] = this._beginGridZ + f),
                  _++;
            for (d = 0; d < 2; d++)
              for (f = 0; f < p; f++)
                (t.__VECTOR3__.x =
                  (this._beginGridX + t.LEAF_GRID_NUM) * this._gridSize),
                  (t.__VECTOR3__.y =
                    1 == d
                      ? h[
                          (this._beginGridZ + f) * c +
                            (this._beginGridX + t.LEAF_GRID_NUM)
                        ]
                      : -this._gridSize),
                  (t.__VECTOR3__.z = (this._beginGridZ + f) * this._gridSize),
                  t.__ADAPT_MATRIX__ &&
                    Re.transformV3ToV3(
                      t.__VECTOR3__,
                      t.__ADAPT_MATRIX__,
                      t.__VECTOR3__
                    ),
                  (s[_] = t.__VECTOR3__.x),
                  (s[++_] = t.__VECTOR3__.y),
                  (s[++_] = t.__VECTOR3__.z),
                  _++,
                  (y =
                    0 == d
                      ? this._beginGridX + t.LEAF_GRID_NUM + 1
                      : this._beginGridX + t.LEAF_GRID_NUM),
                  this.calcVertextNormlUV(y, this._beginGridZ + f, c, u, m),
                  (s[_] = m.x),
                  (s[++_] = m.y),
                  (s[++_] = m.z),
                  (s[++_] = (n + t.LEAF_GRID_NUM) / t.CHUNK_GRID_NUM),
                  (s[++_] = (a + f) / t.CHUNK_GRID_NUM),
                  (s[++_] = y),
                  (s[++_] = this._beginGridZ + f),
                  _++;
          }),
          (e.calcOriginalBoudingBoxAndSphere = function() {
            var e = new Re(
                this._beginGridX * this._gridSize,
                this._sizeOfY.x,
                this._beginGridZ * this._gridSize
              ),
              i = new Re(
                (this._beginGridX + t.LEAF_GRID_NUM) * this._gridSize,
                this._sizeOfY.y,
                (this._beginGridZ + t.LEAF_GRID_NUM) * this._gridSize
              );
            t.__ADAPT_MATRIX__ &&
              (Re.transformV3ToV3(e, t.__ADAPT_MATRIX__, e),
              Re.transformV3ToV3(i, t.__ADAPT_MATRIX__, i)),
              (this._originalBoundingBox = new be(e, i));
            var n = new Re();
            Re.subtract(i, e, n), Re.scale(n, 0.5, n);
            var a = new Re();
            Re.add(e, n, a),
              (this._originalBoundingSphere = new xe(a, Re.scalarLength(n))),
              (this._originalBoundingBoxCorners = s(8, null)),
              this._originalBoundingBox.getCorners(
                this._originalBoundingBoxCorners
              ),
              (this._boundingBox = new be(
                new Re(-0.5, -0.5, -0.5),
                new Re(0.5, 0.5, 0.5)
              )),
              (this._boundingSphere = new xe(new Re(0, 0, 0), 1));
          }),
          (e.calcLeafBoudingBox = function(t) {
            for (var e = 0; e < 8; e++)
              Re.transformCoordinate(
                this._originalBoundingBoxCorners[e],
                t,
                ei._tempBoundBoxCorners[e]
              );
            be.createfromPoints(ei._tempBoundBoxCorners, this._boundingBox);
          }),
          (e.calcLeafBoudingSphere = function(t, e) {
            Re.transformCoordinate(
              this._originalBoundingSphere.center,
              t,
              this._boundingSphere.center
            ),
              (this._boundingSphere.radius =
                this._originalBoundingSphere.radius * e);
          }),
          (e.calcLODErrors = function(e, i, n) {
            this._LODError = new Float32Array(t._maxLODLevel + 1);
            for (var a = 1, r = 0, s = t._maxLODLevel + 1; r < s; r++) {
              for (var o = 0, l = 0, h = t.LEAF_GRID_NUM; l < h; l += a)
                for (var c = 0, u = t.LEAF_GRID_NUM; c < u; c += a)
                  for (
                    var _ =
                        e[(this._beginGridZ + l) * i + (this._beginGridX + c)],
                      d =
                        e[
                          (this._beginGridZ + l) * i +
                            (this._beginGridX + c) +
                            a
                        ],
                      f =
                        e[
                          (this._beginGridZ + l + a) * i +
                            (this._beginGridX + c)
                        ],
                      p =
                        e[
                          (this._beginGridZ + l + a) * i +
                            (this._beginGridX + c) +
                            a
                        ],
                      m = 0;
                    m < a;
                    m++
                  )
                    for (var g = m / a, y = 0; y < a; y++) {
                      var v = y / a,
                        b =
                          e[
                            (this._beginGridZ + l + m) * i +
                              (this._beginGridX + c) +
                              y
                          ],
                        w =
                          v + g <= 1
                            ? _ + (d - _) * v + (f - _) * g
                            : p + (f - p) * (1 - v) + (d - p) * (1 - g),
                        x = Math.abs(w - b);
                      o = Math.max(o, x);
                    }
              (a *= 2), (this._LODError[r] = o);
            }
          }),
          (e.determineLod = function(e, i, n, a) {
            var r = Re.distance(e, this._boundingSphere.center),
              s = t._maxLODLevel;
            if (!a) {
              if (this._lastDistanceToEye == r) return this._currentLODLevel;
              this._lastDistanceToEye > r && (s = this._currentLODLevel);
            }
            for (var o = s; o >= 1; o--)
              if (((fn.LOD_DISTANCE_FACTOR * this._LODError[o]) / r) * i < n) {
                this._currentLODLevel = o;
                break;
              }
            return (this._lastDistanceToEye = r), this._currentLODLevel;
          }),
          (t.__init__ = function() {
            if (!t._bInit) {
              var e =
                (t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM) *
                (t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM);
              t._planeLODIndex = s(e);
              var i = 0,
                n = 0,
                a = 0,
                r = 0,
                o = 0,
                l = 0,
                h = null,
                c = null;
              for (i = 0; i < e; i++)
                t._planeLODIndex[i] = new Array(t._maxLODLevel + 1);
              for (i = 0, r = t._maxLODLevel + 1; i < r; i++)
                t._planeLODIndex[0][i] = t.calcPlaneLODIndex(i);
              for (i = 1; i < e; i++)
                for (
                  l = i * t.LEAF_PLANE_VERTEXT_COUNT,
                    n = 0,
                    o = t._maxLODLevel + 1;
                  n < o;
                  n++
                ) {
                  for (
                    h = t._planeLODIndex[0][n],
                      c = new Uint16Array(h.length),
                      a = 0;
                    a < h.length;
                    a++
                  )
                    c[a] = h[a] + l;
                  t._planeLODIndex[i][n] = c;
                }
              for (t._skirtLODIndex = s(e), i = 0; i < e; i++)
                t._skirtLODIndex[i] = new Array(t._maxLODLevel + 1);
              for (i = 0, r = t._maxLODLevel + 1; i < r; i++)
                t._skirtLODIndex[0][i] = t.calcSkirtLODIndex(i);
              for (i = 1; i < e; i++)
                for (
                  l = i * t.LEAF_SKIRT_VERTEXT_COUNT,
                    n = 0,
                    o = t._maxLODLevel + 1;
                  n < o;
                  n++
                ) {
                  for (
                    h = t._skirtLODIndex[0][n],
                      c = new Uint16Array(h.length),
                      a = 0;
                    a < h.length;
                    a++
                  )
                    c[a] = h[a] + l;
                  t._skirtLODIndex[i][n] = c;
                }
              t._bInit = !0;
            }
          }),
          (t.getPlaneLODIndex = function(e, i) {
            return t._planeLODIndex[e][i];
          }),
          (t.getSkirtLODIndex = function(e, i) {
            return t._skirtLODIndex[e][i];
          }),
          (t.calcPlaneLODIndex = function(e) {
            e > t._maxLODLevel && (e = t._maxLODLevel);
            var i = t.LEAF_GRID_NUM + 1,
              n = 0,
              a = null,
              r = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / Math.pow(2, e);
            a = new Uint16Array(r * r * 6);
            for (
              var s = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / r, o = 0;
              o < t.LEAF_GRID_NUM;
              o += s
            )
              for (var l = 0; l < t.LEAF_GRID_NUM; l += s)
                (a[n] = (o + s) * i + l),
                  (a[++n] = o * i + l),
                  (a[++n] = o * i + l + s),
                  (a[++n] = o * i + l + s),
                  (a[++n] = (o + s) * i + l + s),
                  (a[++n] = (o + s) * i + l),
                  n++;
            return a;
          }),
          (t.calcSkirtLODIndex = function(e) {
            e > t._maxLODLevel && (e = t._maxLODLevel);
            var i =
                (t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM) *
                (t.CHUNK_GRID_NUM / t.LEAF_GRID_NUM) *
                t.LEAF_PLANE_VERTEXT_COUNT,
              n = t.LEAF_GRID_NUM + 1,
              a = 0,
              r = null,
              s = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / Math.pow(2, e);
            r = new Uint16Array(4 * s * 6);
            for (
              var o = laya.d3.terrain.TerrainLeaf.LEAF_GRID_NUM / s, l = 0;
              l < 4;
              l++
            ) {
              for (var h = 0; h < t.LEAF_GRID_NUM; h += o)
                (r[a] = i + n + h),
                  (r[++a] = i + h),
                  (r[++a] = i + h + o),
                  (r[++a] = i + h + o),
                  (r[++a] = i + n + h + o),
                  (r[++a] = i + n + h),
                  a++;
              i += 2 * n;
            }
            return r;
          }),
          (t.getHeightFromTerrainHeightData = function(t, e, i, n, a) {
            return (
              (t = t < 0 ? 0 : t),
              (t = t >= n ? n - 1 : t),
              (e = e < 0 ? 0 : e),
              (e = e >= a ? a - 1 : e),
              i[e * n + t]
            );
          }),
          (t.CHUNK_GRID_NUM = 64),
          (t.LEAF_GRID_NUM = 32),
          (t.__ADAPT_MATRIX__ = null),
          (t.__ADAPT_MATRIX_INV__ = null),
          (t._planeLODIndex = null),
          (t._skirtLODIndex = null),
          (t._bInit = !1),
          n(t, [
            'LEAF_PLANE_VERTEXT_COUNT',
            function() {
              return (this.LEAF_PLANE_VERTEXT_COUNT =
                (t.LEAF_GRID_NUM + 1) * (t.LEAF_GRID_NUM + 1));
            },
            'LEAF_SKIRT_VERTEXT_COUNT',
            function() {
              return (this.LEAF_SKIRT_VERTEXT_COUNT =
                2 * (t.LEAF_GRID_NUM + 1) * 4);
            },
            'LEAF_VERTEXT_COUNT',
            function() {
              return (this.LEAF_VERTEXT_COUNT =
                t.LEAF_PLANE_VERTEXT_COUNT + t.LEAF_SKIRT_VERTEXT_COUNT);
            },
            'LEAF_PLANE_MAX_INDEX_COUNT',
            function() {
              return (this.LEAF_PLANE_MAX_INDEX_COUNT =
                t.LEAF_GRID_NUM * t.LEAF_GRID_NUM * 6);
            },
            'LEAF_SKIRT_MAX_INDEX_COUNT',
            function() {
              return (this.LEAF_SKIRT_MAX_INDEX_COUNT =
                4 * t.LEAF_GRID_NUM * 6);
            },
            'LEAF_MAX_INDEX_COUNT',
            function() {
              return (this.LEAF_MAX_INDEX_COUNT =
                t.LEAF_PLANE_MAX_INDEX_COUNT + t.LEAF_SKIRT_MAX_INDEX_COUNT);
            },
            '__VECTOR3__',
            function() {
              return (this.__VECTOR3__ = new Re());
            },
            '_maxLODLevel',
            function() {
              return (this._maxLODLevel = Math.log2(t.LEAF_GRID_NUM));
            }
          ]),
          t
        );
      })(),
      ze = (function() {
        function t() {
          (this.alphaMap = null),
            (this.detailID = null),
            (this.normalMap = null);
        }
        return a(t, 'laya.d3.terrain.unit.ChunkInfo'), t;
      })(),
      je = (function() {
        function t() {
          (this.diffuseTexture = null),
            (this.normalTexture = null),
            (this.scale = null),
            (this.offset = null);
        }
        return a(t, 'laya.d3.terrain.unit.DetailTextureInfo'), t;
      })(),
      We = (function() {
        function t() {
          (this.ambientColor = null),
            (this.diffuseColor = null),
            (this.specularColor = null);
        }
        return a(t, 'laya.d3.terrain.unit.MaterialInfo'), t;
      })(),
      Xe = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.utils.Physics'),
          (t.__init__ = function() {
            t._layerCollsionMatrix.length = 31;
            for (var e = 0; e < 31; e++) {
              var i = [],
                n = 31 - e;
              i.length = n;
              for (var a = 0; a < n; a++) i[a] = a === n - 1;
              t._layerCollsionMatrix[e] = i;
            }
          }),
          (t.setLayerCollision = function(e, i, n) {
            t._layerCollsionMatrix[e.number][30 - i.number] = n;
          }),
          (t.getLayerCollision = function(e, i) {
            return t._layerCollsionMatrix[e.number][30 - i.number];
          }),
          (t.setColliderCollision = function(t, e, i) {
            i
              ? (delete t._ignoreCollisonMap[e.id],
                delete e._ignoreCollisonMap[t.id])
              : ((t._ignoreCollisonMap[e.id] = e),
                (e._ignoreCollisonMap[t.id] = t));
          }),
          (t.getIColliderCollision = function(t, e) {
            return !!t._ignoreCollisonMap[e.id];
          }),
          (t.rayCast = function(e, i, n, a) {
            void 0 === n && (n = 1.79e308),
              void 0 === a && (a = 0),
              (t._outHitAllInfo.length = 0);
            for (
              var r = z.getLayerByNumber(a)._colliders, s = 0, o = r.length;
              s < o;
              s++
            ) {
              var l = r[s];
              if (
                l.enable &&
                (l.raycast(e, t._outHitInfo, n),
                -1 !== t._outHitInfo.distance && t._outHitInfo.distance <= n)
              ) {
                var h = new Ye();
                t._outHitInfo.cloneTo(h), t._outHitAllInfo.push(h);
              }
            }
            if (0 == t._outHitAllInfo.length)
              return (i.sprite3D = null), void (i.distance = -1);
            for (
              var c = Number.MAX_VALUE, u = 0, _ = 0;
              _ < t._outHitAllInfo.length;
              _++
            )
              t._outHitAllInfo[_].distance < c &&
                ((c = t._outHitAllInfo[_].distance), (u = _));
            t._outHitAllInfo[u].cloneTo(i);
          }),
          (t.rayCastAll = function(e, i, n, a) {
            void 0 === n && (n = 1.79e308),
              void 0 === a && (a = 0),
              (i.length = 0);
            for (
              var r = z.getLayerByNumber(a)._colliders, s = 0, o = r.length;
              s < o;
              s++
            ) {
              var l = r[s];
              if (
                l.enable &&
                ((t._outHitInfo.distance = -1),
                (t._outHitInfo.sprite3D = null),
                l.raycast(e, t._outHitInfo, n),
                -1 !== t._outHitInfo.distance && t._outHitInfo.distance <= n)
              ) {
                var h = new Ye();
                t._outHitInfo.cloneTo(h), i.push(h);
              }
            }
          }),
          (t._outHitAllInfo = []),
          (t._layerCollsionMatrix = []),
          n(t, [
            '_outHitInfo',
            function() {
              return (this._outHitInfo = new Ye());
            },
            'collisionManager',
            function() {
              return (this.collisionManager = new ni());
            },
            'gravity',
            function() {
              return (this.gravity = new Re(0, -9.81, 0));
            }
          ]),
          t
        );
      })(),
      qe = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.utils.Picker'),
          (t.calculateCursorRay = function(e, i, n, a, r, s) {
            var o = e.elements[0],
              l = e.elements[1],
              h = t._tempVector30,
              c = h.elements;
            (c[0] = o), (c[1] = l), (c[2] = i.minDepth);
            var u = t._tempVector31,
              _ = u.elements;
            (_[0] = o), (_[1] = l), (_[2] = i.maxDepth);
            var d = s.origin,
              f = t._tempVector32;
            i.unprojectFromWVP(h, n, a, r, d),
              i.unprojectFromWVP(u, n, a, r, f);
            var p = s.direction.elements;
            (p[0] = f.x - d.x),
              (p[1] = f.y - d.y),
              (p[2] = f.z - d.z),
              Re.normalize(s.direction, s.direction);
          }),
          (t.rayIntersectsPositionsAndIndices = function(e, i, n, a, r) {
            for (
              var s = n.vertexStride / 4,
                o = n.getVertexElementByUsage(0).offset / 4,
                l = Number.MAX_VALUE,
                h = -1,
                c = -1,
                u = -1,
                _ = 0;
              _ < a.length;
              _ += 3
            ) {
              var d = t._tempVector35,
                f = d.elements,
                p = a[_] * s,
                m = p + o;
              (f[0] = i[m]), (f[1] = i[m + 1]), (f[2] = i[m + 2]);
              var g = t._tempVector36,
                y = g.elements,
                v = a[_ + 1] * s,
                b = v + o;
              (y[0] = i[b]), (y[1] = i[b + 1]), (y[2] = i[b + 2]);
              var w = t._tempVector37,
                x = w.elements,
                I = a[_ + 2] * s,
                C = I + o;
              (x[0] = i[C]), (x[1] = i[C + 1]), (x[2] = i[C + 2]);
              var S = laya.d3.utils.Picker.rayIntersectsTriangle(e, d, g, w);
              !isNaN(S) && S < l && ((l = S), (h = p), (c = v), (u = I));
            }
            if (l !== Number.MAX_VALUE) {
              (r.distance = l),
                Re.scale(e.direction, l, r.position),
                Re.add(e.origin, r.position, r.position);
              var T = r.trianglePositions,
                M = T[0],
                E = T[1],
                L = T[2],
                D = M.elements,
                A = E.elements,
                N = L.elements,
                R = h + o;
              (D[0] = i[R]), (D[1] = i[R + 1]), (D[2] = i[R + 2]);
              var B = c + o;
              (A[0] = i[B]), (A[1] = i[B + 1]), (A[2] = i[B + 2]);
              var k = u + o;
              (N[0] = i[k]), (N[1] = i[k + 1]), (N[2] = i[k + 2]);
              var P = n.getVertexElementByUsage(3);
              if (P) {
                var O = P.offset / 4,
                  U = r.triangleNormals,
                  V = U[0],
                  F = U[1],
                  H = U[2],
                  G = V.elements,
                  z = F.elements,
                  j = H.elements,
                  W = h + O;
                (G[0] = i[W]), (G[1] = i[W + 1]), (G[2] = i[W + 2]);
                var X = c + O;
                (z[0] = i[X]), (z[1] = i[X + 1]), (z[2] = i[X + 2]);
                var q = u + O;
                (j[0] = i[q]), (j[1] = i[q + 1]), (j[2] = i[q + 2]);
              }
              return !0;
            }
            return (
              r.position.toDefault(),
              (r.distance = Number.MAX_VALUE),
              r.trianglePositions[0].toDefault(),
              r.trianglePositions[1].toDefault(),
              r.trianglePositions[2].toDefault(),
              r.triangleNormals[0].toDefault(),
              r.triangleNormals[1].toDefault(),
              r.triangleNormals[2].toDefault(),
              !1
            );
          }),
          (t.rayIntersectsTriangle = function(e, i, n, a) {
            var r = t._tempVector30,
              s = t._tempVector31;
            Re.subtract(n, i, r), Re.subtract(a, i, s);
            var o = t._tempVector32;
            Re.cross(e.direction, s, o);
            var l;
            if ((l = Re.dot(r, o)) > -Number.MIN_VALUE && l < Number.MIN_VALUE)
              return Number.NaN;
            var h = 1 / l,
              c = t._tempVector33;
            Re.subtract(e.origin, i, c);
            var u;
            if (((u = Re.dot(c, o)), (u *= h) < 0 || u > 1)) return Number.NaN;
            var _ = t._tempVector34;
            Re.cross(c, r, _);
            var d;
            if (((d = Re.dot(e.direction, _)), (d *= h) < 0 || u + d > 1))
              return Number.NaN;
            var f;
            return (f = Re.dot(s, _)), (f *= h) < 0 ? Number.NaN : f;
          }),
          n(t, [
            '_tempVector30',
            function() {
              return (this._tempVector30 = new Re());
            },
            '_tempVector31',
            function() {
              return (this._tempVector31 = new Re());
            },
            '_tempVector32',
            function() {
              return (this._tempVector32 = new Re());
            },
            '_tempVector33',
            function() {
              return (this._tempVector33 = new Re());
            },
            '_tempVector34',
            function() {
              return (this._tempVector34 = new Re());
            },
            '_tempVector35',
            function() {
              return (this._tempVector35 = new Re());
            },
            '_tempVector36',
            function() {
              return (this._tempVector36 = new Re());
            },
            '_tempVector37',
            function() {
              return (this._tempVector37 = new Re());
            }
          ]),
          t
        );
      })(),
      Ye = (function() {
        function t() {
          (this.distance = NaN),
            (this.trianglePositions = null),
            (this.triangleNormals = null),
            (this.position = null),
            (this.sprite3D = null),
            (this.distance = -1),
            (this.trianglePositions = [new Re(), new Re(), new Re()]),
            (this.trianglePositions.length = 3),
            (this.triangleNormals = [new Re(), new Re(), new Re()]),
            (this.triangleNormals.length = 3),
            (this.position = new Re());
        }
        a(t, 'laya.d3.utils.RaycastHit');
        return (
          (t.prototype.cloneTo = function(t) {
            (t.distance = this.distance),
              this.trianglePositions[0].cloneTo(t.trianglePositions[0]),
              this.trianglePositions[1].cloneTo(t.trianglePositions[1]),
              this.trianglePositions[2].cloneTo(t.trianglePositions[2]),
              this.triangleNormals[0].cloneTo(t.triangleNormals[0]),
              this.triangleNormals[1].cloneTo(t.triangleNormals[1]),
              this.triangleNormals[2].cloneTo(t.triangleNormals[2]),
              this.position.cloneTo(t.position),
              (t.sprite3D = this.sprite3D);
          }),
          t
        );
      })(),
      Je = (function() {
        function t(t, e) {
          (this._width = 0),
            (this._height = 0),
            (this._width = t),
            (this._height = e);
        }
        a(t, 'laya.d3.utils.Size');
        var e = t.prototype;
        return (
          r(0, e, 'width', function() {
            return -1 === this._width ? _t.clientWidth : this._width;
          }),
          r(0, e, 'height', function() {
            return -1 === this._height ? _t.clientHeight : this._height;
          }),
          r(1, t, 'fullScreen', function() {
            return new t(-1, -1);
          }),
          t
        );
      })(),
      Ke = (function() {
        function t() {}
        return (
          a(t, 'laya.d3.utils.Utils3D'),
          (t._rotationTransformScaleSkinAnimation = function(
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h,
            c,
            u,
            _
          ) {
            var d = t._tempArray16_0,
              f = t._tempArray16_1,
              p = t._tempArray16_2,
              m = a + a,
              g = r + r,
              y = s + s,
              v = a * m,
              b = r * m,
              w = r * g,
              x = s * m,
              I = s * g,
              C = s * y,
              S = o * m,
              T = o * g,
              M = o * y;
            (d[15] = 1),
              (d[0] = 1 - w - C),
              (d[1] = b + M),
              (d[2] = x - T),
              (d[4] = b - M),
              (d[5] = 1 - v - C),
              (d[6] = I + S),
              (d[8] = x + T),
              (d[9] = I - S),
              (d[10] = 1 - v - w),
              (f[15] = 1),
              (f[0] = l),
              (f[5] = h),
              (f[10] = c);
            var E, L, D, A, N;
            for (E = 0; E < 4; E++)
              (L = d[E]),
                (D = d[E + 4]),
                (A = d[E + 8]),
                (N = d[E + 12]),
                (p[E] = L),
                (p[E + 4] = D),
                (p[E + 8] = A),
                (p[E + 12] = L * e + D * i + A * n + N);
            for (E = 0; E < 4; E++)
              (L = p[E]),
                (D = p[E + 4]),
                (A = p[E + 8]),
                (N = p[E + 12]),
                (u[E + _] = L * f[0] + D * f[1] + A * f[2] + N * f[3]),
                (u[E + _ + 4] = L * f[4] + D * f[5] + A * f[6] + N * f[7]),
                (u[E + _ + 8] = L * f[8] + D * f[9] + A * f[10] + N * f[11]),
                (u[E + _ + 12] = L * f[12] + D * f[13] + A * f[14] + N * f[15]);
          }),
          (t._createNodeByJson = function(e, i, n, a) {
            if (!n)
              switch (i.type) {
                case 'Sprite3D':
                  n = new Pi();
                  break;
                case 'MeshSprite3D':
                  n = new gn();
                  break;
                case 'SkinnedMeshSprite3D':
                  n = new vn();
                  break;
                case 'ShuriKenParticle3D':
                  n = new yn();
                  break;
                case 'TrailSprite3D':
                  n = new bn();
                  break;
                case 'Terrain':
                  n = new fn();
                  break;
                case 'Camera':
                  n = new pn();
                  break;
                case 'DirectionLight':
                  n = new mn();
                  break;
                default:
                  throw new Error(
                    'Utils3D:unidentified class type in (.lh) file.'
                  );
              }
            var r = i.props;
            if (r) for (var s in r) n[s] = r[s];
            var o = i.customProps;
            o &&
              (n instanceof laya.d3.core.Sprite3D
                ? (n._parseBaseCustomProps(o),
                  n._parseCustomProps(e, a, o, i),
                  n._parseCustomComponent(e, a, i.components))
                : n._parseCustomProps(e, a, o, i));
            var l = i.child;
            if (l)
              for (var h = 0, c = l.length; h < c; h++) {
                var u = t._createNodeByJson(e, l[h], null, a);
                n.addChild(u);
              }
            return n;
          }),
          (t._computeBoneAndAnimationDatasByBindPoseMatrxix = function(
            t,
            e,
            i,
            n,
            a,
            r
          ) {
            var s,
              o,
              l = 0,
              h = 0,
              c = t.length;
            for (s = 0; s < c; l += t[s].keyframeWidth, h += 16, s++)
              laya.d3.utils.Utils3D._rotationTransformScaleSkinAnimation(
                e[l + 0],
                e[l + 1],
                e[l + 2],
                e[l + 3],
                e[l + 4],
                e[l + 5],
                e[l + 6],
                e[l + 7],
                e[l + 8],
                e[l + 9],
                n,
                h
              ),
                0 != s &&
                  ((o = 16 * t[s].parentIndex),
                  laya.d3.utils.Utils3D.mulMatrixByArray(n, o, n, h, n, h));
            var u = i.length;
            for (s = 0; s < u; s++)
              laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(
                n,
                16 * r[s],
                i[s],
                a,
                16 * s
              );
          }),
          (t._computeAnimationDatasByArrayAndMatrixFast = function(t, e, i, n) {
            for (var a = 0, r = t.length; a < r; a++)
              laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(
                e,
                16 * n[a],
                t[a],
                i,
                16 * a
              );
          }),
          (t._computeBoneAndAnimationDatasByBindPoseMatrxixOld = function(
            t,
            e,
            i,
            n,
            a
          ) {
            var r,
              s,
              o = 0,
              l = 0,
              h = t.length;
            for (r = 0; r < h; o += t[r].keyframeWidth, l += 16, r++)
              laya.d3.utils.Utils3D._rotationTransformScaleSkinAnimation(
                e[o + 7],
                e[o + 8],
                e[o + 9],
                e[o + 3],
                e[o + 4],
                e[o + 5],
                e[o + 6],
                e[o + 0],
                e[o + 1],
                e[o + 2],
                n,
                l
              ),
                0 != r &&
                  ((s = 16 * t[r].parentIndex),
                  laya.d3.utils.Utils3D.mulMatrixByArray(n, s, n, l, n, l));
            var c = i.length;
            for (r = 0; r < c; r++) {
              var u = 16 * r;
              laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(
                n,
                u,
                i[r],
                a,
                u
              );
            }
          }),
          (t._computeAnimationDatasByArrayAndMatrixFastOld = function(t, e, i) {
            for (var n = t.length, a = 0; a < n; a++) {
              var r = 16 * a;
              laya.d3.utils.Utils3D.mulMatrixByArrayAndMatrixFast(
                e,
                r,
                t[a],
                i,
                r
              );
            }
          }),
          (t._computeRootAnimationData = function(t, e, i) {
            for (
              var n = 0, a = 0, r = 0, s = t.length;
              n < s;
              a += t[n].keyframeWidth, r += 16, n++
            )
              laya.d3.utils.Utils3D.createAffineTransformationArray(
                e[a + 0],
                e[a + 1],
                e[a + 2],
                e[a + 3],
                e[a + 4],
                e[a + 5],
                e[a + 6],
                e[a + 7],
                e[a + 8],
                e[a + 9],
                i,
                r
              );
          }),
          (t.transformVector3ArrayByQuat = function(t, e, i, n, a) {
            var r = i.elements,
              s = t[e],
              o = t[e + 1],
              l = t[e + 2],
              h = r[0],
              c = r[1],
              u = r[2],
              _ = r[3],
              d = _ * s + c * l - u * o,
              f = _ * o + u * s - h * l,
              p = _ * l + h * o - c * s,
              m = -h * s - c * o - u * l;
            (n[a] = d * _ + m * -h + f * -u - p * -c),
              (n[a + 1] = f * _ + m * -c + p * -h - d * -u),
              (n[a + 2] = p * _ + m * -u + d * -c - f * -h);
          }),
          (t.mulMatrixByArray = function(e, i, n, a, r, s) {
            var o, l, h, c, u;
            if (r === n) {
              for (n = t._tempArray16_3, o = 0; o < 16; ++o) n[o] = r[s + o];
              a = 0;
            }
            for (o = 0; o < 4; o++)
              (l = e[i + o]),
                (h = e[i + o + 4]),
                (c = e[i + o + 8]),
                (u = e[i + o + 12]),
                (r[s + o] =
                  l * n[a + 0] + h * n[a + 1] + c * n[a + 2] + u * n[a + 3]),
                (r[s + o + 4] =
                  l * n[a + 4] + h * n[a + 5] + c * n[a + 6] + u * n[a + 7]),
                (r[s + o + 8] =
                  l * n[a + 8] + h * n[a + 9] + c * n[a + 10] + u * n[a + 11]),
                (r[s + o + 12] =
                  l * n[a + 12] +
                  h * n[a + 13] +
                  c * n[a + 14] +
                  u * n[a + 15]);
          }),
          (t.mulMatrixByArrayFast = function(t, e, i, n, a, r) {
            var s, o, l, h, c;
            for (s = 0; s < 4; s++)
              (o = t[e + s]),
                (l = t[e + s + 4]),
                (h = t[e + s + 8]),
                (c = t[e + s + 12]),
                (a[r + s] =
                  o * i[n + 0] + l * i[n + 1] + h * i[n + 2] + c * i[n + 3]),
                (a[r + s + 4] =
                  o * i[n + 4] + l * i[n + 5] + h * i[n + 6] + c * i[n + 7]),
                (a[r + s + 8] =
                  o * i[n + 8] + l * i[n + 9] + h * i[n + 10] + c * i[n + 11]),
                (a[r + s + 12] =
                  o * i[n + 12] +
                  l * i[n + 13] +
                  h * i[n + 14] +
                  c * i[n + 15]);
          }),
          (t.mulMatrixByArrayAndMatrixFast = function(t, e, i, n, a) {
            var r,
              s,
              o,
              l,
              h,
              c = i.elements,
              u = c[0],
              _ = c[1],
              d = c[2],
              f = c[3],
              p = c[4],
              m = c[5],
              g = c[6],
              y = c[7],
              v = c[8],
              b = c[9],
              w = c[10],
              x = c[11],
              I = c[12],
              C = c[13],
              S = c[14],
              T = c[15],
              M = e,
              E = e + 4,
              L = e + 8,
              D = e + 12,
              A = a,
              N = a + 4,
              R = a + 8,
              B = a + 12;
            for (r = 0; r < 4; r++)
              (s = t[M + r]),
                (o = t[E + r]),
                (l = t[L + r]),
                (h = t[D + r]),
                (n[A + r] = s * u + o * _ + l * d + h * f),
                (n[N + r] = s * p + o * m + l * g + h * y),
                (n[R + r] = s * v + o * b + l * w + h * x),
                (n[B + r] = s * I + o * C + l * S + h * T);
          }),
          (t.createAffineTransformationArray = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h,
            c,
            u
          ) {
            var _ = n + n,
              d = a + a,
              f = r + r,
              p = n * _,
              m = n * d,
              g = n * f,
              y = a * d,
              v = a * f,
              b = r * f,
              w = s * _,
              x = s * d,
              I = s * f;
            (c[u + 0] = (1 - (y + b)) * o),
              (c[u + 1] = (m + I) * o),
              (c[u + 2] = (g - x) * o),
              (c[u + 3] = 0),
              (c[u + 4] = (m - I) * l),
              (c[u + 5] = (1 - (p + b)) * l),
              (c[u + 6] = (v + w) * l),
              (c[u + 7] = 0),
              (c[u + 8] = (g + x) * h),
              (c[u + 9] = (v - w) * h),
              (c[u + 10] = (1 - (p + y)) * h),
              (c[u + 11] = 0),
              (c[u + 12] = t),
              (c[u + 13] = e),
              (c[u + 14] = i),
              (c[u + 15] = 1);
          }),
          (t.transformVector3ArrayToVector3ArrayCoordinate = function(
            e,
            i,
            n,
            a,
            r
          ) {
            var s = t._tempArray4_0,
              o = e[i + 0],
              l = e[i + 1],
              h = e[i + 2],
              c = n.elements;
            (s[0] = o * c[0] + l * c[4] + h * c[8] + c[12]),
              (s[1] = o * c[1] + l * c[5] + h * c[9] + c[13]),
              (s[2] = o * c[2] + l * c[6] + h * c[10] + c[14]),
              (s[3] = 1 / (o * c[3] + l * c[7] + h * c[11] + c[15])),
              (a[r + 0] = s[0] * s[3]),
              (a[r + 1] = s[1] * s[3]),
              (a[r + 2] = s[2] * s[3]);
          }),
          (t.transformLightingMapTexcoordByUV0Array = function(t, e, i, n, a) {
            var r = i.elements;
            (n[a + 0] = t[e + 0] * r[0] + r[2]),
              (n[a + 1] = (t[e + 1] - 1) * r[1] + r[3]);
          }),
          (t.transformLightingMapTexcoordByUV1Array = function(t, e, i, n, a) {
            var r = i.elements;
            (n[a + 0] = t[e + 0] * r[0] + r[2]),
              (n[a + 1] = 1 + t[e + 1] * r[1] + r[3]);
          }),
          (t.getURLVerion = function(t) {
            var e = t.indexOf('?');
            return e >= 0 ? t.substr(e) : null;
          }),
          (t._quaternionCreateFromYawPitchRollArray = function(t, e, i, n) {
            var a = 0.5 * i,
              r = 0.5 * e,
              s = 0.5 * t,
              o = Math.sin(a),
              l = Math.cos(a),
              h = Math.sin(r),
              c = Math.cos(r),
              u = Math.sin(s),
              _ = Math.cos(s);
            (n[0] = _ * h * l + u * c * o),
              (n[1] = u * c * l - _ * h * o),
              (n[2] = _ * c * o - u * h * l),
              (n[3] = _ * c * l + u * h * o);
          }),
          (t._createAffineTransformationArray = function(t, e, i, n) {
            var a = e[0],
              r = e[1],
              s = e[2],
              o = e[3],
              l = a + a,
              h = r + r,
              c = s + s,
              u = a * l,
              _ = a * h,
              d = a * c,
              f = r * h,
              p = r * c,
              m = s * c,
              g = o * l,
              y = o * h,
              v = o * c,
              b = i[0],
              w = i[1],
              x = i[2];
            (n[0] = (1 - (f + m)) * b),
              (n[1] = (_ + v) * b),
              (n[2] = (d - y) * b),
              (n[3] = 0),
              (n[4] = (_ - v) * w),
              (n[5] = (1 - (u + m)) * w),
              (n[6] = (p + g) * w),
              (n[7] = 0),
              (n[8] = (d + y) * x),
              (n[9] = (p - g) * x),
              (n[10] = (1 - (u + f)) * x),
              (n[11] = 0),
              (n[12] = t[0]),
              (n[13] = t[1]),
              (n[14] = t[2]),
              (n[15] = 1);
          }),
          (t._mulMatrixArray = function(t, e, i, n) {
            var a,
              r,
              s,
              o,
              l,
              h = e.elements,
              c = h[0],
              u = h[1],
              _ = h[2],
              d = h[3],
              f = h[4],
              p = h[5],
              m = h[6],
              g = h[7],
              y = h[8],
              v = h[9],
              b = h[10],
              w = h[11],
              x = h[12],
              I = h[13],
              C = h[14],
              S = h[15],
              T = n,
              M = n + 4,
              E = n + 8,
              L = n + 12;
            for (a = 0; a < 4; a++)
              (r = t[a]),
                (s = t[a + 4]),
                (o = t[a + 8]),
                (l = t[a + 12]),
                (i[T + a] = r * c + s * u + o * _ + l * d),
                (i[M + a] = r * f + s * p + o * m + l * g),
                (i[E + a] = r * y + s * v + o * b + l * w),
                (i[L + a] = r * x + s * I + o * C + l * S);
          }),
          (t.getYawPitchRoll = function(e, i) {
            t.transformQuat(Re.ForwardRH, e, Le.TEMPVector31),
              t.transformQuat(Re.Up, e, Le.TEMPVector32);
            var n = Le.TEMPVector32.elements;
            t.angleTo(Re.ZERO, Le.TEMPVector31, Le.TEMPVector33);
            var a = Le.TEMPVector33.elements;
            a[0] == Math.PI / 2
              ? ((a[1] = t.arcTanAngle(n[2], n[0])), (a[2] = 0))
              : a[0] == -Math.PI / 2
              ? ((a[1] = t.arcTanAngle(-n[2], -n[0])), (a[2] = 0))
              : (Te.createRotationY(-a[1], Le.TEMPMatrix0),
                Te.createRotationX(-a[0], Le.TEMPMatrix1),
                Re.transformCoordinate(
                  Le.TEMPVector32,
                  Le.TEMPMatrix0,
                  Le.TEMPVector32
                ),
                Re.transformCoordinate(
                  Le.TEMPVector32,
                  Le.TEMPMatrix1,
                  Le.TEMPVector32
                ),
                (a[2] = t.arcTanAngle(n[1], -n[0]))),
              a[1] <= -Math.PI && (a[1] = Math.PI),
              a[2] <= -Math.PI && (a[2] = Math.PI),
              a[1] >= Math.PI &&
                a[2] >= Math.PI &&
                ((a[1] = 0), (a[2] = 0), (a[0] = Math.PI - a[0])),
              (i[0] = a[1]),
              (i[1] = a[0]),
              (i[2] = a[2]);
          }),
          (t.arcTanAngle = function(t, e) {
            return 0 == t
              ? 1 == e
                ? Math.PI / 2
                : -Math.PI / 2
              : t > 0
              ? Math.atan(e / t)
              : t < 0
              ? e > 0
                ? Math.atan(e / t) + Math.PI
                : Math.atan(e / t) - Math.PI
              : 0;
          }),
          (t.angleTo = function(e, i, n) {
            Re.subtract(i, e, Le.TEMPVector30),
              Re.normalize(Le.TEMPVector30, Le.TEMPVector30),
              (n.elements[0] = Math.asin(Le.TEMPVector30.y)),
              (n.elements[1] = t.arcTanAngle(
                -Le.TEMPVector30.z,
                -Le.TEMPVector30.x
              ));
          }),
          (t.transformQuat = function(t, e, i) {
            var n = i.elements,
              a = t.elements,
              r = e,
              s = a[0],
              o = a[1],
              l = a[2],
              h = r[0],
              c = r[1],
              u = r[2],
              _ = r[3],
              d = _ * s + c * l - u * o,
              f = _ * o + u * s - h * l,
              p = _ * l + h * o - c * s,
              m = -h * s - c * o - u * l;
            (n[0] = d * _ + m * -h + f * -u - p * -c),
              (n[1] = f * _ + m * -c + p * -h - d * -u),
              (n[2] = p * _ + m * -u + d * -c - f * -h);
          }),
          (t.quaterionNormalize = function(t, e) {
            var i = t[0],
              n = t[1],
              a = t[2],
              r = t[3],
              s = i * i + n * n + a * a + r * r;
            s > 0 &&
              ((s = 1 / Math.sqrt(s)),
              (e[0] = i * s),
              (e[1] = n * s),
              (e[2] = a * s),
              (e[3] = r * s));
          }),
          (t.matrix4x4MultiplyFFF = function(t, e, i) {
            var n, a, r, s, o;
            if (i === e)
              for (e = new Float32Array(16), n = 0; n < 16; ++n) e[n] = i[n];
            for (n = 0; n < 4; n++)
              (a = t[n]),
                (r = t[n + 4]),
                (s = t[n + 8]),
                (o = t[n + 12]),
                (i[n] = a * e[0] + r * e[1] + s * e[2] + o * e[3]),
                (i[n + 4] = a * e[4] + r * e[5] + s * e[6] + o * e[7]),
                (i[n + 8] = a * e[8] + r * e[9] + s * e[10] + o * e[11]),
                (i[n + 12] = a * e[12] + r * e[13] + s * e[14] + o * e[15]);
          }),
          (t.matrix4x4MultiplyMFM = function(e, i, n) {
            t.matrix4x4MultiplyFFF(e.elements, i, n.elements);
          }),
          (t._tempVector3_0 = new Re()),
          (t._tempVector3_1 = new Re()),
          (t._tempVector3_2 = new Re()),
          (t._tempVector3_3 = new Re()),
          (t._tempVector3_4 = new Re()),
          (t._tempVector3_5 = new Re()),
          (t._tempVector3_6 = new Re()),
          (t._tempArray4_0 = new Float32Array(4)),
          (t._tempArray16_0 = new Float32Array(16)),
          (t._tempArray16_1 = new Float32Array(16)),
          (t._tempArray16_2 = new Float32Array(16)),
          (t._tempArray16_3 = new Float32Array(16)),
          n(t, [
            '_typeToFunO',
            function() {
              return (this._typeToFunO = {
                INT16: 'writeInt16',
                SHORT: 'writeInt16',
                UINT16: 'writeUint16',
                UINT32: 'writeUint32',
                FLOAT32: 'writeFloat32',
                INT: 'writeInt32',
                UINT: 'writeUint32',
                BYTE: 'writeByte',
                STRING: 'writeUTFString'
              });
            }
          ]),
          t
        );
      })(),
      Ze = (function() {
        function t() {}
        return (
          a(t, 'Laya3D'),
          (t._cancelLoadByUrl = function(e) {
            i.loader.cancelLoadByUrl(e),
              t._innerFirstLevelLoaderManager.cancelLoadByUrl(e),
              t._innerSecondLevelLoaderManager.cancelLoadByUrl(e),
              t._innerThirdLevelLoaderManager.cancelLoadByUrl(e),
              t._innerFourthLevelLoaderManager.cancelLoadByUrl(e);
          }),
          (t._changeWebGLSize = function(t, e) {
            R.onStageResize(t, e), (_t.clientWidth = t), (_t.clientHeight = e);
          }),
          (t.__init__ = function() {
            var e = b.createMap;
            (e.lh = [Pi, 'SPRITE3DHIERARCHY']),
              (e.ls = [ki, 'SPRITE3DHIERARCHY']),
              (e.lm = [an, 'MESH']),
              (e.lmat = [ji, 'MATERIAL']),
              (e.lpbr = [Hi, 'MATERIAL']),
              (e.ltc = [hn, 'TEXTURECUBE']),
              (e.jpg = [ln, 'nativeimage']),
              (e.jpeg = [ln, 'nativeimage']),
              (e.png = [ln, 'nativeimage']),
              (e.pkm = [ln, 'arraybuffer']),
              (e.lsani = [l, 'arraybuffer']),
              (e.lrani = [l, 'arraybuffer']),
              (e.raw = [en, 'arraybuffer']),
              (e.mipmaps = [en, 'arraybuffer']),
              (e.thdata = [vi, 'arraybuffer']),
              (e.lt = [bi, 'TERRAIN']),
              (e.lani = [fi, 'arraybuffer']),
              (e.lav = [pi, 'json']),
              (e.ani = [l, 'arraybuffer']),
              (v.parserMap.SPRITE3DHIERARCHY = t._loadHierarchy),
              (v.parserMap.MESH = t._loadMesh),
              (v.parserMap.MATERIAL = t._loadMaterial),
              (v.parserMap.TEXTURECUBE = t._loadTextureCube),
              (v.parserMap.TERRAIN = t._loadTerrain),
              t._innerFirstLevelLoaderManager.on(
                'error',
                null,
                t._eventLoadManagerError
              ),
              t._innerSecondLevelLoaderManager.on(
                'error',
                null,
                t._eventLoadManagerError
              ),
              t._innerThirdLevelLoaderManager.on(
                'error',
                null,
                t._eventLoadManagerError
              ),
              t._innerFourthLevelLoaderManager.on(
                'error',
                null,
                t._eventLoadManagerError
              );
          }),
          (t.READ_BLOCK = function() {
            return (t._readData.pos += 4), !0;
          }),
          (t.READ_DATA = function() {
            return (
              (t._DATA.offset = t._readData.getUint32()),
              (t._DATA.size = t._readData.getUint32()),
              !0
            );
          }),
          (t.READ_STRINGS = function() {
            var e = [],
              i = { offset: 0, size: 0 };
            (i.offset = t._readData.getUint16()),
              (i.size = t._readData.getUint16());
            t._readData.pos;
            t._readData.pos = i.offset + t._DATA.offset;
            for (var n = 0; n < i.size; n++) {
              var a = t._readData.readUTFString();
              (-1 === a.lastIndexOf('.lmat') &&
                -1 === a.lastIndexOf('.lpbr')) ||
                e.push(a);
            }
            return e;
          }),
          (t.formatRelativePath = function(t, e) {
            var i;
            if ('.' === e.charAt(0)) {
              for (var n = (t + e).split('/'), a = 0, r = n.length; a < r; a++)
                if ('..' == n[a]) {
                  var s = a - 1;
                  s > 0 && '..' !== n[s] && (n.splice(s, 2), (a -= 2));
                }
              i = n.join('/');
            } else i = t + e;
            return null != A.customFormat && (i = A.customFormat(i, null)), i;
          }),
          (t._eventLoadManagerError = function(t) {
            i.loader.event('error', t);
          }),
          (t._addHierarchyInnerUrls = function(e, i, n, a, r, s) {
            var o = t.formatRelativePath(a, r);
            n && (o += n), e.push({ url: o, clas: s }), (i[r] = o);
          }),
          (t._getSprite3DHierarchyInnerUrls = function(e, i, n, a, r, s, o) {
            var l,
              h = 0,
              c = 0;
            switch (e.type) {
              case 'Scene':
                var u = e.customProps.lightmaps;
                for (h = 0, c = u.length; h < c; h++) {
                  var d = u[h].replace('.exr', '.png');
                  t._addHierarchyInnerUrls(a, r, s, o, d, ln);
                }
                break;
              case 'MeshSprite3D':
              case 'TrailSprite3D':
              case 'LineSprite3D':
              case 'SkinnedMeshSprite3D':
                var f;
                if (e.instanceParams)
                  (f = e.instanceParams.loadPath) &&
                    t._addHierarchyInnerUrls(i, r, s, o, f, an);
                else {
                  (f = (l = e.customProps).meshPath) &&
                    t._addHierarchyInnerUrls(i, r, s, o, f, an);
                  var p = l.materials;
                  if (p)
                    for (h = 0, c = p.length; h < c; h++) {
                      var m = p[h],
                        g = m.type.split('.'),
                        y = _.window;
                      if (
                        (g.forEach(function(t) {
                          y = y[t];
                        }),
                        'function' != typeof y)
                      )
                        throw '_getSprite3DHierarchyInnerUrls 错误: ' +
                          m.type +
                          ' 不是类';
                      t._addHierarchyInnerUrls(n, r, s, o, m.path, y);
                    }
                }
                break;
              case 'ShuriKenParticle3D':
                var v = (l = e.customProps).meshPath;
                v && t._addHierarchyInnerUrls(i, r, s, o, v, an);
                var b = l.material;
                if (b)
                  (g = b.type.split('.')),
                    (y = _.window),
                    g.forEach(function(t) {
                      y = y[t];
                    }),
                    t._addHierarchyInnerUrls(n, r, s, o, b.path, y);
                else {
                  var w = l.materialPath;
                  if (w) t._addHierarchyInnerUrls(n, r, s, o, w, Ji);
                  else {
                    var x = l.texturePath;
                    x && t._addHierarchyInnerUrls(a, r, s, o, x, ln);
                  }
                }
                break;
              case 'Terrain':
                t._addHierarchyInnerUrls(
                  a,
                  r,
                  s,
                  o,
                  e.customProps.dataPath,
                  bi
                );
            }
            var I = e.components;
            for (var C in I) {
              var S = I[C];
              switch (C) {
                case 'Animator':
                  var T = S.avatarPath;
                  if (T) t._addHierarchyInnerUrls(a, r, s, o, T, pi);
                  else {
                    var M = S.avatar;
                    M && t._addHierarchyInnerUrls(a, r, s, o, M.path, pi);
                  }
                  var E = S.clipPaths;
                  for (h = 0, c = E.length; h < c; h++)
                    t._addHierarchyInnerUrls(a, r, s, o, E[h], fi);
              }
            }
            var L = e.child;
            for (h = 0, c = L.length; h < c; h++)
              t._getSprite3DHierarchyInnerUrls(L[h], i, n, a, r, s, o);
          }),
          (t._loadHierarchy = function(e) {
            e.on('loaded', null, t._onHierarchylhLoaded, [
              e,
              e._class._getGroup()
            ]),
              e.load(e.url, 'json', !1, null, !0);
          }),
          (t._onHierarchylhLoaded = function(e, i, n) {
            if (e._class.destroyed) e.endLoad();
            else {
              var a = e.url,
                r = Ke.getURLVerion(a),
                s = A.getPathcaps(a),
                o = [],
                l = [],
                h = [],
                c = {};
              t._getSprite3DHierarchyInnerUrls(n, o, l, h, c, r, s);
              var u = o.length + l.length + h.length,
                _ = u + 1,
                d = 1 / _;
              if ((t._onProcessChange(e, 0, d, 1), h.length > 0)) {
                var f = u / _,
                  p = y.create(null, t._onProcessChange, [e, d, f], !1);
                t._innerFourthLevelLoaderManager.create(
                  h,
                  y.create(null, t._onHierarchyInnerForthLevResouLoaded, [
                    e,
                    i,
                    p,
                    n,
                    c,
                    o,
                    l,
                    d + f * h.length,
                    f
                  ]),
                  p,
                  null,
                  null,
                  1,
                  !0,
                  i
                );
              } else
                t._onHierarchyInnerForthLevResouLoaded(
                  e,
                  i,
                  null,
                  n,
                  c,
                  o,
                  l,
                  d,
                  f
                );
            }
          }),
          (t._onHierarchyInnerForthLevResouLoaded = function(
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h
          ) {
            if (e._class.destroyed) e.endLoad();
            else if ((n && n.recover(), o.length > 0)) {
              var c = y.create(null, t._onProcessChange, [e, l, h], !1);
              t._innerSecondLevelLoaderManager.create(
                o,
                y.create(null, t._onHierarchyInnerSecondLevResouLoaded, [
                  e,
                  i,
                  c,
                  a,
                  r,
                  s,
                  l + h * o.length,
                  h
                ]),
                n,
                null,
                null,
                1,
                !0,
                i
              );
            } else
              t._onHierarchyInnerSecondLevResouLoaded(
                e,
                i,
                null,
                a,
                r,
                s,
                l,
                h
              );
          }),
          (t._onHierarchyInnerSecondLevResouLoaded = function(
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l
          ) {
            if (e._class.destroyed) e.endLoad();
            else if ((n && n.recover(), s.length > 0)) {
              var h = y.create(null, t._onProcessChange, [e, o, l], !1);
              t._innerFirstLevelLoaderManager.create(
                s,
                y.create(null, t._onHierarchyInnerFirstLevResouLoaded, [
                  e,
                  h,
                  a,
                  r
                ]),
                n,
                null,
                null,
                1,
                !0,
                i
              );
            } else t._onHierarchyInnerFirstLevResouLoaded(e, null, a, r);
          }),
          (t._onHierarchyInnerFirstLevResouLoaded = function(t, e, i, n) {
            e && e.recover(), t.endLoad([i, n]);
          }),
          (t._loadTerrain = function(e) {
            e.on('loaded', null, t._onTerrainLtLoaded, [
              e,
              e._class._getGroup()
            ]),
              e.load(e.url, 'json', !1, null, !0);
          }),
          (t._onTerrainLtLoaded = function(e, i, n) {
            if (e._class.destroyed) e.endLoad();
            else {
              var a,
                r,
                s = e.url,
                o = Ke.getURLVerion(s),
                l = A.getPathcaps(s),
                h = [],
                c = {},
                u = 0,
                _ = 0,
                d = n.heightData;
              (a = d.url),
                (r = t.formatRelativePath(l, a)),
                o && (r += o),
                (c[a] = r),
                (a = r);
              var f = n.detailTexture;
              for (u = 0, _ = f.length; u < _; u++)
                h.push({ url: f[u].diffuse });
              var p = n.normalMap;
              for (u = 0, _ = p.length; u < _; u++) h.push({ url: p[u] });
              var m = n.alphaMap;
              for (u = 0, _ = m.length; u < _; u++)
                h.push({ url: m[u], params: [!1, !1, 6408, !0] });
              for (u = 0, _ = h.length; u < _; u++) {
                var g = h[u].url;
                (r = t.formatRelativePath(l, g)),
                  o && (r += o),
                  (h[u].url = r),
                  (c[g] = r);
              }
              var v = h.length,
                b = v + 2,
                w = 1 / b;
              t._onProcessChange(e, 0, w, 1);
              var x = { heightMapLoaded: !1, texturesLoaded: !1 },
                I = y.create(null, t._onProcessChange, [e, w, w], !1);
              t._innerFourthLevelLoaderManager.create(
                a,
                y.create(null, t._onTerrainHeightMapLoaded, [e, I, n, c, x]),
                I,
                null,
                [d.numX, d.numZ, d.bitType, d.value],
                1,
                !0,
                i
              );
              var C = y.create(null, t._onProcessChange, [e, 2 * w, v / b], !1);
              t._innerFourthLevelLoaderManager.create(
                h,
                y.create(null, t._onTerrainTexturesLoaded, [e, C, n, c, x]),
                C,
                null,
                null,
                1,
                !0,
                i
              );
            }
          }),
          (t._onTerrainHeightMapLoaded = function(t, e, i, n, a) {
            (a.heightMapLoaded = !0),
              a.texturesLoaded && (t.endLoad([i, n]), e.recover());
          }),
          (t._onTerrainTexturesLoaded = function(t, e, i, n, a) {
            (a.texturesLoaded = !0),
              a.heightMapLoaded && (t.endLoad([i, n]), e.recover());
          }),
          (t._loadMesh = function(e) {
            e.on('loaded', null, t._onMeshLmLoaded, [e, e._class._getGroup()]),
              e.load(e.url, 'arraybuffer', !1, null, !0);
          }),
          (t._onMeshLmLoaded = function(e, i, n) {
            if (e._class.destroyed) e.endLoad();
            else {
              var a,
                r,
                s = e.url,
                o = Ke.getURLVerion(s),
                l = A.getPathcaps(s),
                h = {},
                c = 0,
                u = 0,
                _ = 0;
              (t._readData = new f(n)).pos = 0;
              switch (t._readData.readUTFString()) {
                case 'LAYAMODEL:02':
                case 'LAYAMODEL:03':
                case 'LAYAMODEL:0301':
                  var d = t._readData.getUint32();
                  (t._readData.pos = t._readData.pos + 4),
                    (_ = t._readData.getUint16()),
                    (t._readData.pos = t._readData.pos + 8 * _);
                  var p = t._readData.getUint32();
                  for (
                    _ = t._readData.getUint16(),
                      t._readData.pos = d + p,
                      a = [],
                      c = 0;
                    c < _;
                    c++
                  ) {
                    var m = t._readData.readUTFString();
                    -1 !== m.lastIndexOf('.lmat') && a.push(m);
                  }
                  break;
                default:
                  for (t.READ_BLOCK(), c = 0; c < 2; c++) {
                    var g = t._readData.getUint16(),
                      v = t._strings[g],
                      b = t['READ_' + v];
                    if (null == b)
                      throw new Error(
                        'model file err,no this function:' + g + ' ' + v
                      );
                    1 === c ? (a = b.call()) : b.call();
                  }
              }
              for (c = 0, u = a.length; c < u; c++) {
                var w = a[c];
                (r = t.formatRelativePath(l, w)),
                  o && (r += o),
                  (a[c] = r),
                  (h[w] = r);
              }
              if (a.length > 0) {
                t._onProcessChange(e, 0, 0.5, 1);
                var x = y.create(null, t._onProcessChange, [e, 0.5, 0.5], !1);
                t._innerSecondLevelLoaderManager.create(
                  a,
                  y.create(null, t._onMeshMateialLoaded, [e, x, n, h]),
                  x,
                  null,
                  null,
                  1,
                  !0,
                  i
                );
              } else e.endLoad([n, h]);
            }
          }),
          (t._onMeshMateialLoaded = function(t, e, i, n) {
            t.endLoad([i, n]), e.recover();
          }),
          (t._getMaterialTexturePath = function(e, i, n) {
            var a = e.length - 4;
            return (
              (e.indexOf('.dds') != a &&
                e.indexOf('.tga') != a &&
                e.indexOf('.exr') != a &&
                e.indexOf('.DDS') != a &&
                e.indexOf('.TGA') != a &&
                e.indexOf('.EXR') != a) ||
                (e = e.substr(0, a) + '.png'),
              (e = t.formatRelativePath(n, e)),
              i && (e += i),
              e
            );
          }),
          (t._loadMaterial = function(e) {
            e.on('loaded', null, t._onMaterilLmatLoaded, [
              e,
              e._class._getGroup()
            ]),
              e.load(e.url, 'json', !1, null, !0);
          }),
          (t._onMaterilLmatLoaded = function(e, i, n) {
            if (e._class.destroyed) e.endLoad();
            else {
              var a,
                r = e.url,
                s = Ke.getURLVerion(r),
                o = A.getPathcaps(r),
                l = [],
                h = {},
                c = n.customProps,
                u = n.version;
              if (u)
                switch (u) {
                  case 'LAYAMATERIAL:01':
                  case 'LAYAMATERIAL:02':
                    for (
                      var _ = n.props.textures, d = 0, f = _.length;
                      d < f;
                      d++
                    ) {
                      var p = _[d],
                        m = p.path;
                      if (m) {
                        var g = m.length - 4;
                        (m.indexOf('.exr') != g && m.indexOf('.EXR') != g) ||
                          (m = m.substr(0, g) + '.png'),
                          (a = t.formatRelativePath(o, m)),
                          s && (a += s),
                          l.push({ url: a, params: p.params }),
                          (h[m] = a);
                      }
                    }
                    break;
                  default:
                    throw new Error('Laya3D:unkonwn version.');
                }
              else {
                var v = c.diffuseTexture.texture2D;
                if (
                  (v &&
                    ((a = t._getMaterialTexturePath(v, s, o)),
                    l.push(a),
                    (h[v] = a)),
                  c.normalTexture)
                ) {
                  var b = c.normalTexture.texture2D;
                  b &&
                    ((a = t._getMaterialTexturePath(b, s, o)),
                    l.push(a),
                    (h[b] = a));
                }
                if (c.specularTexture) {
                  var w = c.specularTexture.texture2D;
                  w &&
                    ((a = t._getMaterialTexturePath(w, s, o)),
                    l.push(a),
                    (h[w] = a));
                }
                if (c.emissiveTexture) {
                  var x = c.emissiveTexture.texture2D;
                  x &&
                    ((a = t._getMaterialTexturePath(x, s, o)),
                    l.push(a),
                    (h[x] = a));
                }
                if (c.ambientTexture) {
                  var I = c.ambientTexture.texture2D;
                  I &&
                    ((a = t._getMaterialTexturePath(I, s, o)),
                    l.push(a),
                    (h[I] = a));
                }
                if (c.reflectTexture) {
                  var C = c.reflectTexture.texture2D;
                  C &&
                    ((a = t._getMaterialTexturePath(C, s, o)),
                    l.push(a),
                    (h[C] = a));
                }
              }
              var S = l.length,
                T = S + 1,
                M = 1 / T;
              if ((t._onProcessChange(e, 0, M, 1), S > 0)) {
                var E = y.create(null, t._onProcessChange, [e, M, S / T], !1);
                t._innerFourthLevelLoaderManager.create(
                  l,
                  y.create(null, t._onMateialTexturesLoaded, [e, E, n, h]),
                  E,
                  ln,
                  null,
                  1,
                  !0,
                  i
                );
              } else t._onMateialTexturesLoaded(e, null, n, null);
            }
          }),
          (t._onMateialTexturesLoaded = function(t, e, i, n) {
            t.endLoad([i, n]), e && e.recover();
          }),
          (t._loadTextureCube = function(e) {
            e.on('loaded', null, t._onTextureCubeLtcLoaded, [e]),
              e.load(e.url, 'json', !1, null, !0);
          }),
          (t._onTextureCubeLtcLoaded = function(e, i) {
            if (e._class.destroyed) e.endLoad();
            else {
              var n = A.getPathcaps(e.url),
                a = [
                  t.formatRelativePath(n, i.px),
                  t.formatRelativePath(n, i.nx),
                  t.formatRelativePath(n, i.py),
                  t.formatRelativePath(n, i.ny),
                  t.formatRelativePath(n, i.pz),
                  t.formatRelativePath(n, i.nz)
                ];
              t._onProcessChange(e, 0, 1 / 7, 1);
              var r = y.create(null, t._onProcessChange, [e, 1 / 7, 6 / 7], !1);
              t._innerFourthLevelLoaderManager.load(
                a,
                y.create(null, t._onTextureCubeImagesLoaded, [e, a, r]),
                r,
                'nativeimage'
              );
            }
          }),
          (t._onTextureCubeImagesLoaded = function(t, e, i) {
            var n = [];
            n.length = 6;
            for (var a = 0; a < 6; a++) {
              var r = e[a];
              (n[a] = v.getRes(r)), v.clearRes(r);
            }
            t.endLoad(n), i.recover();
          }),
          (t._onProcessChange = function(t, e, i, n) {
            (n = e + n * i) < 1 && t.event('progress', n);
          }),
          (t.init = function(e, n, a, r, s, o) {
            void 0 === a && (a = !1),
              void 0 === r && (r = !1),
              void 0 === s && (s = !0),
              void 0 === o && (o = !0),
              (T.update3DLoop = function() {
                ni._triggerCollision();
              }),
              (T.cancelLoadByUrl = function(e) {
                t._cancelLoadByUrl(e);
              }),
              (m.isAntialias = a),
              (m.isAlpha = r),
              (m.premultipliedAlpha = s),
              (m.isStencil = o),
              R.enable()
                ? ((T.changeWebGLSize = t._changeWebGLSize),
                  (I.is3DMode = !0),
                  i.init(e, n),
                  z.__init__(),
                  Xe.__init__(),
                  Vi.__init__(),
                  Ve.__init__(),
                  gn.__init__(),
                  U.__init__(),
                  t.__init__(),
                  (c.maxTextureCount = 2),
                  (t.debugMode || dt.debugMode) &&
                    (t._debugPhasorSprite = new ht()))
                : alert('Laya3D init error,must support webGL!');
          }),
          (t.HIERARCHY = 'SPRITE3DHIERARCHY'),
          (t.MESH = 'MESH'),
          (t.MATERIAL = 'MATERIAL'),
          (t.PBRMATERIAL = 'PBRMTL'),
          (t.TEXTURECUBE = 'TEXTURECUBE'),
          (t.TERRAIN = 'TERRAIN'),
          (t._readData = null),
          (t._debugPhasorSprite = null),
          (t.debugMode = !1),
          n(t, [
            '_DATA',
            function() {
              return (this._DATA = { offset: 0, size: 0 });
            },
            '_strings',
            function() {
              return (this._strings = ['BLOCK', 'DATA', 'STRINGS']);
            },
            '_innerFirstLevelLoaderManager',
            function() {
              return (this._innerFirstLevelLoaderManager = new b());
            },
            '_innerSecondLevelLoaderManager',
            function() {
              return (this._innerSecondLevelLoaderManager = new b());
            },
            '_innerThirdLevelLoaderManager',
            function() {
              return (this._innerThirdLevelLoaderManager = new b());
            },
            '_innerFourthLevelLoaderManager',
            function() {
              return (this._innerFourthLevelLoaderManager = new b());
            }
          ]),
          t
        );
      })(),
      Qe = (function(t) {
        function e(t) {
          e.__super.call(this),
            (this._owner = t),
            (this._childs = []),
            (this._localMatrix = new Float32Array(16)),
            (this._localQuaternionUpdate = !1),
            (this._locaEulerlUpdate = !1),
            (this._localUpdate = !1),
            (this._worldUpdate = !0);
        }
        a(e, 'laya.d3.animation.AnimationTransform3D', g);
        var i = e.prototype;
        return (
          (i._getlocalMatrix = function() {
            return (
              this._localUpdate &&
                (Ke._createAffineTransformationArray(
                  this._localPosition,
                  this._localRotation,
                  this._localScale,
                  this._localMatrix
                ),
                (this._localUpdate = !1)),
              this._localMatrix
            );
          }),
          (i._onWorldTransform = function() {
            if (!this._worldUpdate) {
              this._worldUpdate = !0;
              for (var t = 0, e = this._childs.length; t < e; t++)
                this._childs[t]._onWorldTransform();
            }
          }),
          (i._setWorldMatrixAndUpdate = function(t) {
            if (((this._worldMatrix = t), null == this._parent))
              throw new Error("don't need to set worldMatrix to root Node.");
            if (null == this._parent._parent)
              for (var e = this._getlocalMatrix(), i = 0; i < 16; ++i)
                this._worldMatrix[i] = e[i];
            else
              Ke.matrix4x4MultiplyFFF(
                this._parent.getWorldMatrix(),
                this._getlocalMatrix(),
                this._worldMatrix
              );
            this._worldUpdate = !1;
          }),
          (i._setWorldMatrixNoUpdate = function(t) {
            this._worldMatrix = t;
          }),
          (i._setWorldMatrixIgnoreUpdate = function(t) {
            (this._worldMatrix = t), (this._worldUpdate = !1);
          }),
          (i.getLocalPosition = function() {
            return this._localPosition;
          }),
          (i.setLocalPosition = function(t) {
            if (this._parent)
              (this._localPosition = t),
                (this._localUpdate = !0),
                this._onWorldTransform();
            else {
              var e = this._entity.owner._transform,
                i = this._entity.localPosition,
                n = i.elements;
              (n[0] = t[0]),
                (n[1] = t[1]),
                (n[2] = t[2]),
                (e.localPosition = i);
            }
          }),
          (i.getLocalRotation = function() {
            if (this._localQuaternionUpdate) {
              var t = this._localRotationEuler;
              Ke._quaternionCreateFromYawPitchRollArray(
                t[1] / e._angleToRandin,
                t[0] / e._angleToRandin,
                t[2] / e._angleToRandin,
                this._localRotation
              ),
                (this._localQuaternionUpdate = !1);
            }
            return this._localRotation;
          }),
          (i.setLocalRotation = function(t) {
            if (this._parent)
              (this._localRotation = t),
                Ke.quaterionNormalize(this._localRotation, this._localRotation),
                (this._locaEulerlUpdate = !0),
                (this._localQuaternionUpdate = !1),
                (this._localUpdate = !0),
                this._onWorldTransform();
            else {
              var e = this._entity.owner._transform,
                i = this._entity.localRotation,
                n = i.elements;
              (n[0] = t[0]),
                (n[1] = t[1]),
                (n[2] = t[2]),
                (n[3] = t[3]),
                (e.localRotation = i);
            }
          }),
          (i.getLocalScale = function() {
            return this._localScale;
          }),
          (i.setLocalScale = function(t) {
            if (this._parent)
              (this._localScale = t),
                (this._localUpdate = !0),
                this._onWorldTransform();
            else {
              var e = this._entity.owner._transform,
                i = this._entity.localScale,
                n = i.elements;
              (n[0] = t[0]), (n[1] = t[1]), (n[2] = t[2]), (e.localScale = i);
            }
          }),
          (i.getLocalRotationEuler = function() {
            if (this._locaEulerlUpdate) {
              Ke.getYawPitchRoll(this._localRotation, e._tempVector3);
              var t = e._tempVector3,
                i = this._localRotationEuler;
              (i[0] = t[1] * e._angleToRandin),
                (i[1] = t[0] * e._angleToRandin),
                (i[2] = t[2] * e._angleToRandin),
                (this._locaEulerlUpdate = !1);
            }
            return this._localRotationEuler;
          }),
          (i.setLocalRotationEuler = function(t) {
            if (this._parent)
              Ke._quaternionCreateFromYawPitchRollArray(
                t[1] / e._angleToRandin,
                t[0] / e._angleToRandin,
                t[2] / e._angleToRandin,
                this._localRotation
              ),
                (this._localRotationEuler = t),
                (this._locaEulerlUpdate = !1),
                (this._localQuaternionUpdate = !1),
                (this._localUpdate = !0),
                this._onWorldTransform();
            else {
              var i = this._entity.owner._transform,
                n = this._entity.localRotationEuler,
                a = n.elements;
              (a[0] = t[0]),
                (a[1] = t[1]),
                (a[2] = t[2]),
                (i.localRotationEuler = n);
            }
          }),
          (i.getWorldMatrix = function() {
            if (this._worldUpdate) {
              if (null != this._parent._parent)
                Ke.matrix4x4MultiplyFFF(
                  this._parent.getWorldMatrix(),
                  this._getlocalMatrix(),
                  this._worldMatrix
                );
              else
                for (var t = this._getlocalMatrix(), e = 0; e < 16; ++e)
                  this._worldMatrix[e] = t[e];
              this._worldUpdate = !1;
            }
            return this._worldMatrix;
          }),
          (i.setParent = function(t) {
            if (this._parent !== t) {
              if (this._parent) {
                var e = this._parent._childs,
                  i = e.indexOf(this);
                e.splice(i, 1);
              }
              t && (t._childs.push(this), t && this._onWorldTransform()),
                (this._parent = t);
            }
          }),
          n(e, [
            '_tempVector3',
            function() {
              return (this._tempVector3 = new Float32Array(3));
            },
            '_angleToRandin',
            function() {
              return (this._angleToRandin = 180 / Math.PI);
            }
          ]),
          e
        );
      })(),
      $e = (function(t) {
        function e() {
          (this._destroyed = !1),
            (this._id = 0),
            (this._enable = !1),
            (this._owner = null),
            (this.started = !1),
            e.__super.call(this),
            (this._destroyed = !1),
            (this._id = e._uniqueIDCounter),
            e._uniqueIDCounter++;
        }
        a(e, 'laya.d3.component.Component3D', g);
        var n = e.prototype;
        return (
          i.imps(n, {
            'laya.d3.core.render.IUpdate': !0,
            'laya.resource.IDestroy': !0
          }),
          (n._initialize = function(t) {
            (this._owner = t),
              (this._enable = !0),
              (this.started = !1),
              this._load(t);
          }),
          (n._destroy = function() {
            this._unload(this._owner),
              (this._owner = null),
              (this._destroyed = !0);
          }),
          (n._load = function(t) {}),
          (n._start = function(t) {}),
          (n._update = function(t) {}),
          (n._lateUpdate = function(t) {}),
          (n._preRenderUpdate = function(t) {}),
          (n._postRenderUpdate = function(t) {}),
          (n._unload = function(t) {
            this.offAll();
          }),
          (n._cloneTo = function(t) {}),
          r(0, n, 'id', function() {
            return this._id;
          }),
          r(0, n, 'destroyed', function() {
            return this._destroyed;
          }),
          r(0, n, 'owner', function() {
            return this._owner;
          }),
          r(
            0,
            n,
            'enable',
            function() {
              return this._enable;
            },
            function(t) {
              this._enable !== t &&
                ((this._enable = t), this.event('enablechanged', this._enable));
            }
          ),
          r(0, n, 'isSingleton', function() {
            return e._isSingleton;
          }),
          (e._isSingleton = !0),
          (e._uniqueIDCounter = 1),
          e
        );
      })(),
      ti = (function(t) {
        function e() {
          (this._destroyed = !1), e.__super.call(this), (this._destroyed = !1);
        }
        a(e, 'laya.d3.core.GeometryFilter', g);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.resource.IDestroy': !0 }),
          (n._destroy = function() {
            this.offAll(), (this._destroyed = !0);
          }),
          r(0, n, '_isAsyncLoaded', function() {
            return !0;
          }),
          r(0, n, '_originalBoundingBoxCorners', function() {
            throw new Error('BaseRender: must override it.');
          }),
          r(0, n, '_originalBoundingSphere', function() {
            throw new Error('BaseRender: must override it.');
          }),
          r(0, n, '_originalBoundingBox', function() {
            throw new Error('BaseRender: must override it.');
          }),
          r(0, n, 'destroyed', function() {
            return this._destroyed;
          }),
          e
        );
      })(),
      ei = (function(t) {
        function e(t) {
          e.__super.call(this),
            (this._id = ++e._uniqueIDCounter),
            (this._indexInSceneFrustumCullingObjects = -1),
            (this._boundingBox = new be(new Re(), new Re())),
            (this._boundingBoxCenter = new Re()),
            (this._boundingSphere = new xe(new Re(), 0)),
            (this._boundingSphereNeedChange = !0),
            (this._boundingBoxNeedChange = !0),
            (this._boundingBoxCenterNeedChange = !0),
            (this._octreeNodeNeedChange = !0),
            (this._materials = []),
            (this._renderElements = []),
            (this._isPartOfStaticBatch = !1),
            (this._destroyed = !1),
            (this._owner = t),
            (this._enable = !0),
            (this._materialsInstance = []),
            (this.lightmapIndex = -1),
            (this.castShadow = !1),
            (this.receiveShadow = !1),
            (this.sortingFudge = 0),
            this._owner.transform.on(
              'worldmatrixneedchanged',
              this,
              this._onWorldMatNeedChange
            );
        }
        a(e, 'laya.d3.core.render.BaseRender', g);
        var s = e.prototype;
        return (
          i.imps(s, { 'laya.resource.IDestroy': !0 }),
          (s._changeMaterialReference = function(t, e) {
            t && t._removeReference(), e._addReference();
          }),
          (s._getInstanceMaterial = function(t, e) {
            var i = new t.constructor();
            return (
              t.cloneTo(i),
              (i.name = i.name + '(Instance)'),
              (this._materialsInstance[e] = !0),
              this._changeMaterialReference(this._materials[e], i),
              (this._materials[e] = i),
              i
            );
          }),
          (s._setShaderValuelightMap = function(t) {
            this._setShaderValueTexture(3, t);
          }),
          (s._onWorldMatNeedChange = function() {
            (this._boundingSphereNeedChange = !0),
              (this._boundingBoxNeedChange = !0),
              (this._boundingBoxCenterNeedChange = !0),
              (this._octreeNodeNeedChange = !0);
          }),
          (s._renderRenderableBoundBox = function() {
            var t = Ze._debugPhasorSprite,
              i = this.boundingBox,
              n = e._tempBoundBoxCorners;
            i.getCorners(n),
              t.line(n[0], e._greenColor, n[1], e._greenColor),
              t.line(n[2], e._greenColor, n[3], e._greenColor),
              t.line(n[4], e._greenColor, n[5], e._greenColor),
              t.line(n[6], e._greenColor, n[7], e._greenColor),
              t.line(n[0], e._greenColor, n[3], e._greenColor),
              t.line(n[1], e._greenColor, n[2], e._greenColor),
              t.line(n[2], e._greenColor, n[6], e._greenColor),
              t.line(n[3], e._greenColor, n[7], e._greenColor),
              t.line(n[0], e._greenColor, n[4], e._greenColor),
              t.line(n[1], e._greenColor, n[5], e._greenColor),
              t.line(n[4], e._greenColor, n[7], e._greenColor),
              t.line(n[5], e._greenColor, n[6], e._greenColor);
          }),
          (s._calculateBoundingSphere = function() {
            throw 'BaseRender: must override it.';
          }),
          (s._calculateBoundingBox = function() {
            throw 'BaseRender: must override it.';
          }),
          (s._setShaderValueTexture = function(t, e) {
            this._owner._shaderValues.setValue(t, e);
          }),
          (s._setShaderValueMatrix4x4 = function(t, e) {
            this._owner._shaderValues.setValue(t, e ? e.elements : null);
          }),
          (s._setShaderValueColor = function(t, e) {
            this._owner._shaderValues.setValue(t, e ? e.elements : null);
          }),
          (s._setShaderValueBuffer = function(t, e) {
            this._owner._shaderValues.setValue(t, e);
          }),
          (s._setShaderValueInt = function(t, e) {
            this._owner._shaderValues.setValue(t, e);
          }),
          (s._setShaderValueBool = function(t, e) {
            this._owner._shaderValues.setValue(t, e);
          }),
          (s._setShaderValueNumber = function(t, e) {
            this._owner._shaderValues.setValue(t, e);
          }),
          (s._setShaderValueVector2 = function(t, e) {
            this._owner._shaderValues.setValue(t, e ? e.elements : null);
          }),
          (s._addShaderDefine = function(t) {
            this._owner._shaderDefineValue |= t;
          }),
          (s._removeShaderDefine = function(t) {
            this._owner._shaderDefineValue &= ~t;
          }),
          (s._renderUpdate = function(t) {
            return !0;
          }),
          (s._applyLightMapParams = function() {
            if (this._lightmapIndex >= 0) {
              var t = this._owner.scene;
              if (t) {
                var e = t.getlightmaps()[this._lightmapIndex];
                e
                  ? (this._addShaderDefine(_n.SAHDERDEFINE_LIGHTMAP),
                    e.loaded
                      ? this._setShaderValuelightMap(e)
                      : e.once('loaded', this, this._setShaderValuelightMap))
                  : this._removeShaderDefine(_n.SAHDERDEFINE_LIGHTMAP);
              } else this._removeShaderDefine(_n.SAHDERDEFINE_LIGHTMAP);
            } else this._removeShaderDefine(_n.SAHDERDEFINE_LIGHTMAP);
          }),
          (s._updateOctreeNode = function() {
            var t = this._treeNode;
            t &&
              this._octreeNodeNeedChange &&
              (t.updateObject(this), (this._octreeNodeNeedChange = !1));
          }),
          (s._destroy = function() {
            this.offAll();
            var t = 0,
              e = 0;
            for (t = 0, e = this._renderElements.length; t < e; t++)
              this._renderElements[t]._destroy();
            for (t = 0, e = this._materials.length; t < e; t++)
              this._materials[t]._removeReference();
            (this._renderElements = null),
              (this._owner = null),
              (this._materials = null),
              (this._boundingBox = null),
              (this._boundingBoxCenter = null),
              (this._boundingSphere = null),
              (this._lightmapScaleOffset = null),
              (this._destroyed = !0);
          }),
          r(0, s, 'boundingSphere', function() {
            return (
              this._boundingSphereNeedChange &&
                (this._calculateBoundingSphere(),
                (this._boundingSphereNeedChange = !1)),
              this._boundingSphere
            );
          }),
          r(0, s, 'id', function() {
            return this._id;
          }),
          r(
            0,
            s,
            'material',
            function() {
              var t = this._materials[0];
              if (t && !this._materialsInstance[0]) {
                var e = this._getInstanceMaterial(t, 0);
                this.event('materialchanged', [this, 0, e]);
              }
              return this._materials[0];
            },
            function(t) {
              this.sharedMaterial = t;
            }
          ),
          r(
            0,
            s,
            'sharedMaterial',
            function() {
              return this._materials[0];
            },
            function(t) {
              var e = this._materials[0];
              e !== t &&
                ((this._materials[0] = t),
                (this._materialsInstance[0] = !1),
                this._changeMaterialReference(e, t),
                this.event('materialchanged', [this, 0, t]));
            }
          ),
          r(
            0,
            s,
            'lightmapIndex',
            function() {
              return this._lightmapIndex;
            },
            function(t) {
              (this._lightmapIndex = t), this._applyLightMapParams();
            }
          ),
          r(
            0,
            s,
            'lightmapScaleOffset',
            function() {
              return this._lightmapScaleOffset;
            },
            function(t) {
              (this._lightmapScaleOffset = t),
                this._setShaderValueColor(2, t),
                this._addShaderDefine(_n.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV);
            }
          ),
          r(
            0,
            s,
            'enable',
            function() {
              return this._enable;
            },
            function(t) {
              (this._enable = t), this.event('enablechanged', [this, t]);
            }
          ),
          r(
            0,
            s,
            'materials',
            function() {
              for (var t = 0, e = this._materials.length; t < e; t++)
                if (!this._materialsInstance[t]) {
                  var i = this._getInstanceMaterial(this._materials[t], t);
                  this.event('materialchanged', [this, t, i]);
                }
              return this._materials.slice();
            },
            function(t) {
              this.sharedMaterials = t;
            }
          ),
          r(
            0,
            s,
            'sharedMaterials',
            function() {
              return this._materials.slice();
            },
            function(t) {
              if (!t)
                throw new Error(
                  "MeshRender: shadredMaterials value can't be null."
                );
              var e = t.length;
              this._materialsInstance.length = e;
              for (var i = 0; i < e; i++) {
                var n = this._materials[i];
                n !== t[i] &&
                  ((this._materialsInstance[i] = !1),
                  this._changeMaterialReference(n, t[i]),
                  this.event('materialchanged', [this, i, t[i]]));
              }
              this._materials = t;
            }
          ),
          r(0, s, 'boundingBox', function() {
            return (
              this._boundingBoxNeedChange &&
                (this._calculateBoundingBox(),
                (this._boundingBoxNeedChange = !1)),
              this._boundingBox
            );
          }),
          r(0, s, 'boundingBoxCenter', function() {
            if (this._boundingBoxCenterNeedChange) {
              var t = this.boundingBox;
              Re.add(t.min, t.max, this._boundingBoxCenter),
                Re.scale(this._boundingBoxCenter, 0.5, this._boundingBoxCenter),
                (this._boundingBoxCenterNeedChange = !1);
            }
            return this._boundingBoxCenter;
          }),
          r(
            0,
            s,
            'receiveShadow',
            function() {
              return this._receiveShadow;
            },
            function(t) {
              this._receiveShadow !== t &&
                ((this._receiveShadow = t),
                t
                  ? this._addShaderDefine(He.SHADERDEFINE_RECEIVE_SHADOW)
                  : this._removeShaderDefine(He.SHADERDEFINE_RECEIVE_SHADOW));
            }
          ),
          r(0, s, 'destroyed', function() {
            return this._destroyed;
          }),
          (e._uniqueIDCounter = 0),
          n(e, [
            '_tempBoundBoxCorners',
            function() {
              return (this._tempBoundBoxCorners = [
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re()
              ]);
            },
            '_greenColor',
            function() {
              return (this._greenColor = new Be(0, 1, 0, 1));
            }
          ]),
          e
        );
      })(),
      ii = (function(t) {
        function e(t) {
          (this._owner = null),
            (this._localQuaternionUpdate = !1),
            (this._locaEulerlUpdate = !1),
            (this._localUpdate = !1),
            (this._worldUpdate = !0),
            (this._positionUpdate = !0),
            (this._rotationUpdate = !0),
            (this._scaleUpdate = !0),
            (this._parent = null),
            (this._childs = null),
            (this._dummy = null),
            (this.pivot = null),
            e.__super.call(this),
            (this._localPosition = new Re()),
            (this._localRotation = new Le(0, 0, 0, 1)),
            (this._localScale = new Re(1, 1, 1)),
            (this._localRotationEuler = new Re()),
            (this._localMatrix = new Te()),
            (this._position = new Re()),
            (this._rotation = new Le(0, 0, 0, 1)),
            (this._scale = new Re(1, 1, 1)),
            (this._worldMatrix = new Te()),
            (this._forward = new Re()),
            (this._up = new Re()),
            (this._right = new Re()),
            (this._owner = t),
            (this._childs = []);
        }
        a(e, 'laya.d3.core.Transform3D', g);
        var i = e.prototype;
        return (
          (i._updateLocalMatrix = function() {
            if (
              !this.pivot ||
              (0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z)
            )
              Te.createAffineTransformation(
                this._localPosition,
                this.localRotation,
                this._localScale,
                this._localMatrix
              );
            else {
              var t = e._tempVector30;
              Re.multiply(this.pivot, this._localScale, t);
              var i = e._tempVector31;
              Re.subtract(t, this.pivot, i);
              var n = e._tempVector32,
                a = this.localRotation;
              Re.transformQuat(t, a, n), Re.subtract(n, t, n);
              var r = e._tempVector33;
              Re.subtract(this._localPosition, i, r),
                Re.subtract(r, n, r),
                Te.createAffineTransformation(
                  r,
                  a,
                  this._localScale,
                  this._localMatrix
                );
            }
          }),
          (i._onWorldPositionRotationTransform = function() {
            if (
              !this._worldUpdate ||
              !this._positionUpdate ||
              !this._rotationUpdate
            ) {
              (this._worldUpdate = this._positionUpdate = this._rotationUpdate = !0),
                this.event('worldmatrixneedchanged');
              for (var t = 0, e = this._childs.length; t < e; t++)
                this._childs[t]._onWorldPositionRotationTransform();
            }
          }),
          (i._onWorldPositionScaleTransform = function() {
            if (
              !this._worldUpdate ||
              !this._positionUpdate ||
              !this._scaleUpdate
            ) {
              (this._worldUpdate = this._positionUpdate = this._scaleUpdate = !0),
                this.event('worldmatrixneedchanged');
              for (var t = 0, e = this._childs.length; t < e; t++)
                this._childs[t]._onWorldPositionScaleTransform();
            }
          }),
          (i._onWorldPositionTransform = function() {
            if (!this._worldUpdate || !this._positionUpdate) {
              (this._worldUpdate = this._positionUpdate = !0),
                this.event('worldmatrixneedchanged');
              for (var t = 0, e = this._childs.length; t < e; t++)
                this._childs[t]._onWorldPositionTransform();
            }
          }),
          (i._onWorldRotationTransform = function() {
            if (!this._worldUpdate || !this._rotationUpdate) {
              (this._worldUpdate = this._rotationUpdate = !0),
                this.event('worldmatrixneedchanged');
              for (var t = 0, e = this._childs.length; t < e; t++)
                this._childs[t]._onWorldPositionRotationTransform();
            }
          }),
          (i._onWorldScaleTransform = function() {
            if (!this._worldUpdate || !this._scaleUpdate) {
              (this._worldUpdate = this._scaleUpdate = !0),
                this.event('worldmatrixneedchanged');
              for (var t = 0, e = this._childs.length; t < e; t++)
                this._childs[t]._onWorldPositionScaleTransform();
            }
          }),
          (i._onWorldTransform = function() {
            if (
              !(
                this._worldUpdate &&
                this._positionUpdate &&
                this._rotationUpdate &&
                this._scaleUpdate
              )
            ) {
              (this._worldUpdate = this._positionUpdate = this._rotationUpdate = this._scaleUpdate = !0),
                this.event('worldmatrixneedchanged');
              for (var t = 0, e = this._childs.length; t < e; t++)
                this._childs[t]._onWorldTransform();
            }
          }),
          (i.translate = function(t, i) {
            void 0 === i && (i = !0),
              i
                ? (Te.createFromQuaternion(this.localRotation, e._tempMatrix0),
                  Re.transformCoordinate(t, e._tempMatrix0, e._tempVector30),
                  Re.add(
                    this.localPosition,
                    e._tempVector30,
                    this._localPosition
                  ),
                  (this.localPosition = this._localPosition))
                : (Re.add(this.position, t, this._position),
                  (this.position = this._position));
          }),
          (i.rotate = function(t, i, n) {
            void 0 === i && (i = !0), void 0 === n && (n = !0);
            var a;
            n
              ? (a = t)
              : (Re.scale(t, Math.PI / 180, e._tempVector30),
                (a = e._tempVector30)),
              Le.createFromYawPitchRoll(a.y, a.x, a.z, e._tempQuaternion0),
              i
                ? (Le.multiply(
                    this._localRotation,
                    e._tempQuaternion0,
                    this._localRotation
                  ),
                  (this.localRotation = this._localRotation))
                : (Le.multiply(
                    e._tempQuaternion0,
                    this.rotation,
                    this._rotation
                  ),
                  (this.rotation = this._rotation));
          }),
          (i.lookAt = function(t, e, i) {
            void 0 === i && (i = !1);
            var n,
              a = t.elements;
            if (i) {
              if (
                ((n = this._localPosition.elements),
                Math.abs(n[0] - a[0]) < Ce.zeroTolerance &&
                  Math.abs(n[1] - a[1]) < Ce.zeroTolerance &&
                  Math.abs(n[2] - a[2]) < Ce.zeroTolerance)
              )
                return;
              Le.lookAt(this._localPosition, t, e, this._localRotation),
                this._localRotation.invert(this._localRotation),
                (this.localRotation = this._localRotation);
            } else {
              var r = this.position;
              if (
                ((n = r.elements),
                Math.abs(n[0] - a[0]) < Ce.zeroTolerance &&
                  Math.abs(n[1] - a[1]) < Ce.zeroTolerance &&
                  Math.abs(n[2] - a[2]) < Ce.zeroTolerance)
              )
                return;
              Le.lookAt(r, t, e, this._rotation),
                this._rotation.invert(this._rotation),
                (this.rotation = this._rotation);
            }
          }),
          r(0, i, '_isFrontFaceInvert', function() {
            var t = this.scale,
              e = t.x < 0;
            return t.y < 0 && (e = !e), t.z < 0 && (e = !e), e;
          }),
          r(0, i, 'owner', function() {
            return this._owner;
          }),
          r(
            0,
            i,
            'localRotation',
            function() {
              if (this._localQuaternionUpdate) {
                var t = this._localRotationEuler.elements;
                Le.createFromYawPitchRoll(
                  t[1] / e._angleToRandin,
                  t[0] / e._angleToRandin,
                  t[2] / e._angleToRandin,
                  this._localRotation
                );
              }
              return this._localRotation;
            },
            function(t) {
              (this._localRotation = t),
                this._localRotation.normalize(this._localRotation),
                (this._locaEulerlUpdate = !0),
                (this._localQuaternionUpdate = !1),
                (this._localUpdate = !0),
                !this.pivot ||
                (0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z)
                  ? this._onWorldRotationTransform()
                  : this._onWorldPositionRotationTransform();
            }
          ),
          r(
            0,
            i,
            'worldMatrix',
            function() {
              return (
                this._worldUpdate &&
                  (null != this._parent
                    ? Te.multiply(
                        this._parent.worldMatrix,
                        this.localMatrix,
                        this._worldMatrix
                      )
                    : this.localMatrix.cloneTo(this._worldMatrix),
                  (this._worldUpdate = !1)),
                this._worldMatrix
              );
            },
            function(t) {
              null === this._parent
                ? t.cloneTo(this._localMatrix)
                : (this._parent.worldMatrix.invert(this._localMatrix),
                  Te.multiply(this._localMatrix, t, this._localMatrix)),
                (this.localMatrix = this._localMatrix),
                (this._worldMatrix = t),
                (this._worldUpdate = !1);
            }
          ),
          r(0, i, 'worldNeedUpdate', function() {
            return this._worldUpdate;
          }),
          r(
            0,
            i,
            'localMatrix',
            function() {
              return (
                this._localUpdate &&
                  (this._updateLocalMatrix(), (this._localUpdate = !1)),
                this._localMatrix
              );
            },
            function(t) {
              (this._localMatrix = t),
                this._localMatrix.decomposeTransRotScale(
                  this._localPosition,
                  this._localRotation,
                  this._localScale
                ),
                (this._localUpdate = !1),
                this._onWorldTransform();
            }
          ),
          r(
            0,
            i,
            'dummy',
            function() {
              return this._dummy;
            },
            function(t) {
              this._dummy !== t &&
                (this._dummy && (this._dummy._entity = null),
                t && (t._entity = this),
                (this._dummy = t));
            }
          ),
          r(
            0,
            i,
            'localPosition',
            function() {
              return this._localPosition;
            },
            function(t) {
              (this._localPosition = t),
                (this._localUpdate = !0),
                this._onWorldPositionTransform();
            }
          ),
          r(
            0,
            i,
            'position',
            function() {
              if (this._positionUpdate) {
                if (null != this._parent) {
                  var t = this._parent.position;
                  Re.multiply(
                    this._localPosition,
                    this._parent.scale,
                    e._tempVector30
                  ),
                    Re.transformQuat(
                      e._tempVector30,
                      this._parent.rotation,
                      e._tempVector30
                    ),
                    Re.add(t, e._tempVector30, this._position);
                } else this._localPosition.cloneTo(this._position);
                this._positionUpdate = !1;
              }
              return this._position;
            },
            function(t) {
              if (null != this._parent) {
                Re.subtract(t, this._parent.position, this._localPosition);
                var i = this._parent.scale.elements,
                  n = i[0],
                  a = i[1],
                  r = i[2];
                if (1 !== n || 1 !== a || 1 !== r) {
                  var s = e._tempVector30,
                    o = s.elements;
                  (o[0] = 1 / n),
                    (o[1] = 1 / a),
                    (o[2] = 1 / r),
                    Re.multiply(this._localPosition, s, this._localPosition);
                }
                this._parent.rotation.invert(e._tempQuaternion0),
                  Re.transformQuat(
                    this._localPosition,
                    e._tempQuaternion0,
                    this._localPosition
                  );
              } else t.cloneTo(this._localPosition);
              (this.localPosition = this._localPosition),
                (this._position = t),
                (this._positionUpdate = !1);
            }
          ),
          r(
            0,
            i,
            'localScale',
            function() {
              return this._localScale;
            },
            function(t) {
              (this._localScale = t),
                (this._localUpdate = !0),
                !this.pivot ||
                (0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z)
                  ? this._onWorldScaleTransform()
                  : this._onWorldPositionScaleTransform();
            }
          ),
          r(
            0,
            i,
            'localRotationEuler',
            function() {
              if (this._locaEulerlUpdate) {
                this._localRotation.getYawPitchRoll(e._tempVector30);
                var t = e._tempVector30.elements,
                  i = this._localRotationEuler.elements;
                (i[0] = t[1] * e._angleToRandin),
                  (i[1] = t[0] * e._angleToRandin),
                  (i[2] = t[2] * e._angleToRandin);
              }
              return this._localRotationEuler;
            },
            function(t) {
              (this._localRotationEuler = t),
                (this._locaEulerlUpdate = !1),
                (this._localQuaternionUpdate = !0),
                (this._localUpdate = !0),
                !this.pivot ||
                (0 === this.pivot.x && 0 === this.pivot.y && 0 === this.pivot.z)
                  ? this._onWorldRotationTransform()
                  : this._onWorldPositionRotationTransform();
            }
          ),
          r(
            0,
            i,
            'rotation',
            function() {
              return (
                this._rotationUpdate &&
                  (null != this._parent
                    ? Le.multiply(
                        this._parent.rotation,
                        this.localRotation,
                        this._rotation
                      )
                    : this.localRotation.cloneTo(this._rotation),
                  (this._rotationUpdate = !1)),
                this._rotation
              );
            },
            function(t) {
              null != this._parent
                ? (this._parent.rotation.invert(e._tempQuaternion0),
                  Le.multiply(t, e._tempQuaternion0, this._localRotation))
                : t.cloneTo(this._localRotation),
                (this.localRotation = this._localRotation),
                (this._rotation = t),
                (this._rotationUpdate = !1);
            }
          ),
          r(
            0,
            i,
            'scale',
            function() {
              return this._scaleUpdate
                ? (null !== this._parent
                    ? Re.multiply(
                        this._parent.scale,
                        this._localScale,
                        this._scale
                      )
                    : this._localScale.cloneTo(this._scale),
                  (this._scaleUpdate = !1),
                  this._scale)
                : this._scale;
            },
            function(t) {
              if (null !== this._parent) {
                var i = this._parent.scale.elements,
                  n = e._tempVector30.elements;
                (n[0] = 1 / i[0]),
                  (n[1] = 1 / i[1]),
                  (n[2] = 1 / i[2]),
                  Re.multiply(t, e._tempVector30, this._localScale);
              } else t.cloneTo(this._localScale);
              (this.localScale = this._localScale),
                (this._scale = t),
                (this._scaleUpdate = !1);
            }
          ),
          r(0, i, 'rotationEuler', null, function(t) {
            Le.createFromYawPitchRoll(t.y, t.x, t.z, this._rotation),
              (this.rotation = this._rotation);
          }),
          r(0, i, 'forward', function() {
            var t = this.worldMatrix.elements;
            return (
              (this._forward.elements[0] = -t[8]),
              (this._forward.elements[1] = -t[9]),
              (this._forward.elements[2] = -t[10]),
              this._forward
            );
          }),
          r(0, i, 'up', function() {
            var t = this.worldMatrix.elements;
            return (
              (this._up.elements[0] = t[4]),
              (this._up.elements[1] = t[5]),
              (this._up.elements[2] = t[6]),
              this._up
            );
          }),
          r(0, i, 'right', function() {
            var t = this.worldMatrix.elements;
            return (
              (this._right.elements[0] = t[0]),
              (this._right.elements[1] = t[1]),
              (this._right.elements[2] = t[2]),
              this._right
            );
          }),
          r(
            0,
            i,
            'parent',
            function() {
              return this._parent;
            },
            function(t) {
              if (this._parent !== t) {
                if (this._parent) {
                  var e = this._parent._childs,
                    i = e.indexOf(this);
                  e.splice(i, 1);
                }
                t && (t._childs.push(this), t && this._onWorldTransform()),
                  (this._parent = t);
              }
            }
          ),
          n(e, [
            '_tempVector30',
            function() {
              return (this._tempVector30 = new Re());
            },
            '_tempVector31',
            function() {
              return (this._tempVector31 = new Re());
            },
            '_tempVector32',
            function() {
              return (this._tempVector32 = new Re());
            },
            '_tempVector33',
            function() {
              return (this._tempVector33 = new Re());
            },
            '_tempQuaternion0',
            function() {
              return (this._tempQuaternion0 = new Le());
            },
            '_tempMatrix0',
            function() {
              return (this._tempMatrix0 = new Te());
            },
            '_angleToRandin',
            function() {
              return (this._angleToRandin = 180 / Math.PI);
            }
          ]),
          e
        );
      })(),
      ni =
        ((function(t) {
          function e() {
            (this._rotation = 0),
              (this._matNeedUpdte = !1),
              e.__super.call(this),
              (this._matrix = new Te()),
              (this._offset = new Ne()),
              (this._tiling = new Ne(1, 1));
          }
          a(e, 'laya.d3.core.TransformUV', g);
          var s = e.prototype;
          i.imps(s, { 'laya.d3.core.IClone': !0 }),
            (s._updateMatrix = function() {
              (e._tempOffsetV3.elements[0] = this._offset.x),
                (e._tempOffsetV3.elements[1] = this._offset.y),
                Le.createFromYawPitchRoll(
                  0,
                  0,
                  this._rotation,
                  e._tempRotationQua
                ),
                (e._tempTitlingV3.elements[0] = this._tiling.x),
                (e._tempTitlingV3.elements[1] = this._tiling.y),
                Te.createAffineTransformation(
                  e._tempOffsetV3,
                  e._tempRotationQua,
                  e._tempTitlingV3,
                  this._matrix
                );
            }),
            (s.cloneTo = function(t) {
              (t._matrix = this._matrix.clone()),
                (t._offset = this._offset.clone()),
                (t._rotation = this._rotation),
                (t._tiling = this._tiling.clone());
            }),
            (s.clone = function() {
              var t = new this.constructor();
              return this.cloneTo(t), t;
            }),
            r(0, s, 'matrix', function() {
              return (
                this._matNeedUpdte &&
                  (this._updateMatrix(), (this._matNeedUpdte = !1)),
                this._matrix
              );
            }),
            r(
              0,
              s,
              'tiling',
              function() {
                return this._tiling;
              },
              function(t) {
                (this._tiling = t), (this._matNeedUpdte = !0);
              }
            ),
            r(
              0,
              s,
              'offset',
              function() {
                return this._offset;
              },
              function(t) {
                (this._offset = t), (this._matNeedUpdte = !0);
              }
            ),
            r(
              0,
              s,
              'rotation',
              function() {
                return this._rotation;
              },
              function(t) {
                (this._rotation = t), (this._matNeedUpdte = !0);
              }
            ),
            n(e, [
              '_tempOffsetV3',
              function() {
                return (this._tempOffsetV3 = new Re(0, 0, 0));
              },
              '_tempRotationQua',
              function() {
                return (this._tempRotationQua = new Le());
              },
              '_tempTitlingV3',
              function() {
                return (this._tempTitlingV3 = new Re(1, 1, 1));
              }
            ]);
        })(),
        (function(t) {
          function e() {
            e.__super.call(this);
          }
          return (
            a(e, 'laya.d3.utils.CollisionManager', g),
            (e._onTrigger = function(t, e, i, n, a) {
              var r = 0,
                s = 0,
                o = t.id,
                l = e.id;
              if (!t._ignoreCollisonMap[l]) {
                var h = Xe.collisionManager,
                  c = t._runtimeCollisonTestMap[l];
                if (null != c)
                  if (c)
                    if (t._collisonTo(e))
                      if (t._runtimeCollisonMap[l]) {
                        for (r = 0, s = i.length; r < s; r++)
                          i[r].onTriggerStay(e);
                        for (r = 0, s = n.length; r < s; r++)
                          n[r].onTriggerStay(t);
                        h.event('triggerstay', [t, e]);
                      } else {
                        for (
                          t._runtimeCollisonMap[l] = e,
                            t._runtimeCollisonTestMap[l] = !1,
                            e._runtimeCollisonMap[o] = t,
                            a && (e._runtimeCollisonTestMap[o] = !1),
                            r = 0,
                            s = i.length;
                          r < s;
                          r++
                        )
                          i[r].onTriggerEnter(e);
                        for (r = 0, s = n.length; r < s; r++)
                          n[r].onTriggerEnter(t);
                        h.event('triggerenter', [t, e]);
                      }
                    else {
                      var u = t._runtimeCollisonMap;
                      if (u[l]) {
                        for (
                          delete u[l],
                            delete t._runtimeCollisonTestMap[l],
                            delete e._runtimeCollisonMap[o],
                            a && delete e._runtimeCollisonTestMap[o],
                            r = 0,
                            s = i.length;
                          r < s;
                          r++
                        )
                          i[r].onTriggerExit(e);
                        for (r = 0, s = n.length; r < s; r++)
                          n[r].onTriggerExit(t);
                        h.event('triggerexit', [t, e]);
                      }
                    }
                  else {
                    for (r = 0, s = i.length; r < s; r++) i[r].onTriggerStay(e);
                    for (r = 0, s = n.length; r < s; r++) n[r].onTriggerStay(t);
                    h.event('triggerstay', [t, e]);
                  }
                else if (t._collisonTo(e)) {
                  for (
                    t._runtimeCollisonMap[l] = e,
                      t._runtimeCollisonTestMap[l] = !1,
                      e._runtimeCollisonMap[o] = t,
                      a && (e._runtimeCollisonTestMap[o] = !1),
                      r = 0,
                      s = i.length;
                    r < s;
                    r++
                  )
                    i[r].onTriggerEnter(e);
                  for (r = 0, s = n.length; r < s; r++) n[r].onTriggerEnter(t);
                  h.event('triggerenter', [t, e]);
                }
              }
            }),
            (e._triggerCollision = function() {
              for (
                var t = z._collsionTestList,
                  i = t.length,
                  n = Xe._layerCollsionMatrix,
                  a = 0;
                a < i;
                a++
              )
                for (
                  var r = t[a],
                    s = z.getLayerByNumber(r),
                    o = s._colliders,
                    l = s._nonRigidbodyOffset,
                    h = i - 1;
                  h >= a;
                  h--
                ) {
                  var c = t[h];
                  if (n[r][30 - c]) {
                    var u,
                      _,
                      d,
                      f = 0,
                      p = 0,
                      m = 0,
                      g = 0,
                      y = z.getLayerByNumber(c),
                      v = y._colliders,
                      b = y._nonRigidbodyOffset;
                    if (s !== y) {
                      for (f = 0; f < l; f++)
                        if ((u = o[f]).enable) {
                          for (d = u.owner._scripts, m = 0, g = b; m < g; m++)
                            (_ = v[m]).enable &&
                              e._onTrigger(u, _, d, _.owner._scripts, !0);
                          for (m = b, g = v.length; m < g; m++)
                            (_ = v[m]).enable &&
                              e._onTrigger(u, _, d, _.owner._scripts, !1);
                        }
                      for (f = l, p = o.length; f < p; f++)
                        if ((u = o[f]).enable)
                          for (
                            d = u.owner._scripts,
                              m = 0,
                              g = y._nonRigidbodyOffset;
                            m < g;
                            m++
                          )
                            (_ = v[m]).enable &&
                              e._onTrigger(_, u, d, _.owner._scripts, !1);
                    } else
                      for (f = 0; f < l; f++)
                        if ((u = o[f]).enable) {
                          for (
                            d = u.owner._scripts, m = f + 1, g = l;
                            m < g;
                            m++
                          )
                            (_ = v[m]).enable &&
                              e._onTrigger(u, _, d, _.owner._scripts, !0);
                          for (m = l, g = o.length; m < g; m++)
                            (_ = v[m]).enable &&
                              e._onTrigger(u, _, d, _.owner._scripts, !1);
                        }
                  }
                }
            }),
            e
          );
        })()),
      ai =
        ((function(t) {
          function e() {
            e.__super.call(this);
          }
          a(e, 'laya.d3.core.glitter.SplineCurvePosition', t);
          var i = e.prototype;
          (i._CalcVelocity = function(t, e, i) {
            Re.subtract(t, e, i), Re.scale(i, 0.5, i);
          }),
            (i.Init = function(e, i, n, a) {
              this._CalcVelocity(i, e, this._tempVector30),
                this._CalcVelocity(a, n, this._tempVector31),
                t.prototype.Init.call(
                  this,
                  i,
                  this._tempVector30,
                  a,
                  this._tempVector31
                );
            });
        })(H),
        (function(t) {
          function e() {
            (this.x = NaN),
              (this.y = NaN),
              (this.z = NaN),
              e.__super.call(this),
              (this.x = 1),
              (this.y = 1),
              (this.z = 1),
              (this.randomDirection = !1);
          }
          a(e, 'laya.d3.core.particleShuriKen.module.shape.BoxShape', t);
          var i = e.prototype;
          return (
            (i._getShapeBoundBox = function(t) {
              var e = t.min.elements;
              (e[0] = 0.5 * -this.x),
                (e[1] = 0.5 * -this.y),
                (e[2] = 0.5 * -this.z);
              var i = t.max.elements;
              (i[0] = 0.5 * this.x),
                (i[1] = 0.5 * this.y),
                (i[2] = 0.5 * this.z);
            }),
            (i._getSpeedBoundBox = function(t) {
              var e = t.min.elements;
              (e[0] = 0), (e[1] = 0), (e[2] = 0);
              var i = t.max.elements;
              (i[0] = 0), (i[1] = 1), (i[2] = 0);
            }),
            (i.generatePositionAndDirection = function(t, e, i, n) {
              var a = t.elements,
                r = e.elements;
              i
                ? ((i.seed = n[16]),
                  nt._randomPointInsideHalfUnitBox(t, i),
                  (n[16] = i.seed))
                : nt._randomPointInsideHalfUnitBox(t),
                (a[0] = this.x * a[0]),
                (a[1] = this.y * a[1]),
                (a[2] = this.z * a[2]),
                this.randomDirection
                  ? i
                    ? ((i.seed = n[17]),
                      nt._randomPointUnitSphere(e, i),
                      (n[17] = i.seed))
                    : nt._randomPointUnitSphere(e)
                  : ((r[0] = 0), (r[1] = 0), (r[2] = 1));
            }),
            (i.cloneTo = function(e) {
              t.prototype.cloneTo.call(this, e);
              var i = e;
              (i.x = this.x),
                (i.y = this.y),
                (i.z = this.z),
                (i.randomDirection = this.randomDirection);
            }),
            e
          );
        })(it)),
      ri = (function(t) {
        function e() {
          (this.radius = NaN),
            (this.arc = NaN),
            (this.emitFromEdge = !1),
            e.__super.call(this),
            (this.radius = 1),
            (this.arc = 2 * Math.PI),
            (this.emitFromEdge = !1),
            (this.randomDirection = !1);
        }
        a(e, 'laya.d3.core.particleShuriKen.module.shape.CircleShape', t);
        var i = e.prototype;
        return (
          (i._getShapeBoundBox = function(t) {
            var e = t.min.elements;
            (e[0] = e[2] = -this.radius), (e[1] = 0);
            var i = t.max.elements;
            (i[0] = i[2] = this.radius), (i[1] = 0);
          }),
          (i._getSpeedBoundBox = function(t) {
            var e = t.min.elements;
            (e[0] = e[1] = -1), (e[2] = 0);
            var i = t.max.elements;
            (i[0] = i[1] = 1), (i[2] = 0);
          }),
          (i.generatePositionAndDirection = function(t, i, n, a) {
            var r = t.elements,
              s = e._tempPositionPoint.elements;
            n
              ? ((n.seed = a[16]),
                this.emitFromEdge
                  ? nt._randomPointUnitArcCircle(
                      this.arc,
                      e._tempPositionPoint,
                      n
                    )
                  : nt._randomPointInsideUnitArcCircle(
                      this.arc,
                      e._tempPositionPoint,
                      n
                    ),
                (a[16] = n.seed))
              : this.emitFromEdge
              ? nt._randomPointUnitArcCircle(this.arc, e._tempPositionPoint)
              : nt._randomPointInsideUnitArcCircle(
                  this.arc,
                  e._tempPositionPoint
                ),
              (r[0] = -s[0]),
              (r[1] = s[1]),
              (r[2] = 0),
              Re.scale(t, this.radius, t),
              this.randomDirection
                ? n
                  ? ((n.seed = a[17]),
                    nt._randomPointUnitSphere(i, n),
                    (a[17] = n.seed))
                  : nt._randomPointUnitSphere(i)
                : t.cloneTo(i);
          }),
          (i.cloneTo = function(e) {
            t.prototype.cloneTo.call(this, e);
            var i = e;
            (i.radius = this.radius),
              (i.arc = this.arc),
              (i.emitFromEdge = this.emitFromEdge),
              (i.randomDirection = this.randomDirection);
          }),
          n(e, [
            '_tempPositionPoint',
            function() {
              return (this._tempPositionPoint = new Ne());
            }
          ]),
          e
        );
      })(it),
      si = (function(t) {
        function e() {
          (this.angle = NaN),
            (this.radius = NaN),
            (this.length = NaN),
            (this.emitType = 0),
            e.__super.call(this),
            (this.angle = (25 / 180) * Math.PI),
            (this.radius = 1),
            (this.length = 5),
            (this.emitType = 0),
            (this.randomDirection = !1);
        }
        a(e, 'laya.d3.core.particleShuriKen.module.shape.ConeShape', t);
        var i = e.prototype;
        return (
          (i._getShapeBoundBox = function(t) {
            var e = this.radius + this.length * Math.sin(this.angle),
              i = this.length * Math.cos(this.angle),
              n = t.min.elements;
            (n[0] = n[1] = -e), (n[2] = 0);
            var a = t.max.elements;
            (a[0] = a[1] = e), (a[2] = i);
          }),
          (i._getSpeedBoundBox = function(t) {
            var e = Math.sin(this.angle),
              i = t.min.elements;
            (i[0] = i[1] = -e), (i[2] = 0);
            var n = t.max.elements;
            (n[0] = i[1] = e), (n[2] = 1);
          }),
          (i.generatePositionAndDirection = function(t, i, n, a) {
            var r,
              s = t.elements,
              o = i.elements,
              l = e._tempPositionPoint.elements,
              h = NaN,
              c = NaN,
              u = Math.cos(this.angle),
              _ = Math.sin(this.angle);
            switch (this.emitType) {
              case 0:
                n
                  ? ((n.seed = a[16]),
                    nt._randomPointInsideUnitCircle(e._tempPositionPoint, n),
                    (a[16] = n.seed))
                  : nt._randomPointInsideUnitCircle(e._tempPositionPoint),
                  (h = l[0]),
                  (c = l[1]),
                  (s[0] = h * this.radius),
                  (s[1] = c * this.radius),
                  (s[2] = 0),
                  this.randomDirection
                    ? (n
                        ? ((n.seed = a[17]),
                          nt._randomPointInsideUnitCircle(
                            e._tempDirectionPoint,
                            n
                          ),
                          (a[17] = n.seed))
                        : nt._randomPointInsideUnitCircle(
                            e._tempDirectionPoint
                          ),
                      (r = e._tempDirectionPoint.elements),
                      (o[0] = r[0] * _),
                      (o[1] = r[1] * _))
                    : ((o[0] = h * _), (o[1] = c * _)),
                  (o[2] = u);
                break;
              case 1:
                n
                  ? ((n.seed = a[16]),
                    nt._randomPointUnitCircle(e._tempPositionPoint, n),
                    (a[16] = n.seed))
                  : nt._randomPointUnitCircle(e._tempPositionPoint),
                  (h = l[0]),
                  (c = l[1]),
                  (s[0] = h * this.radius),
                  (s[1] = c * this.radius),
                  (s[2] = 0),
                  this.randomDirection
                    ? (n
                        ? ((n.seed = a[17]),
                          nt._randomPointInsideUnitCircle(
                            e._tempDirectionPoint,
                            n
                          ),
                          (a[17] = n.seed))
                        : nt._randomPointInsideUnitCircle(
                            e._tempDirectionPoint
                          ),
                      (r = e._tempDirectionPoint.elements),
                      (o[0] = r[0] * _),
                      (o[1] = r[1] * _))
                    : ((o[0] = h * _), (o[1] = c * _)),
                  (o[2] = u);
                break;
              case 2:
                n
                  ? ((n.seed = a[16]),
                    nt._randomPointInsideUnitCircle(e._tempPositionPoint, n))
                  : nt._randomPointInsideUnitCircle(e._tempPositionPoint),
                  (h = l[0]),
                  (c = l[1]),
                  (s[0] = h * this.radius),
                  (s[1] = c * this.radius),
                  (s[2] = 0),
                  (o[0] = h * _),
                  (o[1] = c * _),
                  (o[2] = u),
                  Re.normalize(i, i),
                  n
                    ? (Re.scale(i, this.length * n.getFloat(), i),
                      (a[16] = n.seed))
                    : Re.scale(i, this.length * Math.random(), i),
                  Re.add(t, i, t),
                  this.randomDirection &&
                    (n
                      ? ((n.seed = a[17]),
                        nt._randomPointUnitSphere(i, n),
                        (a[17] = n.seed))
                      : nt._randomPointUnitSphere(i));
                break;
              case 3:
                n
                  ? ((n.seed = a[16]),
                    nt._randomPointUnitCircle(e._tempPositionPoint, n))
                  : nt._randomPointUnitCircle(e._tempPositionPoint),
                  (h = l[0]),
                  (c = l[1]),
                  (s[0] = h * this.radius),
                  (s[1] = c * this.radius),
                  (s[2] = 0),
                  (o[0] = h * _),
                  (o[1] = c * _),
                  (o[2] = u),
                  Re.normalize(i, i),
                  n
                    ? (Re.scale(i, this.length * n.getFloat(), i),
                      (a[16] = n.seed))
                    : Re.scale(i, this.length * Math.random(), i),
                  Re.add(t, i, t),
                  this.randomDirection &&
                    (n
                      ? ((n.seed = a[17]),
                        nt._randomPointUnitSphere(i, n),
                        (a[17] = n.seed))
                      : nt._randomPointUnitSphere(i));
                break;
              default:
                throw new Error('ConeShape:emitType is invalid.');
            }
          }),
          (i.cloneTo = function(e) {
            t.prototype.cloneTo.call(this, e);
            var i = e;
            (i.angle = this.angle),
              (i.radius = this.radius),
              (i.length = this.length),
              (i.emitType = this.emitType),
              (i.randomDirection = this.randomDirection);
          }),
          n(e, [
            '_tempPositionPoint',
            function() {
              return (this._tempPositionPoint = new Ne());
            },
            '_tempDirectionPoint',
            function() {
              return (this._tempDirectionPoint = new Ne());
            }
          ]),
          e
        );
      })(it),
      oi = (function(t) {
        function e() {
          (this.radius = NaN),
            (this.emitFromShell = !1),
            e.__super.call(this),
            (this.radius = 1),
            (this.emitFromShell = !1),
            (this.randomDirection = !1);
        }
        a(e, 'laya.d3.core.particleShuriKen.module.shape.HemisphereShape', t);
        var i = e.prototype;
        return (
          (i._getShapeBoundBox = function(t) {
            var e = t.min.elements;
            e[0] = e[1] = e[2] = -this.radius;
            var i = t.max.elements;
            (i[0] = i[1] = this.radius), (i[2] = 0);
          }),
          (i._getSpeedBoundBox = function(t) {
            var e = t.min.elements;
            (e[0] = e[1] = -1), (e[2] = 0);
            var i = t.max.elements;
            i[0] = i[1] = i[2] = 1;
          }),
          (i.generatePositionAndDirection = function(t, e, i, n) {
            var a = t.elements;
            i
              ? ((i.seed = n[16]),
                this.emitFromShell
                  ? nt._randomPointUnitSphere(t, i)
                  : nt._randomPointInsideUnitSphere(t, i),
                (n[16] = i.seed))
              : this.emitFromShell
              ? nt._randomPointUnitSphere(t)
              : nt._randomPointInsideUnitSphere(t),
              Re.scale(t, this.radius, t);
            var r = a[2];
            r < 0 && (a[2] = -1 * r),
              this.randomDirection
                ? i
                  ? ((i.seed = n[17]),
                    nt._randomPointUnitSphere(e, i),
                    (n[17] = i.seed))
                  : nt._randomPointUnitSphere(e)
                : t.cloneTo(e);
          }),
          (i.cloneTo = function(e) {
            t.prototype.cloneTo.call(this, e);
            var i = e;
            (i.radius = this.radius),
              (i.emitFromShell = this.emitFromShell),
              (i.randomDirection = this.randomDirection);
          }),
          e
        );
      })(it),
      li = (function(t) {
        function e() {
          (this.radius = NaN),
            (this.emitFromShell = !1),
            e.__super.call(this),
            (this.radius = 1),
            (this.emitFromShell = !1),
            (this.randomDirection = !1);
        }
        a(e, 'laya.d3.core.particleShuriKen.module.shape.SphereShape', t);
        var i = e.prototype;
        return (
          (i._getShapeBoundBox = function(t) {
            var e = t.min.elements;
            e[0] = e[1] = e[2] = -this.radius;
            var i = t.max.elements;
            i[0] = i[1] = i[2] = this.radius;
          }),
          (i._getSpeedBoundBox = function(t) {
            var e = t.min.elements;
            e[0] = e[1] = e[2] = -1;
            var i = t.max.elements;
            i[0] = i[1] = i[2] = 1;
          }),
          (i.generatePositionAndDirection = function(t, e, i, n) {
            i
              ? ((i.seed = n[16]),
                this.emitFromShell
                  ? nt._randomPointUnitSphere(t, i)
                  : nt._randomPointInsideUnitSphere(t, i),
                (n[16] = i.seed))
              : this.emitFromShell
              ? nt._randomPointUnitSphere(t)
              : nt._randomPointInsideUnitSphere(t),
              Re.scale(t, this.radius, t),
              this.randomDirection
                ? i
                  ? ((i.seed = n[17]),
                    nt._randomPointUnitSphere(e, i),
                    (n[17] = i.seed))
                  : nt._randomPointUnitSphere(e)
                : t.cloneTo(e);
          }),
          (i.cloneTo = function(e) {
            t.prototype.cloneTo.call(this, e);
            var i = e;
            (i.radius = this.radius),
              (i.emitFromShell = this.emitFromShell),
              (i.randomDirection = this.randomDirection);
          }),
          e
        );
      })(it),
      hi = (function(t) {
        function e() {
          (this._batchIndexStart = 0),
            (this._batchIndexEnd = 0),
            (this._skinAnimationDatas = null),
            e.__super.call(this);
        }
        return a(e, 'laya.d3.core.render.SubMeshRenderElement', ct), e;
      })(),
      ci = (function(t) {
        function e(t, i, n, a, r, s) {
          (this._name = NaN),
            (this._attributeMap = null),
            (this._renderElementUniformMap = null),
            (this._materialUniformMap = null),
            (this._spriteUniformMap = null),
            (this._cameraUniformMap = null),
            (this._sceneUniformMap = null),
            (this.sharders = null),
            (this._spriteDefineCounter = 3),
            (this._spriteInt2name = []),
            (this._spriteName2Int = {}),
            (this._materialDefineCounter = 1),
            (this._materialInt2name = []),
            (this._materialName2Int = {}),
            (this._conchShader = null),
            (this._name = t),
            (this._renderElementUniformMap = {}),
            (this._materialUniformMap = {}),
            (this._spriteUniformMap = {}),
            (this._cameraUniformMap = {}),
            (this._sceneUniformMap = {}),
            (this.sharders = []),
            (this._spriteInt2name[He.SHADERDEFINE_RECEIVE_SHADOW] =
              'RECEIVESHADOW'),
            (this._spriteInt2name[_n.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV] =
              'SCALEOFFSETLIGHTINGMAPUV'),
            (this._spriteInt2name[_n.SAHDERDEFINE_LIGHTMAP] = 'LIGHTMAP'),
            (this._spriteInt2name[vn.SHADERDEFINE_BONE] = 'BONE'),
            (this._materialInt2name[mi.SHADERDEFINE_ALPHATEST] = 'ALPHATEST');
          e.__super.call(this, t, i, n, null, {}), (this._attributeMap = a);
          var o;
          for (o in r) {
            var l = r[o];
            switch (l[1]) {
              case 0:
                this._renderElementUniformMap[o] = l[0];
                break;
              case 1:
                this._materialUniformMap[o] = l[0];
                break;
              case 2:
                this._spriteUniformMap[o] = l[0];
                break;
              case 3:
                this._cameraUniformMap[o] = l[0];
                break;
              case 4:
                this._sceneUniformMap[o] = l[0];
                break;
              default:
                throw new Error('ShaderCompile3D: period is unkonw.');
            }
          }
        }
        a(e, 'laya.d3.shader.ShaderCompile3D', M);
        var i = e.prototype;
        return (
          (i._definesToNameDic = function(t, e) {
            for (var i = {}, n = 1, a = 0; a < 32 && !((n = 1 << a) > t); a++)
              if (t & n) {
                var r = e[n];
                r && (i[r] = '');
              }
            return i;
          }),
          (i.withCompile = function(t, i, n) {
            var a, r, s;
            if ((r = this.sharders[t]))
              if ((s = r[i])) {
                if ((a = s[n])) return a;
              } else s = r[i] = [];
            else s = (r = this.sharders[t] = [])[i] = [];
            var o,
              l = this._definesToNameDic(t, e._globalInt2name),
              h = this._definesToNameDic(i, this._spriteInt2name),
              c = this._definesToNameDic(n, this._materialInt2name);
            if (laya.d3.shader.ShaderCompile3D.debugMode) {
              var u = '';
              for (o in l) u += o + ' ';
              var _ = '';
              for (o in h) _ += o + ' ';
              var d = '';
              for (o in c) d += o + ' ';
              console.log(
                'ShaderCompile3DDebugMode---(Name:' +
                  Oi.nameKey.getName(this._name) +
                  ' PublicDefine:' +
                  t +
                  ' SpriteDefine:' +
                  i +
                  ' MaterialDefine:' +
                  n +
                  ' PublicDefineGroup:' +
                  u +
                  ' SpriteDefineGroup:' +
                  _ +
                  'MaterialDefineGroup: ' +
                  d +
                  ')---ShaderCompile3DDebugMode'
              );
            }
            var f = {},
              p = '';
            if (l) for (o in l) (p += '#define ' + o + '\n'), (f[o] = !0);
            if (h) for (o in h) (p += '#define ' + o + '\n'), (f[o] = !0);
            if (c) for (o in c) (p += '#define ' + o + '\n'), (f[o] = !0);
            var m = this._VS.toscript(f, []),
              g = this._PS.toscript(f, []);
            return (
              (a = Oi.create(
                p + m.join('\n'),
                p + g.join('\n'),
                this._attributeMap,
                this._sceneUniformMap,
                this._cameraUniformMap,
                this._spriteUniformMap,
                this._materialUniformMap,
                this._renderElementUniformMap
              )),
              (s[n] = a),
              a
            );
          }),
          (i.precompileShaderWithShaderDefine = function(t, e, i) {
            this.withCompile(t, e, i);
          }),
          (i.addMaterialDefines = function(t) {
            var e = t.defines;
            for (var i in e) {
              var n = e[i],
                a = parseInt(i);
              (this._materialInt2name[a] = n), (this._materialName2Int[n] = a);
            }
          }),
          (i.addSpriteDefines = function(t) {
            var e = t.defines;
            for (var i in e) {
              var n = e[i],
                a = parseInt(i);
              (this._spriteInt2name[a] = n), (this._spriteName2Int[n] = a);
            }
          }),
          (i.getMaterialDefineByName = function(t) {
            return this._materialName2Int[t];
          }),
          (i.registerMaterialDefine = function(t) {
            var e = Math.pow(2, this._materialDefineCounter++);
            return (
              (this._materialInt2name[e] = t),
              (this._materialName2Int[t] = e),
              e
            );
          }),
          (i.registerSpriteDefine = function(t) {
            var e = Math.pow(2, this._spriteDefineCounter++);
            return (
              (this._spriteInt2name[e] = t), (this._spriteName2Int[t] = e), e
            );
          }),
          (e._globalRegDefine = function(t, i) {
            e._globalInt2name[i] = t;
          }),
          (e.add = function(t, i, n, a, r) {
            return (laya.d3.shader.ShaderCompile3D._preCompileShader[t] = new e(
              t,
              i,
              n,
              a,
              r,
              M.includes
            ));
          }),
          (e.get = function(t) {
            return laya.d3.shader.ShaderCompile3D._preCompileShader[
              Oi.nameKey.getID(t)
            ];
          }),
          (e._preCompileShader = {}),
          (e._globalInt2name = []),
          (e.debugMode = !1),
          (e.SHADERDEFINE_HIGHPRECISION = 1),
          (e.SHADERDEFINE_FOG = 4),
          (e.SHADERDEFINE_DIRECTIONLIGHT = 8),
          (e.SHADERDEFINE_POINTLIGHT = 16),
          (e.SHADERDEFINE_SPOTLIGHT = 32),
          (e.SHADERDEFINE_UV0 = 64),
          (e.SHADERDEFINE_COLOR = 128),
          (e.SHADERDEFINE_UV1 = 256),
          (e.SAHDERDEFINE_DEPTHFOG = 131072),
          e
        );
      })(),
      ui = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.d3.graphics.MeshSprite3DStaticBatchManager', Ct);
        var i = e.prototype;
        return (
          (i._getStaticBatch = function(t, e, i, n) {
            var a, r;
            return (
              (r = t
                ? t.id.toString() +
                  i.id.toString() +
                  e.id.toString() +
                  n.toString()
                : i.id.toString() + e.id.toString() + n.toString()),
              this._staticBatches[r]
                ? (a = this._staticBatches[r])
                : (this._staticBatches[r] = a = new _i(r, this, t, e, i)),
              a
            );
          }),
          (i._initStaticBatchs = function(t) {
            this._initBatchRenderElements.sort(e._sortPrepareStaticBatch);
            for (
              var i,
                n,
                a,
                r = !1,
                s = 0,
                o = 0,
                l = this._initBatchRenderElements.length;
              o < l;
              o++
            ) {
              var h = this._initBatchRenderElements[o],
                c = h.renderObj._getVertexBuffer(0);
              h._sprite3D;
              if (n === c.vertexDeclaration && i === h._material) {
                var u;
                if (r)
                  a._addCombineBatchRenderObjTest(h)
                    ? (u = h._staticBatch) !== a &&
                      (u && u._deleteCombineBatchRenderObj(h),
                      a._addCombineBatchRenderObj(h))
                    : ((r = !1), s++);
                else {
                  var _ = this._initBatchRenderElements[o - 1],
                    d = _.renderObj,
                    f = h.renderObj;
                  d._getVertexBuffer().vertexCount +
                    f._getVertexBuffer().vertexCount >
                  65535
                    ? (r = !1)
                    : ((a = this._getStaticBatch(t, n, i, s)),
                      (u = _._staticBatch) !== a &&
                        (u && u._deleteCombineBatchRenderObj(_),
                        a._addCombineBatchRenderObj(_)),
                      (u = h._staticBatch) !== a &&
                        (u && u._deleteCombineBatchRenderObj(h),
                        a._addCombineBatchRenderObj(h)),
                      (r = !0));
                }
              } else (r = !1), (s = 0);
              (i = h._material), (n = c.vertexDeclaration);
            }
          }),
          (e._sortPrepareStaticBatch = function(t, e) {
            var i = t._render,
              n = e._render,
              a = i.lightmapIndex - n.lightmapIndex;
            if (0 === a) {
              var r = i.receiveShadow - n.receiveShadow;
              if (0 === r) {
                var s = t._mainSortID - e._mainSortID;
                return 0 === s
                  ? t.renderObj.triangleCount - e.renderObj.triangleCount
                  : s;
              }
              return r;
            }
            return a;
          }),
          e
        );
      })(),
      _i = (function(t) {
        function e(t, i, n, a, r) {
          (this._batchOwnerIndices = null),
            (this._batchOwners = null),
            (this._needFinishCombine = !1),
            (this._currentCombineVertexCount = 0),
            (this._currentCombineIndexCount = 0),
            (this._vertexDeclaration = null),
            (this._vertexBuffer = null),
            (this._indexBuffer = null),
            e.__super.call(this, t, i, n),
            (this._batchOwnerIndices = []),
            (this._batchOwners = []),
            (this._needFinishCombine = !1),
            (this._currentCombineVertexCount = 0),
            (this._currentCombineIndexCount = 0),
            (this._vertexDeclaration = a),
            (this._material = r);
        }
        a(e, 'laya.d3.graphics.SubMeshStaticBatch', St);
        var i = e.prototype;
        return (
          (i._compareBatchRenderElement = function(t, e) {
            return t._batchIndexStart > e._batchIndexStart;
          }),
          (i._addCombineBatchRenderObjTest = function(t) {
            var e = t.renderObj._vertexCount;
            return !(
              (e > 0
                ? this._currentCombineVertexCount + e
                : this._currentCombineVertexCount +
                  t.renderObj._getVertexBuffer().vertexCount) > 65535
            );
          }),
          (i._addCombineBatchRenderObj = function(t) {
            var e = t.renderObj,
              i = e._vertexCount;
            this._initBatchRenderElements.push(t),
              (t._staticBatch = this),
              i > 0
                ? ((this._currentCombineIndexCount += e._indexCount),
                  (this._currentCombineVertexCount += i))
                : ((this._currentCombineIndexCount =
                    this._currentCombineIndexCount +
                    e._getIndexBuffer().indexCount),
                  (this._currentCombineVertexCount =
                    this._currentCombineVertexCount +
                    e._getVertexBuffer().vertexCount)),
              (this._needFinishCombine = !0);
          }),
          (i._deleteCombineBatchRenderObj = function(t) {
            var e = t.renderObj,
              i = this._initBatchRenderElements.indexOf(t);
            if (-1 !== i) {
              this._initBatchRenderElements.splice(i, 1),
                (t._staticBatch = null);
              var n = e._vertexCount;
              n > 0
                ? ((this._currentCombineIndexCount =
                    this._currentCombineIndexCount - e._indexCount),
                  (this._currentCombineVertexCount =
                    this._currentCombineVertexCount - n))
                : ((this._currentCombineIndexCount =
                    this._currentCombineIndexCount -
                    e._getIndexBuffer().indexCount),
                  (this._currentCombineVertexCount =
                    this._currentCombineVertexCount -
                    e._getVertexBuffer().vertexCount)),
                (this._needFinishCombine = !0);
            }
          }),
          (i._finishInit = function() {
            if (this._needFinishCombine) {
              var t = 0,
                e = 0;
              this._initBatchRenderElements[0]._sprite3D._render
                .lightmapIndex >= 0
                ? (this._vertexDeclaration = this._getVertexDecLightMap(
                    this._vertexDeclaration
                  ))
                : this._material instanceof
                    laya.d3.core.material.StandardMaterial &&
                  this._material.ambientTexture &&
                  (this._vertexDeclaration = this._getVertexDecLightMap(
                    this._vertexDeclaration
                  ));
              var i = new Float32Array(
                  (this._vertexDeclaration.vertexStride / 4) *
                    this._currentCombineVertexCount
                ),
                n = new Uint16Array(this._currentCombineIndexCount);
              this._vertexBuffer &&
                (this._vertexBuffer.destroy(), this._indexBuffer.destroy()),
                (this._vertexBuffer = Yi.create(
                  this._vertexDeclaration,
                  this._currentCombineVertexCount,
                  35044
                )),
                (this._indexBuffer = qi.create(
                  'ushort',
                  this._currentCombineIndexCount,
                  35044
                ));
              for (
                var a = 0, r = this._initBatchRenderElements.length;
                a < r;
                a++
              ) {
                var s = this._initBatchRenderElements[a],
                  o = s.renderObj,
                  l = o._getStaticBatchBakedVertexs(
                    this._rootOwner ? this._rootOwner._transform : null,
                    s._sprite3D
                  ),
                  h = o.getIndices(),
                  c = s._sprite3D.transform._isFrontFaceInvert,
                  u =
                    t / (this._vertexDeclaration.vertexStride / 4) -
                    o._vertexStart,
                  _ = e,
                  d = _ + h.length;
                (s._batchIndexStart = _), (s._batchIndexEnd = d), n.set(h, e);
                var f = 0;
                if (c)
                  for (f = _; f < d; f += 3) {
                    n[f] = u + n[f];
                    var p = n[f + 1],
                      m = n[f + 2];
                    (n[f + 1] = u + m), (n[f + 2] = u + p);
                  }
                else
                  for (f = _; f < d; f += 3)
                    (n[f] = u + n[f]),
                      (n[f + 1] = u + n[f + 1]),
                      (n[f + 2] = u + n[f + 2]);
                (e += h.length), i.set(l, t), (t += l.length);
              }
              this._vertexBuffer.setData(i),
                this._indexBuffer.setData(n),
                (this._needFinishCombine = !1);
            }
          }),
          (i._getCombineRenderElementFromPool = function() {
            return (
              this._combineRenderElementPool[
                this._combineRenderElementPoolIndex++
              ] ||
              (this._combineRenderElementPool[
                this._combineRenderElementPoolIndex - 1
              ] = new hi())
            );
          }),
          (i._getRenderElement = function(t, e, i) {
            for (
              var n, a, r = this._batchRenderElements.length, s = !0, o = 0;
              o < r;
              o++
            ) {
              var l,
                h = (a = this._batchRenderElements[o])._sprite3D._render;
              0 !== o &&
                (s =
                  (l = (n = this._batchRenderElements[o - 1])._sprite3D._render)
                    .lightmapIndex !== h.lightmapIndex ||
                  l.receiveShadow !== h.receiveShadow ||
                  n._batchIndexEnd !== a._batchIndexStart);
              var c;
              if (s) {
                ((c = this._getCombineRenderElementFromPool()).renderObj = this),
                  (c._material = this._material),
                  (c._batchIndexStart = a._batchIndexStart),
                  (c._batchIndexEnd = a._batchIndexEnd);
                var u = h.lightmapIndex,
                  _ = u + 1,
                  d = this._batchOwnerIndices[_];
                d || (d = this._batchOwnerIndices[_] = []);
                var f,
                  p = d[a._render.receiveShadow ? 1 : 0];
                void 0 === p
                  ? ((d[h.receiveShadow ? 1 : 0] = this._batchOwners.length),
                    ((f = new gn(null, 'StaticBatchMeshSprite3D'))._scene = e),
                    (f._transform = this._rootOwner
                      ? this._rootOwner._transform
                      : null),
                    (f._render.lightmapIndex = u),
                    (f._render.receiveShadow = a._render.receiveShadow),
                    this._batchOwners.push(f))
                  : (f = this._batchOwners[p]),
                  f._render._renderUpdate(i),
                  (c._sprite3D = f),
                  t.push(c);
              } else c._batchIndexEnd = a._batchIndexEnd;
            }
          }),
          (i._beforeRender = function(t) {
            return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
          }),
          (i._render = function(t) {
            var e = t.renderElement,
              i = e._batchIndexStart,
              n = e._batchIndexEnd - i;
            R.mainContext.drawElements(4, n, 5123, 2 * i),
              L.drawCall++,
              (L.trianglesFaces += n / 3);
          }),
          (i.dispose = function() {
            (this._batchOwnerIndices = null),
              (this._batchOwners = null),
              (this._vertexDeclaration = null),
              this._vertexBuffer.destroy(),
              this._indexBuffer.destroy();
          }),
          (i._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), this._vertexBuffer;
          }),
          e
        );
      })(),
      di =
        ((function(t) {
          function e() {
            e.__super.call(this),
              e._nameNumber++,
              this.loadShaderParams(),
              this.createResource(),
              (this.alphaBlending = 1),
              (this.colorIntensity = 1);
          }
          a(e, 'laya.d3.resource.models.SkyBox', t);
          var i = e.prototype;
          (i._getShader = function(t) {
            var e = t.scene._shaderDefineValue;
            return (
              (this._shader = this._shaderCompile.withCompile(e, 0, 0)),
              this._shader
            );
          }),
            (i.createResource = function() {
              (this._numberVertices = 36), (this._numberIndices = 36);
              var t = new Uint16Array(this._numberIndices),
                i = e._vertexDeclaration.vertexStride / 4,
                n = new Float32Array(this._numberVertices * i),
                a = new Re(-0.5, 0.5, 0.5),
                r = new Re(-0.5, -0.5, 0.5),
                s = new Re(0.5, 0.5, 0.5),
                o = new Re(0.5, -0.5, 0.5),
                l = new Re(-0.5, 0.5, -0.5),
                h = new Re(0.5, 0.5, -0.5),
                c = new Re(-0.5, -0.5, -0.5),
                u = new Re(0.5, -0.5, -0.5),
                _ = 0;
              (_ = this._addVertex(n, _, a)),
                (_ = this._addVertex(n, _, r)),
                (_ = this._addVertex(n, _, s)),
                (_ = this._addVertex(n, _, r)),
                (_ = this._addVertex(n, _, o)),
                (_ = this._addVertex(n, _, s)),
                (_ = this._addVertex(n, _, l)),
                (_ = this._addVertex(n, _, h)),
                (_ = this._addVertex(n, _, c)),
                (_ = this._addVertex(n, _, c)),
                (_ = this._addVertex(n, _, h)),
                (_ = this._addVertex(n, _, u)),
                (_ = this._addVertex(n, _, a)),
                (_ = this._addVertex(n, _, h)),
                (_ = this._addVertex(n, _, l)),
                (_ = this._addVertex(n, _, a)),
                (_ = this._addVertex(n, _, s)),
                (_ = this._addVertex(n, _, h)),
                (_ = this._addVertex(n, _, r)),
                (_ = this._addVertex(n, _, c)),
                (_ = this._addVertex(n, _, u)),
                (_ = this._addVertex(n, _, r)),
                (_ = this._addVertex(n, _, u)),
                (_ = this._addVertex(n, _, o)),
                (_ = this._addVertex(n, _, a)),
                (_ = this._addVertex(n, _, c)),
                (_ = this._addVertex(n, _, r)),
                (_ = this._addVertex(n, _, l)),
                (_ = this._addVertex(n, _, c)),
                (_ = this._addVertex(n, _, a)),
                (_ = this._addVertex(n, _, s)),
                (_ = this._addVertex(n, _, o)),
                (_ = this._addVertex(n, _, u)),
                (_ = this._addVertex(n, _, h)),
                (_ = this._addVertex(n, _, s)),
                (_ = this._addVertex(n, _, u));
              for (var d = 0; d < 36; d++) t[d] = d;
              (this._vertexBuffer = new Yi(
                e._vertexDeclaration,
                this._numberVertices,
                35044,
                !0
              )),
                (this._indexBuffer = new qi(
                  'ushort',
                  this._numberIndices,
                  35044,
                  !0
                )),
                this._vertexBuffer.setData(n),
                this._indexBuffer.setData(t);
            }),
            (i._addVertex = function(t, e, i) {
              var n = i.elements;
              return (
                (t[e + 0] = n[0]), (t[e + 1] = n[1]), (t[e + 2] = n[2]), e + 3
              );
            }),
            (i.loadShaderParams = function() {
              (this._sharderNameID = Oi.nameKey.getID('SkyBox')),
                (this._shaderCompile =
                  ci._preCompileShader[this._sharderNameID]);
            }),
            (i._render = function(t) {
              this._textureCube &&
                this._textureCube.loaded &&
                (this._vertexBuffer._bind(),
                this._indexBuffer._bind(),
                (this._shader = this._getShader(t)),
                this._shader.bind(),
                t.camera.transform.worldMatrix.cloneTo(e._tempMatrix4x40),
                e._tempMatrix4x40.transpose(),
                Te.multiply(
                  t._projectionMatrix,
                  e._tempMatrix4x40,
                  e._tempMatrix4x41
                ),
                t.camera._shaderValues.setValue(4, e._tempMatrix4x41.elements),
                this._shader.uploadCameraUniforms(t.camera._shaderValues.data),
                this._shaderValue.setValue(1, this._colorIntensity),
                this._shaderValue.setValue(2, this._alphaBlending),
                this._shaderValue.setValue(3, this.textureCube),
                this._shader.uploadAttributes(
                  e._vertexDeclaration.shaderValues.data,
                  null
                ),
                this._shader.uploadMaterialUniforms(this._shaderValue.data),
                R.mainContext.drawElements(4, 36, 5123, 0),
                (L.trianglesFaces += 12),
                L.drawCall++);
            }),
            (i.destroy = function() {
              t.prototype.destroy.call(this),
                this._textureCube &&
                  (this._textureCube._removeReference(),
                  (this._textureCube = null));
            }),
            r(
              0,
              i,
              'textureCube',
              function() {
                return this._textureCube;
              },
              function(t) {
                this._textureCube !== t &&
                  (this._textureCube && this._textureCube._removeReference(),
                  (this._textureCube = t),
                  t && t._addReference());
              }
            ),
            (e._nameNumber = 1),
            n(e, [
              '_tempMatrix4x40',
              function() {
                return (this._tempMatrix4x40 = new Te());
              },
              '_tempMatrix4x41',
              function() {
                return (this._tempMatrix4x41 = new Te());
              },
              '_vertexDeclaration',
              function() {
                return (this._vertexDeclaration = new Tt(12, [
                  new Mt(0, 'vector3', 0)
                ]));
              }
            ]);
        })(Pe),
        (function(t) {
          function e() {
            (this._stacks = 16),
              (this._slices = 16),
              (this._radius = 1),
              e.__super.call(this),
              e._nameNumber++,
              this.loadShaderParams(),
              this.recreateResource(),
              (this.alphaBlending = 1),
              (this.colorIntensity = 1);
          }
          a(e, 'laya.d3.resource.models.SkyDome', t);
          var s = e.prototype;
          (s._getShader = function(t) {
            var e = t.scene._shaderDefineValue;
            return (
              (this._shader = this._shaderCompile.withCompile(e, 0, 0)),
              this._shader
            );
          }),
            (s.recreateResource = function() {
              (this._numberVertices = (this._stacks + 1) * (this._slices + 1)),
                (this._numberIndices =
                  3 * this._stacks * (this._slices + 1) * 2);
              for (
                var t = new Uint16Array(this._numberIndices),
                  i = e._vertexDeclaration.vertexStride / 4,
                  n = new Float32Array(this._numberVertices * i),
                  a = Math.PI / this._stacks,
                  r = (2 * Math.PI) / this._slices,
                  s = 0,
                  o = 0,
                  l = 0,
                  h = 0;
                h < this._stacks + 1;
                h++
              )
                for (
                  var c = Math.sin(h * a), u = Math.cos(h * a), _ = 0;
                  _ < this._slices + 1;
                  _++
                ) {
                  var d = c * Math.sin(_ * r),
                    f = c * Math.cos(_ * r);
                  (n[o + 0] = d * this._radius),
                    (n[o + 1] = u * this._radius),
                    (n[o + 2] = f * this._radius),
                    (n[o + 3] = -_ / this._slices + 0.75),
                    (n[o + 4] = h / this._stacks),
                    (o += i),
                    h != this._stacks - 1 &&
                      ((t[l++] = s + 1),
                      (t[l++] = s),
                      (t[l++] = s + (this._slices + 1)),
                      (t[l++] = s + (this._slices + 1)),
                      (t[l++] = s),
                      (t[l++] = s + this._slices),
                      s++);
                }
              (this._vertexBuffer = new Yi(
                e._vertexDeclaration,
                this._numberVertices,
                35044
              )),
                (this._indexBuffer = new qi(
                  'ushort',
                  this._numberIndices,
                  35044
                )),
                this._vertexBuffer.setData(n),
                this._indexBuffer.setData(t);
            }),
            (s.loadShaderParams = function() {
              (this._sharderNameID = Oi.nameKey.getID('SkyDome')),
                (this._shaderCompile =
                  ci._preCompileShader[this._sharderNameID]);
            }),
            (s._render = function(t) {
              this._texture &&
                this._texture.loaded &&
                (this._vertexBuffer._bind(),
                this._indexBuffer._bind(),
                (this._shader = this._getShader(t)),
                this._shader.bind(),
                t.camera.transform.worldMatrix.cloneTo(e._tempMatrix4x40),
                e._tempMatrix4x40.transpose(),
                Te.multiply(
                  t._projectionMatrix,
                  e._tempMatrix4x40,
                  e._tempMatrix4x41
                ),
                t.camera._shaderValues.setValue(4, e._tempMatrix4x41.elements),
                this._shader.uploadCameraUniforms(t.camera._shaderValues.data),
                this._shaderValue.setValue(1, this._colorIntensity),
                this._shaderValue.setValue(2, this._alphaBlending),
                this._shaderValue.setValue(3, this.texture),
                this._shader.uploadAttributes(
                  e._vertexDeclaration.shaderValues.data,
                  null
                ),
                this._shader.uploadMaterialUniforms(this._shaderValue.data),
                R.mainContext.drawElements(
                  4,
                  this._indexBuffer.indexCount,
                  5123,
                  0
                ),
                (L.trianglesFaces += this._numberIndices / 3),
                L.drawCall++);
            }),
            (s.onEnvDescLoaded = function(t) {
              var e = '',
                n = Math.max(t.lastIndexOf('/'), t.lastIndexOf('\\'));
              n > 0 && (e = t.substr(0, n + 1));
              var a = i.loader.getRes(t);
              void 0 != a.ev && this.__ownerCamera
                ? this.__ownerCamera._shaderValues.setValue(
                    13,
                    Math.pow(2, a.ev)
                  )
                : this.__ownerCamera._shaderValues.setValue(13, Math.pow(2, 0)),
                (this.texture = ln.load(e + a.skytex)),
                (this.environmentSpecular = en.load(e + a.prefiltedEnv));
              var r = new Float32Array(a.IrradianceMat);
              (this.envDiffuseSHRed = r.slice(0, 16)),
                (this.envDiffuseSHGreen = r.slice(16, 32)),
                (this.envDiffuseSHBlue = r.slice(32, 48));
            }),
            (s.loadEnvInfo = function(t) {
              i.loader.load(t, y.create(this, this.onEnvDescLoaded, [t]));
            }),
            (s.destroy = function() {
              t.prototype.destroy.call(this),
                this._texture &&
                  (this._texture._removeReference(), (this._texture = null));
            }),
            r(
              0,
              s,
              'texture',
              function() {
                return this._texture;
              },
              function(t) {
                this._texture !== t &&
                  (this._texture && this._texture._removeReference(),
                  (this._texture = t),
                  t && t._addReference());
              }
            ),
            (e._nameNumber = 1),
            n(e, [
              '_tempMatrix4x40',
              function() {
                return (this._tempMatrix4x40 = new Te());
              },
              '_tempMatrix4x41',
              function() {
                return (this._tempMatrix4x41 = new Te());
              },
              '_vertexDeclaration',
              function() {
                return (this._vertexDeclaration = new Tt(20, [
                  new Mt(0, 'vector3', 0),
                  new Mt(12, 'vector2', 2)
                ]));
              }
            ]);
        })(Pe),
        (function(t) {
          function e() {
            (this._componentsMap = null),
              (this._typeComponentsIndices = null),
              (this._components = null),
              (this._scripts = null),
              e.__super.call(this),
              (this._componentsMap = []),
              (this._typeComponentsIndices = []),
              (this._components = []),
              (this._scripts = []);
          }
          a(e, 'laya.d3.core.ComponentNode', x);
          var i = e.prototype;
          return (
            (i.addComponent = function(t) {
              var e,
                i = this._componentsMap.indexOf(t);
              if (-1 === i)
                (e = []),
                  this._componentsMap.push(t),
                  this._typeComponentsIndices.push(e);
              else if (
                ((e = this._typeComponentsIndices[i]),
                this._components[e[0]].isSingleton)
              )
                throw new Error(
                  '无法单实例创建' + t + '组件，' + t + '组件已存在！'
                );
              var n = p.getInstance(t);
              return (
                e.push(this._components.length),
                this._components.push(n),
                n instanceof laya.d3.component.Script && this._scripts.push(n),
                n._initialize(this),
                n
              );
            }),
            (i._removeComponent = function(t, e) {
              var i = this._typeComponentsIndices[t],
                n = i[e],
                a = this._components[n];
              this._components.splice(n, 1),
                a instanceof laya.d3.component.Script &&
                  this._scripts.splice(this._scripts.indexOf(a), 1),
                i.splice(e, 1),
                0 === i.length &&
                  (this._typeComponentsIndices.splice(t, 1),
                  this._componentsMap.splice(t, 1));
              for (var r = 0, s = this._componentsMap.length; r < s; r++)
                for (
                  var o = (i = this._typeComponentsIndices[r]).length - 1;
                  o >= 0;
                  o--
                ) {
                  var l = i[o];
                  if (!(l > n)) break;
                  i[o] = --l;
                }
              a._destroy();
            }),
            (i.getComponentByType = function(t, e) {
              void 0 === e && (e = 0);
              var i = this._componentsMap.indexOf(t);
              return -1 === i
                ? null
                : this._components[this._typeComponentsIndices[i][e]];
            }),
            (i.getComponentsByType = function(t, e) {
              var i = this._componentsMap.indexOf(t);
              if (-1 !== i) {
                var n = this._typeComponentsIndices[i],
                  a = n.length;
                e.length = a;
                for (var r = 0; r < a; r++) e[r] = this._components[n[r]];
              } else e.length = 0;
            }),
            (i.getComponentByIndex = function(t) {
              return this._components[t];
            }),
            (i.removeComponentByType = function(t, e) {
              void 0 === e && (e = 0);
              var i = this._componentsMap.indexOf(t);
              -1 !== i && this._removeComponent(i, e);
            }),
            (i.removeComponentsByType = function(t) {
              var e = this._componentsMap.indexOf(t);
              if (-1 !== e)
                for (
                  var i = this._typeComponentsIndices[e], n = 0, a = i.length;
                  n < a;
                  i.length < a ? a-- : n++
                )
                  this._removeComponent(e, n);
            }),
            (i.removeAllComponent = function() {
              for (
                var t = 0, e = this._componentsMap.length;
                t < e;
                this._componentsMap.length < e ? e-- : t++
              )
                this.removeComponentsByType(this._componentsMap[t]);
            }),
            (i._updateComponents = function(t) {
              for (var e = 0, i = this._components.length; e < i; e++) {
                var n = this._components[e];
                !n.started && (n._start(t), (n.started = !0)),
                  n.enable && n._update(t);
              }
            }),
            (i._lateUpdateComponents = function(t) {
              for (var e = 0; e < this._components.length; e++) {
                var i = this._components[e];
                !i.started && (i._start(t), (i.started = !0)),
                  i.enable && i._lateUpdate(t);
              }
            }),
            (i._preRenderUpdateComponents = function(t) {
              for (var e = 0; e < this._components.length; e++) {
                var i = this._components[e];
                !i.started && (i._start(t), (i.started = !0)),
                  i.enable && i._preRenderUpdate(t);
              }
            }),
            (i._postRenderUpdateComponents = function(t) {
              for (var e = 0; e < this._components.length; e++) {
                var i = this._components[e];
                !i.started && (i._start(t), (i.started = !0)),
                  i.enable && i._postRenderUpdate(t);
              }
            }),
            e
          );
        })()),
      fi = (function(t) {
        function e() {
          (this._realTimeCurrentFrameIndexes = null),
            (this._realTimeCurrentTimes = null),
            (this._fullKeyframeIndicesCache = null),
            (this._animationDatasCache = null),
            (this._avatarDatasCache = null),
            (this._skinnedDatasCache = null),
            (this._version = null),
            (this._nodes = null),
            (this._nodesMap = null),
            (this._cachePropertyMap = null),
            (this._nodeToCachePropertyMap = null),
            (this._unCachePropertyMap = null),
            (this._duration = NaN),
            (this._frameRate = 0),
            (this._animationEvents = null),
            (this._publicClipDatas = null),
            (this.islooping = !1),
            e.__super.call(this),
            (this._fullKeyframeIndicesCache = {}),
            (this._animationDatasCache = []),
            (this._avatarDatasCache = []),
            (this._skinnedDatasCache = []),
            (this._animationEvents = []);
        }
        a(e, 'laya.d3.animation.AnimationClip', S);
        var n = e.prototype;
        return (
          (n.duration = function() {
            return this._duration;
          }),
          (n._hermiteInterpolate = function(t, e, i, n) {
            for (
              var a = t.data,
                r = t.outTangent,
                s = t.next,
                o = s.data,
                l = s.inTangent,
                h = !1,
                c = NaN,
                u = NaN,
                _ = NaN,
                d = NaN,
                f = 0,
                p = n.length;
              f < p;
              f++
            ) {
              var m = r[f],
                g = l[f];
              if (Number.isFinite(m) && Number.isFinite(g)) {
                if (!h) {
                  var y = e * e,
                    v = y * e;
                  (c = 2 * v - 3 * y + 1),
                    (u = v - 2 * y + e),
                    (_ = v - y),
                    (d = -2 * v + 3 * y),
                    (h = !0);
                }
                n[f] = c * a[f] + u * m * i + _ * g * i + d * o[f];
              } else n[f] = a[f];
            }
          }),
          (n._getFullKeyframeIndicesWithCache = function(t) {
            return this._fullKeyframeIndicesCache[t];
          }),
          (n._cacheFullKeyframeIndices = function(t, e) {
            this._fullKeyframeIndicesCache[t] = e;
          }),
          (n._getAnimationDataWithCache = function(t, e) {
            var i = this._animationDatasCache[t];
            return i ? i[e] : null;
          }),
          (n._cacheAnimationData = function(t, e, i) {
            (this._animationDatasCache[t] ||
              (this._animationDatasCache[t] = []))[e] = i;
          }),
          (n._getAvatarDataWithCache = function(t, e, i) {
            var n = this._avatarDatasCache[t.id];
            if (n) {
              var a = n[e];
              return a ? a[i] : null;
            }
            return null;
          }),
          (n._cacheAvatarData = function(t, e, i, n) {
            var a =
              this._avatarDatasCache[t.id] ||
              (this._avatarDatasCache[t.id] = []);
            (a[e] || (a[e] = []))[i] = n;
          }),
          (n._evaluateAnimationlDatasCacheMode = function(t, e, i, n, a) {
            for (
              var r = 0, s = 0, o = 0, l = a ? a.length : this._nodes.length;
              o < l;
              o++
            ) {
              var h = a ? a[o] : o,
                c = this._nodes[h],
                u = c._cacheProperty;
              if (t[h]) {
                var _,
                  d = e[h],
                  f = d[i.currentFrameIndex],
                  p = 0;
                if (-1 !== f) {
                  var m = c.keyFrames[f];
                  if (m.next) {
                    a && !u
                      ? (_ = n[h]) ||
                        (_ = n[h] = new Float32Array(c.keyFrameWidth))
                      : ((_ = new Float32Array(c.keyFrameWidth)), (n[o] = _));
                    var g = NaN,
                      y = m.duration;
                    (g = 0 !== y ? (i.currentFrameTime - m.startTime) / y : 0),
                      this._hermiteInterpolate(m, g, y, _);
                  } else {
                    if (a && !u)
                      (_ = n[h]) ||
                        (_ = n[h] = new Float32Array(c.keyFrameWidth));
                    else {
                      if (-1 !== (p = i._lastFrameIndex) && d[p] === f)
                        continue;
                      (_ = new Float32Array(c.keyFrameWidth)), (n[o] = _);
                    }
                    var v = m.data;
                    for (r = 0, s = _.length; r < s; r++) _[r] = v[r];
                  }
                } else {
                  if (a && !u)
                    (_ = n[h]) ||
                      (_ = n[h] = new Float32Array(c.keyFrameWidth));
                  else {
                    if (-1 !== (p = i._lastFrameIndex) && d[p] === f) continue;
                    (_ = new Float32Array(c.keyFrameWidth)), (n[o] = _);
                  }
                  var b = c.keyFrames[0].data;
                  for (r = 0, s = _.length; r < s; r++) _[r] = b[r];
                }
              }
            }
          }),
          (n._evaluateAnimationlDatasRealTime = function(t, e, i, n) {
            var a = 0,
              r = 0,
              s = this._nodes;
            if (!this._realTimeCurrentFrameIndexes) {
              for (
                this._realTimeCurrentFrameIndexes = new Int32Array(s.length),
                  a = 0,
                  r = s.length;
                a < r;
                a++
              )
                this._realTimeCurrentFrameIndexes[a] = -1;
              this._realTimeCurrentTimes = new Float32Array(s.length);
            }
            for (a = 0, r = n ? n.length : this._nodes.length; a < r; a++) {
              var o = n ? n[a] : a,
                l = s[o];
              e < this._realTimeCurrentTimes[o] &&
                (this._realTimeCurrentFrameIndexes[o] = -1),
                (this._realTimeCurrentTimes[o] = e);
              for (
                var h = this._realTimeCurrentFrameIndexes[o] + 1,
                  c = l.keyFrames,
                  u = c.length;
                h < u;

              ) {
                if (c[h].startTime > e) {
                  this._realTimeCurrentFrameIndexes[o] = h - 1;
                  break;
                }
                h++;
              }
              h === u && (this._realTimeCurrentFrameIndexes[o] = u - 1);
              var _ = 0,
                d = 0,
                f = i[o];
              f || (f = i[o] = new Float32Array(l.keyFrameWidth));
              var p = c[this._realTimeCurrentFrameIndexes[o]];
              if (p) {
                if (p.next) {
                  var m = p.duration,
                    g = NaN;
                  (g = 0 !== m ? (e - p.startTime) / m : 0),
                    this._hermiteInterpolate(p, g, m, f);
                } else {
                  var y = p.data;
                  for (_ = 0, d = f.length; _ < d; _++) f[_] = y[_];
                }
              } else {
                var v = l.keyFrames[0].data;
                for (_ = 0, d = f.length; _ < d; _++) f[_] = v[_];
              }
              var b = t[o];
              b &&
                (n
                  ? U._propertySetFuncs[l.propertyNameID](b, null, f)
                  : U._propertySetFuncs[l.propertyNameID](null, b, f));
            }
          }),
          (n._binarySearchEventIndex = function(t) {
            for (
              var e = 0, i = this._animationEvents.length - 1, n = 0;
              e <= i;

            ) {
              n = Math.floor((e + i) / 2);
              var a = this._animationEvents[n].time;
              if (a == t) return n;
              a > t ? (i = n - 1) : (e = n + 1);
            }
            return e;
          }),
          (n.addEvent = function(t) {
            var e = this._binarySearchEventIndex(t.time);
            this._animationEvents.splice(e, 0, t);
          }),
          (n.onAsynLoaded = function(t, e, i) {
            var n = new f(e);
            switch (((this._version = n.readUTFString()), this._version)) {
              case 'LAYAANIMATION:01':
                k.parse(this, n);
                break;
              case 'LAYAANIMATION:02':
                P.parse(this, n);
            }
            this.completeCreate(), this._endLoaded();
          }),
          (n.disposeResource = function() {
            (this._realTimeCurrentFrameIndexes = null),
              (this._realTimeCurrentTimes = null),
              (this._fullKeyframeIndicesCache = null),
              (this._animationDatasCache = null),
              (this._avatarDatasCache = null),
              (this._skinnedDatasCache = null),
              (this._version = null),
              (this._nodes = null),
              (this._nodesMap = null),
              (this._cachePropertyMap = null),
              (this._nodeToCachePropertyMap = null),
              (this._unCachePropertyMap = null),
              (this._publicClipDatas = null);
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          e
        );
      })(),
      pi = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.d3.core.Avatar', S);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.d3.core.IClone': !0 }),
          (n._initCloneToAnimator = function(t, e) {
            (e._avatarNodeMap[t.name] = t), e._avatarNodes.push(t);
            for (var i = 0, n = t.getChildCount(); i < n; i++)
              this._initCloneToAnimator(t.getChildByIndex(i), e);
          }),
          (n._parseNode = function(t, e) {
            var i = t.props.name;
            if (((e.name = i), e._parent)) {
              var n = t.customProps,
                a = e.transform;
              (a._localRotationEuler = new Float32Array(3)),
                a.setLocalPosition(new Float32Array(n.translate)),
                a.setLocalRotation(new Float32Array(n.rotation)),
                a.setLocalScale(new Float32Array(n.scale)),
                a._setWorldMatrixAndUpdate(new Float32Array(16));
            }
            for (var r = t.child, s = 0, o = r.length; s < o; s++) {
              var l = r[s],
                h = new U();
              e.addChild(h), this._parseNode(l, h);
            }
          }),
          (n.onAsynLoaded = function(t, e, i) {
            if (((this._rootNode = new U()), e.version)) {
              this._version = e.version;
              var n = e.rootNode;
              n && this._parseNode(n, this._rootNode);
            } else this._parseNode(e, this._rootNode);
            this._endLoaded();
          }),
          (n._cloneDatasToAnimator = function(t) {
            var e = this._rootNode.clone();
            e.transform._setWorldMatrixIgnoreUpdate(null);
            (t._avatarNodeMap = {}),
              (t._avatarNodes = []),
              this._initCloneToAnimator(e, t);
          }),
          (n.cloneTo = function(t) {
            var e = t,
              i = this._rootNode.clone();
            e._rootNode = i;
          }),
          (n.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          e
        );
      })(),
      mi = (function(t) {
        function e() {
          e.__super.call(this),
            (this._shaderDefineValue = 0),
            (this._disablePublicShaderDefine = 0),
            (this._shaderValues = new Fe()),
            (this._values = []),
            (this.renderQueue = 2e3),
            (this._alphaTest = !1),
            (this.cull = 2),
            (this.blend = 0),
            (this.srcBlend = 1),
            (this.dstBlend = 0),
            (this.srcBlendRGB = 1),
            (this.dstBlendRGB = 0),
            (this.srcBlendAlpha = 1),
            (this.dstBlendAlpha = 0),
            (this.blendConstColor = new Be(1, 1, 1, 1)),
            (this.blendEquation = 0),
            (this.blendEquationRGB = 0),
            (this.blendEquationAlpha = 0),
            (this.depthTest = 513),
            (this.depthWrite = !0);
        }
        a(e, 'laya.d3.core.material.BaseMaterial', t);
        var s = e.prototype;
        return (
          i.imps(s, { 'laya.d3.core.IClone': !0 }),
          (s._addShaderDefine = function(t) {
            this._shaderDefineValue |= t;
          }),
          (s._removeShaderDefine = function(t) {
            this._shaderDefineValue &= ~t;
          }),
          (s._addDisablePublicShaderDefine = function(t) {
            this._disablePublicShaderDefine |= t;
          }),
          (s._removeDisablePublicShaderDefine = function(t) {
            this._disablePublicShaderDefine &= ~t;
          }),
          (s._setBuffer = function(t, e) {
            this._shaderValues.setValue(t, e), (this._values[t] = e);
          }),
          (s._getBuffer = function(t) {
            return this._values[t];
          }),
          (s._setMatrix4x4 = function(t, e) {
            this._shaderValues.setValue(t, e ? e.elements : null),
              (this._values[t] = e);
          }),
          (s._getMatrix4x4 = function(t) {
            return this._values[t];
          }),
          (s._setInt = function(t, e) {
            this._shaderValues.setValue(t, e), (this._values[t] = e);
          }),
          (s._getInt = function(t) {
            return this._values[t];
          }),
          (s._setNumber = function(t, e) {
            this._shaderValues.setValue(t, e), (this._values[t] = e);
          }),
          (s._getNumber = function(t) {
            return this._values[t];
          }),
          (s._setBool = function(t, e) {
            this._shaderValues.setValue(t, e), (this._values[t] = e);
          }),
          (s._getBool = function(t) {
            return this._values[t];
          }),
          (s._setVector2 = function(t, e) {
            this._shaderValues.setValue(t, e ? e.elements : null),
              (this._values[t] = e);
          }),
          (s._getVector2 = function(t) {
            return this._values[t];
          }),
          (s._setColor = function(t, e) {
            this._shaderValues.setValue(t, e ? e.elements : null),
              (this._values[t] = e);
          }),
          (s._getColor = function(t) {
            return this._values[t];
          }),
          (s._setTexture = function(t, e) {
            var i = this._values[t];
            (this._values[t] = e),
              this._shaderValues.setValue(t, e),
              this.referenceCount > 0 &&
                (i && i._removeReference(), e && e._addReference());
          }),
          (s._getTexture = function(t) {
            return this._values[t];
          }),
          (s._upload = function() {
            this._shader.uploadMaterialUniforms(this._shaderValues.data);
          }),
          (s._getShader = function(t, e, i) {
            var n = (t | e) & ~this._disablePublicShaderDefine;
            return (
              (this._shader = this._shaderCompile.withCompile(
                n,
                i,
                this._shaderDefineValue
              )),
              this._shader
            );
          }),
          (s._setRenderStateBlendDepth = function() {
            var t = R.mainContext;
            switch (
              (B.setDepthMask(t, this.depthWrite),
              0 === this.depthTest
                ? B.setDepthTest(t, !1)
                : (B.setDepthTest(t, !0), B.setDepthFunc(t, this.depthTest)),
              this.blend)
            ) {
              case 0:
                B.setBlend(t, !1);
                break;
              case 1:
                B.setBlend(t, !0),
                  B.setBlendFunc(t, this.srcBlend, this.dstBlend);
                break;
              case 2:
                B.setBlend(t, !0);
            }
          }),
          (s._setRenderStateFrontFace = function(t, e) {
            var i = R.mainContext,
              n = 0;
            switch (this.cull) {
              case 0:
                B.setCullFace(i, !1);
                break;
              case 1:
                B.setCullFace(i, !0),
                  (n = t
                    ? e && e._isFrontFaceInvert
                      ? 2305
                      : 2304
                    : e && e._isFrontFaceInvert
                    ? 2304
                    : 2305),
                  B.setFrontFace(i, n);
                break;
              case 2:
                B.setCullFace(i, !0),
                  (n = t
                    ? e && e._isFrontFaceInvert
                      ? 2304
                      : 2305
                    : e && e._isFrontFaceInvert
                    ? 2305
                    : 2304),
                  B.setFrontFace(i, n);
            }
          }),
          (s.onAsynLoaded = function(t, e, i) {
            var n = e[0],
              a = e[1];
            switch (n.version) {
              case 'LAYAMATERIAL:01':
                var r = 0,
                  s = 0,
                  o = n.props;
                for (var l in o)
                  switch (l) {
                    case 'vectors':
                      var h = o[l];
                      for (r = 0, s = h.length; r < s; r++) {
                        var c = h[r],
                          u = c.value;
                        switch (u.length) {
                          case 2:
                            this[c.name] = new Ne(u[0], u[1]);
                            break;
                          case 3:
                            this[c.name] = new Re(u[0], u[1], u[2]);
                            break;
                          case 4:
                            this[c.name] = new Be(u[0], u[1], u[2], u[3]);
                            break;
                          default:
                            throw new Error(
                              'BaseMaterial:unkonwn color length.'
                            );
                        }
                      }
                      break;
                    case 'textures':
                      var _ = o[l];
                      for (r = 0, s = _.length; r < s; r++) {
                        var d = _[r],
                          f = d.path;
                        f && (this[d.name] = v.getRes(a[f]));
                      }
                      break;
                    case 'defines':
                      var p = o[l];
                      for (r = 0, s = p.length; r < s; r++) {
                        var m = this._shaderCompile.getMaterialDefineByName(
                          p[r]
                        );
                        this._addShaderDefine(m);
                      }
                      break;
                    case 'cull':
                    case 'blend':
                    case 'srcBlend':
                    case 'dstBlend':
                    case 'depthWrite':
                      this[l] = o[l];
                      break;
                    case 'renderQueue':
                      switch (o[l]) {
                        case 1:
                          this.renderQueue = 2e3;
                          break;
                        case 2:
                          this.renderQueue = 3e3;
                      }
                      break;
                    default:
                      this[l] = o[l];
                  }
                break;
              case 'LAYAMATERIAL:02':
                o = n.props;
                for (l in o)
                  switch (l) {
                    case 'vectors':
                      for (r = 0, s = (h = o[l]).length; r < s; r++)
                        switch (((c = h[r]), (u = c.value).length)) {
                          case 2:
                            this[c.name] = new Ne(u[0], u[1]);
                            break;
                          case 3:
                            this[c.name] = new Re(u[0], u[1], u[2]);
                            break;
                          case 4:
                            this[c.name] = new Be(u[0], u[1], u[2], u[3]);
                            break;
                          default:
                            throw new Error(
                              'BaseMaterial:unkonwn color length.'
                            );
                        }
                      break;
                    case 'textures':
                      for (r = 0, s = (_ = o[l]).length; r < s; r++)
                        (f = (d = _[r]).path) &&
                          (this[d.name] = v.getRes(a[f]));
                      break;
                    case 'defines':
                      for (r = 0, s = (p = o[l]).length; r < s; r++)
                        (m = this._shaderCompile.getMaterialDefineByName(p[r])),
                          this._addShaderDefine(m);
                      break;
                    default:
                      this[l] = o[l];
                  }
                break;
              default:
                throw new Error('BaseMaterial:unkonwn version.');
            }
            this._endLoaded();
          }),
          (s._addReference = function() {
            t.prototype._addReference.call(this);
            for (var e = 0, i = this._values.length; e < i; e++) {
              var n = this._values[e];
              n &&
                n instanceof laya.d3.resource.BaseTexture &&
                n._addReference();
            }
          }),
          (s._removeReference = function() {
            t.prototype._removeReference.call(this);
            for (var e = 0, i = this._values.length; e < i; e++) {
              var n = this._values[e];
              n &&
                n instanceof laya.d3.resource.BaseTexture &&
                n._removeReference();
            }
          }),
          (s.disposeResource = function() {
            (this.blendConstColor = null),
              (this._shader = null),
              (this._shaderValues = null);
            for (var t = 0, e = this._values.length; t < e; t++) {
              var i = this._values[t];
              i &&
                i instanceof laya.d3.resource.BaseTexture &&
                i._removeReference();
            }
            this._values = null;
          }),
          (s.setShaderName = function(t) {
            var e = Oi.nameKey.getID(t);
            if (-1 === e) throw new Error('BaseMaterial: unknown shader name.');
            this._shaderCompile = ci._preCompileShader[e];
          }),
          (s.cloneTo = function(t) {
            var e = t;
            (e.name = this.name),
              (e.cull = this.cull),
              (e.blend = this.blend),
              (e.srcBlend = this.srcBlend),
              (e.dstBlend = this.dstBlend),
              (e.srcBlendRGB = this.srcBlendRGB),
              (e.dstBlendRGB = this.dstBlendRGB),
              (e.srcBlendAlpha = this.srcBlendAlpha),
              (e.dstBlendAlpha = this.dstBlendAlpha),
              this.blendConstColor.cloneTo(e.blendConstColor),
              (e.blendEquation = this.blendEquation),
              (e.blendEquationRGB = this.blendEquationRGB),
              (e.blendEquationAlpha = this.blendEquationAlpha),
              (e.depthTest = this.depthTest),
              (e.depthWrite = this.depthWrite),
              (e.renderQueue = this.renderQueue),
              (e._shader = this._shader),
              (e._disablePublicShaderDefine = this._disablePublicShaderDefine),
              (e._shaderDefineValue = this._shaderDefineValue);
            var i = 0,
              n = 0,
              a = e._shaderValues;
            e._shaderValues.data.length = this._shaderValues.data.length;
            var r = this._values.length,
              s = e._values;
            for (s.length = r, i = 0, n = r; i < n; i++) {
              var o = this._values[i];
              if (o)
                if ('number' == typeof o) (s[i] = o), (a.data[i] = o);
                else if ('number' == typeof o && Math.floor(o) == o)
                  (s[i] = o), (a.data[i] = o);
                else if ('boolean' == typeof o) (s[i] = o), (a.data[i] = o);
                else if (o instanceof laya.d3.math.Vector2) {
                  var l = s[i] || (s[i] = new Ne());
                  o.cloneTo(l), (a.data[i] = l.elements);
                } else if (o instanceof laya.d3.math.Vector3) {
                  var h = s[i] || (s[i] = new Re());
                  o.cloneTo(h), (a.data[i] = h.elements);
                } else if (o instanceof laya.d3.math.Vector4) {
                  var c = s[i] || (s[i] = new Be());
                  o.cloneTo(c), (a.data[i] = c.elements);
                } else if (o instanceof laya.d3.math.Matrix4x4) {
                  var u = s[i] || (s[i] = new Te());
                  o.cloneTo(u), (a.data[i] = u.elements);
                } else
                  o instanceof laya.d3.resource.BaseTexture &&
                    ((s[i] = o), (a.data[i] = o));
            }
          }),
          (s.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          r(
            0,
            s,
            'alphaTestValue',
            function() {
              return this._getNumber(0);
            },
            function(t) {
              this._setNumber(0, t);
            }
          ),
          r(
            0,
            s,
            'alphaTest',
            function() {
              return this._alphaTest;
            },
            function(t) {
              (this._alphaTest = t),
                t
                  ? this._addShaderDefine(
                      laya.d3.core.material.BaseMaterial.SHADERDEFINE_ALPHATEST
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.material.BaseMaterial.SHADERDEFINE_ALPHATEST
                    );
            }
          ),
          (e.__init__ = function() {
            e.SHADERDEFINE_ALPHATEST = e.shaderDefines.registerDefine(
              'ALPHATEST'
            );
          }),
          (e.RENDERQUEUE_OPAQUE = 2e3),
          (e.RENDERQUEUE_ALPHATEST = 2450),
          (e.RENDERQUEUE_TRANSPARENT = 3e3),
          (e.CULL_NONE = 0),
          (e.CULL_FRONT = 1),
          (e.CULL_BACK = 2),
          (e.BLEND_DISABLE = 0),
          (e.BLEND_ENABLE_ALL = 1),
          (e.BLEND_ENABLE_SEPERATE = 2),
          (e.BLENDPARAM_ZERO = 0),
          (e.BLENDPARAM_ONE = 1),
          (e.BLENDPARAM_SRC_COLOR = 768),
          (e.BLENDPARAM_ONE_MINUS_SRC_COLOR = 769),
          (e.BLENDPARAM_DST_COLOR = 774),
          (e.BLENDPARAM_ONE_MINUS_DST_COLOR = 775),
          (e.BLENDPARAM_SRC_ALPHA = 770),
          (e.BLENDPARAM_ONE_MINUS_SRC_ALPHA = 771),
          (e.BLENDPARAM_DST_ALPHA = 772),
          (e.BLENDPARAM_ONE_MINUS_DST_ALPHA = 773),
          (e.BLENDPARAM_SRC_ALPHA_SATURATE = 776),
          (e.BLENDEQUATION_ADD = 0),
          (e.BLENDEQUATION_SUBTRACT = 1),
          (e.BLENDEQUATION_REVERSE_SUBTRACT = 2),
          (e.DEPTHTEST_OFF = 0),
          (e.DEPTHTEST_NEVER = 512),
          (e.DEPTHTEST_LESS = 513),
          (e.DEPTHTEST_EQUAL = 514),
          (e.DEPTHTEST_LEQUAL = 515),
          (e.DEPTHTEST_GREATER = 516),
          (e.DEPTHTEST_NOTEQUAL = 517),
          (e.DEPTHTEST_GEQUAL = 518),
          (e.DEPTHTEST_ALWAYS = 519),
          (e.SHADERDEFINE_ALPHATEST = 1),
          (e.ALPHATESTVALUE = 0),
          n(e, [
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue());
            }
          ]),
          e
        );
      })(S),
      gi = (function(t) {
        function e() {
          (this._type = 0),
            (this._width = 0),
            (this._height = 0),
            (this._size = null),
            (this._repeat = !1),
            (this._mipmap = !1),
            (this._minFifter = 0),
            (this._magFifter = 0),
            (this._format = 0),
            (this._source = null),
            (this._conchTexture = null),
            (this._wrapModeU = 0),
            (this._wrapModeV = 0),
            e.__super.call(this),
            (this._repeat = !0),
            (this.mipmap = !0),
            (this.minFifter = -1),
            (this.magFifter = -1);
        }
        a(e, 'laya.d3.resource.BaseTexture', S);
        var i = e.prototype;
        return (
          r(0, i, 'width', function() {
            return this._width;
          }),
          r(
            0,
            i,
            'repeat',
            function() {
              return this._repeat;
            },
            function(t) {
              if (this._repeat !== t && ((this._repeat = t), this._source)) {
                var e = R.mainContext;
                B.bindTexture(e, this._type, this._source);
                h.isPOT(this._width, this._height) && this._repeat
                  ? (e.texParameteri(this._type, 10242, 10497),
                    e.texParameteri(this._type, 10243, 10497))
                  : (e.texParameteri(this._type, 10242, 33071),
                    e.texParameteri(this._type, 10243, 33071));
              }
            }
          ),
          r(0, i, 'height', function() {
            return this._height;
          }),
          r(
            0,
            i,
            'magFifter',
            function() {
              return this._magFifter;
            },
            function(t) {
              (this._magFifter = t),
                t != this._magFifter &&
                  this._conchTexture &&
                  this._conchTexture.setMaxFifter(t);
            }
          ),
          r(0, i, 'wrapModeV', function() {
            return this._wrapModeV;
          }),
          r(0, i, 'size', function() {
            return this._size;
          }),
          r(0, i, 'wrapModeU', function() {
            return this._wrapModeU;
          }),
          r(
            0,
            i,
            'mipmap',
            function() {
              return this._mipmap;
            },
            function(t) {
              (this._mipmap = t),
                this._mipmap != t &&
                  this._conchTexture &&
                  this._conchTexture.setMipMap(t);
            }
          ),
          r(
            0,
            i,
            'minFifter',
            function() {
              return this._minFifter;
            },
            function(t) {
              (this._minFifter = t),
                this._minFifter != t &&
                  this._conchTexture &&
                  this._conchTexture.setMinFifter(t);
            }
          ),
          r(0, i, 'format', function() {
            return this._format;
          }),
          r(0, i, 'source', function() {
            return this.activeResource(), this._source;
          }),
          r(0, i, 'defaulteTexture', function() {
            return sn.grayTexture;
          }),
          (e.WARPMODE_REPEAT = 0),
          (e.WARPMODE_CLAMP = 1),
          e
        );
      })(),
      yi = (function(t) {
        function e() {
          (this._subMeshCount = 0),
            (this._boundingBox = null),
            (this._boundingSphere = null),
            (this._boundingBoxCorners = null),
            (this._positions = null),
            e.__super.call(this),
            (this._boundingBoxCorners = s(8, null));
        }
        a(e, 'laya.d3.resource.models.BaseMesh', S);
        var i = e.prototype;
        return (
          (i._getPositions = function() {
            throw new Error('未Override,请重载该属性！');
          }),
          (i._generateBoundingObject = function() {
            (this._boundingSphere = new xe(new Re(), 0)),
              xe.createfromPoints(this._positions, this._boundingSphere),
              (this._boundingBox = new be(new Re(), new Re())),
              be.createfromPoints(this._positions, this._boundingBox),
              this._boundingBox.getCorners(this._boundingBoxCorners);
          }),
          (i.getRenderElementsCount = function() {
            throw new Error('未Override,请重载该属性！');
          }),
          (i.getRenderElement = function(t) {
            throw new Error('未Override,请重载该属性！');
          }),
          r(0, i, 'subMeshCount', function() {
            return this._subMeshCount;
          }),
          r(0, i, 'boundingBox', function() {
            return this._boundingBox;
          }),
          r(0, i, 'boundingBoxCorners', function() {
            return this._boundingBoxCorners;
          }),
          r(0, i, 'boundingSphere', function() {
            return this._boundingSphere;
          }),
          e
        );
      })(),
      vi = (function(t) {
        function e() {
          (this._terrainHeightData = null),
            (this._width = 0),
            (this._height = 0),
            (this._bitType = 0),
            (this._value = NaN),
            e.__super.call(this);
        }
        a(e, 'laya.d3.terrain.TerrainHeightData', S);
        return (
          (e.prototype.onAsynLoaded = function(t, e, i) {
            (this._width = i[0]),
              (this._height = i[1]),
              (this._bitType = i[2]),
              (this._value = i[3]);
            var n,
              a = NaN;
            8 == this._bitType
              ? ((n = new Uint8Array(e)), (a = 1 / 255))
              : 16 == this._bitType &&
                ((n = new Int16Array(e)), (a = 1 / 32766)),
              (this._terrainHeightData = new Float32Array(
                this._height * this._width
              ));
            for (var r = 0, s = this._height * this._width; r < s; r++)
              this._terrainHeightData[r] = (n[r] * a * this._value) / 2;
            this._endLoaded();
          }),
          (e.load = function(t, n, a, r, s) {
            return i.loader.create(t, null, null, e, [n, a, r, s], 1, !1);
          }),
          e
        );
      })(),
      bi = (function(t) {
        function e() {
          (this._version = NaN),
            (this._cameraCoordinateInverse = !1),
            (this._gridSize = NaN),
            (this._chunkNumX = 0),
            (this._chunkNumZ = 0),
            (this._heightDataX = 0),
            (this._heightDataZ = 0),
            (this._heightDataBitType = 0),
            (this._heightDataValue = NaN),
            (this._heightDataUrl = null),
            (this._detailTextureInfos = null),
            (this._chunkInfos = null),
            (this._heightData = null),
            (this._materialInfo = null),
            (this._alphaMaps = null),
            (this._normalMaps = null),
            e.__super.call(this);
        }
        a(e, 'laya.d3.terrain.TerrainRes', S);
        var n = e.prototype;
        return (
          (n.parseData = function(t) {
            var e = t[0],
              i = t[1];
            if (((this._version = e.version), 1 == this._version)) {
              (this._cameraCoordinateInverse = e.cameraCoordinateInverse),
                (this._gridSize = e.gridSize),
                (this._chunkNumX = e.chunkNumX),
                (this._chunkNumZ = e.chunkNumZ);
              var n = e.heightData;
              if (
                ((this._heightDataX = n.numX),
                (this._heightDataZ = n.numZ),
                (this._heightDataBitType = n.bitType),
                (this._heightDataValue = n.value),
                (this._heightDataUrl = i[n.url]),
                (this._materialInfo = new We()),
                e.material)
              ) {
                var a = e.material.ambient,
                  r = e.material.diffuse,
                  o = e.material.specular;
                (this._materialInfo.ambientColor = new Re(a[0], a[1], a[2])),
                  (this._materialInfo.diffuseColor = new Re(r[0], r[1], r[2])),
                  (this._materialInfo.specularColor = new Be(
                    o[0],
                    o[1],
                    o[2],
                    o[3]
                  ));
              }
              var l = e.detailTexture;
              this._detailTextureInfos = s(l.length);
              for (var h = 0; h < l.length; h++) {
                var c = l[h],
                  u = new je();
                (u.diffuseTexture = i[c.diffuse]),
                  (u.normalTexture = c.normal ? i[c.normal] : null),
                  c.scale
                    ? (u.scale = new Ne(c.scale[0], c.scale[1]))
                    : (u.scale = new Ne(1, 1)),
                  c.offset
                    ? (u.offset = new Ne(c.offset[0], c.offset[1]))
                    : (u.offset = new Ne(0, 0)),
                  (this._detailTextureInfos[h] = u);
              }
              var _ = e.alphaMap;
              for (
                this._alphaMaps = s(_.length), h = 0;
                h < this._alphaMaps.length;
                h++
              )
                this._alphaMaps[h] = e.alphaMap[h];
              var d = e.normalMap;
              for (
                this._normalMaps = s(d.length), h = 0;
                h < this._normalMaps.length;
                h++
              )
                this._normalMaps[h] = e.normalMap[h];
              var f = e.chunkInfo;
              if (this._chunkNumX * this._chunkNumZ != f.length)
                return alert('terrain data error'), !1;
              for (this._chunkInfos = s(f.length), h = 0; h < f.length; h++) {
                var p = f[h],
                  m = new ze(),
                  g = p.alphaMap.length,
                  y = p.detailID.length;
                if (g != y) return alert('terrain chunk data error'), !1;
                (m.alphaMap = s(g)),
                  (m.detailID = s(y)),
                  (m.normalMap = i[this._normalMaps[p.normalMap]]);
                for (var b = 0; b < g; b++) {
                  m.alphaMap[b] = i[this._alphaMaps[p.alphaMap[b]]];
                  var w = p.detailID[b],
                    x = w.length;
                  m.detailID[b] = new Uint8Array(x);
                  for (var I = 0; I < x; I++) m.detailID[b][I] = w[I];
                }
                this._chunkInfos[h] = m;
              }
              (this._heightData = v.getRes(this._heightDataUrl)),
                this.onLoadTerrainComplete(this._heightData);
            }
            return !0;
          }),
          (n.onLoadTerrainComplete = function(t) {
            this._endLoaded();
          }),
          (n.onAsynLoaded = function(t, e, i) {
            this.parseData(e);
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e, null, 1, !1);
          }),
          e
        );
      })(),
      wi = (function(t) {
        function e() {
          (this._player = null),
            (this._templet = null),
            e.__super.call(this),
            (this._player = new o());
        }
        a(e, 'laya.d3.component.animation.KeyframeAnimations', t);
        var n = e.prototype;
        return (
          (n._updateAnimtionPlayer = function() {
            this._player._update(i.timer.delta);
          }),
          (n._addUpdatePlayerToTimer = function() {
            i.timer.frameLoop(1, this, this._updateAnimtionPlayer);
          }),
          (n._removeUpdatePlayerToTimer = function() {
            i.timer.clear(this, this._updateAnimtionPlayer);
          }),
          (n._onOwnerActiveHierarchyChanged = function(t) {
            this._owner.displayedInStage &&
              (t
                ? this._addUpdatePlayerToTimer()
                : this._removeUpdatePlayerToTimer());
          }),
          (n._load = function(t) {
            t.activeInHierarchy && this._addUpdatePlayerToTimer(),
              t.on(
                'activeinhierarchychanged',
                this,
                this._onOwnerActiveHierarchyChanged
              );
          }),
          (n._unload = function(e) {
            t.prototype._unload.call(this, e),
              e.activeInHierarchy && this._removeUpdatePlayerToTimer(),
              e.off(
                'activeinhierarchychanged',
                this,
                this._onOwnerActiveHierarchyChanged
              ),
              this._player._destroy(),
              (this._player = null),
              (this._templet = null);
          }),
          r(0, n, 'url', null, function(t) {
            console.log(
              'Warning: discard property,please use templet property instead.'
            );
            var e = i.loader.create(t, null, null, l);
            this._templet !== e &&
              (0 !== this._player.state && this._player.stop(!0),
              (this._templet = e),
              (this._player.templet = e),
              this.event('animationchanged', this));
          }),
          r(0, n, 'player', function() {
            return this._player;
          }),
          r(
            0,
            n,
            'templet',
            function() {
              return this._templet;
            },
            function(t) {
              this._templet !== t &&
                (0 !== this._player.state && this._player.stop(!0),
                (this._templet = t),
                (this._player.templet = t),
                this.event('animationchanged', this));
            }
          ),
          r(0, n, 'currentFrameIndex', function() {
            return this._player.currentKeyframeIndex;
          }),
          r(0, n, 'currentAnimationClipIndex', function() {
            return this._player.currentAnimationClipIndex;
          }),
          r(0, n, 'nodeCount', function() {
            return this._templet.getNodeCount(
              this._player.currentAnimationClipIndex
            );
          }),
          e
        );
      })($e),
      xi = (function(t) {
        function e() {
          e.__super.call(this),
            (this._clipNames = []),
            (this._clips = []),
            (this._playStartFrames = []),
            (this._playEndFrames = []),
            (this._cacheNodesSpriteOwners = []),
            (this._cacheNodesAvatarOwners = []),
            (this._cacheNodesDefaultlValues = []),
            (this._cacheNodesToSpriteMap = []),
            (this._cacheSpriteToNodesMap = []),
            (this._cacheFullFrames = []),
            (this._publicClipsDatas = []),
            (this._playEventIndex = -1),
            (this._updateTransformPropertyLoopCount = -1),
            (this._lastFrameIndex = -1),
            (this._defaultClipIndex = -1),
            (this._cachePlayRate = 1),
            (this._currentPlayClip = null),
            (this._currentFrameIndex = -1),
            (this._currentTime = 0),
            (this._elapsedPlaybackTime = 0),
            (this._startUpdateLoopCount = -1),
            (this.isCache = !0),
            (this.cacheFrameRate = 60),
            (this.playbackRate = 1),
            (this.playOnWake = !0);
        }
        a(e, 'laya.d3.component.Animator', t);
        var s = e.prototype;
        return (
          i.imps(s, { 'laya.resource.IDestroy': !0 }),
          (s._getAvatarOwnersByClip = function(t) {
            var e = this._clips[t]._nodes,
              i = e.length,
              n = this._cacheNodesAvatarOwners[t];
            n.length = i;
            var a = this._cacheNodesDefaultlValues[t];
            a.length = i;
            for (var r = 0; r < i; r++) {
              for (
                var s = this._avatarNodes[0],
                  o = e[r],
                  l = o.path,
                  h = 0,
                  c = l.length;
                h < c;
                h++
              ) {
                var u = l[h];
                if ('' === u) break;
                if (!(s = s.getChildByName(u))) break;
              }
              if (s) {
                n[r] = s;
                var _ = U._propertyGetFuncs[o.propertyNameID](s);
                if (_) {
                  var d = new Float32Array(o.keyFrameWidth);
                  for (a[r] = d, h = 0, c = _.length; h < c; h++) d[h] = _[h];
                }
              }
            }
          }),
          (s._handleSpriteOwnersByClip = function(t) {
            var e = this._clips[t]._nodes,
              i = e.length,
              n = this._cacheNodesSpriteOwners[t];
            n.length = i;
            var a = this._cacheNodesDefaultlValues[t];
            a.length = i;
            for (var r = 0; r < i; r++) {
              var s = this._owner,
                o = e[r],
                l = o.path,
                h = 0,
                c = 0;
              for (h = 0, c = l.length; h < c; h++) {
                var u = l[h];
                if ('' === u) break;
                if (!(s = s.getChildByName(u))) break;
              }
              if (s) {
                n[r] = s;
                var _ = U._propertyGetFuncs[o.propertyNameID](null, s);
                if (_) {
                  var d = new Float32Array(o.keyFrameWidth);
                  for (a[r] = d, h = 0, c = _.length; h < c; h++) d[h] = _[h];
                }
              }
            }
          }),
          (s._offClipAndAvatarRelateEvent = function(t, e) {
            t.loaded
              ? e.loaded || e.off('loaded', this, this._getAvatarOwnersByClip)
              : t.off('loaded', this, this._getAvatarOwnersAndInitDatasAsync);
          }),
          (s._getAvatarOwnersByClipAsync = function(t, e) {
            e.loaded
              ? this._getAvatarOwnersByClip(t)
              : e.once('loaded', this, this._getAvatarOwnersByClip, [t]);
          }),
          (s._offGetSpriteOwnersByClipAsyncEvent = function(t) {
            t.loaded || t.off('loaded', this, this._getSpriteOwnersByClipAsync);
          }),
          (s._getSpriteOwnersByClipAsync = function(t, e) {
            e.loaded
              ? this._handleSpriteOwnersByClip(t)
              : e.once('loaded', this, this._handleSpriteOwnersByClip, [t]);
          }),
          (s._getAvatarOwnersAndInitDatasAsync = function() {
            for (var t = 0, e = this._clips.length; t < e; t++)
              this._getAvatarOwnersByClipAsync(t, this._clips[t]);
            for (
              this._avatar._cloneDatasToAnimator(this),
                t = 0,
                e = this._avatarNodes.length;
              t < e;
              t++
            )
              this._checkAnimationNode(this._avatarNodes[t], this._owner);
          }),
          (s._offGetClipCacheFullKeyframeIndicesEvent = function(t) {
            t.loaded ||
              t.off('loaded', this, this._computeCacheFullKeyframeIndices);
          }),
          (s._computeCacheFullKeyframeIndices = function(t) {
            var e = this._clips[t],
              i = this._cacheFrameRateInterval * this._cachePlayRate,
              n = e._getFullKeyframeIndicesWithCache(i);
            if (n) this._cacheFullFrames[t] = n;
            else {
              n = this._cacheFullFrames[t] = [];
              var a = e._nodes,
                r = a.length;
              n.length = r;
              for (
                var s = Math.ceil(e._duration / i - 1e-5) + 1, o = 0;
                o < r;
                o++
              ) {
                var l = a[o],
                  h = new Int32Array(s);
                h.fill(-1);
                for (var c = l.keyFrames, u = 0, _ = c.length; u < _; u++)
                  for (
                    var d = c[u], f = d.startTime, p = f + d.duration;
                    f <= p;

                  ) {
                    (h[Math.ceil(f / i - 1e-5)] = u), (f += i);
                  }
                n[o] = h;
              }
              e._cacheFullKeyframeIndices(i, n);
            }
          }),
          (s._updateAnimtionPlayer = function() {
            this._updatePlayer(i.timer.delta / 1e3);
          }),
          (s._onOwnerActiveHierarchyChanged = function() {
            this._owner.activeInHierarchy
              ? (i.timer.frameLoop(1, this, this._updateAnimtionPlayer),
                this.playOnWake && this.clip && this.play())
              : (0 !== this.playState && (this._stoped = !0),
                i.timer.clear(this, this._updateAnimtionPlayer));
          }),
          (s._eventScript = function(t, e) {
            for (
              var i = this._currentPlayClip._animationEvents, n = i.length;
              this._playEventIndex < n;
              this._playEventIndex++
            ) {
              var a = i[this._playEventIndex],
                r = a.time;
              if (!(t <= r && r < e)) break;
              for (
                var s = this._owner._scripts, o = 0, l = s.length;
                o < l;
                o++
              ) {
                var h = s[o],
                  c = h[a.eventName];
                c && c.apply(h, a.params);
              }
            }
          }),
          (s._setPlayParams = function(t, e) {
            var i = this._currentTime;
            (this._currentTime = t),
              (this._currentFrameIndex = Math.max(
                Math.floor(this.currentPlayTime / e - 1e-5),
                0
              )),
              (this._currentFrameTime = this._currentFrameIndex * e),
              this._eventScript(i, t);
          }),
          (s._setPlayParamsWhenStop = function(t, e) {
            var i = this._currentTime;
            (this._currentTime = t),
              (this._currentFrameIndex = Math.max(Math.floor(t / e - 1e-5), 0)),
              (this._currentFrameTime = this._currentFrameIndex * e),
              this._eventScript(i, t),
              (this._currentPlayClip = null);
          }),
          (s._revertKeyframeNodes = function(t, e) {
            var i = this._cacheNodesDefaultlValues[e],
              n = t._nodes;
            if (this._avatar)
              for (
                var a = this._cacheNodesAvatarOwners[e], r = 0, s = a.length;
                r < s;
                r++
              ) {
                var o = a[r];
                o && U._propertySetFuncs[n[r].propertyNameID](o, null, i[r]);
              }
            else {
              var l = this._cacheNodesSpriteOwners[e];
              for (r = 0, s = l.length; r < s; r++) {
                var h = l[r];
                h && U._propertySetFuncs[n[r].propertyNameID](null, h, i[r]);
              }
            }
          }),
          (s._onAnimationStop = function() {
            var t,
              e,
              i,
              n = 0,
              a = 0;
            this._lastFrameIndex = -1;
            var r = this._currentPlayClip._nodes;
            if (this._avatar) {
              var s = this._cacheNodesAvatarOwners[this._currentPlayClipIndex];
              for (n = 0, a = s.length; n < a; n++) {
                var o = s[n];
                (i = (e = (t = r[n]).keyFrames)[e.length - 1].data),
                  o && U._propertySetFuncs[t.propertyNameID](o, null, i);
              }
            } else {
              var l = this._cacheNodesSpriteOwners[this._currentPlayClipIndex];
              for (n = 0, a = l.length; n < a; n++) {
                var h = l[n];
                (i = (e = (t = r[n]).keyFrames)[e.length - 1].data),
                  h && U._propertySetFuncs[t.propertyNameID](null, h, i);
              }
            }
          }),
          (s._setAnimationClipPropertyToAnimationNode = function(t, e, i) {
            for (var n = 0, a = e.length; n < a; n++) {
              var r = e[n],
                s = t[r];
              if (s) {
                var o = this._currentPlayClip._nodes[r],
                  l = i[r];
                l && U._propertySetFuncs[o.propertyNameID](s, null, l);
              }
            }
          }),
          (s._setAnimationClipPropertyToSprite3D = function(t, e) {
            for (var i = 0, n = t.length; i < n; i++) {
              var a = t[i];
              if (a) {
                var r = this._currentPlayClip._nodes[i],
                  s = e[i];
                s && U._propertySetFuncs[r.propertyNameID](null, a, s);
              }
            }
          }),
          (s._handleSpriteOwnersBySprite = function(t, e, i, n) {
            var a = this._clips[t],
              r = i.join('/'),
              s = a._nodesMap[r];
            if (s)
              for (
                var o = this._cacheNodesSpriteOwners[t],
                  l = a._nodes,
                  h = this._cacheNodesDefaultlValues[t],
                  c = 0,
                  u = s.length;
                c < u;
                c++
              ) {
                var _ = s[c],
                  d = l.indexOf(_);
                if (e) {
                  o[d] = n;
                  var f = U._propertyGetFuncs[_.propertyNameID](null, n);
                  if (f) {
                    var p = h[d];
                    p || (h[d] = p = new Float32Array(_.keyFrameWidth));
                    for (var m = 0, g = f.length; m < g; m++) p[m] = f[m];
                  }
                } else o[d] = null;
              }
          }),
          (s._evaluateAvatarNodesCacheMode = function(t, i, n, a, r) {
            i._evaluateAnimationlDatasCacheMode(
              t,
              this._cacheFullFrames[this._currentPlayClipIndex],
              this,
              n,
              r
            ),
              this._setAnimationClipPropertyToAnimationNode(t, r, n);
            for (var s = 0, o = this._avatarNodes.length; s < o; s++) {
              var l = this._avatarNodes[s].transform;
              if (l._worldUpdate) {
                var h = new Float32Array(16);
                (a[s] = h), l._setWorldMatrixAndUpdate(h);
              } else {
                var c = l.getWorldMatrix();
                a[s] = c || e.deafaultMatrix;
              }
            }
          }),
          (s._evaluateAvatarNodesRealTime = function(t, i, n, a, r) {
            i._evaluateAnimationlDatasRealTime(t, this.currentPlayTime, n, r),
              this._setAnimationClipPropertyToAnimationNode(t, r, n);
            for (var s = 0, o = this._avatarNodes.length; s < o; s++) {
              var l = this._avatarNodes[s].transform;
              l._worldUpdate
                ? l._setWorldMatrixNoUpdate(a[s])
                : (a[s] = e.deafaultMatrix);
            }
          }),
          (s._updateAvatarNodesToSpriteCacheMode = function(t, i) {
            for (
              var n = 0, a = this._cacheSpriteToNodesMap.length;
              n < a;
              n++
            ) {
              var r = this._cacheSpriteToNodesMap[n],
                s = i[r];
              if (s !== e.deafaultMatrix) {
                var o = this._avatarNodes[r].transform._entity,
                  l = o.worldMatrix;
                Ke.matrix4x4MultiplyMFM(
                  this._owner._transform.worldMatrix,
                  s,
                  l
                ),
                  (o.worldMatrix = l);
              }
            }
          }),
          (s._updateAvatarNodesToSpriteRealTime = function() {
            for (
              var t = 0, i = this._cacheSpriteToNodesMap.length;
              t < i;
              t++
            ) {
              var n = this._avatarNodes[this._cacheSpriteToNodesMap[t]],
                a = n.transform._entity,
                r = n.transform;
              if (r._worldUpdate) {
                var s = e._tempMatrix4x40;
                r._setWorldMatrixAndUpdate(s);
                var o = a.worldMatrix;
                Ke.matrix4x4MultiplyMFM(
                  this._owner._transform.worldMatrix,
                  s,
                  o
                ),
                  (a.worldMatrix = o);
              }
            }
          }),
          (s._updatePlayer = function(t) {
            if (
              null != this._currentPlayClip &&
              !this._stoped &&
              this._currentPlayClip.loaded
            ) {
              var e = this._cacheFrameRateInterval * this._cachePlayRate,
                i = 0;
              this._startUpdateLoopCount !== L.loopCount &&
                ((i = t * this.playbackRate), (this._elapsedPlaybackTime += i));
              var n = this._currentPlayClip._frameRate,
                a = this._playStartFrames[this._currentPlayClipIndex] / n,
                r =
                  Math.min(
                    this._playEndFrames[this._currentPlayClipIndex] / n,
                    this._currentPlayClip._duration
                  ) - a;
              if (
                !this._currentPlayClip.islooping &&
                this._elapsedPlaybackTime >= r
              )
                return (
                  this._onAnimationStop(),
                  this._setPlayParamsWhenStop(r, e),
                  void this.event('stopped')
                );
              if (((i += this._currentTime), r > 0))
                if (i >= r)
                  do {
                    (i -= r) < r &&
                      (this._setPlayParams(i, e), this.event('complete')),
                      (this._playEventIndex = 0),
                      this._eventScript(0, i);
                  } while (i >= r);
                else this._setPlayParams(i, e);
              else
                (this._currentTime = this._currentFrameTime = this._currentFrameIndex = this._playEventIndex = 0),
                  this.event('complete');
            }
          }),
          (s._update = function(t) {
            var e = this._currentPlayClip;
            if (2 === this.playState && e && e.loaded) {
              var n = this.playbackRate * i.timer.scale,
                a = this._cachePlayRate;
              this._canCache = this.isCache && n >= a;
              var r,
                s = -1;
              if (this._canCache) {
                if (((s = this._currentFrameIndex), this._lastFrameIndex === s))
                  return;
                if (((r = e._getAnimationDataWithCache(a, s)), this._avatar)) {
                  var o = this._cacheNodesAvatarOwners[
                      this._currentPlayClipIndex
                    ],
                    l = e._cachePropertyMap,
                    h = l.length;
                  h > 0 &&
                    (r ||
                      (((r = []).length = h),
                      e._cacheAnimationData(a, s, r),
                      e._evaluateAnimationlDatasCacheMode(
                        o,
                        this._cacheFullFrames[this._currentPlayClipIndex],
                        this,
                        r,
                        l
                      )),
                    this._setAnimationClipPropertyToAnimationNode(o, l, r)),
                    (this._curAvatarNodeDatas = e._getAvatarDataWithCache(
                      this._avatar,
                      this._cachePlayRate,
                      s
                    )),
                    this._curAvatarNodeDatas ||
                      ((this._curAvatarNodeDatas = []),
                      (this._curAvatarNodeDatas.length = this._avatarNodes.length),
                      e._cacheAvatarData(
                        this._avatar,
                        this._cachePlayRate,
                        s,
                        this._curAvatarNodeDatas
                      ),
                      this._evaluateAvatarNodesCacheMode(
                        o,
                        e,
                        e._publicClipDatas,
                        this._curAvatarNodeDatas,
                        e._unCachePropertyMap
                      )),
                    this._updateAvatarNodesToSpriteCacheMode(
                      e,
                      this._curAvatarNodeDatas
                    );
                } else {
                  var c = this._cacheNodesSpriteOwners[
                    this._currentPlayClipIndex
                  ];
                  r ||
                    (((r = []).length = this._currentPlayClip._nodes.length),
                    e._evaluateAnimationlDatasCacheMode(
                      c,
                      this._cacheFullFrames[this._currentPlayClipIndex],
                      this,
                      r,
                      null
                    ),
                    e._cacheAnimationData(a, s, r)),
                    this._setAnimationClipPropertyToSprite3D(c, r);
                }
              } else if (((r = e._publicClipDatas), this._avatar)) {
                if (
                  (e._evaluateAnimationlDatasRealTime(
                    this._cacheNodesAvatarOwners[this._currentPlayClipIndex],
                    this.currentPlayTime,
                    r,
                    e._cachePropertyMap
                  ),
                  !this._publicAvatarNodeDatas)
                ) {
                  this._publicAvatarNodeDatas = [];
                  var u = this._avatarNodes.length;
                  this._publicAvatarNodeDatas.length = u;
                  for (var _ = 1; _ < u; _++)
                    this._publicAvatarNodeDatas[_] = new Float32Array(16);
                }
                (this._curAvatarNodeDatas = this._publicAvatarNodeDatas),
                  this._evaluateAvatarNodesRealTime(
                    this._cacheNodesAvatarOwners[this._currentPlayClipIndex],
                    e,
                    r,
                    this._curAvatarNodeDatas,
                    e._unCachePropertyMap
                  ),
                  this._updateAvatarNodesToSpriteRealTime();
              } else
                e._evaluateAnimationlDatasRealTime(
                  this._cacheNodesSpriteOwners[this._currentPlayClipIndex],
                  this.currentPlayTime,
                  r,
                  null
                );
              this._lastFrameIndex = s;
            }
          }),
          (s._checkAnimationNode = function(t, e) {
            t.name !== e.name ||
              e._transform.dummy ||
              e._isLinkSpriteToAnimationNode(this, t, !0);
            for (var i = 0, n = e._childs.length; i < n; i++)
              this._checkAnimationNode(t, e.getChildAt(i));
          }),
          (s._load = function(t) {
            t.activeInHierarchy &&
              i.timer.frameLoop(1, this, this._updateAnimtionPlayer),
              this._owner.on(
                'activeinhierarchychanged',
                this,
                this._onOwnerActiveHierarchyChanged
              );
          }),
          (s._unload = function(e) {
            t.prototype._unload.call(this, e),
              e.activeInHierarchy &&
                i.timer.clear(this, this._updateAnimtionPlayer),
              this._owner.off(
                'activeinhierarchychanged',
                this,
                this._onOwnerActiveHierarchyChanged
              ),
              (this._curAvatarNodeDatas = null);
          }),
          (s._destroy = function() {
            t.prototype._destroy.call(this);
            for (var e = 0, i = this._clips.length; e < i; e++)
              this._clips[e]._removeReference();
            (this._currentPlayClip = null),
              (this._clipNames = null),
              (this._cacheNodesSpriteOwners = null),
              (this._cacheNodesAvatarOwners = null),
              (this._cacheNodesDefaultlValues = null),
              (this._clips = null),
              (this._cacheFullFrames = null);
          }),
          (s._cloneTo = function(t) {
            var e = t;
            e.avatar = this.avatar;
            this._clips.length;
            for (var i = 0, n = this._clips.length; i < n; i++)
              e.addClip(this._clips[i]);
            if ((this.clip && (e.clip = this.clip), this._linkSpritesData)) {
              e._linkSpritesData = {};
              for (var a in this._linkSpritesData)
                e._linkSpritesData[a] = this._linkSpritesData[a].slice();
            }
          }),
          (s.addClip = function(t, e, i, n) {
            void 0 === i && (i = 0),
              void 0 === n && (n = 4294967295),
              (e = e || t.name);
            var a = this._clipNames.indexOf(e);
            if (-1 !== a) {
              if (this._clips[a] !== t)
                throw new Error(
                  'Animation:this playName has exist with another clip.'
                );
            } else {
              var r = this._clips.indexOf(t);
              if (i < 0 || n < 0)
                throw new Error(
                  'Animator:startFrame and endFrame must large than zero.'
                );
              if (i > n)
                throw new Error('Animator:startFrame must less than endFrame.');
              this._clipNames.push(e),
                this._clips.push(t),
                this._playStartFrames.push(i),
                this._playEndFrames.push(n),
                this._cacheNodesSpriteOwners.push([]),
                this._cacheNodesAvatarOwners.push([]),
                this._cacheNodesDefaultlValues.push([]),
                this._publicClipsDatas.push([]),
                t._addReference(),
                (r = this._clips.length - 1),
                this._avatar
                  ? this._avatar.loaded
                    ? this._getAvatarOwnersByClipAsync(r, t)
                    : this._avatar.once(
                        'loaded',
                        this,
                        this._getAvatarOwnersByClipAsync,
                        [r, t]
                      )
                  : this._getSpriteOwnersByClipAsync(r, t),
                t.loaded
                  ? this._computeCacheFullKeyframeIndices(r)
                  : t.once(
                      'loaded',
                      this,
                      this._computeCacheFullKeyframeIndices,
                      [r]
                    );
            }
          }),
          (s.removeClip = function(t) {
            var e = this._clips.indexOf(t);
            -1 !== e &&
              (this._avatar
                ? this._offClipAndAvatarRelateEvent(this._avatar, t)
                : this._offGetSpriteOwnersByClipAsyncEvent(t),
              this._offGetClipCacheFullKeyframeIndicesEvent(t),
              this._clipNames.splice(e, 1),
              this._clips.splice(e, 1),
              this._playStartFrames.splice(e, 1),
              this._playEndFrames.splice(e, 1),
              this._cacheNodesSpriteOwners.splice(e, 1),
              this._cacheNodesAvatarOwners.splice(e, 1),
              this._cacheNodesDefaultlValues.splice(e, 1),
              this._publicClipsDatas.splice(e, 1),
              t._removeReference());
          }),
          (s.removeClipByName = function(t) {
            var e = this._clipNames.indexOf(t);
            if (-1 !== e) {
              var i = this._clips[e];
              this._avatar
                ? this._offClipAndAvatarRelateEvent(this._avatar, i)
                : this._offGetSpriteOwnersByClipAsyncEvent(i),
                this._offGetClipCacheFullKeyframeIndicesEvent(i),
                this._clipNames.splice(e, 1),
                this._clips.splice(e, 1),
                this._playStartFrames.splice(e, 1),
                this._playEndFrames.splice(e, 1),
                this._cacheNodesSpriteOwners.splice(e, 1),
                this._cacheNodesAvatarOwners.splice(e, 1),
                this._cacheNodesDefaultlValues.splice(e, 1),
                this._publicClipsDatas.splice(e, 1);
            }
          }),
          (s.getClip = function(t) {
            var e = this._clipNames.indexOf(t);
            return -1 !== e ? this._clips[e] : null;
          }),
          (s.getClipCount = function() {
            return this._clips.length;
          }),
          (s.play = function(t, e) {
            if ((void 0 === e && (e = 1), !t && -1 == this._defaultClipIndex))
              throw new Error(
                'Animator:must have  default clip value,please set clip property.'
              );
            t
              ? ((this._currentPlayClipIndex = this._clipNames.indexOf(t)),
                (this._currentPlayClip = this._clips[
                  this._currentPlayClipIndex
                ]))
              : ((this._currentPlayClipIndex = this._defaultClipIndex),
                (this._currentPlayClip = this._clips[this._defaultClipIndex])),
              (this._currentTime = 0),
              (this._currentFrameTime = 0),
              (this._elapsedPlaybackTime = 0),
              (this._playEventIndex = 0),
              (this.playbackRate = e),
              (this._stoped = !1),
              (this._currentFrameIndex = 0),
              (this._startUpdateLoopCount = L.loopCount),
              this._lastPlayAnimationClip &&
                this._lastPlayAnimationClip !== this._currentPlayClip &&
                this._revertKeyframeNodes(
                  this._lastPlayAnimationClip,
                  this._lastPlayAnimationClipIndex
                ),
              this._updatePlayer(0),
              (this._lastPlayAnimationClip = this._currentPlayClip),
              (this._lastPlayAnimationClipIndex = this._currentPlayClipIndex);
          }),
          (s.stop = function() {
            0 !== this.playState &&
              ((this._stoped = !0), this.event('stopped'));
          }),
          (s._getLinkSpritePath = function(t, e) {
            e.unshift(t.name);
            var i = t._parent;
            i._hierarchyAnimator === this
              ? this._getLinkSpritePath(i, e)
              : e.shift();
          }),
          (s.linkSprite3DToAvatarNode = function(t, e) {
            if (e._hierarchyAnimator === this) {
              if (this._avatar) {
                var i = this._avatarNodeMap[t];
                if (i) {
                  this._linkSpritesData = this._linkSpritesData || {};
                  var n = [];
                  return (
                    this._getLinkSpritePath(e, n),
                    (this._linkSpritesData[t] = n),
                    e._isLinkSpriteToAnimationNode(this, i, !0),
                    !0
                  );
                }
                return !1;
              }
              return !1;
            }
            throw 'Animator:sprite3D must belong to this Animator';
          }),
          (s.unLinkSprite3DToAvatarNode = function(t) {
            if (this._avatar) {
              var e = t.transform.dummy;
              if (e) {
                var i = this._avatarNodeMap[e._owner.name];
                return t._isLinkSpriteToAnimationNode(this, i, !1), !0;
              }
              return !1;
            }
            return !1;
          }),
          r(0, s, 'playState', function() {
            return null == this._currentPlayClip ? 0 : this._stoped ? 0 : 2;
          }),
          r(
            0,
            s,
            'avatar',
            function() {
              return this._avatar;
            },
            function(t) {
              if (this._avatar !== t) {
                var e = this._avatar;
                this._avatar = t;
                for (var i = this._clips.length, n = 0; n < i; n++)
                  this._offClipAndAvatarRelateEvent(e, this._clips[n]);
                t &&
                  (t.loaded
                    ? this._getAvatarOwnersAndInitDatasAsync()
                    : t.once(
                        'loaded',
                        this,
                        this._getAvatarOwnersAndInitDatasAsync
                      ));
              }
            }
          ),
          r(
            0,
            s,
            'cacheFrameRate',
            function() {
              return this._cacheFrameRate;
            },
            function(t) {
              if (this._cacheFrameRate !== t) {
                (this._cacheFrameRate = t),
                  (this._cacheFrameRateInterval = 1 / this._cacheFrameRate);
                for (var e = 0, i = this._clips.length; e < i; e++)
                  this._clips[e].loaded &&
                    this._computeCacheFullKeyframeIndices(e);
              }
            }
          ),
          r(
            0,
            s,
            'clip',
            function() {
              return this._clips[this._defaultClipIndex];
            },
            function(t) {
              var e = t ? this._clips.indexOf(t) : -1;
              this._defaultClipIndex !== e &&
                (-1 !== this._defaultClipIndex &&
                  this.removeClip(this._clips[this._defaultClipIndex]),
                -1 !== e && this.addClip(t, t.name),
                (this._defaultClipIndex = e));
            }
          ),
          r(0, s, 'currentFrameIndex', function() {
            return this._currentFrameIndex;
          }),
          r(
            0,
            s,
            'cachePlayRate',
            function() {
              return this._cachePlayRate;
            },
            function(t) {
              if (this._cachePlayRate !== t) {
                this._cachePlayRate = t;
                for (var e = 0, i = this._clips.length; e < i; e++)
                  this._clips[e].loaded &&
                    this._computeCacheFullKeyframeIndices(e);
              }
            }
          ),
          r(0, s, 'currentFrameTime', function() {
            return this._currentFrameTime;
          }),
          r(0, s, 'currentPlayClip', function() {
            return this._currentPlayClip;
          }),
          r(0, s, 'currentPlayTime', function() {
            return (
              this._currentTime +
              this._playStartFrames[this._currentPlayClipIndex] /
                this._currentPlayClip._frameRate
            );
          }),
          r(0, s, 'playbackTime', null, function(t) {
            if (
              null != this._currentPlayClip &&
              this._currentPlayClip &&
              this._currentPlayClip.loaded
            ) {
              this._startUpdateLoopCount = L.loopCount;
              var e = this._cacheFrameRateInterval * this._cachePlayRate;
              (this._currentTime = t),
                (this._currentFrameIndex = Math.floor(
                  this.currentPlayTime / e
                )),
                (this._currentFrameTime = this._currentFrameIndex * e);
            }
          }),
          r(
            0,
            s,
            'paused',
            function() {
              return this._stoped;
            },
            function(t) {
              (this._stoped = t), t && this.event('paused');
            }
          ),
          n(e, [
            'deafaultMatrix',
            function() {
              return (this.deafaultMatrix = new Float32Array([
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1
              ]));
            },
            '_tempMatrix4x40',
            function() {
              return (this._tempMatrix4x40 = new Float32Array(16));
            }
          ]),
          e
        );
      })($e),
      Ii =
        ((function(t) {
          function e() {
            (this._attachSkeleton = null),
              (this._extenData = null),
              (this.attachBones = null),
              (this.matrixs = null),
              e.__super.call(this),
              (this.attachBones = []),
              (this.matrixs = []);
          }
          a(e, 'laya.d3.component.AttachPoint', t);
          var i = e.prototype;
          (i._load = function(e) {
            t.prototype._load.call(this, e),
              (this._attachSkeleton = e.getComponentByType(Zi));
          }),
            (i._update = function(t) {
              if (
                this._attachSkeleton &&
                !this._attachSkeleton.destroyed &&
                0 !== this._attachSkeleton.player.state &&
                this._attachSkeleton.curBonesDatas
              ) {
                var e = this._attachSkeleton.player,
                  i = this._attachSkeleton.templet;
                this.matrixs.length = this.attachBones.length;
                for (
                  var n = this._attachSkeleton.curBonesDatas,
                    a = this.owner.transform.worldMatrix,
                    r = 0,
                    s = this.attachBones.length;
                  r < s;
                  r++
                ) {
                  var o =
                      16 *
                      i.getNodeIndexWithName(
                        e.currentAnimationClipIndex,
                        this.attachBones[r]
                      ),
                    l = this.matrixs[r];
                  l || (l = this.matrixs[r] = new Te());
                  for (var h = l.elements, c = 0; c < 16; c++) h[c] = n[o + c];
                  Te.multiply(a, l, l);
                }
                this.event('complete');
              }
            });
        })($e),
        (function(t) {
          function e() {
            e.__super.call(this),
              (this._isRigidbody = !1),
              (this._runtimeCollisonMap = {}),
              (this._runtimeCollisonTestMap = {}),
              (this._ignoreCollisonMap = {}),
              (this.isTrigger = !0);
          }
          a(e, 'laya.d3.component.physics.Collider', t);
          var i = e.prototype;
          return (
            (i._clearCollsionMap = function() {
              for (var t in this._runtimeCollisonMap) {
                var e = this._runtimeCollisonMap[t];
                delete e._runtimeCollisonMap[this.id],
                  e._isRigidbody && delete e._runtimeCollisonTestMap[this.id];
                var i = e.id;
                delete this._runtimeCollisonMap[i],
                  this._isRigidbody && delete this._runtimeCollisonTestMap[i];
              }
            }),
            (i._unload = function(t) {
              for (var e in this._runtimeCollisonMap) {
                var i = this._runtimeCollisonMap[e];
                delete i._runtimeCollisonMap[this.id],
                  i._isRigidbody && delete i._runtimeCollisonTestMap[this.id],
                  delete this._ignoreCollisonMap[e]._ignoreCollisonMap[this.id];
              }
            }),
            (i._setIsRigidbody = function(t) {
              if (this._isRigidbody !== t) {
                this._isRigidbody = t;
                var e = this._owner;
                if (e.displayedInStage) {
                  var i = e.layer;
                  i._removeCollider(this), i._addCollider(this);
                }
              }
            }),
            (i._getType = function() {
              return -1;
            }),
            (i._collisonTo = function(t) {
              return !1;
            }),
            (i.raycast = function(t, e, i) {
              throw (void 0 === i && (i = 1.79e308),
              new Error('Collider:Must override it.'));
            }),
            r(0, i, 'enable', t.prototype._$get_enable, function(t) {
              if (this._enable !== t) {
                this._owner.displayedInStage && (t || this._clearCollsionMap()),
                  (this._enable = t),
                  this.event('enablechanged', this._enable);
              }
            }),
            r(0, i, 'isSingleton', function() {
              return e._isSingleton;
            }),
            (e._isSingleton = !1),
            e
          );
        })($e)),
      Ci = (function(t) {
        function e() {
          e.__super.call(this);
        }
        a(e, 'laya.d3.component.Rigidbody', t);
        return (
          r(0, e.prototype, 'enable', t.prototype._$get_enable, function(t) {
            if (this._enable !== t) {
              for (
                var e = this._owner._colliders, i = 0, n = e.length;
                i < n;
                i++
              ) {
                var a = e[i];
                a._setIsRigidbody(t);
                var r = a._runtimeCollisonMap,
                  s = a._runtimeCollisonTestMap;
                if (!t) for (var o in r) delete s[o];
              }
              (this._enable = t), this.event('enablechanged', this._enable);
            }
          }),
          e
        );
      })($e),
      Si =
        ((function(t) {
          function e() {
            e.__super.call(this);
          }
          a(e, 'laya.d3.component.Script', $e);
          var i = e.prototype;
          (i.onTriggerEnter = function(t) {}),
            (i.onTriggerExit = function(t) {}),
            (i.onTriggerStay = function(t) {}),
            r(0, i, 'isSingleton', function() {
              return e._isSingleton;
            }),
            (e._isSingleton = !1);
        })(),
        (function(t) {
          function e(t) {
            e.__super.call(this, t);
          }
          a(e, 'laya.d3.core.GlitterRender', ei);
          var i = e.prototype;
          return (
            (i._calculateBoundingBox = function() {
              var t = this._boundingBox.min.elements;
              (t[0] = -Number.MAX_VALUE),
                (t[1] = -Number.MAX_VALUE),
                (t[2] = -Number.MAX_VALUE);
              var e = this._boundingBox.min.elements;
              (e[0] = Number.MAX_VALUE),
                (e[1] = Number.MAX_VALUE),
                (e[2] = Number.MAX_VALUE);
            }),
            (i._calculateBoundingSphere = function() {
              var t = this._boundingSphere.center.elements;
              (t[0] = 0),
                (t[1] = 0),
                (t[2] = 0),
                (this._boundingSphere.radius = Number.MAX_VALUE);
            }),
            (i._renderUpdate = function(t) {
              this._setShaderValueMatrix4x4(
                0,
                this._owner.transform.worldMatrix
              );
              var e = this._owner.getProjectionViewWorldMatrix(t);
              this._setShaderValueMatrix4x4(1, e);
              var i = this._owner.templet;
              return (
                this._setShaderValueNumber(3, i.lifeTime),
                this._setShaderValueNumber(2, i._currentTime),
                !0
              );
            }),
            e
          );
        })()),
      Ti = (function(t) {
        function e(t) {
          (this._owner = null),
            (this._sharedMesh = null),
            e.__super.call(this),
            (this._owner = t);
        }
        a(e, 'laya.d3.core.MeshFilter', t);
        var i = e.prototype;
        return (
          (i._sharedMeshLoaded = function() {
            this.event('loaded');
          }),
          (i._destroy = function() {
            t.prototype._destroy.call(this),
              (this._owner = null),
              this._sharedMesh &&
                (this._sharedMesh._removeReference(),
                (this._sharedMesh = null));
          }),
          r(
            0,
            i,
            'sharedMesh',
            function() {
              return this._sharedMesh;
            },
            function(t) {
              var e = this._sharedMesh;
              e && e._removeReference(),
                (this._sharedMesh = t),
                t._addReference(),
                this.event('meshchanged', [this, e, t]),
                t.loaded ||
                  this._sharedMesh.once('loaded', this, this._sharedMeshLoaded);
            }
          ),
          r(0, i, '_isAsyncLoaded', function() {
            return this._sharedMesh.loaded;
          }),
          r(0, i, '_originalBoundingBoxCorners', function() {
            return this._sharedMesh.boundingBoxCorners;
          }),
          r(0, i, '_originalBoundingSphere', function() {
            return this._sharedMesh.boundingSphere;
          }),
          r(0, i, '_originalBoundingBox', function() {
            return this._sharedMesh.boundingBox;
          }),
          e
        );
      })(ti),
      Mi = (function(t) {
        function e(t) {
          e.__super.call(this, t),
            t.meshFilter.on('meshchanged', this, this._onMeshChanged);
        }
        a(e, 'laya.d3.core.MeshRender', ei);
        var i = e.prototype;
        return (
          (i._onMeshChanged = function(t, e, i) {
            i.loaded
              ? (this._boundingSphereNeedChange = this._boundingBoxNeedChange = this._boundingBoxCenterNeedChange = this._octreeNodeNeedChange = !0)
              : i.once('loaded', this, this._onMeshLoaed);
          }),
          (i._onMeshLoaed = function(t, e) {
            this._boundingSphereNeedChange = this._boundingBoxNeedChange = this._boundingBoxCenterNeedChange = this._octreeNodeNeedChange = !0;
          }),
          (i._calculateBoundingSphereByInitSphere = function(t) {
            var e = NaN,
              i = this._owner.transform,
              n = i.scale.elements,
              a = Math.abs(n[0]),
              r = Math.abs(n[1]),
              s = Math.abs(n[2]);
            (e = a >= r && a >= s ? a : r >= s ? r : s),
              Re.transformCoordinate(
                t.center,
                i.worldMatrix,
                this._boundingSphere.center
              ),
              (this._boundingSphere.radius = t.radius * e);
          }),
          (i._calculateBoundBoxByInitCorners = function(t) {
            for (var e = this._owner.transform.worldMatrix, i = 0; i < 8; i++)
              Re.transformCoordinate(t[i], e, ei._tempBoundBoxCorners[i]);
            be.createfromPoints(ei._tempBoundBoxCorners, this._boundingBox);
          }),
          (i._calculateBoundingSphere = function() {
            var t = this._owner.meshFilter.sharedMesh;
            null == t || null == t.boundingSphere
              ? this._boundingSphere.toDefault()
              : this._calculateBoundingSphereByInitSphere(t.boundingSphere);
          }),
          (i._calculateBoundingBox = function() {
            var t = this._owner.meshFilter.sharedMesh;
            null == t || null == t.boundingBox
              ? this._boundingBox.toDefault()
              : this._calculateBoundBoxByInitCorners(t.boundingBoxCorners);
          }),
          (i._renderUpdate = function(t) {
            var e = this._owner.transform;
            if (e) {
              this._setShaderValueMatrix4x4(0, e.worldMatrix);
              var i = this._owner.getProjectionViewWorldMatrix(t);
              this._setShaderValueMatrix4x4(1, i);
            } else
              this._setShaderValueMatrix4x4(0, Te.DEFAULT),
                this._setShaderValueMatrix4x4(1, t);
            return Ze.debugMode && this._renderRenderableBoundBox(), !0;
          }),
          e
        );
      })(),
      Ei = (function(t) {
        function e(t) {
          e.__super.call(this),
            (this._tempRotationMatrix = new Te()),
            (this._uvLength = new Ne()),
            (this._firstActiveElement = 0),
            (this._firstNewElement = 0),
            (this._firstFreeElement = 0),
            (this._firstRetiredElement = 0),
            (this._owner = t),
            (this._ownerRender = t.particleRender),
            (this._boundingBoxCorners = s(8, null)),
            (this._boundingSphere = new xe(new Re(), Number.MAX_VALUE)),
            (this._boundingBox = new be(
              new Re(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE),
              new Re(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE)
            )),
            (this._currentTime = 0),
            (this._isEmitting = !1),
            (this._isPlaying = !1),
            (this._isPaused = !1),
            (this._burstsIndex = 0),
            (this._frameRateTime = 0),
            (this._emissionTime = 0),
            (this._totalDelayTime = 0),
            (this._simulateUpdate = !1),
            (this._bufferMaxParticles = 1),
            (this.duration = 5),
            (this.looping = !0),
            (this.prewarm = !1),
            (this.startDelayType = 0),
            (this.startDelay = 0),
            (this.startDelayMin = 0),
            (this.startDelayMax = 0),
            (this._startLifetimeType = 0),
            (this._startLifetimeConstant = 5),
            (this._startLifeTimeGradient = new Q()),
            (this._startLifetimeConstantMin = 0),
            (this._startLifetimeConstantMax = 5),
            (this._startLifeTimeGradientMin = new Q()),
            (this._startLifeTimeGradientMax = new Q()),
            (this._maxStartLifetime = 5),
            (this.startSpeedType = 0),
            (this.startSpeedConstant = 5),
            (this.startSpeedConstantMin = 0),
            (this.startSpeedConstantMax = 5),
            (this.threeDStartSize = !1),
            (this.startSizeType = 0),
            (this.startSizeConstant = 1),
            (this.startSizeConstantSeparate = new Re(1, 1, 1)),
            (this.startSizeConstantMin = 0),
            (this.startSizeConstantMax = 1),
            (this.startSizeConstantMinSeparate = new Re(0, 0, 0)),
            (this.startSizeConstantMaxSeparate = new Re(1, 1, 1)),
            (this.threeDStartRotation = !1),
            (this.startRotationType = 0),
            (this.startRotationConstant = 0),
            (this.startRotationConstantSeparate = new Re(0, 0, 0)),
            (this.startRotationConstantMin = 0),
            (this.startRotationConstantMax = 0),
            (this.startRotationConstantMinSeparate = new Re(0, 0, 0)),
            (this.startRotationConstantMaxSeparate = new Re(0, 0, 0)),
            (this.randomizeRotationDirection = 0),
            (this.startColorType = 0),
            (this.startColorConstant = new Be(1, 1, 1, 1)),
            (this.startColorConstantMin = new Be(1, 1, 1, 1)),
            (this.startColorConstantMax = new Be(1, 1, 1, 1)),
            (this.gravityModifier = 0),
            (this.simulationSpace = 1),
            (this.scaleMode = 0),
            (this.playOnAwake = !0),
            (this._rand = new De(0)),
            (this.autoRandomSeed = !0),
            (this.randomSeed = new Uint32Array(1)),
            (this._randomSeeds = new Uint32Array(e._RANDOMOFFSET.length)),
            (this.isPerformanceMode = !0),
            (this._emission = new X()),
            (this._emission.enbale = !0),
            this._owner.on(
              'activeinhierarchychanged',
              this,
              this._onOwnerActiveHierarchyChanged
            );
        }
        a(e, 'laya.d3.core.particleShuriKen.ShurikenParticleSystem', t);
        var o = e.prototype;
        return (
          i.imps(o, {
            'laya.d3.core.render.IRenderable': !0,
            'laya.d3.core.IClone': !0
          }),
          (o._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
          }),
          (o._getIndexBuffer = function() {
            return this._indexBuffer;
          }),
          (o._generateBoundingSphere = function() {
            var t = this._boundingSphere.center.elements;
            (t[0] = 0),
              (t[1] = 0),
              (t[2] = 0),
              (this._boundingSphere.radius = Number.MAX_VALUE);
          }),
          (o._generateBoundingBox = function() {
            var t = this._owner.particleRender,
              i = this._boundingBox.min,
              n = this._boundingBox.max,
              a = 0,
              r = 0,
              s = NaN;
            switch (this.startLifetimeType) {
              case 0:
                s = this.startLifetimeConstant;
                break;
              case 1:
                s = -Number.MAX_VALUE;
                var o = o;
                for (a = 0, r = o.gradientCount; a < r; a++)
                  s = Math.max(s, o.getValueByIndex(a));
                break;
              case 2:
                s = Math.max(
                  this.startLifetimeConstantMin,
                  this.startLifetimeConstantMax
                );
                break;
              case 3:
                s = -Number.MAX_VALUE;
                var l = l;
                for (a = 0, r = l.gradientCount; a < r; a++)
                  s = Math.max(s, l.getValueByIndex(a));
                var h = h;
                for (a = 0, r = h.gradientCount; a < r; a++)
                  s = Math.max(s, h.getValueByIndex(a));
            }
            var c = NaN,
              u = NaN;
            switch (this.startSpeedType) {
              case 0:
                c = u = this.startSpeedConstant;
                break;
              case 1:
                break;
              case 2:
                (c = this.startLifetimeConstantMin),
                  (u = this.startLifetimeConstantMax);
            }
            var _, d, f, p;
            (this._shape && this._shape.enable) ||
              ((_ = d = Re.ZERO), (f = Re.ZERO), (p = Re.UnitZ));
            var m = new Re(f.x * c, f.y * c, f.z * c),
              g = new Re(p.x * u, p.y * u, p.z * u);
            if (
              this._velocityOverLifetime &&
              this._velocityOverLifetime.enbale
            ) {
              var y = this._velocityOverLifetime.velocity;
              switch (y.type) {
                case 0:
                  y.constant;
                  break;
                case 1:
                  new Re(
                    y.gradientX.getAverageValue(),
                    y.gradientY.getAverageValue(),
                    y.gradientZ.getAverageValue()
                  );
                  break;
                case 2:
                  y.constantMin, y.constantMax;
                  break;
                case 3:
                  new Re(
                    y.gradientXMin.getAverageValue(),
                    y.gradientYMin.getAverageValue(),
                    y.gradientZMin.getAverageValue()
                  ),
                    new Re(
                      y.gradientXMax.getAverageValue(),
                      y.gradientYMax.getAverageValue(),
                      y.gradientZMax.getAverageValue()
                    );
              }
            }
            var v,
              b,
              w = this._owner.transform,
              x = w.position,
              I = e._tempVector39,
              C = I.elements,
              S = t.renderMode;
            switch (this.scaleMode) {
              case 0:
                var T = w.scale;
                (v = T),
                  (C[0] = T.x),
                  (C[1] = T.z),
                  (C[2] = T.y),
                  1 === S && (b = T);
                break;
              case 1:
                var M = w.localScale;
                (v = M),
                  (C[0] = M.x),
                  (C[1] = M.z),
                  (C[2] = M.y),
                  1 === S && (b = M);
                break;
              case 2:
                (v = w.scale),
                  (C[0] = C[1] = C[2] = 1),
                  1 === S && (b = Re.ONE);
            }
            var E, L;
            switch (
              ((this._velocityOverLifetime &&
                this._velocityOverLifetime.enbale) ||
                ((E = new Re(m.x * s, m.y * s, m.z * s)),
                (L = new Re(g.x * s, g.y * s, g.z * s)),
                2 != this.scaleMode
                  ? (Re.add(_, E, i),
                    Re.multiply(v, i, i),
                    Re.add(d, L, n),
                    Re.multiply(v, n, n))
                  : (Re.multiply(v, _, i),
                    Re.add(i, E, i),
                    Re.multiply(v, d, n),
                    Re.add(n, L, n))),
              this.simulationSpace)
            ) {
              case 0:
                break;
              case 1:
                Re.add(i, x, i), Re.add(n, x, n);
            }
            var D = NaN,
              A = NaN;
            switch (this.startSizeType) {
              case 0:
                if (this.threeDStartSize) {
                  var N = N;
                  (D = Math.max(N.x, N.y)), 1 === S && (A = N.y);
                } else
                  (D = this.startSizeConstant),
                    1 === S && (A = this.startSizeConstant);
                break;
              case 1:
                break;
              case 2:
                if (this.threeDStartSize) {
                  var R = R;
                  (D = Math.max(R.x, R.y)), 1 === S && (A = R.y);
                } else
                  (D = this.startSizeConstantMax),
                    1 === S && (A = this.startSizeConstantMax);
            }
            if (this._sizeOverLifetime && this._sizeOverLifetime.enbale) {
              this._sizeOverLifetime.size;
              D *= this._sizeOverLifetime.size.getMaxSizeInGradient();
            }
            var B = e._tempVector30,
              k = B.elements,
              P = NaN,
              O = NaN;
            switch (S) {
              case 0:
                (P = D * e.halfKSqrtOf2),
                  Re.scale(I, D, B),
                  Re.subtract(i, B, i),
                  Re.add(n, B, n);
                break;
              case 1:
                var U = e._tempVector31,
                  V = e._tempVector32,
                  F = e._tempVector33,
                  H = e._tempVector34;
                (this._velocityOverLifetime &&
                  this._velocityOverLifetime.enbale) ||
                  (Re.multiply(b, g, V), Re.multiply(b, m, F));
                var G = A * t.stretchedBillboardLengthScale,
                  z = Re.scalarLength(V) * t.stretchedBillboardSpeedScale + G,
                  j = Re.scalarLength(F) * t.stretchedBillboardSpeedScale + G,
                  W = e._tempVector35,
                  X = e._tempVector36;
                Re.normalize(V, W),
                  Re.scale(W, z, H),
                  Re.subtract(L, H, H),
                  Re.normalize(F, X),
                  Re.scale(X, j, U),
                  Re.add(E, U, U),
                  (P = D * e.halfKSqrtOf2),
                  Re.scale(I, P, B);
                var q = e._tempVector37,
                  Y = e._tempVector38;
                Re.scale(W, 0.5, q),
                  Re.scale(X, 0.5, Y),
                  Re.multiply(q, I, q),
                  Re.multiply(Y, I, Y),
                  Re.add(i, Y, i),
                  Re.min(i, H, i),
                  Re.subtract(i, B, i),
                  Re.subtract(n, q, n),
                  Re.max(n, U, n),
                  Re.add(n, B, n);
                break;
              case 2:
                (O = 0.5 * (D *= Math.cos(0.7853981633974483))),
                  (k[0] = I.x * O),
                  (k[1] = I.z * O),
                  Re.subtract(i, B, i),
                  Re.add(n, B, n);
                break;
              case 3:
                (O = 0.5 * (D *= Math.cos(0.7853981633974483))),
                  Re.scale(I, O, B),
                  Re.subtract(i, B, i),
                  Re.add(n, B, n);
            }
            this._boundingBox.getCorners(this._boundingBoxCorners);
          }),
          (o._updateEmission = function() {
            if (i.stage.isVisibility && this.isAlive)
              if (this._simulateUpdate) this._simulateUpdate = !1;
              else {
                var t =
                  this._startUpdateLoopCount === L.loopCount || this._isPaused
                    ? 0
                    : i.timer.delta / 1e3;
                (t = Math.min(e._maxElapsedTime, t)), this._updateParticles(t);
              }
          }),
          (o._updateParticles = function(t) {
            (4 !== this._ownerRender.renderMode || this._ownerRender.mesh) &&
              ((this._currentTime += t),
              this._retireActiveParticles(),
              this._freeRetiredParticles(),
              (this._totalDelayTime += t),
              this._totalDelayTime < this._playStartDelay ||
                (this._emission.enbale &&
                  this._isEmitting &&
                  !this._isPaused &&
                  this._advanceTime(t, this._currentTime)));
          }),
          (o._updateParticlesSimulationRestart = function(t) {
            (this._firstActiveElement = 0),
              (this._firstNewElement = 0),
              (this._firstFreeElement = 0),
              (this._firstRetiredElement = 0),
              (this._burstsIndex = 0),
              (this._frameRateTime = t),
              (this._emissionTime = 0),
              (this._totalDelayTime = 0),
              (this._currentTime = t);
            var e = t;
            e < this._playStartDelay
              ? (this._totalDelayTime = e)
              : this._emission.enbale && this._advanceTime(t, t);
          }),
          (o._addUpdateEmissionToTimer = function() {
            i.timer.frameLoop(1, this, this._updateEmission);
          }),
          (o._removeUpdateEmissionToTimer = function() {
            i.timer.clear(this, this._updateEmission);
          }),
          (o._onOwnerActiveHierarchyChanged = function(t) {
            this._owner.displayedInStage &&
              (t
                ? this._addUpdateEmissionToTimer()
                : this._removeUpdateEmissionToTimer());
          }),
          (o._retireActiveParticles = function() {
            for (; this._firstActiveElement != this._firstNewElement; ) {
              var t =
                  this._firstActiveElement *
                  this._floatCountPerVertex *
                  this._vertexStride,
                e = t + this._timeIndex;
              if (
                this._currentTime - this._vertices[e] + 1e-4 <
                this._vertices[t + this._startLifeTimeIndex]
              )
                break;
              (this._vertices[e] = this._drawCounter),
                this._firstActiveElement++,
                this._firstActiveElement >= this._bufferMaxParticles &&
                  (this._firstActiveElement = 0);
            }
          }),
          (o._freeRetiredParticles = function() {
            for (; this._firstRetiredElement != this._firstActiveElement; ) {
              var t =
                this._drawCounter -
                this._vertices[
                  this._firstRetiredElement *
                    this._floatCountPerVertex *
                    this._vertexStride +
                    this._timeIndex
                ];
              if (this.isPerformanceMode && t < 3) break;
              this._firstRetiredElement++,
                this._firstRetiredElement >= this._bufferMaxParticles &&
                  (this._firstRetiredElement = 0);
            }
          }),
          (o._burst = function(t, e) {
            for (
              var i = 0, n = this._emission._bursts, a = n.length;
              this._burstsIndex < a;
              this._burstsIndex++
            ) {
              var r = n[this._burstsIndex],
                s = r.time;
              if (!(t <= s && s < e)) break;
              var o = 0;
              this.autoRandomSeed
                ? (o = w.lerp(r.minCount, r.maxCount, Math.random()))
                : ((this._rand.seed = this._randomSeeds[0]),
                  (o = w.lerp(r.minCount, r.maxCount, this._rand.getFloat())),
                  (this._randomSeeds[0] = this._rand.seed)),
                (i += o);
            }
            return i;
          }),
          (o._advanceTime = function(t, e) {
            var i = 0,
              n = this._emissionTime;
            this._emissionTime += t;
            var a = 0;
            if (this._emissionTime > this.duration) {
              if (!this.looping) {
                for (
                  a = Math.min(this.maxParticles - this.aliveParticleCount, a),
                    i = 0;
                  i < a;
                  i++
                )
                  this.emit(e);
                return (this._isPlaying = !1), void this.stop();
              }
              (a += this._burst(n, this._emissionTime)),
                (this._emissionTime -= this.duration),
                this.event('complete'),
                (this._burstsIndex = 0),
                (a += this._burst(0, this._emissionTime));
            } else a += this._burst(n, this._emissionTime);
            for (
              a = Math.min(this.maxParticles - this.aliveParticleCount, a),
                i = 0;
              i < a;
              i++
            )
              this.emit(e);
            var r = this.emission.emissionRate;
            if (r > 0) {
              var s = 1 / r;
              for (
                this._frameRateTime += s,
                  this._frameRateTime =
                    this._currentTime -
                    ((this._currentTime - this._frameRateTime) %
                      this._maxStartLifetime);
                this._frameRateTime <= e && this.emit(this._frameRateTime);

              )
                this._frameRateTime += s;
              this._frameRateTime = Math.floor(e / s) * s;
            }
          }),
          (o._initBufferDatas = function() {
            this._vertexBuffer &&
              (this._vertexBuffer.destroy(), this._indexBuffer.destroy());
            var t = this._ownerRender,
              e = t.renderMode;
            if (-1 !== e && this.maxParticles > 0) {
              var i,
                n,
                a = 0,
                r = 0,
                s = 0,
                o = 0,
                l = 0,
                h = t.mesh;
              if (4 === e) {
                if (h) {
                  if (h._vertexBuffers.length > 1)
                    throw new Error(
                      'ShurikenParticleSystem: submesh Count mesh be One or all subMeshes have the same vertexDeclaration.'
                    );
                  (n = pe.vertexDeclaration),
                    (this._floatCountPerVertex = n.vertexStride / 4),
                    (this._startLifeTimeIndex = 12),
                    (this._timeIndex = 16),
                    (this._vertexStride = h._vertexBuffers[0].vertexCount);
                  var c = this._bufferMaxParticles * this._vertexStride,
                    u = c % 65535;
                  if (Math.floor(c / 65535) + 1 > 1)
                    throw new Error(
                      'ShurikenParticleSystem:the maxParticleCount multiply mesh vertexCount is large than 65535.'
                    );
                  (this._vertexBuffer = Yi.create(n, u, 35048)),
                    (this._vertices = new Float32Array(
                      this._floatCountPerVertex * u
                    )),
                    (this._indexStride = h._indexBuffer.indexCount);
                  var _ = h._indexBuffer.getData(),
                    d = this._bufferMaxParticles * this._indexStride;
                  for (
                    this._indexBuffer = qi.create('ushort', d, 35044),
                      i = new Uint16Array(d),
                      o = 0,
                      a = 0;
                    a < this._bufferMaxParticles;
                    a++
                  ) {
                    var f = a * this._vertexStride;
                    for (r = 0, s = _.length; r < s; r++) i[o++] = f + _[r];
                  }
                  this._indexBuffer.setData(i);
                }
              } else {
                for (
                  n = fe.vertexDeclaration,
                    this._floatCountPerVertex = n.vertexStride / 4,
                    this._startLifeTimeIndex = 7,
                    this._timeIndex = 11,
                    this._vertexStride = 4,
                    this._vertexBuffer = Yi.create(
                      n,
                      this._bufferMaxParticles * this._vertexStride,
                      35048
                    ),
                    this._vertices = new Float32Array(
                      this._floatCountPerVertex *
                        this._bufferMaxParticles *
                        this._vertexStride
                    ),
                    a = 0;
                  a < this._bufferMaxParticles;
                  a++
                )
                  (l = a * this._floatCountPerVertex * this._vertexStride),
                    (this._vertices[l] = -0.5),
                    (this._vertices[l + 1] = -0.5),
                    (this._vertices[l + 2] = 0),
                    (this._vertices[l + 3] = 1),
                    (l += this._floatCountPerVertex),
                    (this._vertices[l] = 0.5),
                    (this._vertices[l + 1] = -0.5),
                    (this._vertices[l + 2] = 1),
                    (this._vertices[l + 3] = 1),
                    (l += this._floatCountPerVertex),
                    (this._vertices[l] = 0.5),
                    (this._vertices[l + 1] = 0.5),
                    (this._vertices[l + 2] = 1),
                    (this._vertices[l + 3] = 0),
                    (l += this._floatCountPerVertex),
                    (this._vertices[l] = -0.5),
                    (this._vertices[l + 1] = 0.5),
                    (this._vertices[l + 2] = 0),
                    (this._vertices[l + 3] = 0);
                for (
                  this._indexStride = 6,
                    this._indexBuffer = qi.create(
                      'ushort',
                      6 * this._bufferMaxParticles,
                      35044
                    ),
                    i = new Uint16Array(6 * this._bufferMaxParticles),
                    a = 0;
                  a < this._bufferMaxParticles;
                  a++
                ) {
                  o = 6 * a;
                  var p = a * this._vertexStride,
                    m = p + 2;
                  (i[o++] = p),
                    (i[o++] = m),
                    (i[o++] = p + 1),
                    (i[o++] = p),
                    (i[o++] = p + 3),
                    (i[o++] = m);
                }
                this._indexBuffer.setData(i);
              }
            }
          }),
          (o._destroy = function() {
            t.prototype._destroy.call(this),
              this._owner.activeInHierarchy &&
                this._removeUpdateEmissionToTimer(),
              this._vertexBuffer.destroy(),
              this._indexBuffer.destroy(),
              this._emission._destroy(),
              (this._owner = null),
              (this._vertices = null),
              (this._vertexBuffer = null),
              (this._indexBuffer = null),
              (this._emission = null),
              (this._shape = null),
              (this.startLifeTimeGradient = null),
              (this.startLifeTimeGradientMin = null),
              (this.startLifeTimeGradientMax = null),
              (this.startSizeConstantSeparate = null),
              (this.startSizeConstantMinSeparate = null),
              (this.startSizeConstantMaxSeparate = null),
              (this.startRotationConstantSeparate = null),
              (this.startRotationConstantMinSeparate = null),
              (this.startRotationConstantMaxSeparate = null),
              (this.startColorConstant = null),
              (this.startColorConstantMin = null),
              (this.startColorConstantMax = null),
              (this._velocityOverLifetime = null),
              (this._colorOverLifetime = null),
              (this._sizeOverLifetime = null),
              (this._rotationOverLifetime = null),
              (this._textureSheetAnimation = null);
          }),
          (o.emit = function(t) {
            var i = e._tempPosition,
              n = e._tempDirection;
            if (this._shape && this._shape.enable)
              this.autoRandomSeed
                ? this._shape.generatePositionAndDirection(i, n)
                : this._shape.generatePositionAndDirection(
                    i,
                    n,
                    this._rand,
                    this._randomSeeds
                  );
            else {
              var a = i.elements,
                r = n.elements;
              (a[0] = a[1] = a[2] = 0), (r[0] = r[1] = 0), (r[2] = 1);
            }
            return this.addParticle(i, n, t);
          }),
          (o.addParticle = function(t, e, i) {
            Re.normalize(e, e);
            var n = this._firstFreeElement + 1;
            if (
              (n >= this._bufferMaxParticles && (n = 0),
              n === this._firstRetiredElement)
            )
              return !1;
            lt.create(this, this._ownerRender, this._owner.transform);
            if (this._currentTime - i >= lt.startLifeTime) return !0;
            var a = NaN,
              r = NaN,
              s = NaN,
              o = NaN,
              l = NaN,
              h = NaN,
              c = NaN,
              u =
                this._velocityOverLifetime && this._velocityOverLifetime.enbale;
            if (u) {
              var _ = this._velocityOverLifetime.velocity.type;
              2 === _ || 3 === _
                ? this.autoRandomSeed
                  ? ((a = Math.random()),
                    (r = Math.random()),
                    (s = Math.random()))
                  : ((this._rand.seed = this._randomSeeds[9]),
                    (a = this._rand.getFloat()),
                    (r = this._rand.getFloat()),
                    (s = this._rand.getFloat()),
                    (this._randomSeeds[9] = this._rand.seed))
                : (u = !1);
            } else u = !1;
            var d = this._colorOverLifetime && this._colorOverLifetime.enbale;
            if (d) {
              3 === this._colorOverLifetime.color.type
                ? this.autoRandomSeed
                  ? (o = Math.random())
                  : ((this._rand.seed = this._randomSeeds[10]),
                    (o = this._rand.getFloat()),
                    (this._randomSeeds[10] = this._rand.seed))
                : (d = !1);
            } else d = !1;
            var f = this._sizeOverLifetime && this._sizeOverLifetime.enbale;
            if (f) {
              3 === this._sizeOverLifetime.size.type
                ? this.autoRandomSeed
                  ? (l = Math.random())
                  : ((this._rand.seed = this._randomSeeds[11]),
                    (l = this._rand.getFloat()),
                    (this._randomSeeds[11] = this._rand.seed))
                : (f = !1);
            } else f = !1;
            var p =
              this._rotationOverLifetime && this._rotationOverLifetime.enbale;
            if (p) {
              var m = this._rotationOverLifetime.angularVelocity.type;
              2 === m || 3 === m
                ? this.autoRandomSeed
                  ? (h = Math.random())
                  : ((this._rand.seed = this._randomSeeds[12]),
                    (h = this._rand.getFloat()),
                    (this._randomSeeds[12] = this._rand.seed))
                : (p = !1);
            } else p = !1;
            var g =
              this._textureSheetAnimation && this._textureSheetAnimation.enable;
            if (g) {
              3 === this._textureSheetAnimation.frame.type
                ? this.autoRandomSeed
                  ? (c = Math.random())
                  : ((this._rand.seed = this._randomSeeds[15]),
                    (c = this._rand.getFloat()),
                    (this._randomSeeds[15] = this._rand.seed))
                : (g = !1);
            } else g = !1;
            var y,
              v =
                this._firstFreeElement *
                this._floatCountPerVertex *
                this._vertexStride,
              b = lt.startUVInfo[0],
              w = lt.startUVInfo[1],
              x = lt.startUVInfo[2],
              I = lt.startUVInfo[3],
              C = t.elements,
              S = e.elements,
              T = 0,
              M = 0,
              E = 0,
              L = 0,
              D = 0,
              A = this._ownerRender;
            if (4 === A.renderMode) {
              var N = A.mesh._vertexBuffers[0];
              y = N.getData();
              var R = N.vertexDeclaration;
              M = R.getVertexElementByUsage(0).offset / 4;
              var B = R.getVertexElementByUsage(1);
              E = B ? B.offset / 4 : -1;
              var k = R.getVertexElementByUsage(2);
              (L = k ? k.offset / 4 : -1), (T = R.vertexStride / 4), (D = 0);
            } else {
              (this._vertices[v + 2] = x), (this._vertices[v + 3] = I + w);
              var P = v + this._floatCountPerVertex;
              (this._vertices[P + 2] = x + b), (this._vertices[P + 3] = I + w);
              var O = P + this._floatCountPerVertex;
              (this._vertices[O + 2] = x + b), (this._vertices[O + 3] = I);
              var U = O + this._floatCountPerVertex;
              (this._vertices[U + 2] = x), (this._vertices[U + 3] = I);
            }
            for (
              var V = v, F = v + this._floatCountPerVertex * this._vertexStride;
              V < F;
              V += this._floatCountPerVertex
            ) {
              var H = 0;
              if (4 === A.renderMode) {
                H = V;
                var G = T * D++,
                  z = G + M;
                (this._vertices[H++] = y[z++]),
                  (this._vertices[H++] = y[z++]),
                  (this._vertices[H++] = y[z]),
                  -1 === E
                    ? ((this._vertices[H++] = 1),
                      (this._vertices[H++] = 1),
                      (this._vertices[H++] = 1),
                      (this._vertices[H++] = 1))
                    : ((z = G + E),
                      (this._vertices[H++] = y[z++]),
                      (this._vertices[H++] = y[z++]),
                      (this._vertices[H++] = y[z++]),
                      (this._vertices[H++] = y[z])),
                  -1 === L
                    ? ((this._vertices[H++] = 0), (this._vertices[H++] = 0))
                    : ((z = G + L),
                      (this._vertices[H++] = x + y[z++] * b),
                      (this._vertices[H++] = I + y[z] * w));
              } else H = V + 4;
              switch (
                ((this._vertices[H++] = C[0]),
                (this._vertices[H++] = C[1]),
                (this._vertices[H++] = C[2]),
                (this._vertices[H++] = lt.startLifeTime),
                (this._vertices[H++] = S[0]),
                (this._vertices[H++] = S[1]),
                (this._vertices[H++] = S[2]),
                (this._vertices[H++] = i),
                (this._vertices[H++] = lt.startColor[0]),
                (this._vertices[H++] = lt.startColor[1]),
                (this._vertices[H++] = lt.startColor[2]),
                (this._vertices[H++] = lt.startColor[3]),
                (this._vertices[H++] = lt.startSize[0]),
                (this._vertices[H++] = lt.startSize[1]),
                (this._vertices[H++] = lt.startSize[2]),
                (this._vertices[H++] = lt.startRotation[0]),
                (this._vertices[H++] = lt.startRotation[1]),
                (this._vertices[H++] = lt.startRotation[2]),
                (this._vertices[H++] = lt.startSpeed),
                d && (this._vertices[H + 1] = o),
                f && (this._vertices[H + 2] = l),
                p && (this._vertices[H + 3] = h),
                g && (this._vertices[H + 4] = c),
                u &&
                  ((this._vertices[H + 5] = a),
                  (this._vertices[H + 6] = r),
                  (this._vertices[H + 7] = s)),
                this.simulationSpace)
              ) {
                case 0:
                  (H += 8),
                    (this._vertices[H++] = lt.simulationWorldPostion[0]),
                    (this._vertices[H++] = lt.simulationWorldPostion[1]),
                    (this._vertices[H++] = lt.simulationWorldPostion[2]),
                    (this._vertices[H++] = lt.simulationWorldRotation[0]),
                    (this._vertices[H++] = lt.simulationWorldRotation[1]),
                    (this._vertices[H++] = lt.simulationWorldRotation[2]),
                    (this._vertices[H++] = lt.simulationWorldRotation[3]);
                  break;
                case 1:
                  break;
                default:
                  throw new Error(
                    'ShurikenParticleMaterial: SimulationSpace value is invalid.'
                  );
              }
            }
            return (this._firstFreeElement = n), !0;
          }),
          (o.addNewParticlesToVertexBuffer = function() {
            var t = 0;
            this._firstNewElement < this._firstFreeElement
              ? ((t =
                  this._firstNewElement *
                  this._vertexStride *
                  this._floatCountPerVertex),
                this._vertexBuffer.setData(
                  this._vertices,
                  t,
                  t,
                  (this._firstFreeElement - this._firstNewElement) *
                    this._vertexStride *
                    this._floatCountPerVertex
                ))
              : ((t =
                  this._firstNewElement *
                  this._vertexStride *
                  this._floatCountPerVertex),
                this._vertexBuffer.setData(
                  this._vertices,
                  t,
                  t,
                  (this._bufferMaxParticles - this._firstNewElement) *
                    this._vertexStride *
                    this._floatCountPerVertex
                ),
                this._firstFreeElement > 0 &&
                  this._vertexBuffer.setData(
                    this._vertices,
                    0,
                    0,
                    this._firstFreeElement *
                      this._vertexStride *
                      this._floatCountPerVertex
                  )),
              (this._firstNewElement = this._firstFreeElement);
          }),
          (o._beforeRender = function(t) {
            return (
              this._firstNewElement != this._firstFreeElement &&
                this.addNewParticlesToVertexBuffer(),
              this._drawCounter++,
              this._firstActiveElement != this._firstFreeElement &&
                (this._vertexBuffer._bind(), this._indexBuffer._bind(), !0)
            );
          }),
          (o._render = function(t) {
            var e = 0,
              i = R.mainContext;
            this._firstActiveElement < this._firstFreeElement
              ? ((e =
                  (this._firstFreeElement - this._firstActiveElement) *
                  this._indexStride),
                i.drawElements(
                  4,
                  e,
                  5123,
                  2 * this._firstActiveElement * this._indexStride
                ),
                (L.trianglesFaces += e / 3),
                L.drawCall++)
              : ((e =
                  (this._bufferMaxParticles - this._firstActiveElement) *
                  this._indexStride),
                i.drawElements(
                  4,
                  e,
                  5123,
                  2 * this._firstActiveElement * this._indexStride
                ),
                (L.trianglesFaces += e / 3),
                L.drawCall++,
                this._firstFreeElement > 0 &&
                  ((e = this._firstFreeElement * this._indexStride),
                  i.drawElements(4, e, 5123, 0),
                  (L.trianglesFaces += e / 3),
                  L.drawCall++));
          }),
          (o.play = function() {
            if (
              ((this._burstsIndex = 0),
              (this._isEmitting = !0),
              (this._isPlaying = !0),
              (this._isPaused = !1),
              (this._emissionTime = 0),
              (this._totalDelayTime = 0),
              !this.autoRandomSeed)
            )
              for (var t = 0, i = this._randomSeeds.length; t < i; t++)
                this._randomSeeds[t] = this.randomSeed[0] + e._RANDOMOFFSET[t];
            switch (this.startDelayType) {
              case 0:
                this._playStartDelay = this.startDelay;
                break;
              case 1:
                this.autoRandomSeed
                  ? (this._playStartDelay = w.lerp(
                      this.startDelayMin,
                      this.startDelayMax,
                      Math.random()
                    ))
                  : ((this._rand.seed = this._randomSeeds[2]),
                    (this._playStartDelay = w.lerp(
                      this.startDelayMin,
                      this.startDelayMax,
                      this._rand.getFloat()
                    )),
                    (this._randomSeeds[2] = this._rand.seed));
                break;
              default:
                throw new Error('Utils3D: startDelayType is invalid.');
            }
            (this._frameRateTime = this._currentTime + this._playStartDelay),
              (this._startUpdateLoopCount = L.loopCount),
              this.event('played');
          }),
          (o.pause = function() {
            (this._isPaused = !0), this.event('paused');
          }),
          (o.simulate = function(t, e) {
            void 0 === e && (e = !0),
              (this._simulateUpdate = !0),
              e
                ? this._updateParticlesSimulationRestart(t)
                : ((this._isPaused = !1), this._updateParticles(t)),
              this.pause();
          }),
          (o.stop = function() {
            (this._burstsIndex = 0),
              (this._isEmitting = !1),
              (this._emissionTime = 0),
              this.event('stopped');
          }),
          (o.cloneTo = function(t) {
            var e = t;
            (e.duration = this.duration),
              (e.looping = this.looping),
              (e.prewarm = this.prewarm),
              (e.startDelayType = this.startDelayType),
              (e.startDelay = this.startDelay),
              (e.startDelayMin = this.startDelayMin),
              (e.startDelayMax = this.startDelayMax),
              (e._maxStartLifetime = this._maxStartLifetime),
              (e.startLifetimeType = this.startLifetimeType),
              (e.startLifetimeConstant = this.startLifetimeConstant),
              this.startLifeTimeGradient.cloneTo(e.startLifeTimeGradient),
              (e.startLifetimeConstantMin = this.startLifetimeConstantMin),
              (e.startLifetimeConstantMax = this.startLifetimeConstantMax),
              this.startLifeTimeGradientMin.cloneTo(e.startLifeTimeGradientMin),
              this.startLifeTimeGradientMax.cloneTo(e.startLifeTimeGradientMax),
              (e.startSpeedType = this.startSpeedType),
              (e.startSpeedConstant = this.startSpeedConstant),
              (e.startSpeedConstantMin = this.startSpeedConstantMin),
              (e.startSpeedConstantMax = this.startSpeedConstantMax),
              (e.threeDStartSize = this.threeDStartSize),
              (e.startSizeType = this.startSizeType),
              (e.startSizeConstant = this.startSizeConstant),
              this.startSizeConstantSeparate.cloneTo(
                e.startSizeConstantSeparate
              ),
              (e.startSizeConstantMin = this.startSizeConstantMin),
              (e.startSizeConstantMax = this.startSizeConstantMax),
              this.startSizeConstantMinSeparate.cloneTo(
                e.startSizeConstantMinSeparate
              ),
              this.startSizeConstantMaxSeparate.cloneTo(
                e.startSizeConstantMaxSeparate
              ),
              (e.threeDStartRotation = this.threeDStartRotation),
              (e.startRotationType = this.startRotationType),
              (e.startRotationConstant = this.startRotationConstant),
              this.startRotationConstantSeparate.cloneTo(
                e.startRotationConstantSeparate
              ),
              (e.startRotationConstantMin = this.startRotationConstantMin),
              (e.startRotationConstantMax = this.startRotationConstantMax),
              this.startRotationConstantMinSeparate.cloneTo(
                e.startRotationConstantMinSeparate
              ),
              this.startRotationConstantMaxSeparate.cloneTo(
                e.startRotationConstantMaxSeparate
              ),
              (e.randomizeRotationDirection = this.randomizeRotationDirection),
              (e.startColorType = this.startColorType),
              this.startColorConstant.cloneTo(e.startColorConstant),
              this.startColorConstantMin.cloneTo(e.startColorConstantMin),
              this.startColorConstantMax.cloneTo(e.startColorConstantMax),
              (e.gravityModifier = this.gravityModifier),
              (e.simulationSpace = this.simulationSpace),
              (e.scaleMode = this.scaleMode),
              (e.playOnAwake = this.playOnAwake),
              (e.maxParticles = this.maxParticles),
              this._emission && (e._emission = this._emission.clone()),
              this.shape && (e.shape = this.shape.clone()),
              this.velocityOverLifetime &&
                (e.velocityOverLifetime = this.velocityOverLifetime.clone()),
              this.colorOverLifetime &&
                (e.colorOverLifetime = this.colorOverLifetime.clone()),
              this.sizeOverLifetime &&
                (e.sizeOverLifetime = this.sizeOverLifetime.clone()),
              this.rotationOverLifetime &&
                (e.rotationOverLifetime = this.rotationOverLifetime.clone()),
              this.textureSheetAnimation &&
                (e.textureSheetAnimation = this.textureSheetAnimation.clone()),
              (e.isPerformanceMode = this.isPerformanceMode),
              (e._isEmitting = this._isEmitting),
              (e._isPlaying = this._isPlaying),
              (e._isPaused = this._isPaused),
              (e._playStartDelay = this._playStartDelay),
              (e._frameRateTime = this._frameRateTime),
              (e._emissionTime = this._emissionTime),
              (e._totalDelayTime = this._totalDelayTime),
              (e._burstsIndex = this._burstsIndex);
          }),
          (o.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (o._getVertexBuffers = function() {
            return null;
          }),
          r(
            0,
            o,
            'maxParticles',
            function() {
              return this._bufferMaxParticles - 1;
            },
            function(t) {
              var e = t + 1;
              e !== this._bufferMaxParticles &&
                ((this._bufferMaxParticles = e), this._initBufferDatas());
            }
          ),
          r(0, o, 'isEmitting', function() {
            return this._isEmitting;
          }),
          r(0, o, 'isAlive', function() {
            return !!(this._isPlaying || this.aliveParticleCount > 0);
          }),
          r(
            0,
            o,
            'shape',
            function() {
              return this._shape;
            },
            function(t) {
              this._shape !== t &&
                (t && t.enable
                  ? this._ownerRender._addShaderDefine(yn.SHADERDEFINE_SHAPE)
                  : this._ownerRender._removeShaderDefine(
                      yn.SHADERDEFINE_SHAPE
                    ),
                (this._shape = t));
            }
          ),
          r(
            0,
            o,
            'rotationOverLifetime',
            function() {
              return this._rotationOverLifetime;
            },
            function(t) {
              var e = this._ownerRender;
              if (t) {
                var i = t.angularVelocity;
                if (!i) return;
                var n = i.separateAxes,
                  a = i.type;
                if (t.enbale)
                  switch (
                    (n
                      ? e._addShaderDefine(
                          yn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE
                        )
                      : e._addShaderDefine(
                          yn.SHADERDEFINE_ROTATIONOVERLIFETIME
                        ),
                    a)
                  ) {
                    case 0:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT
                      );
                      break;
                    case 1:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE
                      );
                      break;
                    case 2:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS
                      );
                      break;
                    case 3:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES
                      );
                  }
                else
                  e._removeShaderDefine(yn.SHADERDEFINE_ROTATIONOVERLIFETIME),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES
                    );
                switch (a) {
                  case 0:
                    n
                      ? e._setShaderValueColor(35, i.constantSeparate)
                      : e._setShaderValueNumber(34, i.constant);
                    break;
                  case 1:
                    n
                      ? (e._setShaderValueBuffer(37, i.gradientX._elements),
                        e._setShaderValueBuffer(38, i.gradientY._elements),
                        e._setShaderValueBuffer(39, i.gradientZ._elements),
                        e._setShaderValueBuffer(40, i.gradientW._elements))
                      : e._setShaderValueBuffer(36, i.gradient._elements);
                    break;
                  case 2:
                    n
                      ? (e._setShaderValueColor(35, i.constantMinSeparate),
                        e._setShaderValueColor(42, i.constantMaxSeparate))
                      : (e._setShaderValueNumber(34, i.constantMin),
                        e._setShaderValueNumber(41, i.constantMax));
                    break;
                  case 3:
                    n
                      ? (e._setShaderValueBuffer(37, i.gradientXMin._elements),
                        e._setShaderValueBuffer(44, i.gradientXMax._elements),
                        e._setShaderValueBuffer(38, i.gradientYMin._elements),
                        e._setShaderValueBuffer(45, i.gradientYMax._elements),
                        e._setShaderValueBuffer(39, i.gradientZMin._elements),
                        e._setShaderValueBuffer(46, i.gradientZMax._elements),
                        e._setShaderValueBuffer(40, i.gradientWMin._elements),
                        e._setShaderValueBuffer(47, i.gradientWMax._elements))
                      : (e._setShaderValueBuffer(36, i.gradientMin._elements),
                        e._setShaderValueBuffer(43, i.gradientMax._elements));
                }
              } else
                e._removeShaderDefine(yn.SHADERDEFINE_ROTATIONOVERLIFETIME),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES
                  ),
                  e._setShaderValueColor(35, null),
                  e._setShaderValueColor(42, null),
                  e._setShaderValueNumber(34, void 0),
                  e._setShaderValueNumber(41, void 0),
                  e._setShaderValueBuffer(37, null),
                  e._setShaderValueBuffer(44, null),
                  e._setShaderValueBuffer(38, null),
                  e._setShaderValueBuffer(45, null),
                  e._setShaderValueBuffer(39, null),
                  e._setShaderValueBuffer(46, null),
                  e._setShaderValueBuffer(40, null),
                  e._setShaderValueBuffer(47, null),
                  e._setShaderValueBuffer(36, null),
                  e._setShaderValueBuffer(43, null);
              this._rotationOverLifetime = t;
            }
          ),
          r(0, o, 'emission', function() {
            return this._emission;
          }),
          r(0, o, 'emissionTime', function() {
            return this._emissionTime > this.duration
              ? this.duration
              : this._emissionTime;
          }),
          r(0, o, 'aliveParticleCount', function() {
            return this._firstNewElement >= this._firstRetiredElement
              ? this._firstNewElement - this._firstRetiredElement
              : this._bufferMaxParticles -
                  this._firstRetiredElement +
                  this._firstNewElement;
          }),
          r(0, o, 'isPlaying', function() {
            return this._isPlaying;
          }),
          r(0, o, 'isPaused', function() {
            return this._isPaused;
          }),
          r(
            0,
            o,
            'startLifetimeType',
            function() {
              return this._startLifetimeType;
            },
            function(t) {
              var e = 0,
                i = 0;
              switch (this.startLifetimeType) {
                case 0:
                  this._maxStartLifetime = this.startLifetimeConstant;
                  break;
                case 1:
                  this._maxStartLifetime = -Number.MAX_VALUE;
                  var n = n;
                  for (e = 0, i = n.gradientCount; e < i; e++)
                    this._maxStartLifetime = Math.max(
                      this._maxStartLifetime,
                      n.getValueByIndex(e)
                    );
                  break;
                case 2:
                  this._maxStartLifetime = Math.max(
                    this.startLifetimeConstantMin,
                    this.startLifetimeConstantMax
                  );
                  break;
                case 3:
                  this._maxStartLifetime = -Number.MAX_VALUE;
                  var a = a;
                  for (e = 0, i = a.gradientCount; e < i; e++)
                    this._maxStartLifetime = Math.max(
                      this._maxStartLifetime,
                      a.getValueByIndex(e)
                    );
                  var r = r;
                  for (e = 0, i = r.gradientCount; e < i; e++)
                    this._maxStartLifetime = Math.max(
                      this._maxStartLifetime,
                      r.getValueByIndex(e)
                    );
              }
              this._startLifetimeType = t;
            }
          ),
          r(0, o, '_originalBoundingSphere', function() {
            return this._boundingSphere;
          }),
          r(
            0,
            o,
            'startLifetimeConstant',
            function() {
              return this._startLifetimeConstant;
            },
            function(t) {
              0 === this._startLifetimeType && (this._maxStartLifetime = t),
                (this._startLifetimeConstant = t);
            }
          ),
          r(
            0,
            o,
            'startLifetimeConstantMin',
            function() {
              return this._startLifetimeConstantMin;
            },
            function(t) {
              2 === this._startLifetimeType &&
                (this._maxStartLifetime = Math.max(
                  t,
                  this._startLifetimeConstantMax
                )),
                (this._startLifetimeConstantMin = t);
            }
          ),
          r(
            0,
            o,
            'startLifeTimeGradient',
            function() {
              return this._startLifeTimeGradient;
            },
            function(t) {
              if (1 === this._startLifetimeType) {
                this._maxStartLifetime = -Number.MAX_VALUE;
                for (var e = 0, i = t.gradientCount; e < i; e++)
                  this._maxStartLifetime = Math.max(
                    this._maxStartLifetime,
                    t.getValueByIndex(e)
                  );
              }
              this._startLifeTimeGradient = t;
            }
          ),
          r(
            0,
            o,
            'startLifetimeConstantMax',
            function() {
              return this._startLifetimeConstantMax;
            },
            function(t) {
              2 === this._startLifetimeType &&
                (this._maxStartLifetime = Math.max(
                  this._startLifetimeConstantMin,
                  t
                )),
                (this._startLifetimeConstantMax = t);
            }
          ),
          r(
            0,
            o,
            'startLifeTimeGradientMin',
            function() {
              return this._startLifeTimeGradientMin;
            },
            function(t) {
              if (3 === this._startLifetimeType) {
                var e = 0,
                  i = 0;
                for (
                  this._maxStartLifetime = -Number.MAX_VALUE,
                    e = 0,
                    i = t.gradientCount;
                  e < i;
                  e++
                )
                  this._maxStartLifetime = Math.max(
                    this._maxStartLifetime,
                    t.getValueByIndex(e)
                  );
                for (
                  e = 0, i = this._startLifeTimeGradientMax.gradientCount;
                  e < i;
                  e++
                )
                  this._maxStartLifetime = Math.max(
                    this._maxStartLifetime,
                    this._startLifeTimeGradientMax.getValueByIndex(e)
                  );
              }
              this._startLifeTimeGradientMin = t;
            }
          ),
          r(
            0,
            o,
            'startLifeTimeGradientMax',
            function() {
              return this._startLifeTimeGradientMax;
            },
            function(t) {
              if (3 === this._startLifetimeType) {
                var e = 0,
                  i = 0;
                for (
                  this._maxStartLifetime = -Number.MAX_VALUE,
                    e = 0,
                    i = this._startLifeTimeGradientMin.gradientCount;
                  e < i;
                  e++
                )
                  this._maxStartLifetime = Math.max(
                    this._maxStartLifetime,
                    this._startLifeTimeGradientMin.getValueByIndex(e)
                  );
                for (e = 0, i = t.gradientCount; e < i; e++)
                  this._maxStartLifetime = Math.max(
                    this._maxStartLifetime,
                    t.getValueByIndex(e)
                  );
              }
              this._startLifeTimeGradientMax = t;
            }
          ),
          r(
            0,
            o,
            'velocityOverLifetime',
            function() {
              return this._velocityOverLifetime;
            },
            function(t) {
              var e = this._ownerRender;
              if (t) {
                var i = t.velocity,
                  n = i.type;
                if (t.enbale)
                  switch (n) {
                    case 0:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT
                      );
                      break;
                    case 1:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE
                      );
                      break;
                    case 2:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT
                      );
                      break;
                    case 3:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE
                      );
                  }
                else
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT
                  ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE
                    );
                switch (n) {
                  case 0:
                    e._setShaderValueColor(13, i.constant);
                    break;
                  case 1:
                    e._setShaderValueBuffer(14, i.gradientX._elements),
                      e._setShaderValueBuffer(15, i.gradientY._elements),
                      e._setShaderValueBuffer(16, i.gradientZ._elements);
                    break;
                  case 2:
                    e._setShaderValueColor(13, i.constantMin),
                      e._setShaderValueColor(17, i.constantMax);
                    break;
                  case 3:
                    e._setShaderValueBuffer(14, i.gradientXMin._elements),
                      e._setShaderValueBuffer(18, i.gradientXMax._elements),
                      e._setShaderValueBuffer(15, i.gradientYMin._elements),
                      e._setShaderValueBuffer(19, i.gradientYMax._elements),
                      e._setShaderValueBuffer(16, i.gradientZMin._elements),
                      e._setShaderValueBuffer(20, i.gradientZMax._elements);
                }
                e._setShaderValueInt(21, t.space);
              } else
                e._removeShaderDefine(
                  yn.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT
                ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE
                  ),
                  e._setShaderValueColor(13, null),
                  e._setShaderValueBuffer(14, null),
                  e._setShaderValueBuffer(15, null),
                  e._setShaderValueBuffer(16, null),
                  e._setShaderValueColor(13, null),
                  e._setShaderValueColor(17, null),
                  e._setShaderValueBuffer(14, null),
                  e._setShaderValueBuffer(18, null),
                  e._setShaderValueBuffer(15, null),
                  e._setShaderValueBuffer(19, null),
                  e._setShaderValueBuffer(16, null),
                  e._setShaderValueBuffer(20, null),
                  e._setShaderValueInt(21, void 0);
              this._velocityOverLifetime = t;
            }
          ),
          r(
            0,
            o,
            'colorOverLifetime',
            function() {
              return this._colorOverLifetime;
            },
            function(t) {
              var e = this._ownerRender;
              if (t) {
                var i = t.color;
                if (t.enbale)
                  switch (i.type) {
                    case 1:
                      e._addShaderDefine(yn.SHADERDEFINE_COLOROVERLIFETIME);
                      break;
                    case 3:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME
                      );
                  }
                else
                  e._removeShaderDefine(yn.SHADERDEFINE_COLOROVERLIFETIME),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME
                    );
                switch (i.type) {
                  case 1:
                    var n = i.gradient;
                    e._setShaderValueBuffer(22, n._alphaElements),
                      e._setShaderValueBuffer(23, n._rgbElements);
                    break;
                  case 3:
                    var a = i.gradientMin,
                      r = i.gradientMax;
                    e._setShaderValueBuffer(22, a._alphaElements),
                      e._setShaderValueBuffer(23, a._rgbElements),
                      e._setShaderValueBuffer(24, r._alphaElements),
                      e._setShaderValueBuffer(25, r._rgbElements);
                }
              } else
                e._removeShaderDefine(yn.SHADERDEFINE_COLOROVERLIFETIME),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_RANDOMCOLOROVERLIFETIME
                  ),
                  e._setShaderValueBuffer(22, n._alphaElements),
                  e._setShaderValueBuffer(23, n._rgbElements),
                  e._setShaderValueBuffer(22, a._alphaElements),
                  e._setShaderValueBuffer(23, a._rgbElements),
                  e._setShaderValueBuffer(24, r._alphaElements),
                  e._setShaderValueBuffer(25, r._rgbElements);
              this._colorOverLifetime = t;
            }
          ),
          r(
            0,
            o,
            'sizeOverLifetime',
            function() {
              return this._sizeOverLifetime;
            },
            function(t) {
              var e = this._ownerRender;
              if (t) {
                var i = t.size,
                  n = i.separateAxes,
                  a = i.type;
                if (t.enbale)
                  switch (a) {
                    case 0:
                      n
                        ? e._addShaderDefine(
                            yn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE
                          )
                        : e._addShaderDefine(
                            yn.SHADERDEFINE_SIZEOVERLIFETIMECURVE
                          );
                      break;
                    case 2:
                      n
                        ? e._addShaderDefine(
                            yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE
                          )
                        : e._addShaderDefine(
                            yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES
                          );
                  }
                else
                  e._removeShaderDefine(yn.SHADERDEFINE_SIZEOVERLIFETIMECURVE),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES
                    ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE
                    );
                switch (a) {
                  case 0:
                    n
                      ? (e._setShaderValueBuffer(27, i.gradientX._elements),
                        e._setShaderValueBuffer(28, i.gradientY._elements),
                        e._setShaderValueBuffer(29, i.gradientZ._elements))
                      : e._setShaderValueBuffer(26, i.gradient._elements);
                    break;
                  case 2:
                    n
                      ? (e._setShaderValueBuffer(27, i.gradientXMin._elements),
                        e._setShaderValueBuffer(31, i.gradientXMax._elements),
                        e._setShaderValueBuffer(28, i.gradientYMin._elements),
                        e._setShaderValueBuffer(32, i.gradientYMax._elements),
                        e._setShaderValueBuffer(29, i.gradientZMin._elements),
                        e._setShaderValueBuffer(33, i.gradientZMax._elements))
                      : (e._setShaderValueBuffer(26, i.gradientMin._elements),
                        e._setShaderValueBuffer(30, i.gradientMax._elements));
                }
              } else
                e._removeShaderDefine(yn.SHADERDEFINE_SIZEOVERLIFETIMECURVE),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES
                  ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE
                  ),
                  e._setShaderValueBuffer(27, null),
                  e._setShaderValueBuffer(31, null),
                  e._setShaderValueBuffer(28, null),
                  e._setShaderValueBuffer(32, null),
                  e._setShaderValueBuffer(29, null),
                  e._setShaderValueBuffer(33, null),
                  e._setShaderValueBuffer(26, null),
                  e._setShaderValueBuffer(30, null);
              this._sizeOverLifetime = t;
            }
          ),
          r(
            0,
            o,
            'textureSheetAnimation',
            function() {
              return this._textureSheetAnimation;
            },
            function(t) {
              var e = this._ownerRender;
              if (t) {
                var i = t.frame,
                  n = i.type;
                if (t.enable)
                  switch (n) {
                    case 1:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE
                      );
                      break;
                    case 3:
                      e._addShaderDefine(
                        yn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE
                      );
                  }
                else
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE
                  ),
                    e._removeShaderDefine(
                      yn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE
                    );
                if (1 === n || 3 === n) {
                  e._setShaderValueInt(48, t.cycles);
                  var a = t.tiles,
                    r = this._uvLength.elements;
                  (r[0] = 1 / a.x),
                    (r[1] = 1 / a.y),
                    e._setShaderValueVector2(49, this._uvLength);
                }
                switch (n) {
                  case 1:
                    e._setShaderValueBuffer(50, i.frameOverTimeData._elements);
                    break;
                  case 3:
                    e._setShaderValueBuffer(
                      50,
                      i.frameOverTimeDataMin._elements
                    ),
                      e._setShaderValueBuffer(
                        51,
                        i.frameOverTimeDataMax._elements
                      );
                }
              } else
                e._removeShaderDefine(
                  yn.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE
                ),
                  e._removeShaderDefine(
                    yn.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE
                  ),
                  e._setShaderValueInt(48, void 0),
                  e._setShaderValueVector2(49, null),
                  e._setShaderValueBuffer(50, null),
                  e._setShaderValueBuffer(51, null);
              this._textureSheetAnimation = t;
            }
          ),
          r(0, o, '_vertexBufferCount', function() {
            return 1;
          }),
          r(0, o, 'triangleCount', function() {
            return this._indexBuffer ? this._indexBuffer.indexCount / 3 : 0;
          }),
          r(0, o, '_originalBoundingBox', function() {
            return this._boundingBox;
          }),
          r(0, o, '_originalBoundingBoxCorners', function() {
            return this._boundingBoxCorners;
          }),
          (e.halfKSqrtOf2 = 0.71),
          n(e, [
            '_RANDOMOFFSET',
            function() {
              return (this._RANDOMOFFSET = new Uint32Array([
                592910910,
                3276756734,
                322376503,
                306581307,
                1793934638,
                3737431713,
                2527743459,
                2368504881,
                4085612399,
                3774601268,
                326370691,
                1494990940,
                1089181156,
                3159510623,
                2941263940,
                2786374529,
                271901988,
                4233252447
              ]));
            },
            '_maxElapsedTime',
            function() {
              return (this._maxElapsedTime = 1 / 3);
            },
            '_tempVector30',
            function() {
              return (this._tempVector30 = new Re());
            },
            '_tempVector31',
            function() {
              return (this._tempVector31 = new Re());
            },
            '_tempVector32',
            function() {
              return (this._tempVector32 = new Re());
            },
            '_tempVector33',
            function() {
              return (this._tempVector33 = new Re());
            },
            '_tempVector34',
            function() {
              return (this._tempVector34 = new Re());
            },
            '_tempVector35',
            function() {
              return (this._tempVector35 = new Re());
            },
            '_tempVector36',
            function() {
              return (this._tempVector36 = new Re());
            },
            '_tempVector37',
            function() {
              return (this._tempVector37 = new Re());
            },
            '_tempVector38',
            function() {
              return (this._tempVector38 = new Re());
            },
            '_tempVector39',
            function() {
              return (this._tempVector39 = new Re());
            },
            '_tempPosition',
            function() {
              return (this._tempPosition = new Re());
            },
            '_tempDirection',
            function() {
              return (this._tempDirection = new Re());
            }
          ]),
          e
        );
      })(ti),
      Li = (function(t) {
        function e(t) {
          (this._finalGravity = new Re()),
            (this._tempRotationMatrix = new Te()),
            e.__super.call(this, t),
            (this._defaultBoundBox = new be(new Re(), new Re())),
            (this._renderMode = -1),
            (this.stretchedBillboardCameraSpeedScale = 0),
            (this.stretchedBillboardSpeedScale = 0),
            (this.stretchedBillboardLengthScale = 1);
        }
        a(e, 'laya.d3.core.particleShuriKen.ShurikenParticleRender', t);
        var n = e.prototype;
        return (
          (n._calculateBoundingBox = function() {
            var t = this._boundingBox.min.elements;
            (t[0] = -Number.MAX_VALUE),
              (t[1] = -Number.MAX_VALUE),
              (t[2] = -Number.MAX_VALUE);
            var e = this._boundingBox.min.elements;
            (e[0] = Number.MAX_VALUE),
              (e[1] = Number.MAX_VALUE),
              (e[2] = Number.MAX_VALUE);
          }),
          (n._calculateBoundingSphere = function() {
            var t = this._owner.particleSystem._boundingSphere,
              e = NaN,
              i = this._owner.transform,
              n = i.scale.elements,
              a = Math.abs(n[0]),
              r = Math.abs(n[1]),
              s = Math.abs(n[2]);
            (e = a >= r && a >= s ? a : r >= s ? r : s),
              Re.transformCoordinate(
                t.center,
                i.worldMatrix,
                this._boundingSphere.center
              ),
              (this._boundingSphere.radius = t.radius * e);
          }),
          (n._renderUpdate = function(t) {
            var e = this._owner.particleSystem;
            if (!i.stage.isVisibility || !e.isAlive) return !1;
            var n = this._owner.transform;
            switch (e.simulationSpace) {
              case 0:
                break;
              case 1:
                this._setShaderValueColor(0, n.position),
                  this._setShaderValueColor(1, n.rotation);
                break;
              default:
                throw new Error(
                  'ShurikenParticleMaterial: SimulationSpace value is invalid.'
                );
            }
            switch (e.scaleMode) {
              case 0:
                var a = n.scale;
                this._setShaderValueColor(4, a),
                  this._setShaderValueColor(5, a);
                break;
              case 1:
                var r = n.localScale;
                this._setShaderValueColor(4, r),
                  this._setShaderValueColor(5, r);
                break;
              case 2:
                this._setShaderValueColor(4, n.scale),
                  this._setShaderValueColor(5, Re.ONE);
            }
            var s = this._finalGravity.elements,
              o = Xe.gravity.elements,
              l = e.gravityModifier;
            return (
              (s[0] = o[0] * l),
              (s[1] = o[1] * l),
              (s[2] = o[2] * l),
              this._setShaderValueBuffer(7, s),
              this._setShaderValueInt(11, e.simulationSpace),
              this._setShaderValueBool(8, e.threeDStartRotation),
              this._setShaderValueInt(6, e.scaleMode),
              this._setShaderValueInt(9, this.stretchedBillboardLengthScale),
              this._setShaderValueInt(10, this.stretchedBillboardSpeedScale),
              this._setShaderValueNumber(12, e._currentTime),
              Ze.debugMode && this._renderRenderableBoundBox(),
              !0
            );
          }),
          (n._destroy = function() {
            t.prototype._destroy.call(this),
              this._mesh &&
                (this._mesh._removeReference(), (this._mesh = null));
          }),
          r(0, n, 'boundingBox', function() {
            return this._owner.particleSystem.isAlive
              ? (this._boundingBoxNeedChange &&
                  (this._calculateBoundingBox(),
                  (this._boundingBoxNeedChange = !1)),
                this._boundingBox)
              : this._defaultBoundBox;
          }),
          r(
            0,
            n,
            'renderMode',
            function() {
              return this._renderMode;
            },
            function(t) {
              if (this._renderMode !== t) {
                switch (this._renderMode) {
                  case 0:
                    this._removeShaderDefine(
                      yn.SHADERDEFINE_RENDERMODE_BILLBOARD
                    );
                    break;
                  case 1:
                    this._removeShaderDefine(
                      yn.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD
                    );
                    break;
                  case 2:
                    this._removeShaderDefine(
                      yn.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD
                    );
                    break;
                  case 3:
                    this._removeShaderDefine(
                      yn.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD
                    );
                    break;
                  case 4:
                    this._removeShaderDefine(yn.SHADERDEFINE_RENDERMODE_MESH);
                }
                switch (((this._renderMode = t), t)) {
                  case 0:
                    this._addShaderDefine(yn.SHADERDEFINE_RENDERMODE_BILLBOARD);
                    break;
                  case 1:
                    this._addShaderDefine(
                      yn.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD
                    );
                    break;
                  case 2:
                    this._addShaderDefine(
                      yn.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD
                    );
                    break;
                  case 3:
                    this._addShaderDefine(
                      yn.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD
                    );
                    break;
                  case 4:
                    this._addShaderDefine(yn.SHADERDEFINE_RENDERMODE_MESH);
                    break;
                  default:
                    throw new Error(
                      'ShurikenParticleRender: unknown renderMode Value.'
                    );
                }
                this._owner.particleSystem._initBufferDatas();
              }
            }
          ),
          r(
            0,
            n,
            'mesh',
            function() {
              return this._mesh;
            },
            function(t) {
              this._mesh !== t &&
                (this._mesh && this._mesh._removeReference(),
                (this._mesh = t),
                t && t._addReference(),
                this._owner.particleSystem._initBufferDatas());
            }
          ),
          e
        );
      })(ei),
      Di = (function(t) {
        function e(t) {
          (this._owner = null),
            (this._trailRenderElements = null),
            (this._minVertexDistance = NaN),
            (this._widthMultiplier = NaN),
            (this._time = NaN),
            (this._widthCurve = null),
            (this._colorGradient = null),
            (this._textureMode = 0),
            (this._curtime = 0),
            (this._curSubTrailFinishCurTime = 0),
            (this._curSubTrailFinished = !1),
            (this._hasLifeSubTrail = !1),
            (this._trailTotalLength = 0),
            (this._trailSupplementLength = 0),
            (this._trailDeadLength = 0),
            (this._isStart = !1),
            (this._trailRenderElementIndex = 0),
            e.__super.call(this),
            (this._curSubTrailFinishPosition = new Re()),
            (this._curSubTrailFinishDirection = new Re()),
            (this._owner = t),
            (this._trailRenderElements = []),
            this.addRenderElement();
        }
        a(e, 'laya.d3.core.trail.TrailFilter', t);
        var i = e.prototype;
        return (
          (i.getRenderElementsCount = function() {
            return this._trailRenderElements.length;
          }),
          (i.addRenderElement = function() {
            for (var t = 0; t < this._trailRenderElements.length; t++)
              if (1 == this._trailRenderElements[t]._isDead)
                return this._trailRenderElements[t].reActivate(), t;
            var e = new vt(this);
            return (
              this._trailRenderElements.push(e),
              this._trailRenderElements.length - 1
            );
          }),
          (i.getRenderElement = function(t) {
            return this._trailRenderElements[t];
          }),
          (i._update = function(t) {
            (this._curtime += t.elapsedTime / 1e3),
              this._owner._render._setShaderValueNumber(3, this._curtime),
              this._curSubTrailFinished &&
                ((this._curSubTrailFinished = !1),
                (this._trailRenderElementIndex = this.addRenderElement()),
                this.event('trailfilterchange', [
                  this._trailRenderElementIndex,
                  this._trailRenderElements[this._trailRenderElementIndex]
                ]));
          }),
          (i.reset = function() {
            for (var t = 0; t < this._trailRenderElements.length; t++)
              this._trailRenderElements[t].reActivate();
            (this._isStart = !1),
              (this._hasLifeSubTrail = !1),
              (this._curSubTrailFinished = !1),
              (this._curSubTrailFinishCurTime = 0),
              (this._trailTotalLength = 0),
              (this._trailSupplementLength = 0),
              (this._trailDeadLength = 0);
          }),
          (i._destroy = function() {
            t.prototype._destroy.call(this);
            for (var e = 0; e < this._trailRenderElements.length; e++)
              this._trailRenderElements[e]._destroy();
            (this._trailRenderElements = null),
              (this._widthCurve = null),
              (this._colorGradient = null),
              (this._curSubTrailFinishPosition = null),
              (this._curSubTrailFinishDirection = null);
          }),
          r(
            0,
            i,
            'widthMultiplier',
            function() {
              return this._widthMultiplier;
            },
            function(t) {
              this._widthMultiplier = t;
            }
          ),
          r(
            0,
            i,
            'time',
            function() {
              return this._time;
            },
            function(t) {
              (this._time = t), this._owner._render._setShaderValueNumber(4, t);
            }
          ),
          r(
            0,
            i,
            'widthCurve',
            function() {
              return this._widthCurve;
            },
            function(t) {
              this._widthCurve = t;
              var e = new Float32Array(4 * t.length),
                i = 0,
                n = 0,
                a = 0;
              for (i = 0, n = t.length; i < n; i++)
                (e[a++] = t[i].time),
                  (e[a++] = t[i].inTangent),
                  (e[a++] = t[i].outTangent),
                  (e[a++] = t[i].value);
              this._owner._render._setShaderValueBuffer(5, e),
                this._owner._render._setShaderValueInt(6, t.length);
            }
          ),
          r(
            0,
            i,
            'minVertexDistance',
            function() {
              return this._minVertexDistance;
            },
            function(t) {
              this._minVertexDistance = t;
            }
          ),
          r(
            0,
            i,
            'colorGradient',
            function() {
              return this._colorGradient;
            },
            function(t) {
              (this._colorGradient = t),
                this._owner._render._setShaderValueBuffer(7, t._colorKeyData),
                this._owner._render._setShaderValueBuffer(8, t._alphaKeyData),
                0 == t.mode
                  ? this._owner._render._addShaderDefine(
                      bn.SHADERDEFINE_GRADIENTMODE_BLEND
                    )
                  : this._owner._render._removeShaderDefine(
                      bn.SHADERDEFINE_GRADIENTMODE_BLEND
                    );
            }
          ),
          r(
            0,
            i,
            'textureMode',
            function() {
              return this._textureMode;
            },
            function(t) {
              this._textureMode = t;
            }
          ),
          e
        );
      })(ti),
      Ai = (function(t) {
        function e(t) {
          e.__super.call(this, t);
        }
        a(e, 'laya.d3.core.trail.TrailRenderer', ei);
        var i = e.prototype;
        return (
          (i._calculateBoundingBox = function() {
            var t = this._boundingBox.min.elements;
            (t[0] = -Number.MAX_VALUE),
              (t[1] = -Number.MAX_VALUE),
              (t[2] = -Number.MAX_VALUE);
            var e = this._boundingBox.min.elements;
            (e[0] = Number.MAX_VALUE),
              (e[1] = Number.MAX_VALUE),
              (e[2] = Number.MAX_VALUE);
          }),
          (i._calculateBoundingSphere = function() {
            var t = this._boundingSphere.center.elements;
            (t[0] = 0),
              (t[1] = 0),
              (t[2] = 0),
              (this._boundingSphere.radius = Number.MAX_VALUE);
          }),
          (i._renderUpdate = function(t) {
            return !0;
          }),
          e
        );
      })(),
      Ni = (function(t) {
        function e(t) {
          (this._floatCountPerVertex = 6),
            (this._owner = null),
            (this._vertices = null),
            (this._vertexBuffer = null),
            (this._firstActiveElement = 0),
            (this._firstNewElement = 0),
            (this._firstFreeElement = 0),
            (this._firstRetiredElement = 0),
            (this._currentTime = NaN),
            (this._drawCounter = 0),
            (this.scLeft = null),
            (this.scRight = null),
            (this._numPositionMode = 0),
            (this._numPositionVelocityMode = 0),
            (this._lastTime = NaN),
            (this._needPatch = !1),
            (this._lastPatchAddPos0 = null),
            (this._lastPatchAddPos1 = null),
            (this._lastPatchAddTime = NaN),
            (this.lifeTime = NaN),
            (this.minSegmentDistance = NaN),
            (this.minInterpDistance = NaN),
            (this.maxSlerpCount = 0),
            (this._maxSegments = 0),
            e.__super.call(this),
            (this._tempVector0 = new Re()),
            (this._tempVector1 = new Re()),
            (this._tempVector2 = new Re()),
            (this._tempVector3 = new Re()),
            (this._posModeLastPosition0 = new Re()),
            (this._posModeLastPosition1 = new Re()),
            (this._posModePosition0 = new Re()),
            (this._posModePosition1 = new Re()),
            (this._posVelModePosition0 = new Re()),
            (this._posVelModeVelocity0 = new Re()),
            (this._posVelModePosition1 = new Re()),
            (this._posVelModeVelocity1 = new Re()),
            (this._owner = t),
            (this._lastTime = 0),
            (this._firstActiveElement = 0),
            (this._firstNewElement = 0),
            (this._firstFreeElement = 0),
            (this._firstRetiredElement = 0),
            (this._currentTime = 0),
            (this._drawCounter = 0),
            (this._needPatch = !1),
            (this._lastPatchAddPos0 = new Re()),
            (this._lastPatchAddPos1 = new Re()),
            (this.scLeft = new H()),
            (this.scRight = new H()),
            (this.lifeTime = 0.5),
            (this.minSegmentDistance = 0.1),
            (this.minInterpDistance = 0.6),
            (this.maxSlerpCount = 128),
            (this._maxSegments = 200),
            this._owner.on(
              'activeinhierarchychanged',
              this,
              this._onActiveHierarchyChanged
            );
        }
        a(e, 'laya.d3.resource.tempelet.GlitterTemplet', t);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.d3.core.render.IRenderable': !0 }),
          (n._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
          }),
          (n._getIndexBuffer = function() {
            return null;
          }),
          (n._initialize = function() {
            (this._vertexBuffer = Yi.create(
              Et.vertexDeclaration,
              2 * this.maxSegments,
              35048
            )),
              (this._vertices = new Float32Array(
                this.maxSegments * this._floatCountPerVertex * 2
              ));
          }),
          (n._onActiveHierarchyChanged = function(t) {
            t ||
              ((this._numPositionMode = 0),
              (this._numPositionVelocityMode = 0),
              (this._firstActiveElement = 0),
              (this._firstNewElement = 0),
              (this._firstFreeElement = 0),
              (this._firstRetiredElement = 0),
              (this._currentTime = 0),
              (this._drawCounter = 0));
          }),
          (n._updateTextureCoordinates = function() {
            this._firstActiveElement < this._firstFreeElement
              ? this._updateSubTextureCoordinates(
                  this._firstActiveElement,
                  2 * (this._firstFreeElement - this._firstActiveElement)
                )
              : (this._updateSubTextureCoordinates(
                  this._firstActiveElement,
                  2 * (this.maxSegments - this._firstActiveElement)
                ),
                this._firstFreeElement > 0 &&
                  this._updateSubTextureCoordinates(
                    0,
                    2 * this._firstFreeElement
                  ));
          }),
          (n._updateSubTextureCoordinates = function(t, e) {
            for (var i = 2 * t, n = 0; n < e; n += 2) {
              var a = i + n,
                r = a * this._floatCountPerVertex,
                s = (a + 1) * this._floatCountPerVertex;
              this._vertices[r + 3] = this._vertices[s + 3] =
                (this._vertices[r + 5] - this._currentTime) / this.lifeTime;
            }
          }),
          (n._retireActiveGlitter = function() {
            for (
              var t = this.lifeTime, e = 2 * this._floatCountPerVertex;
              this._firstActiveElement != this._firstNewElement;

            ) {
              var i = this._firstActiveElement * e + 5;
              if (this._currentTime - this._vertices[i] < t) break;
              (this._vertices[i] = this._drawCounter),
                this._firstActiveElement++,
                this._firstActiveElement >= this.maxSegments &&
                  (this._firstActiveElement = 0);
            }
          }),
          (n._freeRetiredGlitter = function() {
            for (
              var t = 2 * this._floatCountPerVertex;
              this._firstRetiredElement != this._firstActiveElement;

            ) {
              if (
                this._drawCounter -
                  this._vertices[this._firstRetiredElement * t + 5] <
                3
              )
                break;
              this._firstRetiredElement++,
                this._firstRetiredElement >= this.maxSegments &&
                  (this._firstRetiredElement = 0);
            }
          }),
          (n._calcVelocity = function(t, e, i) {
            Re.subtract(t, e, i), Re.scale(i, 0.5, i);
          }),
          (n._addNewGlitterSegementToVertexBuffer = function() {
            var t = 0;
            this._firstActiveElement < this._firstFreeElement
              ? ((t = 2 * this._firstActiveElement * this._floatCountPerVertex),
                this._vertexBuffer.setData(
                  this._vertices,
                  t,
                  t,
                  2 *
                    (this._firstFreeElement - this._firstActiveElement) *
                    this._floatCountPerVertex
                ))
              : ((t = 2 * this._firstActiveElement * this._floatCountPerVertex),
                this._vertexBuffer.setData(
                  this._vertices,
                  t,
                  t,
                  2 *
                    (this.maxSegments - this._firstActiveElement) *
                    this._floatCountPerVertex
                ),
                this._firstFreeElement > 0 &&
                  this._vertexBuffer.setData(
                    this._vertices,
                    0,
                    0,
                    2 * this._firstFreeElement * this._floatCountPerVertex
                  )),
              (this._firstNewElement = this._firstFreeElement);
          }),
          (n._addGlitter = function(t, e, i) {
            this._needPatch &&
              ((this._needPatch = !1),
              this._addGlitter(
                this._lastPatchAddPos0,
                this._lastPatchAddPos1,
                this._lastPatchAddTime
              ));
            var n = this._firstFreeElement + 1;
            n >= this.maxSegments &&
              ((n = 0),
              t.cloneTo(this._lastPatchAddPos0),
              e.cloneTo(this._lastPatchAddPos1),
              (this._lastPatchAddTime = i),
              (this._needPatch = !0)),
              n === this._firstRetiredElement &&
                console.log(
                  'GlitterTemplet:current segement count have large than maxSegments,please adjust the  value of maxSegments or add Glitter Vertex Frequency.'
                );
            var a = t.elements,
              r = e.elements,
              s = 0,
              o = this._firstFreeElement * this._floatCountPerVertex * 2;
            for (s = 0; s < 3; s++) this._vertices[o + s] = a[s];
            (this._vertices[o + 3] = 0),
              (this._vertices[o + 4] = 0),
              (this._vertices[o + 5] = i);
            var l = o + this._floatCountPerVertex;
            for (s = 0; s < 3; s++) this._vertices[l + s] = r[s];
            (this._vertices[l + 3] = 0),
              (this._vertices[l + 4] = 1),
              (this._vertices[l + 5] = i),
              (this._firstFreeElement = n);
          }),
          (n._update = function(t) {
            (this._currentTime += t / 1e3),
              this._retireActiveGlitter(),
              this._freeRetiredGlitter(),
              this._firstActiveElement == this._firstFreeElement &&
                (this._currentTime = 0),
              this._firstRetiredElement == this._firstActiveElement &&
                (this._drawCounter = 0),
              this._updateTextureCoordinates();
          }),
          (n._beforeRender = function(t) {
            return (
              this._firstNewElement != this._firstFreeElement &&
                this._addNewGlitterSegementToVertexBuffer(),
              this._drawCounter++,
              this._firstActiveElement != this._firstFreeElement &&
                (this._vertexBuffer.bindWithIndexBuffer(null), !0)
            );
          }),
          (n._render = function(t) {
            var e = 0,
              i = R.mainContext;
            this._firstActiveElement < this._firstFreeElement
              ? ((e = 2 * (this._firstFreeElement - this._firstActiveElement)),
                i.drawArrays(5, 2 * this._firstActiveElement, e),
                (L.trianglesFaces += e - 2),
                L.drawCall++)
              : ((e = 2 * (this.maxSegments - this._firstActiveElement)),
                i.drawArrays(5, 2 * this._firstActiveElement, e),
                (L.trianglesFaces += e - 2),
                L.drawCall++,
                this._firstFreeElement > 0 &&
                  ((e = 2 * this._firstFreeElement),
                  i.drawArrays(5, 0, e),
                  (L.trianglesFaces += e - 2),
                  L.drawCall++));
          }),
          (n.addVertexPosition = function(t, e) {
            if (this._owner.activeInHierarchy)
              if (this._numPositionMode < 2)
                0 === this._numPositionMode
                  ? (t.cloneTo(this._posModeLastPosition0),
                    e.cloneTo(this._posModeLastPosition1))
                  : (t.cloneTo(this._posModePosition0),
                    e.cloneTo(this._posModePosition1)),
                  this._numPositionMode++;
              else {
                var i = this._tempVector2;
                this._calcVelocity(t, this._posModeLastPosition0, i);
                var n = this._tempVector3;
                this._calcVelocity(e, this._posModeLastPosition1, n),
                  this.addVertexPositionVelocity(
                    this._posModePosition0,
                    i,
                    this._posModePosition1,
                    n
                  ),
                  this._posModePosition0.cloneTo(this._posModeLastPosition0),
                  this._posModePosition1.cloneTo(this._posModeLastPosition1),
                  t.cloneTo(this._posModePosition0),
                  e.cloneTo(this._posModePosition1);
              }
          }),
          (n.addVertexPositionVelocity = function(t, e, i, n) {
            if (this._owner.activeInHierarchy) {
              if (0 === this._numPositionVelocityMode)
                this._numPositionVelocityMode++;
              else {
                var a = this._tempVector0;
                Re.subtract(t, this._posVelModePosition0, a);
                var r = Re.scalarLength(a);
                Re.subtract(i, this._posVelModePosition1, a);
                var s = Re.scalarLength(a),
                  o = 0,
                  l = l;
                if (r < l && s < l) return;
                if (
                  1 ===
                  (o = 1 + Math.floor(Math.max(r, s) / this.minInterpDistance))
                )
                  this._addGlitter(t, i, this._currentTime);
                else {
                  (o = Math.min(o, this.maxSlerpCount)),
                    this.scLeft.Init(
                      this._posVelModePosition0,
                      this._posVelModeVelocity0,
                      t,
                      e
                    ),
                    this.scRight.Init(
                      this._posVelModePosition1,
                      this._posVelModeVelocity1,
                      i,
                      n
                    );
                  for (
                    var h = 1 / o,
                      c = h,
                      u = this._currentTime - this._lastTime,
                      _ = 1;
                    _ <= o;
                    _++
                  ) {
                    var d = this._tempVector0;
                    this.scLeft.Slerp(c, d);
                    var f = this._tempVector1;
                    this.scRight.Slerp(c, f);
                    var p = this._lastTime + (u * _) / o;
                    this._addGlitter(d, f, p), (c += h);
                  }
                }
              }
              (this._lastTime = this._currentTime),
                t.cloneTo(this._posVelModePosition0),
                e.cloneTo(this._posVelModeVelocity0),
                i.cloneTo(this._posVelModePosition1),
                n.cloneTo(this._posVelModeVelocity1);
            }
          }),
          (n._destroy = function() {
            t.prototype._destroy.call(this),
              (this._tempVector0 = null),
              (this._tempVector1 = null),
              (this._tempVector2 = null),
              (this._tempVector3 = null),
              (this._owner = null),
              (this._vertices = null),
              this._vertexBuffer.destroy(),
              (this._vertexBuffer = null),
              (this.scLeft = null),
              (this.scRight = null),
              (this._posModeLastPosition0 = null),
              (this._posModeLastPosition1 = null),
              (this._posModePosition0 = null),
              (this._posModePosition1 = null),
              (this._posVelModePosition0 = null),
              (this._posVelModeVelocity0 = null),
              (this._posVelModePosition1 = null),
              (this._posVelModeVelocity1 = null),
              (this._lastPatchAddPos0 = null),
              (this._lastPatchAddPos1 = null);
          }),
          (n._getVertexBuffers = function() {
            return null;
          }),
          r(
            0,
            n,
            'maxSegments',
            function() {
              return this._maxSegments - 1;
            },
            function(t) {
              var e = t + 1;
              e !== this._maxSegments &&
                ((this._maxSegments = e),
                this._vertexBuffer && this._vertexBuffer.destroy(),
                this._initialize());
            }
          ),
          r(0, n, '_vertexBufferCount', function() {
            return 1;
          }),
          r(0, n, 'triangleCount', function() {
            var t = 0;
            return (
              this._firstActiveElement < this._firstFreeElement
                ? (t =
                    2 * (this._firstFreeElement - this._firstActiveElement) - 2)
                : ((t = 2 * (this.maxSegments - this._firstActiveElement) - 2),
                  (t += 2 * this._firstFreeElement - 2)),
              t
            );
          }),
          r(0, n, '_originalBoundingSphere', function() {
            return i.superGet(ti, this, '_originalBoundingSphere');
          }),
          r(0, n, '_originalBoundingBox', function() {
            return i.superGet(ti, this, '_originalBoundingBox');
          }),
          e
        );
      })(ti),
      Ri = (function(t) {
        function e(t, i, n, a, r, o, l, h) {
          (this._owner = null),
            (this._gridSize = NaN),
            (this.memorySize = 0),
            (this._numberVertices = 0),
            (this._maxNumberIndices = 0),
            (this._currentNumberIndices = 0),
            (this._numberTriangle = 0),
            (this._vertexBuffer = null),
            (this._indexBuffer = null),
            (this._boundingSphere = null),
            (this._boundingBox = null),
            (this._indexArrayBuffer = null),
            (this._boundingBoxCorners = null),
            (this._leafs = null),
            (this._leafNum = 0),
            (this._terrainHeightData = null),
            (this._terrainHeightDataWidth = 0),
            (this._terrainHeightDataHeight = 0),
            (this._chunkOffsetX = 0),
            (this._chunkOffsetZ = 0),
            (this._cameraCoordinateInverse = !1),
            (this._cameraPos = null),
            (this._currentLOD = 0),
            (this._perspectiveFactor = NaN),
            (this._LODTolerance = 0),
            e.__super.call(this),
            (this._owner = t),
            (this._cameraPos = new Re()),
            (this._chunkOffsetX = i),
            (this._chunkOffsetZ = n),
            (this._gridSize = a),
            (this._terrainHeightData = r),
            (this._terrainHeightDataWidth = o),
            (this._terrainHeightDataHeight = l),
            (this._leafNum =
              (Ge.CHUNK_GRID_NUM / Ge.LEAF_GRID_NUM) *
              (Ge.CHUNK_GRID_NUM / Ge.LEAF_GRID_NUM)),
            (this._leafs = s(this._leafNum)),
            (this._cameraCoordinateInverse = h);
          for (var c = 0; c < this._leafNum; c++) this._leafs[c] = new Ge();
          this.recreateResource();
        }
        a(e, 'laya.d3.terrain.TerrainFilter', t);
        var o = e.prototype;
        return (
          i.imps(o, { 'laya.d3.core.render.IRenderable': !0 }),
          (o._destroy = function() {
            t.prototype._destroy.call(this),
              (this._owner = null),
              this._vertexBuffer && this._vertexBuffer.destroy(),
              this._indexBuffer && this._indexBuffer.destroy();
          }),
          (o.recreateResource = function() {
            (this._currentNumberIndices = 0), (this._numberTriangle = 0);
            var t = Ge.LEAF_VERTEXT_COUNT,
              e = Ge.LEAF_MAX_INDEX_COUNT;
            (this._numberVertices = t * this._leafNum),
              (this._maxNumberIndices = e * this._leafNum),
              (this._indexArrayBuffer = new Uint16Array(
                this._maxNumberIndices
              ));
            var i = _e.vertexDeclaration,
              n = i.vertexStride / 4,
              a = new Float32Array(this._numberVertices * n),
              r = Ge.CHUNK_GRID_NUM / Ge.LEAF_GRID_NUM,
              s = 0,
              o = 0,
              l = 0;
            for (s = 0; s < this._leafNum; s++)
              (o = s % r),
                (l = Math.floor(s / r)),
                this._leafs[s].calcVertextBuffer(
                  this._chunkOffsetX,
                  this._chunkOffsetZ,
                  o * Ge.LEAF_GRID_NUM,
                  l * Ge.LEAF_GRID_NUM,
                  this._gridSize,
                  a,
                  s * Ge.LEAF_PLANE_VERTEXT_COUNT,
                  n,
                  this._terrainHeightData,
                  this._terrainHeightDataWidth,
                  this._terrainHeightDataHeight,
                  this._cameraCoordinateInverse
                );
            for (s = 0; s < this._leafNum; s++)
              (o = s % r),
                (l = Math.floor(s / r)),
                this._leafs[s].calcSkirtVertextBuffer(
                  this._chunkOffsetX,
                  this._chunkOffsetZ,
                  o * Ge.LEAF_GRID_NUM,
                  l * Ge.LEAF_GRID_NUM,
                  this._gridSize,
                  a,
                  this._leafNum * Ge.LEAF_PLANE_VERTEXT_COUNT +
                    s * Ge.LEAF_SKIRT_VERTEXT_COUNT,
                  n,
                  this._terrainHeightData,
                  this._terrainHeightDataWidth,
                  this._terrainHeightDataHeight
                );
            this.assembleIndexInit(),
              (this._vertexBuffer = new Yi(i, this._numberVertices, 35044, !1)),
              (this._indexBuffer = new qi(
                'ushort',
                this._maxNumberIndices,
                35044,
                !1
              )),
              this._vertexBuffer.setData(a),
              this._indexBuffer.setData(this._indexArrayBuffer),
              (this.memorySize =
                2 *
                (this._vertexBuffer._byteLength +
                  this._indexBuffer._byteLength)),
              this.calcOriginalBoudingBoxAndSphere();
          }),
          (o.setLODLevel = function(t) {
            if (4 != t.length) return !0;
            var e =
              ((t[0] + 1) << 24) +
              ((t[1] + 1) << 16) +
              ((t[2] + 1) << 8) +
              (t[3] + 1);
            return this._currentLOD != e && ((this._currentLOD = e), !0);
          }),
          (o.assembleIndexInit = function() {
            (this._currentNumberIndices = 0), (this._numberTriangle = 0);
            for (var t = 0, e = 0; e < this._leafNum; e++) {
              var i = Ge.getPlaneLODIndex(e, 0);
              this._indexArrayBuffer.set(i, t), (t += i.length);
              var n = Ge.getSkirtLODIndex(e, 0);
              this._indexArrayBuffer.set(n, t),
                (t += n.length),
                (this._currentNumberIndices += i.length + n.length);
            }
            this._numberTriangle = this._currentNumberIndices / 3;
          }),
          (o.isNeedAssemble = function(t, e) {
            var i =
              Math.min(t.viewport.width, t.viewport.height) /
              (2 * Math.tan((Math.PI * t.fieldOfView) / 180));
            return this._perspectiveFactor != i
              ? ((this._perspectiveFactor = i), 1)
              : this._LODTolerance != fn.LOD_TOLERANCE_VALUE
              ? ((this._LODTolerance = fn.LOD_TOLERANCE_VALUE), 1)
              : 0 == Re.equals(e, this._cameraPos)
              ? ((this._cameraPos.x = e.x),
                (this._cameraPos.y = e.y),
                (this._cameraPos.z = e.z),
                2)
              : 0;
          }),
          (o.assembleIndex = function(t, i) {
            var n = this.isNeedAssemble(t, i);
            if (n > 0) {
              for (var a = 0; a < this._leafNum; a++)
                e._TEMP_ARRAY_BUFFER[a] = this._leafs[a].determineLod(
                  i,
                  this._perspectiveFactor,
                  fn.LOD_TOLERANCE_VALUE,
                  1 == n
                );
              if (this.setLODLevel(e._TEMP_ARRAY_BUFFER)) {
                (this._currentNumberIndices = 0), (this._numberTriangle = 0);
                var r = 0;
                for (a = 0; a < this._leafNum; a++) {
                  var s = e._TEMP_ARRAY_BUFFER[a],
                    o = Ge.getPlaneLODIndex(a, s);
                  this._indexArrayBuffer.set(o, r), (r += o.length);
                  var l = Ge.getSkirtLODIndex(a, s);
                  this._indexArrayBuffer.set(l, r),
                    (r += l.length),
                    (this._currentNumberIndices += o.length + l.length);
                }
                return (
                  (this._numberTriangle = this._currentNumberIndices / 3), !0
                );
              }
            }
            return !1;
          }),
          (o.calcOriginalBoudingBoxAndSphere = function() {
            for (
              var t = new Ne(2147483647, -2147483647), e = 0;
              e < this._leafNum;
              e++
            )
              (t.x =
                this._leafs[e]._sizeOfY.x < t.x
                  ? this._leafs[e]._sizeOfY.x
                  : t.x),
                (t.y =
                  this._leafs[e]._sizeOfY.y > t.y
                    ? this._leafs[e]._sizeOfY.y
                    : t.y);
            var i = new Re(
                this._chunkOffsetX * Ge.CHUNK_GRID_NUM * this._gridSize,
                t.x,
                this._chunkOffsetZ * Ge.CHUNK_GRID_NUM * this._gridSize
              ),
              n = new Re(
                (this._chunkOffsetX + 1) * Ge.CHUNK_GRID_NUM * this._gridSize,
                t.y,
                (this._chunkOffsetZ + 1) * Ge.CHUNK_GRID_NUM * this._gridSize
              );
            Ge.__ADAPT_MATRIX__ &&
              (Re.transformV3ToV3(i, Ge.__ADAPT_MATRIX__, i),
              Re.transformV3ToV3(n, Ge.__ADAPT_MATRIX__, n)),
              (this._boundingBox = new be(i, n));
            var a = new Re();
            Re.subtract(n, i, a), Re.scale(a, 0.5, a);
            var r = new Re();
            Re.add(i, a, r),
              (this._boundingSphere = new xe(r, Re.scalarLength(a))),
              (this._boundingBoxCorners = s(8, null)),
              this._boundingBox.getCorners(this._boundingBoxCorners);
          }),
          (o.calcLeafBoudingBox = function(t) {
            for (var e = 0; e < this._leafNum; e++)
              this._leafs[e].calcLeafBoudingBox(t);
          }),
          (o.calcLeafBoudingSphere = function(t, e) {
            for (var i = 0; i < this._leafNum; i++)
              this._leafs[i].calcLeafBoudingSphere(t, e);
          }),
          (o._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), 0 == t ? this._vertexBuffer : null;
          }),
          (o._getIndexBuffer = function() {
            return this._indexBuffer;
          }),
          (o._beforeRender = function(t) {
            this._vertexBuffer._bind(), this._indexBuffer._bind();
            if (0 == t.renderElement._material.blend) {
              var e = t.camera;
              this.assembleIndex(e, e.position) &&
                this._indexBuffer.setData(this._indexArrayBuffer);
            }
            return !0;
          }),
          (o._getVertexBuffers = function() {
            return null;
          }),
          (o._render = function(t) {
            R.mainContext.drawElements(
              fn.RENDER_LINE_MODEL ? 1 : 4,
              this._currentNumberIndices,
              5123,
              0
            ),
              (L.trianglesFaces += this._numberTriangle),
              L.drawCall++;
          }),
          r(0, o, '_originalBoundingSphere', function() {
            return this._boundingSphere;
          }),
          r(0, o, '_originalBoundingBox', function() {
            return this._boundingBox;
          }),
          r(0, o, '_vertexBufferCount', function() {
            return this._numberVertices;
          }),
          r(0, o, 'triangleCount', function() {
            return this._numberTriangle;
          }),
          n(e, [
            '_TEMP_ARRAY_BUFFER',
            function() {
              return (this._TEMP_ARRAY_BUFFER = new Uint32Array(
                ((Ge.CHUNK_GRID_NUM / Ge.LEAF_GRID_NUM) * Ge.CHUNK_GRID_NUM) /
                  Ge.LEAF_GRID_NUM
              ));
            }
          ]),
          e
        );
      })(ti),
      Bi = (function(t) {
        function e(t) {
          (this._terrainSprite3DOwner = null),
            e.__super.call(this, t),
            (this._terrainSprite3DOwner = t);
        }
        a(e, 'laya.d3.terrain.TerrainRender', t);
        var i = e.prototype;
        return (
          (i._calculateBoundingSphere = function() {
            var t = this._terrainSprite3DOwner.terrainFilter;
            if (null == t) this._boundingSphere.toDefault();
            else {
              var e = t._originalBoundingSphere,
                i = NaN,
                n = this._terrainSprite3DOwner.transform,
                a = n.scale;
              (i = a.x >= a.y && a.x >= a.z ? a.x : a.y >= a.z ? a.y : a.z),
                Re.transformCoordinate(
                  e.center,
                  n.worldMatrix,
                  this._boundingSphere.center
                ),
                (this._boundingSphere.radius = e.radius * i),
                t.calcLeafBoudingSphere(n.worldMatrix, i);
            }
          }),
          (i._calculateBoundingBox = function() {
            var t = this._terrainSprite3DOwner.terrainFilter;
            if (null == t) this._boundingBox.toDefault();
            else {
              for (
                var e = this._terrainSprite3DOwner.transform.worldMatrix,
                  i = t._boundingBoxCorners,
                  n = 0;
                n < 8;
                n++
              )
                Re.transformCoordinate(i[n], e, ei._tempBoundBoxCorners[n]);
              be.createfromPoints(ei._tempBoundBoxCorners, this._boundingBox),
                t.calcLeafBoudingBox(e);
            }
          }),
          (i._renderUpdate = function(t) {
            this._setShaderValueMatrix4x4(0, this._owner.transform.worldMatrix);
            var e = this._owner.getProjectionViewWorldMatrix(t);
            return this._setShaderValueMatrix4x4(1, e), !0;
          }),
          (i._destroy = function() {
            t.prototype._destroy.call(this),
              (this._terrainSprite3DOwner = null);
          }),
          e
        );
      })(ei),
      ki = (function(t) {
        function e() {
          (this._time = 0),
            (this._enableLightCount = 3),
            (this._customRenderQueneIndex = 11),
            (this.enableLight = !0),
            e.__super.call(this),
            (this._renderState = new _t()),
            (this._lights = []),
            (this._quenes = []),
            (this._cameraPool = []),
            (this._renderableSprite3Ds = []),
            (this.__loaded = !0),
            (this._lightmaps = []),
            (this._shaderValues = new Fe()),
            (this.parallelSplitShadowMaps = []),
            (this._dynamicBatchManager = new xt()),
            (this._cullingRenders = []),
            (this._cullingRendersLength = 0),
            (this.enableFog = !1),
            (this.fogStart = 300),
            (this.fogRange = 1e3),
            (this.fogColor = new Re(0.7, 0.7, 0.7)),
            (this.ambientColor = new Re(0.212, 0.227, 0.259)),
            R.shaderHighPrecision &&
              this.addShaderDefine(ci.SHADERDEFINE_HIGHPRECISION),
            this.on('display', this, this._display),
            this.on('undisplay', this, this._unDisplay),
            (this._componentsMap = []),
            (this._typeComponentsIndices = []),
            (this._components = []);
        }
        a(e, 'laya.d3.core.scene.Scene', t);
        var n = e.prototype;
        return (
          i.imps(n, {
            'laya.webgl.submit.ISubmit': !0,
            'laya.resource.ICreateResource': !0
          }),
          (n._setUrl = function(t) {
            this._url = t;
          }),
          (n._getGroup = function() {
            return this._group;
          }),
          (n._setGroup = function(t) {
            this._group = t;
          }),
          (n._display = function() {
            i.stage._scenes.push(this), i.stage._scenes.sort(e._sortScenes);
            for (var t = 0, n = this._childs.length; t < n; t++) {
              var a = this._childs[t];
              a.active && a._activeHierarchy();
            }
          }),
          (n._unDisplay = function() {
            var t = i.stage._scenes;
            t.splice(t.indexOf(this), 1);
            for (var e = 0, n = this._childs.length; e < n; e++) {
              var a = this._childs[e];
              a.active && a._inActiveHierarchy();
            }
          }),
          (n._addChild3D = function(t) {
            t.transform._onWorldTransform(),
              t._setBelongScene(this),
              this.displayedInStage && t.active && t._activeHierarchy();
          }),
          (n._removeChild3D = function(t) {
            (t.transform.parent = null),
              this.displayedInStage && t.active && t._inActiveHierarchy(),
              t._setUnBelongScene();
          }),
          (n.initOctree = function(t, e, i, n, a) {
            void 0 === a && (a = 6),
              (this.treeSize = new Re(t, e, i)),
              (this.treeLevel = a),
              (this.treeRoot = new dt(this, 0)),
              this.treeRoot.init(n, this.treeSize);
          }),
          (n._prepareUpdateToRenderState = function(t, e) {
            (e.elapsedTime = this._lastCurrentTime
              ? this.timer.currTimer - this._lastCurrentTime
              : 0),
              (this._lastCurrentTime = this.timer.currTimer),
              (e.scene = this);
          }),
          (n._prepareSceneToRender = function(t) {
            var e = this._lights.length;
            if (e > 0)
              for (
                var i = 0, n = 0;
                n < e &&
                !(
                  this._lights[n]._prepareToScene(t) &&
                  ++i >= this._enableLightCount
                );
                n++
              );
          }),
          (n._updateChilds = function(t) {
            for (var e = 0, i = this._childs.length; e < i; ++e)
              this._childs[e]._update(t);
          }),
          (n._preRenderScene = function(t, e, i) {
            var n = e._viewMatrix,
              a = e._projectionMatrix,
              r = e._projectionViewMatrix,
              s = 0,
              o = 0,
              l = e.camera;
            for (
              l.useOcclusionCulling
                ? this.treeRoot
                  ? It.renderObjectCullingOctree(i, this, l, n, a, r)
                  : It.renderObjectCulling(i, this, l, n, a, r)
                : It.renderObjectCullingNoBoundFrustum(this, l, n, a, r),
                s = 0,
                o = this._quenes.length;
              s < o;
              s++
            )
              this._quenes[s] && this._quenes[s]._preRender(e);
          }),
          (n._clear = function(t, e) {
            var i = e._viewport,
              n = e.camera,
              a = i.x,
              r = n.renderTargetSize.height - i.y - i.height,
              s = i.width,
              o = i.height;
            t.viewport(a, r, s, o);
            var l = 256,
              h = n.renderTarget;
            switch (n.clearFlag) {
              case 0:
                var c = n.clearColor;
                if (c) {
                  t.enable(3089), t.scissor(a, r, s, o);
                  var u = c.elements;
                  t.clearColor(u[0], u[1], u[2], u[3]), (l |= 16384);
                }
                if (h)
                  switch ((c || (l = 16384), h.depthStencilFormat)) {
                    case 33189:
                      l |= 256;
                      break;
                    case 36168:
                      l |= 1024;
                      break;
                    case 34041:
                      (l |= 256), (l |= 1024);
                  }
                t.clear(l), c && t.disable(3089);
                break;
              case 1:
              case 2:
                if (h)
                  switch (((l = 16384), h.depthStencilFormat)) {
                    case 33189:
                      l |= 256;
                      break;
                    case 36168:
                      l |= 1024;
                      break;
                    case 34041:
                      (l |= 256), (l |= 1024);
                  }
                t.clear(l);
                break;
              case 3:
                break;
              default:
                throw new Error('BaseScene:camera clearFlag invalid.');
            }
          }),
          (n._renderScene = function(t, e) {
            var i,
              n = e.camera,
              a = 0,
              r = 0;
            for (a = 0; a < 2; a++)
              (i = this._quenes[a]) &&
                (n.renderTarget ? i._render(e, !0) : i._render(e, !1));
            if (1 === n.clearFlag) {
              var s = n.sky;
              s &&
                (B.setCullFace(t, !1),
                B.setDepthFunc(t, 515),
                B.setDepthMask(t, !1),
                s._render(e),
                B.setDepthFunc(t, 513),
                B.setDepthMask(t, !0));
            }
            for (a = 2, r = this._quenes.length; a < r; a++)
              (i = this._quenes[a]) &&
                (i._sortAlpha(e.camera.transform.position),
                n.renderTarget ? i._render(e, !0) : i._render(e, !1));
          }),
          (n._set3DRenderConfig = function(t) {
            t.disable(3042),
              (B._blend = !1),
              t.blendFunc(770, 771),
              (B._sFactor = 770),
              (B._dFactor = 771),
              t.disable(2929),
              (B._depthTest = !1),
              t.enable(2884),
              (B._cullFace = !0),
              t.depthMask(1),
              (B._depthMask = !0),
              t.frontFace(2304),
              (B._frontFace = 2304);
          }),
          (n._set2DRenderConfig = function(t) {
            B.setBlend(t, !0),
              B.setBlendFunc(t, 1, 771),
              B.setDepthTest(t, !1),
              B.setCullFace(t, !1),
              B.setDepthMask(t, !0),
              B.setFrontFace(t, 2305),
              t.viewport(0, 0, C.width, C.height);
          }),
          (n._parseCustomProps = function(t, e, i, n) {
            var a = n.customProps.lightmaps,
              r = a.length,
              s = this._lightmaps;
            s.length = r;
            for (var o = 0; o < r; o++)
              s[o] = v.getRes(e[a[o].replace('.exr', '.png')]);
            this.setlightmaps(s);
            var l = n.customProps.ambientColor;
            l && (this.ambientColor = new Re(l[0], l[1], l[2]));
            var h = n.customProps.fogColor;
            h && (this.fogColor = new Re(h[0], h[1], h[2]));
          }),
          (n._addLight = function(t) {
            this._lights.indexOf(t) < 0 && this._lights.push(t);
          }),
          (n._removeLight = function(t) {
            var e = this._lights.indexOf(t);
            e >= 0 && this._lights.splice(e, 1);
          }),
          (n._updateScene = function() {
            var t = this._renderState;
            this._prepareUpdateToRenderState(R.mainContext, t),
              this._updateComponents(t),
              this._updateChilds(t),
              this._lateUpdateComponents(t),
              (this._time += t.elapsedTime / 1e3),
              this._shaderValues.setValue(22, this._time);
          }),
          (n._updateSceneConch = function() {
            var t = this._renderState;
            this._prepareUpdateToRenderState(R.mainContext, t),
              this._updateComponents(t),
              this._lateUpdateComponents(t),
              this._prepareSceneToRender(t);
            for (var e = 0, i = this._cameraPool.length; e < i; e++) {
              var n = this._cameraPool[e];
              (t.camera = n), n._prepareCameraToRender();
            }
          }),
          (n._preRenderShadow = function(t, e, i, n, a) {
            this.treeRoot
              ? It.renderShadowObjectCullingOctree(this, e, i, n, a)
              : It.renderShadowObjectCulling(this, e, i, n, a);
            for (var r = 0, s = i.length; r < s; r++)
              i[r] && i[r]._preRender(t);
          }),
          (n._renderShadowMap = function(t, e, i) {
            var n = this.parallelSplitShadowMaps[0];
            n._calcAllLightCameraInfo(i);
            var a = n.PSSMNum;
            this._preRenderShadow(
              e,
              n._lightCulling,
              n._shadowQuenes,
              n._lightVPMatrix[0],
              a
            ),
              this.addShaderDefine(He.SHADERDEFINE_CAST_SHADOW);
            var r, s, o;
            if (a > 1)
              for (var l = 0; l < a; l++)
                (r = n.getRenderTarget(l + 1)),
                  n.beginRenderTarget(l + 1),
                  t.clearColor(1, 1, 1, 1),
                  t.clear(16640),
                  t.viewport(0, 0, r.width, r.height),
                  (e.camera = o = n.getLightCamera(l)),
                  o._prepareCameraToRender(),
                  o._prepareCameraViewProject(o.viewMatrix, o.projectionMatrix),
                  (e._projectionViewMatrix = n._lightVPMatrix[l + 1]),
                  (s = n._shadowQuenes[l])._preRender(e),
                  s._renderShadow(e, !1),
                  n.endRenderTarget(l + 1);
            else
              (r = n.getRenderTarget(1)),
                n.beginRenderTarget(1),
                t.clearColor(1, 1, 1, 1),
                t.clear(16640),
                t.viewport(0, 0, r.width, r.height),
                (e.camera = o = n.getLightCamera(0)),
                o._prepareCameraToRender(),
                o._prepareCameraViewProject(o.viewMatrix, o.projectionMatrix),
                (e._projectionViewMatrix = n._lightVPMatrix[0]),
                (s = n._shadowQuenes[0])._preRender(e),
                s._renderShadow(e, !0),
                n.endRenderTarget(1);
            this.removeShaderDefine(He.SHADERDEFINE_CAST_SHADOW);
          }),
          (n.addTreeNode = function(t) {
            this.treeRoot.addTreeNode(t);
          }),
          (n.removeTreeNode = function(t) {
            this.treeSize && t._treeNode && t._treeNode.removeObject(t);
          }),
          (n.setlightmaps = function(t) {
            this._lightmaps = t;
            for (var e = 0, i = this._renderableSprite3Ds.length; e < i; e++)
              this._renderableSprite3Ds[e]._render._applyLightMapParams();
          }),
          (n.getlightmaps = function() {
            return this._lightmaps;
          }),
          (n.addChildAt = function(t, e) {
            if (!(t instanceof laya.d3.core.Sprite3D))
              throw new Error('Sprite3D:Node type must Sprite3D.');
            if (!t || this.destroyed || t === this) return t;
            if (
              (t.zOrder && this._set$P('hasZorder', !0),
              e >= 0 && e <= this._childs.length)
            ) {
              if (t._parent === this) {
                var i = this.getChildIndex(t);
                this._childs.splice(i, 1),
                  this._childs.splice(e, 0, t),
                  this.conchModel &&
                    (this.conchModel.removeChild(t.conchModel),
                    this.conchModel.addChildAt(t.conchModel, e)),
                  this._childChanged();
              } else
                t.parent && t.parent.removeChild(t),
                  this._childs === x.ARRAY_EMPTY && (this._childs = []),
                  this._childs.splice(e, 0, t),
                  this.conchModel &&
                    this.conchModel.addChildAt(t.conchModel, e),
                  (t.parent = this),
                  this._addChild3D(t);
              return t;
            }
            throw new Error('appendChildAt:The index is out of bounds');
          }),
          (n.addChild = function(t) {
            if (!(t instanceof laya.d3.core.Sprite3D))
              throw new Error('Sprite3D:Node type must Sprite3D.');
            if (!t || this.destroyed || t === this) return t;
            if (
              (t.zOrder && this._set$P('hasZorder', !0), t._parent === this)
            ) {
              var e = this.getChildIndex(t);
              e !== this._childs.length - 1 &&
                (this._childs.splice(e, 1),
                this._childs.push(t),
                this.conchModel &&
                  (this.conchModel.removeChild(t.conchModel),
                  this.conchModel.addChildAt(
                    t.conchModel,
                    this._childs.length - 1
                  )),
                this._childChanged());
            } else
              t.parent && t.parent.removeChild(t),
                this._childs === x.ARRAY_EMPTY && (this._childs = []),
                this._childs.push(t),
                this.conchModel &&
                  this.conchModel.addChildAt(
                    t.conchModel,
                    this._childs.length - 1
                  ),
                (t.parent = this),
                this._childChanged(),
                this._addChild3D(t);
            return t;
          }),
          (n.removeChildAt = function(t) {
            var e = this.getChildAt(t);
            return (
              e &&
                (this._removeChild3D(e),
                this._childs.splice(t, 1),
                this.conchModel && this.conchModel.removeChild(e.conchModel),
                (e.parent = null)),
              e
            );
          }),
          (n.removeChildren = function(t, e) {
            if (
              (void 0 === t && (t = 0),
              void 0 === e && (e = 2147483647),
              this._childs && this._childs.length > 0)
            ) {
              var i = this._childs;
              if (0 === t && e >= r) {
                var n = i;
                this._childs = x.ARRAY_EMPTY;
              } else n = i.splice(t, e - t);
              for (var a = 0, r = n.length; a < r; a++)
                this._removeChild3D(n[a]),
                  (n[a].parent = null),
                  this.conchModel &&
                    this.conchModel.removeChild(n[a].conchModel);
            }
            return this;
          }),
          (n.addFrustumCullingObject = function(t) {
            this.treeRoot
              ? this.addTreeNode(t)
              : (this._cullingRendersLength === this._cullingRenders.length
                  ? this._cullingRenders.push(t)
                  : (this._cullingRenders[this._cullingRendersLength] = t),
                (t._indexInSceneFrustumCullingObjects = this
                  ._cullingRendersLength++));
          }),
          (n.removeFrustumCullingObject = function(t) {
            if (this.treeRoot) this.removeTreeNode(t);
            else {
              this._cullingRendersLength--;
              var e = t._indexInSceneFrustumCullingObjects;
              if (e !== this._cullingRendersLength) {
                var i = this._cullingRenders[this._cullingRendersLength];
                (this._cullingRenders[e] = i),
                  (i._indexInSceneFrustumCullingObjects = e),
                  (t._indexInSceneFrustumCullingObjects = -1);
              }
            }
          }),
          (n.getRenderQueue = function(t) {
            return t < 3e3
              ? this._quenes[1] || (this._quenes[1] = new ut(this))
              : this._quenes[2] || (this._quenes[2] = new ut(this));
          }),
          (n.addRenderQuene = function() {
            this._quenes[this._customRenderQueneIndex++] = new ut(this);
          }),
          (n.addShaderDefine = function(t) {
            this._shaderDefineValue |= t;
          }),
          (n.removeShaderDefine = function(t) {
            this._shaderDefineValue &= ~t;
          }),
          (n.addScript = function(t) {
            return this._addComponent(t);
          }),
          (n.getScriptByType = function(t, e) {
            return void 0 === e && (e = 0), this._getComponentByType(t, e);
          }),
          (n.getScriptsByType = function(t, e) {
            this._getComponentsByType(t, e);
          }),
          (n.getScriptByIndex = function(t) {
            return this._getComponentByIndex(t);
          }),
          (n.removeScriptByType = function(t, e) {
            void 0 === e && (e = 0), this._removeComponentByType(t, e);
          }),
          (n.removeScriptsByType = function(t) {
            this._removeComponentByType(t);
          }),
          (n.removeAllScript = function() {
            this._removeAllComponent();
          }),
          (n.render = function(t, e, i) {
            (I._context.ctx._renderKey = 0),
              this._childs.length > 0 && t.addRenderObject(this);
          }),
          (n.renderSubmit = function() {
            var t = R.mainContext,
              e = this._renderState;
            this._set3DRenderConfig(t),
              this._prepareSceneToRender(this._renderState);
            var i,
              n = 0,
              a = 0;
            if (Ze.debugMode || dt.debugMode)
              for (n = 0, a = this._cameraPool.length; n < a; n++)
                (i = this._cameraPool[n]),
                  Ze._debugPhasorSprite.begin(1, i),
                  i.activeInHierarchy && i._renderCamera(t, e, this),
                  Ze._debugPhasorSprite.end();
            else
              for (n = 0, a = this._cameraPool.length; n < a; n++)
                (i = this._cameraPool[n]).activeInHierarchy &&
                  i._renderCamera(t, e, this);
            return this._set2DRenderConfig(t), 1;
          }),
          (n.onAsynLoaded = function(t, e, i) {
            var n = e[0];
            if ('Scene' !== n.type)
              throw new Error(
                'Scene: the .lh file root type must be Scene,please use other function to  load  this file.'
              );
            var a = e[1];
            Ke._createNodeByJson(this, n, this, a),
              this.event('hierarchyloaded', [this]),
              (this.__loaded = !0);
          }),
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              this.destroyed ||
                (t.prototype.destroy.call(this, e),
                (this._renderState = null),
                (this._lights = null),
                (this._lightmaps = null),
                (this._renderTargetTexture = null),
                (this._shaderValues = null),
                (this._cullingRenders = null),
                (this._dynamicBatchManager = null),
                (this._quenes = null),
                (this._cameraPool = null),
                (this._renderableSprite3Ds = null),
                (this.treeRoot = null),
                (this.treeSize = null),
                (this.parallelSplitShadowMaps = null),
                (this._typeComponentsIndices = null),
                (this._components = null),
                v.clearRes(this.url),
                this.loaded || Ze._cancelLoadByUrl(this.url));
          }),
          (n.getRenderType = function() {
            return 0;
          }),
          (n.releaseRender = function() {}),
          (n._addComponent = function(t) {
            var e,
              i = this._componentsMap.indexOf(t);
            if (-1 === i)
              (e = []),
                this._componentsMap.push(t),
                this._typeComponentsIndices.push(e);
            else if (
              ((e = this._typeComponentsIndices[i]),
              this._components[e[0]].isSingleton)
            )
              throw new Error(
                '无法单实例创建' + t + '组件，' + t + '组件已存在！'
              );
            var n = p.getInstance(t);
            e.push(this._components.length), this._components.push(n);
            return n._initialize(this), n;
          }),
          (n._removeComponent = function(t, e) {
            var i = this._typeComponentsIndices[t],
              n = i[e],
              a = this._components[n];
            this._components.splice(n, 1),
              i.splice(e, 1),
              0 === i.length &&
                (this._typeComponentsIndices.splice(t, 1),
                this._componentsMap.splice(t, 1));
            for (var r = 0, s = this._componentsMap.length; r < s; r++)
              for (
                var o = (i = this._typeComponentsIndices[r]).length - 1;
                o >= 0;
                o--
              ) {
                var l = i[o];
                if (!(l > n)) break;
                i[o] = --l;
              }
            a._destroy();
          }),
          (n._getComponentByType = function(t, e) {
            void 0 === e && (e = 0);
            var i = this._componentsMap.indexOf(t);
            return -1 === i
              ? null
              : this._components[this._typeComponentsIndices[i][e]];
          }),
          (n._getComponentsByType = function(t, e) {
            var i = this._componentsMap.indexOf(t);
            if (-1 !== i) {
              var n = this._typeComponentsIndices[i],
                a = n.length;
              e.length = a;
              for (var r = 0; r < a; r++) e[r] = this._components[n[r]];
            } else e.length = 0;
          }),
          (n._getComponentByIndex = function(t) {
            return this._components[t];
          }),
          (n._removeComponentByType = function(t, e) {
            void 0 === e && (e = 0);
            var i = this._componentsMap.indexOf(t);
            -1 !== i && this._removeComponent(i, e);
          }),
          (n._removeComponentsByType = function(t) {
            var e = this._componentsMap.indexOf(t);
            if (-1 !== e)
              for (
                var i = this._typeComponentsIndices[e], n = 0, a = i.length;
                n < a;
                i.length < a ? a-- : n++
              )
                this._removeComponent(e, n);
          }),
          (n._removeAllComponent = function() {
            for (
              var t = 0, e = this._componentsMap.length;
              t < e;
              this._componentsMap.length < e ? e-- : t++
            )
              this._removeComponentsByType(this._componentsMap[t]);
          }),
          (n._updateComponents = function(t) {
            for (var e = 0, i = this._components.length; e < i; e++) {
              var n = this._components[e];
              !n.started && (n._start(t), (n.started = !0)),
                n.enable && n._update(t);
            }
          }),
          (n._lateUpdateComponents = function(t) {
            for (var e = 0; e < this._components.length; e++) {
              var i = this._components[e];
              !i.started && (i._start(t), (i.started = !0)),
                i.enable && i._lateUpdate(t);
            }
          }),
          (n._preRenderUpdateComponents = function(t) {
            for (var e = 0; e < this._components.length; e++) {
              var i = this._components[e];
              !i.started && (i._start(t), (i.started = !0)),
                i.enable && i._preRenderUpdate(t);
            }
          }),
          (n._postRenderUpdateComponents = function(t) {
            for (var e = 0; e < this._components.length; e++) {
              var i = this._components[e];
              !i.started && (i._start(t), (i.started = !0)),
                i.enable && i._postRenderUpdate(t);
            }
          }),
          r(0, n, '_loaded', null, function(t) {
            this.__loaded = t;
          }),
          r(
            0,
            n,
            'fogColor',
            function() {
              return this._fogColor;
            },
            function(t) {
              (this._fogColor = t), this._shaderValues.setValue(0, t.elements);
            }
          ),
          r(
            0,
            n,
            'enableFog',
            function() {
              return this._enableFog;
            },
            function(t) {
              this._enableFog !== t &&
                ((this._enableFog = t),
                t
                  ? (this.addShaderDefine(ci.SHADERDEFINE_FOG),
                    this.removeShaderDefine(ci.SAHDERDEFINE_DEPTHFOG))
                  : this.removeShaderDefine(ci.SHADERDEFINE_FOG));
            }
          ),
          r(0, n, 'url', function() {
            return this._url;
          }),
          r(0, n, 'loaded', function() {
            return this.__loaded;
          }),
          r(
            0,
            n,
            'enableDepthFog',
            function() {
              return this._enableDepthFog;
            },
            function(t) {
              this._enableDepthFog != t &&
                ((this._enableDepthFog = t),
                t
                  ? (this.addShaderDefine(ci.SAHDERDEFINE_DEPTHFOG),
                    this.removeShaderDefine(ci.SHADERDEFINE_FOG))
                  : this.removeShaderDefine(ci.SAHDERDEFINE_DEPTHFOG));
            }
          ),
          r(
            0,
            n,
            'fogStart',
            function() {
              return this._fogStart;
            },
            function(t) {
              (this._fogStart = t), this._shaderValues.setValue(1, t);
            }
          ),
          r(
            0,
            n,
            'fogRange',
            function() {
              return this._fogRange;
            },
            function(t) {
              (this._fogRange = t), this._shaderValues.setValue(2, t);
            }
          ),
          r(
            0,
            n,
            'ambientColor',
            function() {
              return this._ambientColor;
            },
            function(t) {
              (this._ambientColor = t),
                this._shaderValues.setValue(21, t.elements);
            }
          ),
          r(0, n, 'scene', function() {
            return this;
          }),
          r(0, n, 'renderableSprite3Ds', function() {
            return this._renderableSprite3Ds.slice();
          }),
          (e._sortScenes = function(t, n) {
            if (t.parent === i.stage && n.parent === i.stage) {
              var a = i.stage._childs;
              return a.indexOf(t) - a.indexOf(n);
            }
            return t.parent !== i.stage && n.parent !== i.stage
              ? e._sortScenes(t.parent, n.parent)
              : t.parent === i.stage
              ? -1
              : 1;
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.FOGCOLOR = 0),
          (e.FOGSTART = 1),
          (e.FOGRANGE = 2),
          (e.LIGHTDIRECTION = 3),
          (e.LIGHTDIRCOLOR = 4),
          (e.POINTLIGHTPOS = 5),
          (e.POINTLIGHTRANGE = 6),
          (e.POINTLIGHTATTENUATION = 7),
          (e.POINTLIGHTCOLOR = 8),
          (e.SPOTLIGHTPOS = 9),
          (e.SPOTLIGHTDIRECTION = 10),
          (e.SPOTLIGHTSPOT = 11),
          (e.SPOTLIGHTRANGE = 12),
          (e.SPOTLIGHTATTENUATION = 13),
          (e.SPOTLIGHTCOLOR = 14),
          (e.SHADOWDISTANCE = 15),
          (e.SHADOWLIGHTVIEWPROJECT = 16),
          (e.SHADOWMAPPCFOFFSET = 17),
          (e.SHADOWMAPTEXTURE1 = 18),
          (e.SHADOWMAPTEXTURE2 = 19),
          (e.SHADOWMAPTEXTURE3 = 20),
          (e.AMBIENTCOLOR = 21),
          (e.TIME = 22),
          e
        );
      })(E),
      Pi = (function(t) {
        function e(t) {
          e.__super.call(this),
            (this.__loaded = !0),
            (this._projectionViewWorldUpdateLoopCount = -1),
            (this._activeInHierarchy = !1),
            (this._projectionViewWorldMatrix = new Te()),
            (this._shaderValues = new Fe()),
            (this._colliders = []),
            (this._id = ++e._uniqueIDCounter),
            (this._transform = new ii(this)),
            (this.name = t || 'Sprite3D-' + e._nameNumberCounter++),
            (this.layer = z.currentCreationLayer),
            (this.active = !0);
        }
        a(e, 'laya.d3.core.Sprite3D', di);
        var n = e.prototype;
        return (
          i.imps(n, {
            'laya.d3.core.render.IUpdate': !0,
            'laya.resource.ICreateResource': !0,
            'laya.d3.core.IClone': !0
          }),
          (n._setUrl = function(t) {
            this._url = t;
          }),
          (n._getGroup = function() {
            return this._group;
          }),
          (n._setGroup = function(t) {
            this._group = t;
          }),
          (n._addChild3D = function(t) {
            (t.transform.parent = this.transform),
              this._hierarchyAnimator &&
                (!t._hierarchyAnimator &&
                  t._setHierarchyAnimator(this._hierarchyAnimator, null),
                this._getAnimatorToLinkSprite3D(t, !0, [t.name])),
              this._scene &&
                (t._setBelongScene(this._scene),
                this._activeInHierarchy && t._active && t._activeHierarchy());
          }),
          (n._removeChild3D = function(t) {
            (t.transform.parent = null),
              this._scene &&
                (this._activeInHierarchy && t._active && t._inActiveHierarchy(),
                t._setUnBelongScene()),
              this._hierarchyAnimator &&
                (t._hierarchyAnimator == this._hierarchyAnimator &&
                  t._clearHierarchyAnimator(this._hierarchyAnimator, null),
                this._getAnimatorToLinkSprite3D(t, !1, [t.name]));
          }),
          (n._parseBaseCustomProps = function(t) {
            var e = this.transform.localPosition;
            e.fromArray(t.translate), (this.transform.localPosition = e);
            var i = this.transform.localRotation;
            i.fromArray(t.rotation), (this.transform.localRotation = i);
            var n = this.transform.localScale;
            n.fromArray(t.scale), (this.transform.localScale = n);
            var a = t.layer;
            null != a && (this.layer = z.getLayerByNumber(a));
          }),
          (n._parseCustomComponent = function(t, e, i) {
            for (var n in i) {
              var a = i[n];
              switch (n) {
                case 'Animator':
                  var r = this.addComponent(xi);
                  if (a.avatarPath) r.avatar = v.getRes(e[a.avatarPath]);
                  else {
                    var s = a.avatar;
                    if (s) {
                      r.avatar = v.getRes(e[s.path]);
                      var o = s.linkSprites;
                      o &&
                        t.once(
                          'hierarchyloaded',
                          this,
                          this._onRootNodeHierarchyLoaded,
                          [r, o]
                        );
                    }
                  }
                  for (var l = a.clipPaths, h = l.length, c = 0; c < h; c++)
                    r.addClip(v.getRes(e[l[c]]));
                  r.clip = v.getRes(e[l[0]]);
                  var u = a.playOnWake;
                  void 0 !== u && (r.playOnWake = u);
                  break;
                case 'Rigidbody':
                  this.addComponent(Ci);
                  break;
                case 'SphereCollider':
                  var _ = this.addComponent(tn);
                  _.isTrigger = a.isTrigger;
                  var d = _.center;
                  d.fromArray(a.center), (_.center = d), (_.radius = a.radius);
                  break;
                case 'BoxCollider':
                  var f = this.addComponent(Qi);
                  (f.isTrigger = a.isTrigger), f.center.fromArray(a.center);
                  var p = f.size;
                  p.fromArray(a.size), (f.size = p);
                  break;
                case 'MeshCollider':
                  this.addComponent($i);
              }
            }
          }),
          (n._onRootNodeHierarchyLoaded = function(t, e) {
            for (var i in e) {
              for (var n = this, a = e[i], r = 0, s = a.length; r < s; r++) {
                var o = a[r];
                if ('' === o) break;
                if (!(n = n.getChildByName(o))) break;
              }
              n && t.linkSprite3DToAvatarNode(i, n);
            }
          }),
          (n._setHierarchyAnimator = function(t, e) {
            this._changeHierarchyAnimator(t);
            for (var i = 0, n = this._childs.length; i < n; i++) {
              var a = this._childs[i];
              a._hierarchyAnimator == e && a._setHierarchyAnimator(t, e);
            }
          }),
          (n._clearHierarchyAnimator = function(t, e) {
            this._changeHierarchyAnimator(e);
            for (var i = 0, n = this._childs.length; i < n; i++) {
              var a = this._childs[i];
              a._hierarchyAnimator == t && a._clearHierarchyAnimator(t, e);
            }
          }),
          (n._getAnimatorToLinkSprite3D = function(t, e, i) {
            var n = this.getComponentByType(xi);
            if (
              (n &&
                (n.avatar
                  ? n.avatar._version || t._setAnimatorToLinkAvatar(n, e)
                  : t._setAnimatorToLinkSprite3DNoAvatar(n, e, i)),
              this._parent && this._parent instanceof laya.d3.core.Sprite3D)
            ) {
              i.unshift(this._parent.name);
              var a = this._parent;
              a._hierarchyAnimator && a._getAnimatorToLinkSprite3D(t, e, i);
            }
          }),
          (n._setAnimatorToLinkSprite3DNoAvatar = function(t, e, i) {
            var n = 0,
              a = 0;
            for (n = 0, a = t.getClipCount(); n < a; n++)
              t._handleSpriteOwnersBySprite(n, e, i, this);
            for (n = 0, a = this._childs.length; n < a; n++) {
              var r = this._childs[n],
                s = i.length;
              i.push(r.name),
                r._setAnimatorToLinkSprite3DNoAvatar(t, e, i),
                i.splice(s, 1);
            }
          }),
          (n._changeHierarchyAnimator = function(t) {
            this._hierarchyAnimator = t;
          }),
          (n._isLinkSpriteToAnimationNode = function(t, e, i) {
            var n = t._avatarNodes.indexOf(e),
              a = t._cacheSpriteToNodesMap;
            if (i)
              (this._transform.dummy = e.transform),
                (t._cacheNodesToSpriteMap[n] = a.length),
                a.push(n);
            else {
              this._transform.dummy = null;
              var r = t._cacheNodesToSpriteMap[n];
              (t._cacheNodesToSpriteMap[n] = null), a.splice(r, 1);
            }
          }),
          (n._setBelongScene = function(t) {
            this._scene = t;
            for (var e = 0, i = this._childs.length; e < i; e++)
              this._childs[e]._setBelongScene(t);
          }),
          (n._setUnBelongScene = function() {
            this._scene = null;
            for (var t = 0, e = this._childs.length; t < e; t++)
              this._childs[t]._setUnBelongScene();
          }),
          (n._activeHierarchy = function() {
            var t = 0,
              e = 0;
            for (
              this._activeInHierarchy = !0,
                this._addSelfRenderObjects(),
                t = 0,
                e = this._colliders.length;
              t < e;
              t++
            )
              this._layer._addCollider(this._colliders[t]);
            for (
              this.event('activeinhierarchychanged', !0),
                t = 0,
                e = this._childs.length;
              t < e;
              t++
            ) {
              var i = this._childs[t];
              i._active && i._activeHierarchy();
            }
          }),
          (n._inActiveHierarchy = function() {
            var t = 0,
              e = 0;
            for (
              this._activeInHierarchy = !1,
                this._clearSelfRenderObjects(),
                t = 0,
                e = this._colliders.length;
              t < e;
              t++
            ) {
              var i = this._colliders[t];
              i._clearCollsionMap(), this._layer._removeCollider(i);
            }
            for (
              this.event('activeinhierarchychanged', !1),
                t = 0,
                e = this._childs.length;
              t < e;
              t++
            ) {
              var n = this._childs[t];
              n._active && n._inActiveHierarchy();
            }
          }),
          (n.addComponent = function(t) {
            var e,
              i = this._componentsMap.indexOf(t);
            if (-1 === i)
              (e = []),
                this._componentsMap.push(t),
                this._typeComponentsIndices.push(e);
            else if (
              ((e = this._typeComponentsIndices[i]),
              this._components[e[0]].isSingleton)
            )
              throw new Error(
                '无法单实例创建' + t + '组件，' + t + '组件已存在！'
              );
            var n = p.getInstance(t);
            if (
              (e.push(this._components.length),
              this._components.push(n),
              n instanceof laya.d3.component.physics.Collider)
            ) {
              this.getComponentByType(Ci) && (n._isRigidbody = !0),
                this._activeInHierarchy && this._layer._addCollider(n),
                this._colliders.push(n);
            } else if (n instanceof laya.d3.component.Animator) {
              var a = n;
              this._setHierarchyAnimator(
                a,
                this._parent ? this._parent._hierarchyAnimator : null
              ),
                this._setAnimatorToLinkSprite3DNoAvatar(a, !0, []);
            } else if (n instanceof laya.d3.component.Rigidbody)
              for (var r = 0, s = this._colliders.length; r < s; r++)
                this._colliders[r]._setIsRigidbody(!0);
            return (
              n instanceof laya.d3.component.Script && this._scripts.push(n),
              n._initialize(this),
              n
            );
          }),
          (n._removeComponent = function(t, e) {
            var i = 0,
              n = 0,
              a = this._typeComponentsIndices[t],
              r = a[e],
              s = this._components[r];
            if (s instanceof laya.d3.component.physics.Collider) {
              var o = s;
              this._activeInHierarchy && this._layer._removeCollider(o),
                this._colliders.splice(this._colliders.indexOf(o), 1);
            } else if (s instanceof laya.d3.component.Animator) {
              var l = s;
              this._clearHierarchyAnimator(
                l,
                this._parent ? this._parent._hierarchyAnimator : null
              );
            } else if (s instanceof laya.d3.component.Rigidbody)
              for (i = 0, n = this._colliders.length; i < n; i++) {
                var h = this._colliders[i];
                h._setIsRigidbody(!1);
                var c = h._runtimeCollisonMap,
                  u = h._runtimeCollisonTestMap;
                for (var _ in c) delete u[_];
              }
            for (
              this._components.splice(r, 1),
                s instanceof laya.d3.component.Script &&
                  this._scripts.splice(this._scripts.indexOf(s), 1),
                a.splice(e, 1),
                0 === a.length &&
                  (this._typeComponentsIndices.splice(t, 1),
                  this._componentsMap.splice(t, 1)),
                i = 0,
                n = this._componentsMap.length;
              i < n;
              i++
            )
              for (
                var d = (a = this._typeComponentsIndices[i]).length - 1;
                d >= 0;
                d--
              ) {
                var f = a[d];
                if (!(f > r)) break;
                a[d] = --f;
              }
            s._destroy();
          }),
          (n._clearSelfRenderObjects = function() {}),
          (n._addSelfRenderObjects = function() {}),
          (n._parseCustomProps = function(t, e, i, n) {}),
          (n._updateChilds = function(t) {
            var e = this._childs.length;
            if (0 !== e) for (var i = 0; i < e; ++i) this._childs[i]._update(t);
          }),
          (n._getSortID = function(t, e) {
            return 1e3 * e.id + t._getVertexBuffer().vertexDeclaration.id;
          }),
          (n._update = function(t) {
            (t.owner = this),
              this._activeInHierarchy &&
                (this._updateComponents(t),
                this._lateUpdateComponents(t),
                L.spriteCount++,
                this._childs.length && this._updateChilds(t));
          }),
          (n.getProjectionViewWorldMatrix = function(t) {
            return (
              Te.multiply(
                t,
                this.transform.worldMatrix,
                this._projectionViewWorldMatrix
              ),
              this._projectionViewWorldMatrix
            );
          }),
          (n.loadHierarchy = function(t) {
            this.addChild(laya.d3.core.Sprite3D.load(t));
          }),
          (n.addChildAt = function(t, e) {
            if (!(t instanceof laya.d3.core.Sprite3D))
              throw new Error('Sprite3D:Node type must Sprite3D.');
            if (!t || this.destroyed || t === this) return t;
            if (
              (t.zOrder && this._set$P('hasZorder', !0),
              e >= 0 && e <= this._childs.length)
            ) {
              if (t._parent === this) {
                var i = this.getChildIndex(t);
                this._childs.splice(i, 1),
                  this._childs.splice(e, 0, t),
                  this.conchModel &&
                    (this.conchModel.removeChild(t.conchModel),
                    this.conchModel.addChildAt(t.conchModel, e)),
                  this._childChanged();
              } else
                t.parent && t.parent.removeChild(t),
                  this._childs === x.ARRAY_EMPTY && (this._childs = []),
                  this._childs.splice(e, 0, t),
                  this.conchModel &&
                    this.conchModel.addChildAt(t.conchModel, e),
                  (t.parent = this),
                  this._addChild3D(t);
              return t;
            }
            throw new Error('appendChildAt:The index is out of bounds');
          }),
          (n.addChild = function(t) {
            if (!(t instanceof laya.d3.core.Sprite3D))
              throw new Error('Sprite3D:Node type must Sprite3D.');
            if (!t || this.destroyed || t === this) return t;
            if (
              (t.zOrder && this._set$P('hasZorder', !0), t._parent === this)
            ) {
              var e = this.getChildIndex(t);
              e !== this._childs.length - 1 &&
                (this._childs.splice(e, 1),
                this._childs.push(t),
                this.conchModel &&
                  (this.conchModel.removeChild(t.conchModel),
                  this.conchModel.addChildAt(
                    t.conchModel,
                    this._childs.length - 1
                  )),
                this._childChanged());
            } else
              t.parent && t.parent.removeChild(t),
                this._childs === x.ARRAY_EMPTY && (this._childs = []),
                this._childs.push(t),
                this.conchModel &&
                  this.conchModel.addChildAt(
                    t.conchModel,
                    this._childs.length - 1
                  ),
                (t.parent = this),
                this._childChanged(),
                this._addChild3D(t);
            return t;
          }),
          (n.removeChildAt = function(t) {
            var e = this.getChildAt(t);
            return (
              e &&
                (this._removeChild3D(e),
                this._childs.splice(t, 1),
                this.conchModel && this.conchModel.removeChild(e.conchModel),
                (e.parent = null)),
              e
            );
          }),
          (n.removeChildren = function(t, e) {
            if (
              (void 0 === t && (t = 0),
              void 0 === e && (e = 2147483647),
              this._childs && this._childs.length > 0)
            ) {
              var i = this._childs;
              if (0 === t && e >= r) {
                var n = i;
                this._childs = x.ARRAY_EMPTY;
              } else n = i.splice(t, e - t);
              for (var a = 0, r = n.length; a < r; a++)
                this._removeChild3D(n[a]),
                  (n[a].parent = null),
                  this.conchModel &&
                    this.conchModel.removeChild(n[a].conchModel);
            }
            return this;
          }),
          (n.onAsynLoaded = function(t, e, i) {
            var n = e[0];
            if ('Sprite3D' !== n.type)
              throw new Error(
                'Sprite3D: The .lh file root type must be Sprite3D,please use other function to  load  this file.'
              );
            var a = e[1];
            Ke._createNodeByJson(this, n, this, a),
              this.event('hierarchyloaded', [this]),
              (this.__loaded = !0);
          }),
          (n.cloneTo = function(t) {
            if (this.destroyed)
              throw new Error(
                "Sprite3D: Can't be cloned if the Sprite3D has destroyed."
              );
            var e = t;
            (e.name = this.name),
              (e._destroyed = this._destroyed),
              (e.timer = this.timer),
              (e._$P = this._$P),
              (e.active = this._active);
            var i = e.transform.localPosition;
            this.transform.localPosition.cloneTo(i),
              (e.transform.localPosition = i);
            var n = e.transform.localRotation;
            this.transform.localRotation.cloneTo(n),
              (e.transform.localRotation = n);
            var a = e.transform.localScale;
            this.transform.localScale.cloneTo(a),
              (e.transform.localScale = a),
              (e.isStatic = this.isStatic);
            var r = 0,
              s = 0;
            for (r = 0, s = this._componentsMap.length; r < s; r++) {
              var o = e.addComponent(this._componentsMap[r]);
              this._components[r]._cloneTo(o);
            }
            for (r = 0, s = this._childs.length; r < s; r++)
              e.addChild(this._childs[r].clone());
            var l = e.getComponentByType(xi);
            if (l) {
              var h = l._linkSpritesData;
              if (h)
                for (var c in h) {
                  for (
                    var u = h[c], _ = e, d = 0, f = u.length;
                    d < f && (_ = _.getChildByName(u[d]));
                    d++
                  );
                  if (_) {
                    var p = l._avatarNodeMap[c];
                    _._isLinkSpriteToAnimationNode(l, p, !0);
                  }
                }
            }
          }),
          (n.clone = function() {
            var t = new this.constructor();
            return this.cloneTo(t), t;
          }),
          (n.destroy = function(t) {
            if ((void 0 === t && (t = !0), !this.destroyed)) {
              laya.display.Node.prototype.destroy.call(this, t);
              var e = 0,
                i = 0;
              for (e = 0, i = this._components.length; e < i; e++)
                this._components[e]._destroy();
              (this._components = null),
                (this._componentsMap = null),
                (this._typeComponentsIndices = null),
                (this._transform = null),
                (this._colliders = null),
                v.clearRes(this.url),
                this.loaded || Ze._cancelLoadByUrl(this.url);
            }
          }),
          (n._handleSpriteToAvatar = function(t, e) {
            t._avatarNodes;
            var i = t._avatarNodeMap[this.name];
            i &&
              i.name === this.name &&
              !this._transform.dummy &&
              this._isLinkSpriteToAnimationNode(t, i, e);
          }),
          (n._setAnimatorToLinkAvatar = function(t, e) {
            this._handleSpriteToAvatar(t, e);
            for (var i = 0, n = this._childs.length; i < n; i++) {
              this._childs[i]._setAnimatorToLinkAvatar(t, e);
            }
          }),
          r(0, n, 'activeInHierarchy', function() {
            return this._activeInHierarchy;
          }),
          r(0, n, '_loaded', null, function(t) {
            this.__loaded = t;
          }),
          r(
            0,
            n,
            'active',
            function() {
              return this._active;
            },
            function(t) {
              this._active !== t &&
                ((this._active = t),
                this._parent &&
                  ((this._parent === this._scene &&
                    this._parent.displayedInStage) ||
                    this._parent._activeInHierarchy) &&
                  (t ? this._activeHierarchy() : this._inActiveHierarchy()));
            }
          ),
          r(0, n, 'componentsCount', function() {
            return this._components.length;
          }),
          r(0, n, 'loaded', function() {
            return this.__loaded;
          }),
          r(0, n, 'id', function() {
            return this._id;
          }),
          r(0, n, 'url', function() {
            return this._url;
          }),
          r(
            0,
            n,
            'layer',
            function() {
              return this._layer;
            },
            function(t) {
              if (this._layer !== t) {
                if (!t) throw new Error('Layer value can be null.');
                if (this._activeInHierarchy) {
                  var e = 0,
                    i = this._colliders.length;
                  if (this._layer)
                    for (e = 0; e < i; e++)
                      this._layer._removeCollider(this._colliders[e]);
                  for (e = 0; e < i; e++) t._addCollider(this._colliders[e]);
                }
                (this._layer = t), this.event('layerchanged', t);
              }
            }
          ),
          r(0, n, 'scene', function() {
            return this._scene;
          }),
          r(0, n, 'transform', function() {
            return this._transform;
          }),
          (e.instantiate = function(t, e, i, n, a) {
            void 0 === i && (i = !0);
            var r = t.clone();
            e && e.addChild(r);
            var s = r.transform;
            if (i) {
              var o = s.worldMatrix;
              t.transform.worldMatrix.cloneTo(o), (s.worldMatrix = o);
            } else n && (s.position = n), a && (s.rotation = a);
            return r;
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.WORLDMATRIX = 0),
          (e.MVPMATRIX = 1),
          (e._uniqueIDCounter = 0),
          (e._nameNumberCounter = 0),
          e
        );
      })(),
      Oi = (function(t) {
        function e(t, i, n, a, r, s, o, l) {
          if (
            ((this._curActTexIndex = 0),
            (this._program = null),
            (this._attributeParams = null),
            (this._uniformParams = null),
            (this._attributeParamsMap = []),
            (this._sceneUniformParamsMap = []),
            (this._cameraUniformParamsMap = []),
            (this._spriteUniformParamsMap = []),
            (this._materialUniformParamsMap = []),
            (this._renderElementUniformParamsMap = []),
            e.__super.call(this),
            !t || !i)
          )
            throw 'Shader Error';
          (this._id = ++e._count),
            (this._vs = t),
            (this._ps = i),
            (this._attributeMap = n),
            (this._sceneUniformMap = a),
            (this._cameraUniformMap = r),
            (this._spriteUniformMap = s),
            (this._materialUniformMap = o),
            (this._renderElementUniformMap = l),
            this.recreateResource();
        }
        a(e, 'laya.d3.shader.Shader3D', u);
        var i = e.prototype;
        return (
          (i.recreateResource = function() {
            this._compile(), this.completeCreate(), (this.memorySize = 0);
          }),
          (i.disposeResource = function() {
            R.mainContext.deleteShader(this._vshader),
              R.mainContext.deleteShader(this._pshader),
              R.mainContext.deleteProgram(this._program),
              (this._vshader = this._pshader = this._program = null),
              (this._attributeParams = null),
              (this._uniformParams = null),
              (this.memorySize = 0),
              (this._curActTexIndex = 0);
          }),
          (i._compile = function() {
            if (
              this._vs &&
              this._ps &&
              !this._attributeParams &&
              !this._uniformParams
            ) {
              (this._reCompile = !0),
                (this._attributeParams = []),
                (this._uniformParams = []);
              var t = [this._vs, this._ps],
                i = R.mainContext;
              if (
                ((this._program = i.createProgram()),
                (this._vshader = e._createShader(i, t[0], 35633)),
                (this._pshader = e._createShader(i, t[1], 35632)),
                i.attachShader(this._program, this._vshader),
                i.attachShader(this._program, this._pshader),
                i.linkProgram(this._program),
                !I.isConchApp &&
                  ci.debugMode &&
                  !i.getProgramParameter(this._program, 35714))
              )
                throw i.getProgramInfoLog(this._program);
              var n,
                a = 0,
                r = 0,
                s = 0;
              for (
                s = I.isConchApp
                  ? i.getProgramParameterEx(this._vs, this._ps, '', 35721)
                  : i.getProgramParameter(this._program, 35721),
                  a = 0;
                a < s;
                a++
              ) {
                var o = null;
                (n = {
                  vartype: 'attribute',
                  ivartype: 0,
                  attrib: (o = I.isConchApp
                    ? i.getActiveAttribEx(this._vs, this._ps, '', a)
                    : i.getActiveAttrib(this._program, a)),
                  location: i.getAttribLocation(this._program, o.name),
                  name: o.name,
                  type: o.type,
                  isArray: !1,
                  isSame: !1,
                  preValue: null,
                  indexOfParams: 0
                }),
                  this._attributeParams.push(n);
              }
              var l = 0;
              for (
                l = I.isConchApp
                  ? i.getProgramParameterEx(this._vs, this._ps, '', 35718)
                  : i.getProgramParameter(this._program, 35718),
                  a = 0;
                a < l;
                a++
              ) {
                var h = null;
                (h = I.isConchApp
                  ? i.getActiveUniformEx(this._vs, this._ps, '', a)
                  : i.getActiveUniform(this._program, a)),
                  (n = {
                    vartype: 'uniform',
                    ivartype: 1,
                    attrib: o,
                    location: i.getUniformLocation(this._program, h.name),
                    name: h.name,
                    type: h.type,
                    isArray: !1,
                    isSame: !1,
                    preValue: null,
                    indexOfParams: 0
                  }).name.indexOf('[0]') > 0 &&
                    ((n.name = n.name.substr(0, n.name.length - 3)),
                    (n.isArray = !0),
                    (n.location = i.getUniformLocation(this._program, n.name))),
                  this._uniformParams.push(n);
              }
              for (a = 0, r = this._attributeParams.length; a < r; a++)
                ((n = this._attributeParams[a]).indexOfParams = a),
                  (n.index = 1),
                  (n.value = [n.location, null]),
                  (n.codename = n.name),
                  (n.name =
                    null != this._attributeMap[n.codename]
                      ? this._attributeMap[n.codename]
                      : n.codename),
                  this._attributeParamsMap.push(n.name),
                  this._attributeParamsMap.push(n),
                  (n._this = this),
                  (n.uploadedValue = []),
                  (n.fun = this._attribute);
              for (a = 0, r = this._uniformParams.length; a < r; a++)
                switch (
                  ((n = this._uniformParams[a]),
                  (n.indexOfParams = a),
                  (n.index = 1),
                  (n.value = [n.location, null]),
                  (n.codename = n.name),
                  null != this._sceneUniformMap[n.codename]
                    ? ((n.name = this._sceneUniformMap[n.codename]),
                      this._sceneUniformParamsMap.push(n.name),
                      this._sceneUniformParamsMap.push(n))
                    : null != this._cameraUniformMap[n.codename]
                    ? ((n.name = this._cameraUniformMap[n.codename]),
                      this._cameraUniformParamsMap.push(n.name),
                      this._cameraUniformParamsMap.push(n))
                    : null != this._spriteUniformMap[n.codename]
                    ? ((n.name = this._spriteUniformMap[n.codename]),
                      this._spriteUniformParamsMap.push(n.name),
                      this._spriteUniformParamsMap.push(n))
                    : null != this._materialUniformMap[n.codename]
                    ? ((n.name = this._materialUniformMap[n.codename]),
                      this._materialUniformParamsMap.push(n.name),
                      this._materialUniformParamsMap.push(n))
                    : null != this._renderElementUniformMap[n.codename]
                    ? ((n.name = this._renderElementUniformMap[n.codename]),
                      this._renderElementUniformParamsMap.push(n.name),
                      this._renderElementUniformParamsMap.push(n))
                    : console.log(
                        "Shader:can't find uinform name:" +
                          n.codename +
                          ' in shader file.'
                      ),
                  (n._this = this),
                  (n.uploadedValue = []),
                  n.type)
                ) {
                  case 5124:
                    n.fun = n.isArray ? this._uniform1iv : this._uniform1i;
                    break;
                  case 5126:
                    n.fun = n.isArray ? this._uniform1fv : this._uniform1f;
                    break;
                  case 35664:
                    n.fun = n.isArray
                      ? this._uniform_vec2v
                      : this._uniform_vec2;
                    break;
                  case 35665:
                    n.fun = n.isArray
                      ? this._uniform_vec3v
                      : this._uniform_vec3;
                    break;
                  case 35666:
                    n.fun = n.isArray
                      ? this._uniform_vec4v
                      : this._uniform_vec4;
                    break;
                  case 35678:
                    n.fun = this._uniform_sampler2D;
                    break;
                  case 35680:
                    n.fun = this._uniform_samplerCube;
                    break;
                  case 35676:
                    n.fun = this._uniformMatrix4fv;
                    break;
                  case 35670:
                    n.fun = this._uniform1i;
                    break;
                  case 35674:
                    n.fun = this._uinformMatrix2fv;
                    break;
                  case 35675:
                    n.fun = this._uinformMatrix3fv;
                    break;
                  default:
                    throw new Error('compile shader err!');
                }
            }
          }),
          (i._attribute = function(t, e) {
            var i = R.mainContext,
              n = d._enableAtributes,
              a = t.location;
            return (
              n[a] || i.enableVertexAttribArray(a),
              i.vertexAttribPointer(a, e[0], e[1], e[2], e[3], e[4]),
              (n[a] = d._bindVertexBuffer),
              1
            );
          }),
          (i._uniform1f = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e
              ? (R.mainContext.uniform1f(t.location, (i[0] = e)), 1)
              : 0;
          }),
          (i._uniform1fv = function(t, e) {
            if (e.length < 4) {
              var i = t.uploadedValue;
              return i[0] !== e[0] ||
                i[1] !== e[1] ||
                i[2] !== e[2] ||
                i[3] !== e[3]
                ? (R.mainContext.uniform1fv(t.location, e),
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3]),
                  1)
                : 0;
            }
            return R.mainContext.uniform1fv(t.location, e), 1;
          }),
          (i._uniform_vec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1]
              ? (R.mainContext.uniform2f(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec2v = function(t, e) {
            if (e.length < 2) {
              var i = t.uploadedValue;
              return i[0] !== e[0] ||
                i[1] !== e[1] ||
                i[2] !== e[2] ||
                i[3] !== e[3]
                ? (R.mainContext.uniform2fv(t.location, e),
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3]),
                  1)
                : 0;
            }
            return R.mainContext.uniform2fv(t.location, e), 1;
          }),
          (i._uniform_vec3 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2]
              ? (R.mainContext.uniform3f(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec3v = function(t, e) {
            return R.mainContext.uniform3fv(t.location, e), 1;
          }),
          (i._uniform_vec4 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] ||
              i[1] !== e[1] ||
              i[2] !== e[2] ||
              i[3] !== e[3]
              ? (R.mainContext.uniform4f(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec4v = function(t, e) {
            return R.mainContext.uniform4fv(t.location, e), 1;
          }),
          (i._uniformMatrix2fv = function(t, e) {
            return R.mainContext.uniformMatrix2fv(t.location, !1, e), 1;
          }),
          (i._uniformMatrix3fv = function(t, e) {
            return R.mainContext.uniformMatrix3fv(t.location, !1, e), 1;
          }),
          (i._uniformMatrix4fv = function(t, e) {
            return R.mainContext.uniformMatrix4fv(t.location, !1, e), 1;
          }),
          (i._uinformMatrix2fv = function(t, e) {
            return R.mainContext.uniformMatrix2fv(t.location, !1, e), 1;
          }),
          (i._uinformMatrix3fv = function(t, e) {
            return R.mainContext.uniformMatrix3fv(t.location, !1, e), 1;
          }),
          (i._uniform1i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e
              ? (R.mainContext.uniform1i(t.location, (i[0] = e)), 1)
              : 0;
          }),
          (i._uniform1iv = function(t, e) {
            return R.mainContext.uniform1iv(t.location, e), 1;
          }),
          (i._uniform_ivec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1]
              ? (R.mainContext.uniform2i(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1])
                ),
                1)
              : 0;
          }),
          (i._uniform_ivec2v = function(t, e) {
            return R.mainContext.uniform2iv(t.location, e), 1;
          }),
          (i._uniform_vec3i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2]
              ? (R.mainContext.uniform3i(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec3vi = function(t, e) {
            return R.mainContext.uniform3iv(t.location, e), 1;
          }),
          (i._uniform_vec4i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] ||
              i[1] !== e[1] ||
              i[2] !== e[2] ||
              i[3] !== e[3]
              ? (R.mainContext.uniform4i(
                  t.location,
                  (i[0] = e[0]),
                  (i[1] = e[1]),
                  (i[2] = e[2]),
                  (i[3] = e[3])
                ),
                1)
              : 0;
          }),
          (i._uniform_vec4vi = function(t, e) {
            return R.mainContext.uniform4iv(t.location, e), 1;
          }),
          (i._uniform_sampler2D = function(t, i) {
            var n = i.source || i.defaulteTexture.source,
              a = R.mainContext,
              r = t.uploadedValue;
            if (null == r[0]) {
              if (this._curActTexIndex > 7)
                throw new Error(
                  "Shader3D: shader support textures max count is 8,can't large than it."
                );
              return (
                (r[0] = this._curActTexIndex),
                a.uniform1i(t.location, this._curActTexIndex),
                a.activeTexture(e._TEXTURES[this._curActTexIndex]),
                n && B.bindTexture(a, 3553, n),
                this._curActTexIndex++,
                1
              );
            }
            return (
              a.activeTexture(e._TEXTURES[r[0]]),
              n && B.bindTexture(a, 3553, n),
              0
            );
          }),
          (i._uniform_samplerCube = function(t, i) {
            var n = i.source || i.defaulteTexture.source,
              a = R.mainContext,
              r = t.uploadedValue;
            if (null == r[0]) {
              if (this._curActTexIndex > 7)
                throw new Error(
                  "Shader3D: shader support textures max count is 8,can't large than it."
                );
              return (
                (r[0] = this._curActTexIndex),
                a.uniform1i(t.location, this._curActTexIndex),
                a.activeTexture(e._TEXTURES[this._curActTexIndex]),
                n
                  ? B.bindTexture(a, 34067, n)
                  : B.bindTexture(a, 34067, on.grayTexture.source),
                this._curActTexIndex++,
                1
              );
            }
            return (
              a.activeTexture(e._TEXTURES[r[0]]),
              n
                ? B.bindTexture(a, 34067, n)
                : B.bindTexture(a, 34067, on.grayTexture.source),
              0
            );
          }),
          (i._noSetValue = function(t) {
            console.log('no....:' + t.name);
          }),
          (i.bind = function() {
            return (
              (u.activeShader = this),
              (u.bindShader = this),
              this.activeResource(),
              B.UseProgram(this._program)
            );
          }),
          (i.uploadAttributes = function(t, e) {
            for (
              var i, n, a = 0, r = 0, s = this._attributeParamsMap.length;
              r < s;
              r += 2
            )
              (n = this._attributeParamsMap[r + 1]),
                null != (i = t[this._attributeParamsMap[r]]) &&
                  (e && e[n.name] && e[n.name].bind(),
                  (a += n.fun.call(this, n, i)));
            L.shaderCall += a;
          }),
          (i.uploadAttributesX = function(t, e) {
            for (
              var i, n, a = 0, r = 0, s = this._attributeParamsMap.length;
              r < s;
              r += 2
            )
              (n = this._attributeParamsMap[r + 1]),
                null != (i = t[this._attributeParamsMap[r]]) &&
                  (e._bind(), (a += n.fun.call(this, n, i)));
            L.shaderCall += a;
          }),
          (i.uploadSceneUniforms = function(t) {
            for (
              var e, i, n = 0, a = 0, r = this._sceneUniformParamsMap.length;
              a < r;
              a += 2
            )
              (i = this._sceneUniformParamsMap[a + 1]),
                null != (e = t[this._sceneUniformParamsMap[a]]) &&
                  (n += i.fun.call(this, i, e));
            L.shaderCall += n;
          }),
          (i.uploadCameraUniforms = function(t) {
            for (
              var e, i, n = 0, a = 0, r = this._cameraUniformParamsMap.length;
              a < r;
              a += 2
            )
              (i = this._cameraUniformParamsMap[a + 1]),
                null != (e = t[this._cameraUniformParamsMap[a]]) &&
                  (n += i.fun.call(this, i, e));
            L.shaderCall += n;
          }),
          (i.uploadSpriteUniforms = function(t) {
            for (
              var e, i, n = 0, a = 0, r = this._spriteUniformParamsMap.length;
              a < r;
              a += 2
            )
              (i = this._spriteUniformParamsMap[a + 1]),
                null != (e = t[this._spriteUniformParamsMap[a]]) &&
                  (n += i.fun.call(this, i, e));
            L.shaderCall += n;
          }),
          (i.uploadMaterialUniforms = function(t) {
            for (
              var e, i, n = 0, a = 0, r = this._materialUniformParamsMap.length;
              a < r;
              a += 2
            )
              (i = this._materialUniformParamsMap[a + 1]),
                null != (e = t[this._materialUniformParamsMap[a]]) &&
                  (n += i.fun.call(this, i, e));
            L.shaderCall += n;
          }),
          (i.uploadRenderElementUniforms = function(t) {
            for (
              var e,
                i,
                n = 0,
                a = 0,
                r = this._renderElementUniformParamsMap.length;
              a < r;
              a += 2
            )
              (i = this._renderElementUniformParamsMap[a + 1]),
                null != (e = t[this._renderElementUniformParamsMap[a]]) &&
                  (n += i.fun.call(this, i, e));
            L.shaderCall += n;
          }),
          (e.create = function(t, i, n, a, r, s, o, l) {
            return new e(t, i, n, a, r, s, o, l);
          }),
          (e.addInclude = function(t, e) {
            M.addInclude(t, e);
          }),
          (e._createShader = function(t, e, i) {
            var n = t.createShader(i);
            if (
              (t.shaderSource(n, e),
              t.compileShader(n),
              ci.debugMode && !t.getShaderParameter(n, 35713))
            )
              throw t.getShaderInfoLog(n);
            return n;
          }),
          (e.PERIOD_RENDERELEMENT = 0),
          (e.PERIOD_MATERIAL = 1),
          (e.PERIOD_SPRITE = 2),
          (e.PERIOD_CAMERA = 3),
          (e.PERIOD_SCENE = 4),
          (e._TEXTURES = [
            33984,
            33985,
            33986,
            33987,
            33988,
            33989,
            33990,
            33991
          ]),
          (e._count = 0),
          n(e, [
            'shaderParamsMap',
            function() {
              return (this.shaderParamsMap = {
                float: 5126,
                int: 5124,
                bool: 35670,
                vec2: 35664,
                vec3: 35665,
                vec4: 35666,
                ivec2: 35667,
                ivec3: 35668,
                ivec4: 35669,
                bvec2: 35671,
                bvec3: 35672,
                bvec4: 35673,
                mat2: 35674,
                mat3: 35675,
                mat4: 35676,
                sampler2D: 35678,
                samplerCube: 35680
              });
            },
            'nameKey',
            function() {
              return (this.nameKey = new D());
            }
          ]),
          e
        );
      })(),
      Ui = (function(t) {
        function e() {
          e.__super.call(this),
            this.setShaderName('BLINNPHONG'),
            (this._albedoIntensity = 1),
            (this._albedoColor = new Be(1, 1, 1, 1)),
            this._setColor(6, new Be(1, 1, 1, 1)),
            this._setColor(8, new Re(1, 1, 1)),
            this._setNumber(9, 0.078125),
            this._setColor(10, new Re(1, 1, 1)),
            this._setNumber(0, 0.5),
            this._setColor(11, new Be(1, 1, 0, 0)),
            (this._enableLighting = !0),
            (this.renderMode = 0);
        }
        a(e, 'laya.d3.core.material.BlinnPhongMaterial', t);
        var s = e.prototype;
        return (
          (s.disableLight = function() {
            this._addDisablePublicShaderDefine(
              ci.SHADERDEFINE_POINTLIGHT |
                ci.SHADERDEFINE_SPOTLIGHT |
                ci.SHADERDEFINE_DIRECTIONLIGHT
            );
          }),
          (s.disableFog = function() {
            this._addDisablePublicShaderDefine(ci.SHADERDEFINE_FOG);
          }),
          (s.cloneTo = function(e) {
            t.prototype.cloneTo.call(this, e);
            var i = e;
            (i._enableLighting = this._enableLighting),
              (i._albedoIntensity = this._albedoIntensity),
              this._albedoColor.cloneTo(i._albedoColor);
          }),
          r(0, s, 'renderMode', null, function(t) {
            switch (t) {
              case 0:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.alphaTest = !1),
                  (this.depthTest = 513),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 1:
                (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.renderQueue = 2e3),
                  (this.alphaTest = !0),
                  (this.depthTest = 513),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 2:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  (this.depthTest = 513),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 3:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  (this.depthTest = 513),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              default:
                throw new Error('Material:renderMode value error.');
            }
            this._conchMaterial && this._conchMaterial.setRenderMode(t);
          }),
          r(
            0,
            s,
            'normalTexture',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_NORMALMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_NORMALMAP
                  ),
                this._setTexture(2, t);
            }
          ),
          r(
            0,
            s,
            'reflectColor',
            function() {
              return this._getColor(10);
            },
            function(t) {
              this._setColor(10, t);
            }
          ),
          r(
            0,
            s,
            'tilingOffset',
            function() {
              return this._getColor(11);
            },
            function(t) {
              if (t) {
                var e = t.elements;
                1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3]
                  ? this._addShaderDefine(
                      laya.d3.core.material.BlinnPhongMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.material.BlinnPhongMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    );
              } else
                this._removeShaderDefine(
                  laya.d3.core.material.BlinnPhongMaterial
                    .SHADERDEFINE_TILINGOFFSET
                );
              this._setColor(11, t);
            }
          ),
          r(
            0,
            s,
            'specularColor',
            function() {
              return this._getColor(8);
            },
            function(t) {
              this._setColor(8, t);
            }
          ),
          r(
            0,
            s,
            'albedoColor',
            function() {
              return this._albedoColor;
            },
            function(t) {
              var e = this._getColor(6);
              Be.scale(t, this._albedoIntensity, e), (this._albedoColor = t);
            }
          ),
          r(
            0,
            s,
            'albedoIntensity',
            function() {
              return this._albedoIntensity;
            },
            function(t) {
              if (this._albedoIntensity !== t) {
                var e = this._getColor(6);
                Be.scale(this._albedoColor, t, e), (this._albedoIntensity = t);
              }
            }
          ),
          r(
            0,
            s,
            'albedoTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_DIFFUSEMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_DIFFUSEMAP
                  ),
                this._setTexture(1, t);
            }
          ),
          r(
            0,
            s,
            'shininess',
            function() {
              return this._getNumber(9);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(9, t);
            }
          ),
          r(
            0,
            s,
            'specularTexture',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_SPECULARMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_SPECULARMAP
                  ),
                this._setTexture(3, t);
            }
          ),
          r(
            0,
            s,
            'reflectTexture',
            function() {
              return this._getTexture(5);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_REFLECTMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.BlinnPhongMaterial
                      .SHADERDEFINE_REFLECTMAP
                  ),
                this._setTexture(5, t);
            }
          ),
          r(
            0,
            s,
            'enableLighting',
            function() {
              return this._enableLighting;
            },
            function(t) {
              this._enableLighting !== t &&
                (t
                  ? this._removeDisablePublicShaderDefine(
                      ci.SHADERDEFINE_POINTLIGHT |
                        ci.SHADERDEFINE_SPOTLIGHT |
                        ci.SHADERDEFINE_DIRECTIONLIGHT
                    )
                  : this._addDisablePublicShaderDefine(
                      ci.SHADERDEFINE_POINTLIGHT |
                        ci.SHADERDEFINE_SPOTLIGHT |
                        ci.SHADERDEFINE_DIRECTIONLIGHT
                    ),
                (this._enableLighting = t));
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DIFFUSEMAP = e.shaderDefines.registerDefine(
              'DIFFUSEMAP'
            )),
              (e.SHADERDEFINE_NORMALMAP = e.shaderDefines.registerDefine(
                'NORMALMAP'
              )),
              (e.SHADERDEFINE_SPECULARMAP = e.shaderDefines.registerDefine(
                'SPECULARMAP'
              )),
              (e.SHADERDEFINE_REFLECTMAP = e.shaderDefines.registerDefine(
                'REFLECTMAP'
              )),
              (e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine(
                'TILINGOFFSET'
              )),
              (e.SHADERDEFINE_ADDTIVEFOG = e.shaderDefines.registerDefine(
                'ADDTIVEFOG'
              ));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.SPECULARSOURCE_DIFFUSEMAPALPHA = 0),
          (e.SPECULARSOURCE_SPECULARMAP = 0),
          (e.RENDERMODE_OPAQUE = 0),
          (e.RENDERMODE_CUTOUT = 1),
          (e.RENDERMODE_TRANSPARENT = 2),
          (e.RENDERMODE_ADDTIVE = 3),
          (e.SHADERDEFINE_DIFFUSEMAP = 0),
          (e.SHADERDEFINE_NORMALMAP = 0),
          (e.SHADERDEFINE_SPECULARMAP = 0),
          (e.SHADERDEFINE_REFLECTMAP = 0),
          (e.SHADERDEFINE_TILINGOFFSET = 0),
          (e.SHADERDEFINE_ADDTIVEFOG = 0),
          (e.ALBEDOTEXTURE = 1),
          (e.NORMALTEXTURE = 2),
          (e.SPECULARTEXTURE = 3),
          (e.EMISSIVETEXTURE = 4),
          (e.REFLECTTEXTURE = 5),
          (e.ALBEDOCOLOR = 6),
          (e.MATERIALSPECULAR = 8),
          (e.SHININESS = 9),
          (e.MATERIALREFLECT = 10),
          (e.TILINGOFFSET = 11),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            },
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(mi),
      Vi = (function(t) {
        function e() {
          e.__super.call(this),
            this.setShaderName('ExtendTerrain'),
            (this.renderMode = 1);
        }
        a(e, 'laya.d3.core.material.ExtendTerrainMaterial', mi);
        var i = e.prototype;
        return (
          (i._setDetailNum = function(t) {
            switch (t) {
              case 1:
                this._addShaderDefine(
                  laya.d3.core.material.ExtendTerrainMaterial
                    .SHADERDEFINE_DETAIL_NUM1
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM2
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM3
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM4
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM5
                  );
                break;
              case 2:
                this._addShaderDefine(
                  laya.d3.core.material.ExtendTerrainMaterial
                    .SHADERDEFINE_DETAIL_NUM2
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM1
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM3
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM4
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM5
                  );
                break;
              case 3:
                this._addShaderDefine(
                  laya.d3.core.material.ExtendTerrainMaterial
                    .SHADERDEFINE_DETAIL_NUM3
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM1
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM2
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM4
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM5
                  );
                break;
              case 4:
                this._addShaderDefine(
                  laya.d3.core.material.ExtendTerrainMaterial
                    .SHADERDEFINE_DETAIL_NUM4
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM1
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM2
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM3
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM5
                  );
                break;
              case 5:
                this._addShaderDefine(
                  laya.d3.core.material.ExtendTerrainMaterial
                    .SHADERDEFINE_DETAIL_NUM5
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM1
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM2
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM3
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.ExtendTerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM4
                  );
            }
          }),
          (i.disableLight = function() {
            this._addDisablePublicShaderDefine(
              ci.SHADERDEFINE_POINTLIGHT |
                ci.SHADERDEFINE_SPOTLIGHT |
                ci.SHADERDEFINE_DIRECTIONLIGHT
            );
          }),
          r(0, i, 'diffuseScaleOffset2', null, function(t) {
            this._setColor(7, t);
          }),
          r(
            0,
            i,
            'splatAlphaTexture',
            function() {
              return this._getTexture(0);
            },
            function(t) {
              this._setTexture(0, t);
            }
          ),
          r(0, i, 'diffuseScaleOffset3', null, function(t) {
            this._setColor(8, t);
          }),
          r(0, i, 'diffuseTexture1', null, function(t) {
            this._setTexture(1, t), this._setDetailNum(1);
          }),
          r(0, i, 'renderMode', null, function(t) {
            switch (t) {
              case 1:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.depthTest = 513);
                break;
              case 2:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.depthTest = 515);
                break;
              default:
                throw new Error(
                  'ExtendTerrainMaterial:renderMode value error.'
                );
            }
            this._conchMaterial && this._conchMaterial.setRenderMode(t);
          }),
          r(
            0,
            i,
            'diffuseTexture2',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              this._setTexture(2, t), this._setDetailNum(2);
            }
          ),
          r(0, i, 'diffuseScaleOffset1', null, function(t) {
            this._setColor(6, t);
          }),
          r(
            0,
            i,
            'diffuseTexture3',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              this._setTexture(3, t), this._setDetailNum(3);
            }
          ),
          r(
            0,
            i,
            'diffuseTexture4',
            function() {
              return this._getTexture(4);
            },
            function(t) {
              this._setTexture(4, t), this._setDetailNum(4);
            }
          ),
          r(
            0,
            i,
            'diffuseTexture5',
            function() {
              return this._getTexture(5);
            },
            function(t) {
              this._setTexture(5, t), this._setDetailNum(5);
            }
          ),
          r(0, i, 'diffuseScaleOffset4', null, function(t) {
            this._setColor(9, t);
          }),
          r(0, i, 'diffuseScaleOffset5', null, function(t) {
            this._setColor(10, t);
          }),
          r(
            0,
            i,
            'albedo',
            function() {
              return this._getColor(14);
            },
            function(t) {
              this._setColor(14, t);
            }
          ),
          r(
            0,
            i,
            'ambientColor',
            function() {
              return this._getColor(11);
            },
            function(t) {
              this._setColor(11, t);
            }
          ),
          r(
            0,
            i,
            'diffuseColor',
            function() {
              return this._getColor(12);
            },
            function(t) {
              this._setColor(12, t);
            }
          ),
          r(
            0,
            i,
            'specularColor',
            function() {
              return this._getColor(13);
            },
            function(t) {
              this._setColor(13, t);
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DETAIL_NUM1 = e.shaderDefines.registerDefine(
              'ExtendTerrain_DETAIL_NUM1'
            )),
              (e.SHADERDEFINE_DETAIL_NUM2 = e.shaderDefines.registerDefine(
                'ExtendTerrain_DETAIL_NUM2'
              )),
              (e.SHADERDEFINE_DETAIL_NUM3 = e.shaderDefines.registerDefine(
                'ExtendTerrain_DETAIL_NUM3'
              )),
              (e.SHADERDEFINE_DETAIL_NUM4 = e.shaderDefines.registerDefine(
                'ExtendTerrain_DETAIL_NUM4'
              )),
              (e.SHADERDEFINE_DETAIL_NUM5 = e.shaderDefines.registerDefine(
                'ExtendTerrain_DETAIL_NUM5'
              ));
          }),
          (e.RENDERMODE_OPAQUE = 1),
          (e.RENDERMODE_TRANSPARENT = 2),
          (e.SPLATALPHATEXTURE = 0),
          (e.DIFFUSETEXTURE1 = 1),
          (e.DIFFUSETEXTURE2 = 2),
          (e.DIFFUSETEXTURE3 = 3),
          (e.DIFFUSETEXTURE4 = 4),
          (e.DIFFUSETEXTURE5 = 5),
          (e.DIFFUSESCALEOFFSET1 = 6),
          (e.DIFFUSESCALEOFFSET2 = 7),
          (e.DIFFUSESCALEOFFSET3 = 8),
          (e.DIFFUSESCALEOFFSET4 = 9),
          (e.DIFFUSESCALEOFFSET5 = 10),
          (e.MATERIALAMBIENT = 11),
          (e.MATERIALDIFFUSE = 12),
          (e.MATERIALSPECULAR = 13),
          (e.MATERIALALBEDO = 14),
          (e.SHADERDEFINE_DETAIL_NUM1 = 0),
          (e.SHADERDEFINE_DETAIL_NUM2 = 0),
          (e.SHADERDEFINE_DETAIL_NUM3 = 0),
          (e.SHADERDEFINE_DETAIL_NUM4 = 0),
          (e.SHADERDEFINE_DETAIL_NUM5 = 0),
          n(e, [
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(),
      Fi = (function(t) {
        function e() {
          e.__super.call(this),
            this.setShaderName('GLITTER'),
            (this.renderMode = 1),
            this._setColor(3, new Be(1, 1, 1, 1)),
            this._setColor(2, new Be(1, 1, 1, 1));
        }
        a(e, 'laya.d3.core.material.GlitterMaterial', t);
        var s = e.prototype;
        return (
          (s.setShaderName = function(e) {
            t.prototype.setShaderName.call(this, e);
          }),
          r(0, s, 'renderMode', null, function(t) {
            switch (t) {
              case 1:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0);
                break;
              case 2:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 0);
                break;
              case 13:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              case 14:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              case 15:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1);
                break;
              case 16:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1);
                break;
              case 5:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              case 6:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              case 7:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1);
                break;
              case 8:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1);
                break;
              case 9:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              case 10:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              case 11:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1);
                break;
              case 12:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1);
                break;
              default:
                throw new Error('Material:renderMode value error.');
            }
            this._conchMaterial && this._conchMaterial.setRenderMode(t);
          }),
          r(
            0,
            s,
            'diffuseTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              this._setTexture(1, t);
            }
          ),
          r(
            0,
            s,
            'albedo',
            function() {
              return this._getColor(2);
            },
            function(t) {
              this._setColor(2, t);
            }
          ),
          r(
            0,
            s,
            'color',
            function() {
              return this._getColor(3);
            },
            function(t) {
              this._setColor(3, t);
            }
          ),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.RENDERMODE_OPAQUE = 1),
          (e.RENDERMODE_OPAQUEDOUBLEFACE = 2),
          (e.RENDERMODE_TRANSPARENT = 13),
          (e.RENDERMODE_TRANSPARENTDOUBLEFACE = 14),
          (e.RENDERMODE_ADDTIVE = 15),
          (e.RENDERMODE_ADDTIVEDOUBLEFACE = 16),
          (e.RENDERMODE_DEPTHREAD_TRANSPARENT = 5),
          (e.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6),
          (e.RENDERMODE_DEPTHREAD_ADDTIVE = 7),
          (e.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8),
          (e.RENDERMODE_NONDEPTH_TRANSPARENT = 9),
          (e.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10),
          (e.RENDERMODE_NONDEPTH_ADDTIVE = 11),
          (e.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12),
          (e.DIFFUSETEXTURE = 1),
          (e.ALBEDO = 2),
          (e.UNICOLOR = 3),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            }
          ]),
          e
        );
      })(mi),
      Hi = (function(t) {
        function e() {
          if (
            ((this._transformUV = null),
            e.__super.call(this),
            !laya.d3.core.material.PBRMaterial.pbrlutTex)
          ) {
            var t = _.window.__pbrlutdata;
            if (!t)
              throw (alert('no pbr lutdata, need pbrlut.js'),
              'no pbr lutdata, need pbrlut.js');
            var i = en.create(
              new Uint32Array(t).buffer,
              256,
              256,
              9728,
              9728,
              !1
            );
            laya.d3.core.material.PBRMaterial.pbrlutTex = i;
          }
          this._setTexture(4, laya.d3.core.material.PBRMaterial.pbrlutTex),
            this.setShaderName('PBR'),
            this._setNumber(0, 0.5),
            (this.use_groundtruth = !1);
        }
        a(e, 'laya.d3.core.material.PBRMaterial', t);
        var s = e.prototype;
        return (
          (s.disableLight = function() {
            this._addDisablePublicShaderDefine(
              ci.SHADERDEFINE_POINTLIGHT |
                ci.SHADERDEFINE_SPOTLIGHT |
                ci.SHADERDEFINE_DIRECTIONLIGHT
            );
          }),
          (s.disableFog = function() {
            this._addDisablePublicShaderDefine(ci.SHADERDEFINE_FOG);
          }),
          (s.onAsynLoaded = function(e, i, n) {
            t.prototype.onAsynLoaded.call(this, e, i, n);
          }),
          (s.radicalInverse_VdC = function(t) {
            var e = new Uint32Array(1);
            return (function(t) {
              return (
                (t = (t << 16) | (t >>> 16)),
                (t = ((1431655765 & t) << 1) | ((2863311530 & t) >>> 1)),
                (t = ((858993459 & t) << 2) | ((3435973836 & t) >>> 2)),
                (t = ((252645135 & t) << 4) | ((4042322160 & t) >>> 4)),
                (t = ((16711935 & t) << 8) | ((4278255360 & t) >>> 8)),
                (e[0] = t),
                2.3283064365386963e-10 * e[0]
              );
            })(t);
          }),
          (s.createHammersleyTex = function(t, e) {
            var i = new Uint8Array(t * e * 4),
              n = 0,
              a = 0;
            for (a = 0; a < t * e; a++) {
              var r = this.radicalInverse_VdC(a);
              (i[n++] = 255 * r), (i[n++] = 0), (i[n++] = 0), (i[n++] = 255);
            }
            return i;
          }),
          r(
            0,
            s,
            'normalTexture',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              this._setTexture(2, t);
            }
          ),
          r(0, s, 'has_tangent', null, function(t) {
            this._addShaderDefine(e.SHADERDEFINE_HAS_TANGENT);
          }),
          r(
            0,
            s,
            'roughness',
            function() {
              return this._getNumber(6);
            },
            function(t) {
              this._setNumber(6, t),
                this._addShaderDefine(e.SHADERDEFINE_FIX_ROUGHNESS);
            }
          ),
          r(
            0,
            s,
            'metaless',
            function() {
              return this._getNumber(7);
            },
            function(t) {
              this._setNumber(7, t),
                this._addShaderDefine(e.SHADERDEFINE_FIX_METALESS);
            }
          ),
          r(
            0,
            s,
            'pbrlutTexture',
            function() {
              return this._getTexture(4);
            },
            function(t) {
              this._setTexture(4, t);
            }
          ),
          r(0, s, 'use_groundtruth', null, function(t) {
            if (t) {
              if (
                (this._addShaderDefine(e.SHADERDEFINE_USE_GROUNDTRUTH),
                !laya.d3.core.material.PBRMaterial.HammersleyNoiseTex)
              ) {
                var i = this.createHammersleyTex(32, 32);
                laya.d3.core.material.PBRMaterial.HammersleyNoiseTex = en.create(
                  i.buffer,
                  32,
                  32,
                  9728,
                  9728,
                  !1
                );
              }
              this._setTexture(15, e.HammersleyNoiseTex);
            } else (laya.d3.core.material.PBRMaterial.HammersleyNoiseTex = null), this._removeShaderDefine(e.SHADERDEFINE_USE_GROUNDTRUTH);
          }),
          r(
            0,
            s,
            'transformUV',
            function() {
              return this._transformUV;
            },
            function(t) {
              (this._transformUV = t),
                this._setMatrix4x4(8, t.matrix),
                this._conchMaterial &&
                  this._conchMaterial.setShaderValue(8, t.matrix.elements, 0);
            }
          ),
          r(
            0,
            s,
            'diffuseTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              this._setTexture(1, t);
            }
          ),
          r(0, s, 'renderMode', null, function(t) {
            switch (t) {
              case 1:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.alphaTest = !1);
                break;
              case 2:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 0),
                  (this.alphaTest = !1);
                break;
              case 3:
                (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.renderQueue = 2e3);
                break;
              case 13:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              default:
                throw new Error('PBRMaterial:renderMode value error.');
            }
          }),
          r(
            0,
            s,
            'pbrInfoTexture',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              this._setTexture(3, t),
                this._addShaderDefine(e.SHADERDEFINE_HAS_PBRINFO);
            }
          ),
          r(0, s, 'testClipZ', null, function(t) {
            this._addShaderDefine(e.SHADERDEFINE_TEST_CLIPZ);
          }),
          (e.__init__ = function() {
            (e.SHADERDEFINE_FIX_METALESS = e.shaderDefines.registerDefine(
              'FIX_METALESS'
            )),
              (e.SHADERDEFINE_FIX_ROUGHNESS = e.shaderDefines.registerDefine(
                'FIX_ROUGHNESS'
              )),
              (e.SHADERDEFINE_HAS_TANGENT = e.shaderDefines.registerDefine(
                'HAS_TANGENT'
              )),
              (e.SHADERDEFINE_HAS_PBRINFO = e.shaderDefines.registerDefine(
                'HAS_PBRINFO'
              )),
              (e.SHADERDEFINE_USE_GROUNDTRUTH = e.shaderDefines.registerDefine(
                'USE_GROUNDTRUTH'
              )),
              (e.SHADERDEFINE_TEST_CLIPZ = e.shaderDefines.registerDefine(
                'CLIPZ'
              ));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.DIFFUSETEXTURE = 1),
          (e.NORMALTEXTURE = 2),
          (e.PBRINFOTEXTURE = 3),
          (e.PBRLUTTEXTURE = 4),
          (e.UVANIAGE = 5),
          (e.MATERIALROUGHNESS = 6),
          (e.MATERIALMETALESS = 7),
          (e.UVMATRIX = 8),
          (e.UVAGE = 9),
          (e.AOOBJPOS = 14),
          (e.HSNOISETEXTURE = 15),
          (e.SHADERDEFINE_FIX_ROUGHNESS = 0),
          (e.SHADERDEFINE_FIX_METALESS = 0),
          (e.SHADERDEFINE_HAS_TANGENT = 0),
          (e.SHADERDEFINE_TEST_CLIPZ = 0),
          (e.SHADERDEFINE_HAS_PBRINFO = 0),
          (e.SHADERDEFINE_USE_GROUNDTRUTH = 0),
          (e.RENDERMODE_OPAQUE = 1),
          (e.RENDERMODE_OPAQUEDOUBLEFACE = 2),
          (e.RENDERMODE_CUTOUT = 3),
          (e.RENDERMODE_CUTOUTDOUBLEFACE = 4),
          (e.RENDERMODE_TRANSPARENT = 13),
          (e.pbrlutTex = null),
          (e.HammersleyNoiseTex = null),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            },
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(mi),
      Gi = (function(t) {
        function e() {
          e.__super.call(this),
            this.setShaderName('PBRSpecular'),
            this._setColor(7, new Be(1, 1, 1, 1)),
            this._setColor(9, new Be(0, 0, 0, 0)),
            this._setColor(8, new Be(0.2, 0.2, 0.2, 0.2)),
            this._setNumber(10, 0.5),
            this._setNumber(11, 1),
            this._setNumber(12, 0),
            this._setNumber(13, 1),
            this._setNumber(14, 1),
            this._setNumber(15, 0.001),
            this._setBool(16, !1),
            this._setNumber(0, 0.5);
        }
        a(e, 'laya.d3.core.material.PBRSpecularMaterial', mi);
        var i = e.prototype;
        return (
          r(
            0,
            i,
            'albedoColor',
            function() {
              return this._getColor(7);
            },
            function(t) {
              this._setColor(7, t);
            }
          ),
          r(
            0,
            i,
            'specularTexture',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_SPECULARTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_SPECULARTEXTURE
                  ),
                this._setTexture(2, t);
            }
          ),
          r(
            0,
            i,
            'albedoTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_DIFFUSETEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_DIFFUSETEXTURE
                  ),
                this._setTexture(1, t);
            }
          ),
          r(
            0,
            i,
            'occlusionTexture',
            function() {
              return this._getTexture(5);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_OCCLUSIONTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_OCCLUSIONTEXTURE
                  ),
                this._setTexture(5, t);
            }
          ),
          r(
            0,
            i,
            'normalTexture',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_NORMALTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_NORMALTEXTURE
                  ),
                this._setTexture(3, t);
            }
          ),
          r(
            0,
            i,
            'parallaxTexture',
            function() {
              return this._getTexture(4);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_PARALLAXTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_PARALLAXTEXTURE
                  ),
                this._setTexture(4, t);
            }
          ),
          r(
            0,
            i,
            'emissionColor',
            function() {
              return this._getColor(9);
            },
            function(t) {
              this._setColor(9, t);
            }
          ),
          r(
            0,
            i,
            'normalTextureScale',
            function() {
              return this._getNumber(14);
            },
            function(t) {
              this._setNumber(14, t);
            }
          ),
          r(
            0,
            i,
            'parallaxTextureScale',
            function() {
              return this._getNumber(15);
            },
            function(t) {
              (t = Math.max(0.005, Math.min(0.08, t))), this._setNumber(15, t);
            }
          ),
          r(
            0,
            i,
            'occlusionTextureStrength',
            function() {
              return this._getNumber(13);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(13, t);
            }
          ),
          r(
            0,
            i,
            'specularColor',
            function() {
              return this._getColor(8);
            },
            function(t) {
              this._setColor(8, t);
            }
          ),
          r(
            0,
            i,
            'smoothness',
            function() {
              return this._getNumber(10);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(10, t);
            }
          ),
          r(
            0,
            i,
            'smoothnessTextureScale',
            function() {
              return this._getNumber(11);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(11, t);
            }
          ),
          r(
            0,
            i,
            'smoothnessSource',
            function() {
              return this._getNumber(12);
            },
            function(t) {
              1 == t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA
                  )
                : (this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA
                  ),
                  (t = 0)),
                this._setNumber(12, t);
            }
          ),
          r(
            0,
            i,
            'enableEmission',
            function() {
              return this._getBool(16);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_EMISSION
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_EMISSION
                  ),
                this._setBool(16, t);
            }
          ),
          r(
            0,
            i,
            'emissionTexture',
            function() {
              return this._getTexture(6);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_EMISSIONTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRSpecularMaterial
                      .SHADERDEFINE_EMISSIONTEXTURE
                  ),
                this._setTexture(6, t);
            }
          ),
          r(
            0,
            i,
            'tilingOffset',
            function() {
              return this._getColor(17);
            },
            function(t) {
              if (t) {
                var e = t.elements;
                1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3]
                  ? this._addShaderDefine(
                      laya.d3.core.material.PBRSpecularMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.material.PBRSpecularMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    );
              } else
                this._removeShaderDefine(
                  laya.d3.core.material.PBRSpecularMaterial
                    .SHADERDEFINE_TILINGOFFSET
                );
              this._setColor(17, t);
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DIFFUSETEXTURE = e.shaderDefines.registerDefine(
              'DIFFUSETEXTURE'
            )),
              (e.SHADERDEFINE_SPECULARTEXTURE = e.shaderDefines.registerDefine(
                'SPECULARTEXTURE'
              )),
              (e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = e.shaderDefines.registerDefine(
                'SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA'
              )),
              (e.SHADERDEFINE_NORMALTEXTURE = e.shaderDefines.registerDefine(
                'NORMALTEXTURE'
              )),
              (e.SHADERDEFINE_PARALLAXTEXTURE = e.shaderDefines.registerDefine(
                'PARALLAXTEXTURE'
              )),
              (e.SHADERDEFINE_OCCLUSIONTEXTURE = e.shaderDefines.registerDefine(
                'OCCLUSIONTEXTURE'
              )),
              (e.SHADERDEFINE_EMISSION = e.shaderDefines.registerDefine(
                'EMISSION'
              )),
              (e.SHADERDEFINE_EMISSIONTEXTURE = e.shaderDefines.registerDefine(
                'EMISSIONTEXTURE'
              )),
              (e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine(
                'TILINGOFFSET'
              ));
          }),
          (e.SmoothnessSource_MetallicGlossTexture_Alpha = 0),
          (e.SmoothnessSource_DiffuseTexture_Alpha = 1),
          (e.SHADERDEFINE_DIFFUSETEXTURE = 0),
          (e.SHADERDEFINE_NORMALTEXTURE = 0),
          (e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = 0),
          (e.SHADERDEFINE_SPECULARTEXTURE = 0),
          (e.SHADERDEFINE_OCCLUSIONTEXTURE = 0),
          (e.SHADERDEFINE_PARALLAXTEXTURE = 0),
          (e.SHADERDEFINE_EMISSION = 0),
          (e.SHADERDEFINE_EMISSIONTEXTURE = 0),
          (e.SHADERDEFINE_TILINGOFFSET = 0),
          (e.DIFFUSETEXTURE = 1),
          (e.SPECULARTEXTURE = 2),
          (e.NORMALTEXTURE = 3),
          (e.PARALLAXTEXTURE = 4),
          (e.OCCLUSIONTEXTURE = 5),
          (e.EMISSIONTEXTURE = 6),
          (e.DIFFUSECOLOR = 7),
          (e.SPECULARCOLOR = 8),
          (e.EMISSIONCOLOR = 9),
          (e.SMOOTHNESS = 10),
          (e.SMOOTHNESSSCALE = 11),
          (e.SMOOTHNESSSOURCE = 12),
          (e.OCCLUSIONSTRENGTH = 13),
          (e.NORMALSCALE = 14),
          (e.PARALLAXSCALE = 15),
          (e.ENABLEEMISSION = 16),
          (e.TILINGOFFSET = 17),
          n(e, [
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(),
      zi = (function(t) {
        function e() {
          e.__super.call(this),
            this.setShaderName('PBRStandard'),
            this._setColor(7, new Be(1, 1, 1, 1)),
            this._setColor(8, new Be(0, 0, 0, 0)),
            this._setNumber(9, 0),
            this._setNumber(10, 0.5),
            this._setNumber(11, 1),
            this._setNumber(12, 0),
            this._setNumber(13, 1),
            this._setNumber(14, 1),
            this._setNumber(15, 0.001),
            this._setBool(16, !1),
            this._setNumber(0, 0.5);
        }
        a(e, 'laya.d3.core.material.PBRStandardMaterial', mi);
        var i = e.prototype;
        return (
          r(
            0,
            i,
            'albedoColor',
            function() {
              return this._getColor(7);
            },
            function(t) {
              this._setColor(7, t);
            }
          ),
          r(
            0,
            i,
            'albedoTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_DIFFUSETEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_DIFFUSETEXTURE
                  ),
                this._setTexture(1, t);
            }
          ),
          r(
            0,
            i,
            'enableEmission',
            function() {
              return this._getBool(16);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_EMISSION
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_EMISSION
                  ),
                this._setBool(16, t);
            }
          ),
          r(
            0,
            i,
            'metallicGlossTexture',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_METALLICGLOSSTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_METALLICGLOSSTEXTURE
                  ),
                this._setTexture(2, t);
            }
          ),
          r(
            0,
            i,
            'occlusionTexture',
            function() {
              return this._getTexture(5);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_OCCLUSIONTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_OCCLUSIONTEXTURE
                  ),
                this._setTexture(5, t);
            }
          ),
          r(
            0,
            i,
            'normalTexture',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_NORMALTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_NORMALTEXTURE
                  ),
                this._setTexture(3, t);
            }
          ),
          r(
            0,
            i,
            'parallaxTexture',
            function() {
              return this._getTexture(4);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_PARALLAXTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_PARALLAXTEXTURE
                  ),
                this._setTexture(4, t);
            }
          ),
          r(
            0,
            i,
            'emissionColor',
            function() {
              return this._getColor(8);
            },
            function(t) {
              this._setColor(8, t);
            }
          ),
          r(
            0,
            i,
            'normalTextureScale',
            function() {
              return this._getNumber(14);
            },
            function(t) {
              this._setNumber(14, t);
            }
          ),
          r(
            0,
            i,
            'parallaxTextureScale',
            function() {
              return this._getNumber(15);
            },
            function(t) {
              (t = Math.max(0.005, Math.min(0.08, t))), this._setNumber(15, t);
            }
          ),
          r(
            0,
            i,
            'occlusionTextureStrength',
            function() {
              return this._getNumber(13);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(13, t);
            }
          ),
          r(
            0,
            i,
            'metallic',
            function() {
              return this._getNumber(9);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(9, t);
            }
          ),
          r(
            0,
            i,
            'smoothness',
            function() {
              return this._getNumber(10);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(10, t);
            }
          ),
          r(
            0,
            i,
            'smoothnessTextureScale',
            function() {
              return this._getNumber(11);
            },
            function(t) {
              (t = Math.max(0, Math.min(1, t))), this._setNumber(11, t);
            }
          ),
          r(
            0,
            i,
            'smoothnessSource',
            function() {
              return this._getNumber(12);
            },
            function(t) {
              1 == t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA
                  )
                : (this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA
                  ),
                  (t = 0)),
                this._setNumber(12, t);
            }
          ),
          r(
            0,
            i,
            'emissionTexture',
            function() {
              return this._getTexture(6);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_EMISSIONTEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.PBRStandardMaterial
                      .SHADERDEFINE_EMISSIONTEXTURE
                  ),
                this._setTexture(6, t);
            }
          ),
          r(
            0,
            i,
            'tilingOffset',
            function() {
              return this._getColor(17);
            },
            function(t) {
              if (t) {
                var e = t.elements;
                1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3]
                  ? this._addShaderDefine(
                      laya.d3.core.material.PBRStandardMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.material.PBRStandardMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    );
              } else
                this._removeShaderDefine(
                  laya.d3.core.material.PBRStandardMaterial
                    .SHADERDEFINE_TILINGOFFSET
                );
              this._setColor(17, t);
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DIFFUSETEXTURE = e.shaderDefines.registerDefine(
              'DIFFUSETEXTURE'
            )),
              (e.SHADERDEFINE_METALLICGLOSSTEXTURE = e.shaderDefines.registerDefine(
                'METALLICGLOSSTEXTURE'
              )),
              (e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = e.shaderDefines.registerDefine(
                'SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA'
              )),
              (e.SHADERDEFINE_NORMALTEXTURE = e.shaderDefines.registerDefine(
                'NORMALTEXTURE'
              )),
              (e.SHADERDEFINE_PARALLAXTEXTURE = e.shaderDefines.registerDefine(
                'PARALLAXTEXTURE'
              )),
              (e.SHADERDEFINE_OCCLUSIONTEXTURE = e.shaderDefines.registerDefine(
                'OCCLUSIONTEXTURE'
              )),
              (e.SHADERDEFINE_EMISSION = e.shaderDefines.registerDefine(
                'EMISSION'
              )),
              (e.SHADERDEFINE_EMISSIONTEXTURE = e.shaderDefines.registerDefine(
                'EMISSIONTEXTURE'
              )),
              (e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine(
                'TILINGOFFSET'
              ));
          }),
          (e.SmoothnessSource_MetallicGlossTexture_Alpha = 0),
          (e.SmoothnessSource_DiffuseTexture_Alpha = 1),
          (e.SHADERDEFINE_DIFFUSETEXTURE = 0),
          (e.SHADERDEFINE_NORMALTEXTURE = 0),
          (e.SHADERDEFINE_SMOOTHNESSSOURCE_DIFFUSETEXTURE_ALPHA = 0),
          (e.SHADERDEFINE_METALLICGLOSSTEXTURE = 0),
          (e.SHADERDEFINE_OCCLUSIONTEXTURE = 0),
          (e.SHADERDEFINE_PARALLAXTEXTURE = 0),
          (e.SHADERDEFINE_EMISSION = 0),
          (e.SHADERDEFINE_EMISSIONTEXTURE = 0),
          (e.SHADERDEFINE_TILINGOFFSET = 0),
          (e.DIFFUSETEXTURE = 1),
          (e.METALLICGLOSSTEXTURE = 2),
          (e.NORMALTEXTURE = 3),
          (e.PARALLAXTEXTURE = 4),
          (e.OCCLUSIONTEXTURE = 5),
          (e.EMISSIONTEXTURE = 6),
          (e.DIFFUSECOLOR = 7),
          (e.EMISSIONCOLOR = 8),
          (e.METALLIC = 9),
          (e.SMOOTHNESS = 10),
          (e.SMOOTHNESSSCALE = 11),
          (e.SMOOTHNESSSOURCE = 12),
          (e.OCCLUSIONSTRENGTH = 13),
          (e.NORMALSCALE = 14),
          (e.PARALLAXSCALE = 15),
          (e.ENABLEEMISSION = 16),
          (e.TILINGOFFSET = 17),
          n(e, [
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(),
      ji = (function(t) {
        function e() {
          (this._transformUV = null),
            e.__super.call(this),
            this.setShaderName('SIMPLE'),
            this._setColor(9, new Re(0.6, 0.6, 0.6)),
            this._setColor(10, new Re(1, 1, 1)),
            this._setColor(11, new Be(1, 1, 1, 8)),
            this._setColor(12, new Re(1, 1, 1)),
            this._setColor(7, new Be(1, 1, 1, 1)),
            this._setNumber(0, 0.5),
            this._setColor(15, new Be(1, 1, 0, 0)),
            (this.renderMode = 1);
        }
        a(e, 'laya.d3.core.material.StandardMaterial', t);
        var s = e.prototype;
        return (
          (s.disableLight = function() {
            this._addDisablePublicShaderDefine(
              ci.SHADERDEFINE_POINTLIGHT |
                ci.SHADERDEFINE_SPOTLIGHT |
                ci.SHADERDEFINE_DIRECTIONLIGHT
            );
          }),
          (s.disableFog = function() {
            this._addDisablePublicShaderDefine(ci.SHADERDEFINE_FOG);
          }),
          (s.onAsynLoaded = function(i, n, a) {
            var r = n[0];
            if (r.version) t.prototype.onAsynLoaded.call(this, i, n, a);
            else {
              var s = n[1],
                o = r.props;
              for (var l in o) this[l] = o[l];
              e._parseStandardMaterial(s, this, r), this._endLoaded();
            }
          }),
          (s.cloneTo = function(e) {
            t.prototype.cloneTo.call(this, e);
            var i = e;
            this._transformUV && (i._transformUV = this._transformUV.clone());
          }),
          r(
            0,
            s,
            'ambientColor',
            function() {
              return this._getColor(9);
            },
            function(t) {
              this._setColor(9, t);
            }
          ),
          r(
            0,
            s,
            'ambientTexture',
            function() {
              return this._getTexture(5);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_AMBIENTMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_AMBIENTMAP
                  ),
                this._setTexture(5, t);
            }
          ),
          r(0, s, 'renderMode', null, function(t) {
            switch (t) {
              case 1:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 2:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 0),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 3:
                (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.renderQueue = 2e3),
                  (this.alphaTest = !0),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 4:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 0),
                  (this.alphaTest = !0),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 13:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 14:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 15:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 16:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 5:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 6:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 7:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 8:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 9:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 10:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 11:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 12:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              default:
                throw new Error('Material:renderMode value error.');
            }
            this._conchMaterial && this._conchMaterial.setRenderMode(t);
          }),
          r(
            0,
            s,
            'reflectColor',
            function() {
              return this._getColor(12);
            },
            function(t) {
              this._setColor(12, t);
            }
          ),
          r(
            0,
            s,
            'tilingOffset',
            function() {
              return this._getColor(15);
            },
            function(t) {
              if (t) {
                var e = t.elements;
                1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3]
                  ? this._addShaderDefine(
                      laya.d3.core.material.StandardMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.material.StandardMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    );
              } else
                this._removeShaderDefine(
                  laya.d3.core.material.StandardMaterial
                    .SHADERDEFINE_TILINGOFFSET
                );
              this._setColor(15, t);
            }
          ),
          r(
            0,
            s,
            'albedo',
            function() {
              return this._getColor(7);
            },
            function(t) {
              this._setColor(7, t);
            }
          ),
          r(
            0,
            s,
            'diffuseColor',
            function() {
              return this._getColor(10);
            },
            function(t) {
              this._setColor(10, t);
            }
          ),
          r(
            0,
            s,
            'albedoColor',
            function() {
              return this._getColor(7);
            },
            function(t) {
              this._setColor(7, t);
            }
          ),
          r(
            0,
            s,
            'specularColor',
            function() {
              return this._getColor(11);
            },
            function(t) {
              this._setColor(11, t);
            }
          ),
          r(
            0,
            s,
            'diffuseTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_DIFFUSEMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_DIFFUSEMAP
                  ),
                this._setTexture(1, t);
            }
          ),
          r(
            0,
            s,
            'normalTexture',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_NORMALMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_NORMALMAP
                  ),
                this._setTexture(2, t);
            }
          ),
          r(
            0,
            s,
            'specularTexture',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_SPECULARMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_SPECULARMAP
                  ),
                this._setTexture(3, t);
            }
          ),
          r(
            0,
            s,
            'emissiveTexture',
            function() {
              return this._getTexture(4);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_EMISSIVEMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_EMISSIVEMAP
                  ),
                this._setTexture(4, t);
            }
          ),
          r(
            0,
            s,
            'reflectTexture',
            function() {
              return this._getTexture(6);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_REFLECTMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.material.StandardMaterial
                      .SHADERDEFINE_REFLECTMAP
                  ),
                this._setTexture(6, t);
            }
          ),
          r(
            0,
            s,
            'transformUV',
            function() {
              return this._transformUV;
            },
            function(t) {
              (this._transformUV = t),
                this._setMatrix4x4(13, t.matrix),
                t
                  ? this._addShaderDefine(
                      laya.d3.core.material.StandardMaterial
                        .SHADERDEFINE_UVTRANSFORM
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.material.StandardMaterial
                        .SHADERDEFINE_UVTRANSFORM
                    ),
                this._conchMaterial &&
                  this._conchMaterial.setShaderValue(13, t.matrix.elements, 0);
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DIFFUSEMAP = e.shaderDefines.registerDefine(
              'DIFFUSEMAP'
            )),
              (e.SHADERDEFINE_NORMALMAP = e.shaderDefines.registerDefine(
                'NORMALMAP'
              )),
              (e.SHADERDEFINE_SPECULARMAP = e.shaderDefines.registerDefine(
                'SPECULARMAP'
              )),
              (e.SHADERDEFINE_EMISSIVEMAP = e.shaderDefines.registerDefine(
                'EMISSIVEMAP'
              )),
              (e.SHADERDEFINE_AMBIENTMAP = e.shaderDefines.registerDefine(
                'AMBIENTMAP'
              )),
              (e.SHADERDEFINE_REFLECTMAP = e.shaderDefines.registerDefine(
                'REFLECTMAP'
              )),
              (e.SHADERDEFINE_UVTRANSFORM = e.shaderDefines.registerDefine(
                'UVTRANSFORM'
              )),
              (e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine(
                'TILINGOFFSET'
              )),
              (e.SHADERDEFINE_ADDTIVEFOG = e.shaderDefines.registerDefine(
                'ADDTIVEFOG'
              ));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e._parseStandardMaterial = function(t, e, i) {
            var n = i.customProps,
              a = n.ambientColor;
            e.ambientColor = new Re(a[0], a[1], a[2]);
            var r = n.diffuseColor;
            e.diffuseColor = new Re(r[0], r[1], r[2]);
            var s = n.specularColor;
            e.specularColor = new Be(s[0], s[1], s[2], s[3]);
            var o = n.reflectColor;
            e.reflectColor = new Re(o[0], o[1], o[2]);
            var l = n.albedoColor;
            l && (e.albedo = new Be(l[0], l[1], l[2], l[3]));
            var h = n.diffuseTexture.texture2D;
            h && (e.diffuseTexture = v.getRes(t[h]));
            var c = n.normalTexture.texture2D;
            c && (e.normalTexture = v.getRes(t[c]));
            var u = n.specularTexture.texture2D;
            u && (e.specularTexture = v.getRes(t[u]));
            var _ = n.emissiveTexture.texture2D;
            _ && (e.emissiveTexture = v.getRes(t[_]));
            var d = n.ambientTexture.texture2D;
            d && (e.ambientTexture = v.getRes(t[d]));
            var f = n.reflectTexture.texture2D;
            f && (e.reflectTexture = v.getRes(t[f]));
          }),
          (e.RENDERMODE_OPAQUE = 1),
          (e.RENDERMODE_OPAQUEDOUBLEFACE = 2),
          (e.RENDERMODE_CUTOUT = 3),
          (e.RENDERMODE_CUTOUTDOUBLEFACE = 4),
          (e.RENDERMODE_TRANSPARENT = 13),
          (e.RENDERMODE_TRANSPARENTDOUBLEFACE = 14),
          (e.RENDERMODE_ADDTIVE = 15),
          (e.RENDERMODE_ADDTIVEDOUBLEFACE = 16),
          (e.RENDERMODE_DEPTHREAD_TRANSPARENT = 5),
          (e.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6),
          (e.RENDERMODE_DEPTHREAD_ADDTIVE = 7),
          (e.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8),
          (e.RENDERMODE_NONDEPTH_TRANSPARENT = 9),
          (e.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10),
          (e.RENDERMODE_NONDEPTH_ADDTIVE = 11),
          (e.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12),
          (e.SHADERDEFINE_DIFFUSEMAP = 0),
          (e.SHADERDEFINE_NORMALMAP = 0),
          (e.SHADERDEFINE_SPECULARMAP = 0),
          (e.SHADERDEFINE_EMISSIVEMAP = 0),
          (e.SHADERDEFINE_AMBIENTMAP = 0),
          (e.SHADERDEFINE_REFLECTMAP = 0),
          (e.SHADERDEFINE_UVTRANSFORM = 0),
          (e.SHADERDEFINE_TILINGOFFSET = 0),
          (e.SHADERDEFINE_ADDTIVEFOG = 0),
          (e.DIFFUSETEXTURE = 1),
          (e.NORMALTEXTURE = 2),
          (e.SPECULARTEXTURE = 3),
          (e.EMISSIVETEXTURE = 4),
          (e.AMBIENTTEXTURE = 5),
          (e.REFLECTTEXTURE = 6),
          (e.ALBEDO = 7),
          (e.UVANIAGE = 8),
          (e.MATERIALAMBIENT = 9),
          (e.MATERIALDIFFUSE = 10),
          (e.MATERIALSPECULAR = 11),
          (e.MATERIALREFLECT = 12),
          (e.UVMATRIX = 13),
          (e.UVAGE = 14),
          (e.TILINGOFFSET = 15),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            },
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(mi),
      Wi = (function(t) {
        function e() {
          (this._diffuseScale1 = null),
            (this._diffuseScale2 = null),
            (this._diffuseScale3 = null),
            (this._diffuseScale4 = null),
            e.__super.call(this),
            this.setShaderName('Terrain'),
            (this.renderMode = 1),
            (this._diffuseScale1 = new Ne()),
            (this._diffuseScale2 = new Ne()),
            (this._diffuseScale3 = new Ne()),
            (this._diffuseScale4 = new Ne()),
            (this.ambientColor = new Re(0.6, 0.6, 0.6)),
            (this.diffuseColor = new Re(1, 1, 1)),
            (this.specularColor = new Be(0.2, 0.2, 0.2, 32));
        }
        a(e, 'laya.d3.core.material.TerrainMaterial', t);
        var s = e.prototype;
        return (
          (s.setDiffuseScale1 = function(t, e) {
            (this._diffuseScale1.x = t),
              (this._diffuseScale1.y = e),
              this._setColor(6, this._diffuseScale1);
          }),
          (s.setDiffuseScale2 = function(t, e) {
            (this._diffuseScale2.x = t),
              (this._diffuseScale2.y = e),
              this._setColor(7, this._diffuseScale2);
          }),
          (s.setDiffuseScale3 = function(t, e) {
            (this._diffuseScale3.x = t),
              (this._diffuseScale3.y = e),
              this._setColor(8, this._diffuseScale3);
          }),
          (s.setDiffuseScale4 = function(t, e) {
            (this._diffuseScale4.x = t),
              (this._diffuseScale4.y = e),
              this._setColor(9, this._diffuseScale4);
          }),
          (s.setDetailNum = function(t) {
            switch (t) {
              case 1:
                this._addShaderDefine(
                  laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM1
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM2
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM3
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM4
                  );
                break;
              case 2:
                this._addShaderDefine(
                  laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM2
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM1
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM3
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM4
                  );
                break;
              case 3:
                this._addShaderDefine(
                  laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM3
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM1
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM2
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM4
                  );
                break;
              case 4:
                this._addShaderDefine(
                  laya.d3.core.material.TerrainMaterial.SHADERDEFINE_DETAIL_NUM4
                ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM1
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM2
                  ),
                  this._removeShaderDefine(
                    laya.d3.core.material.TerrainMaterial
                      .SHADERDEFINE_DETAIL_NUM3
                  );
            }
          }),
          (s.disableLight = function() {
            this._addDisablePublicShaderDefine(
              ci.SHADERDEFINE_POINTLIGHT |
                ci.SHADERDEFINE_SPOTLIGHT |
                ci.SHADERDEFINE_DIRECTIONLIGHT
            );
          }),
          (s.setShaderName = function(e) {
            t.prototype.setShaderName.call(this, e);
          }),
          r(0, s, 'renderMode', null, function(t) {
            switch (t) {
              case 1:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.depthTest = 513);
                break;
              case 2:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.depthTest = 515);
                break;
              default:
                throw new Error('TerrainMaterial:renderMode value error.');
            }
            this._conchMaterial && this._conchMaterial.setRenderMode(t);
          }),
          r(
            0,
            s,
            'diffuseTexture2',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              this._setTexture(3, t);
            }
          ),
          r(
            0,
            s,
            'ambientColor',
            function() {
              return this._getColor(10);
            },
            function(t) {
              this._setColor(10, t);
            }
          ),
          r(
            0,
            s,
            'diffuseTexture4',
            function() {
              return this._getTexture(5);
            },
            function(t) {
              this._setTexture(5, t);
            }
          ),
          r(
            0,
            s,
            'diffuseColor',
            function() {
              return this._getColor(11);
            },
            function(t) {
              this._setColor(11, t);
            }
          ),
          r(
            0,
            s,
            'diffuseTexture1',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              this._setTexture(2, t);
            }
          ),
          r(
            0,
            s,
            'specularColor',
            function() {
              return this._getColor(12);
            },
            function(t) {
              this._setColor(12, t);
            }
          ),
          r(
            0,
            s,
            'diffuseTexture3',
            function() {
              return this._getTexture(4);
            },
            function(t) {
              this._setTexture(4, t);
            }
          ),
          r(
            0,
            s,
            'splatAlphaTexture',
            function() {
              return this._getTexture(0);
            },
            function(t) {
              this._setTexture(0, t);
            }
          ),
          r(
            0,
            s,
            'normalTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              this._setTexture(1, t);
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DETAIL_NUM1 = e.shaderDefines.registerDefine(
              'DETAIL_NUM1'
            )),
              (e.SHADERDEFINE_DETAIL_NUM2 = e.shaderDefines.registerDefine(
                'DETAIL_NUM2'
              )),
              (e.SHADERDEFINE_DETAIL_NUM4 = e.shaderDefines.registerDefine(
                'DETAIL_NUM4'
              )),
              (e.SHADERDEFINE_DETAIL_NUM3 = e.shaderDefines.registerDefine(
                'DETAIL_NUM3'
              ));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.RENDERMODE_OPAQUE = 1),
          (e.RENDERMODE_TRANSPARENT = 2),
          (e.SPLATALPHATEXTURE = 0),
          (e.NORMALTEXTURE = 1),
          (e.DIFFUSETEXTURE1 = 2),
          (e.DIFFUSETEXTURE2 = 3),
          (e.DIFFUSETEXTURE3 = 4),
          (e.DIFFUSETEXTURE4 = 5),
          (e.DIFFUSESCALE1 = 6),
          (e.DIFFUSESCALE2 = 7),
          (e.DIFFUSESCALE3 = 8),
          (e.DIFFUSESCALE4 = 9),
          (e.MATERIALAMBIENT = 10),
          (e.MATERIALDIFFUSE = 11),
          (e.MATERIALSPECULAR = 12),
          (e.SHADERDEFINE_DETAIL_NUM1 = 0),
          (e.SHADERDEFINE_DETAIL_NUM2 = 0),
          (e.SHADERDEFINE_DETAIL_NUM3 = 0),
          (e.SHADERDEFINE_DETAIL_NUM4 = 0),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            },
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(mi),
      Xi = (function(t) {
        function e() {
          (this._useVertexDeep = !1),
            e.__super.call(this),
            this.setShaderName('Water');
        }
        a(e, 'laya.d3.core.material.WaterMaterial', t);
        var s = e.prototype;
        return (
          (s.disableFog = function() {
            this._addDisablePublicShaderDefine(ci.SHADERDEFINE_FOG);
          }),
          (s.onAsynLoaded = function(e, i, n) {
            t.prototype.onAsynLoaded.call(this, e, i, n);
          }),
          r(
            0,
            s,
            'diffuseTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              this._setTexture(1, t);
            }
          ),
          r(
            0,
            s,
            'normalTexture',
            function() {
              return this._getTexture(2);
            },
            function(t) {
              this._setTexture(2, t);
            }
          ),
          r(
            0,
            s,
            'underWaterTexture',
            function() {
              return this._getTexture(3);
            },
            function(t) {
              this._setTexture(3, t);
            }
          ),
          r(
            0,
            s,
            'deepColorTexture',
            function() {
              return this._getTexture(10);
            },
            function(t) {
              this._setTexture(10, t);
            }
          ),
          r(0, s, 'useFoam', null, function(t) {
            t
              ? this._addShaderDefine(e.SHADERDEFINE_USE_FOAM)
              : this._removeShaderDefine(e.SHADERDEFINE_USE_FOAM);
          }),
          r(
            0,
            s,
            'skyTexture',
            function() {
              return this._getTexture(11);
            },
            function(t) {
              this._setTexture(11, t);
            }
          ),
          r(
            0,
            s,
            'deepScale',
            function() {
              return this._getNumber(20);
            },
            function(t) {
              this._setNumber(20, t);
            }
          ),
          r(
            0,
            s,
            'detailTexture',
            function() {
              return this._getTexture(9);
            },
            function(t) {
              this._setTexture(9, t);
            }
          ),
          r(
            0,
            s,
            'foamTexture',
            function() {
              return this._getTexture(17);
            },
            function(t) {
              this._setTexture(17, t);
            }
          ),
          r(
            0,
            s,
            'waterInfoTexture',
            function() {
              return this._getTexture(16);
            },
            function(t) {
              this._setTexture(16, t);
            }
          ),
          r(
            0,
            s,
            'vertexDispTexture',
            function() {
              return this._getTexture(4);
            },
            function(t) {
              this._setTexture(4, t);
            }
          ),
          r(
            0,
            s,
            'currentTm',
            function() {
              return this._getNumber(8);
            },
            function(t) {
              this._setNumber(8, t);
            }
          ),
          r(
            0,
            s,
            'waveInfo',
            function() {
              return this._getBuffer(12);
            },
            function(t) {
              this._setBuffer(12, t);
            }
          ),
          r(
            0,
            s,
            'waveInfoD',
            function() {
              return this._getBuffer(13);
            },
            function(t) {
              this._setBuffer(13, t);
            }
          ),
          r(
            0,
            s,
            'waveMainDir',
            function() {
              return this._getNumber(14);
            },
            function(t) {
              this._setNumber(14, (t * Math.PI) / 180);
            }
          ),
          r(
            0,
            s,
            'geoWaveUVScale',
            function() {
              return this._getNumber(18);
            },
            function(t) {
              this._setNumber(18, t);
            }
          ),
          r(
            0,
            s,
            'windSpeed',
            function() {
              return 0;
            },
            function(t) {}
          ),
          r(0, s, 'scrsize', null, function(t) {
            this._setBuffer(15, t);
          }),
          r(
            0,
            s,
            'seaColor',
            function() {
              return this._getBuffer(19);
            },
            function(t) {
              this._setBuffer(19, t);
            }
          ),
          r(
            0,
            s,
            'useVertexDeep',
            function() {
              return this._useVertexDeep;
            },
            function(t) {
              (this._useVertexDeep = t),
                t
                  ? this._addShaderDefine(e.SHADERDEFINE_USEVERTEXHEIGHT)
                  : this._removeShaderDefine(e.SHADERDEFINE_USEVERTEXHEIGHT);
            }
          ),
          r(
            0,
            s,
            'windDir',
            function() {
              return 0;
            },
            function(t) {}
          ),
          r(0, s, 'useRefractTexture', null, function(t) {
            t
              ? this._addShaderDefine(e.SHADERDEFINE_USE_REFRACT_TEX)
              : this._removeShaderDefine(e.SHADERDEFINE_USE_REFRACT_TEX);
          }),
          r(0, s, 'renderMode', null, function(t) {
            switch (t) {
              case 1:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.alphaTest = !1);
                break;
              case 2:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 0),
                  (this.alphaTest = !1);
                break;
              case 3:
                (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.renderQueue = 2e3);
                break;
              case 13:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771);
                break;
              default:
                throw new Error('PBRMaterial:renderMode value error.');
            }
          }),
          (e.__init__ = function() {
            (e.SHADERDEFINE_CUBE_ENV = e.shaderDefines.registerDefine(
              'CUBE_ENV'
            )),
              (e.SHADERDEFINE_HDR_ENV = e.shaderDefines.registerDefine(
                'HDR_ENV'
              )),
              (e.SHADERDEFINE_SHOW_NORMAL = e.shaderDefines.registerDefine(
                'SHOW_NORMAL'
              )),
              (e.SHADERDEFINE_USEVERTEXHEIGHT = e.shaderDefines.registerDefine(
                'USE_VERTEX_DEEPINFO'
              )),
              (e.SHADERDEFINE_USE_FOAM = e.shaderDefines.registerDefine(
                'USE_FOAM'
              )),
              (e.SHADERDEFINE_USE_REFRACT_TEX = e.shaderDefines.registerDefine(
                'USE_REFR_TEX'
              ));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.DIFFUSETEXTURE = 1),
          (e.NORMALTEXTURE = 2),
          (e.UNDERWATERTEXTURE = 3),
          (e.VERTEXDISPTEXTURE = 4),
          (e.UVANIAGE = 5),
          (e.UVMATRIX = 6),
          (e.UVAGE = 7),
          (e.CURTM = 8),
          (e.DETAILTEXTURE = 9),
          (e.DEEPCOLORTEXTURE = 10),
          (e.SKYTEXTURE = 11),
          (e.WAVEINFO = 12),
          (e.WAVEINFOD = 13),
          (e.WAVEMAINDIR = 14),
          (e.SCRSIZE = 15),
          (e.WATERINFO = 16),
          (e.FOAMTEXTURE = 17),
          (e.GEOWAVE_UV_SCALE = 18),
          (e.SEA_COLOR = 19),
          (e.WAVEINFODEEPSCALE = 20),
          (e.SHADERDEFINE_SHOW_NORMAL = 0),
          (e.SHADERDEFINE_CUBE_ENV = 0),
          (e.SHADERDEFINE_HDR_ENV = 0),
          (e.SHADERDEFINE_USE_FOAM = 0),
          (e.SHADERDEFINE_USE_REFRACT_TEX = 0),
          (e.SHADERDEFINE_USEVERTEXHEIGHT = 0),
          (e.RENDERMODE_OPAQUE = 1),
          (e.RENDERMODE_OPAQUEDOUBLEFACE = 2),
          (e.RENDERMODE_CUTOUT = 3),
          (e.RENDERMODE_CUTOUTDOUBLEFACE = 4),
          (e.RENDERMODE_TRANSPARENT = 13),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            },
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(mi),
      qi = (function(t) {
        function e(t, i, n, a) {
          (this._indexType = null),
            (this._indexTypeByteCount = 0),
            (this._indexCount = 0),
            (this._canRead = !1),
            void 0 === n && (n = 35044),
            void 0 === a && (a = !1),
            e.__super.call(this),
            (this._indexType = t),
            (this._indexCount = i),
            (this._bufferUsage = n),
            (this._bufferType = 34963),
            (this._canRead = a);
          var r = 0;
          if ('ushort' == t) this._indexTypeByteCount = 2;
          else {
            if ('ubyte' != t) throw new Error('unidentification index type.');
            this._indexTypeByteCount = 1;
          }
          (r = this._indexTypeByteCount * i),
            (this._byteLength = r),
            this._bind(),
            d._gl.bufferData(this._bufferType, r, this._bufferUsage),
            a
              ? ('ushort' == t
                  ? (this._buffer = new Uint16Array(i))
                  : 'ubyte' == t && (this._buffer = new Uint8Array(i)),
                (this.memorySize = 2 * r))
              : (this.memorySize = r);
        }
        a(e, 'laya.d3.graphics.IndexBuffer3D', t);
        var i = e.prototype;
        return (
          (i.setData = function(t, e, i, n) {
            void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              void 0 === n && (n = 4294967295);
            var a = 0;
            if (
              ('ushort' == this._indexType
                ? ((a = 2),
                  (0 === i && 4294967295 === n) ||
                    (t = new Uint16Array(t.buffer, i * a, n)))
                : 'ubyte' == this._indexType &&
                  ((a = 1),
                  (0 === i && 4294967295 === n) ||
                    (t = new Uint8Array(t.buffer, i * a, n))),
              this._bind(),
              d._gl.bufferSubData(this._bufferType, e * a, t),
              this._canRead)
            )
              if (0 !== e || 0 !== i || 4294967295 !== n) {
                var r = this._buffer.length - e;
                n > r && (n = r);
                for (var s = 0; s < n; s++) this._buffer[e + s] = t[s];
              } else this._buffer = t;
          }),
          (i.getData = function() {
            if (this._canRead) return this._buffer;
            throw new Error(
              "Can't read data from VertexBuffer with only write flag!"
            );
          }),
          (i.disposeResource = function() {
            t.prototype.disposeResource.call(this),
              (this._buffer = null),
              (this.memorySize = 0);
          }),
          r(0, i, 'indexType', function() {
            return this._indexType;
          }),
          r(0, i, 'indexTypeByteCount', function() {
            return this._indexTypeByteCount;
          }),
          r(0, i, 'indexCount', function() {
            return this._indexCount;
          }),
          r(0, i, 'canRead', function() {
            return this._canRead;
          }),
          (e.INDEXTYPE_UBYTE = 'ubyte'),
          (e.INDEXTYPE_USHORT = 'ushort'),
          (e.create = function(t, i, n, a) {
            return (
              void 0 === n && (n = 35044),
              void 0 === a && (a = !1),
              new e(t, i, n, a)
            );
          }),
          e
        );
      })(d),
      Yi = (function(t) {
        function e(t, i, n, a) {
          (this._vertexDeclaration = null),
            (this._vertexCount = 0),
            (this._canRead = !1),
            void 0 === a && (a = !1),
            e.__super.call(this),
            (this._vertexDeclaration = t),
            (this._vertexCount = i),
            (this._bufferUsage = n),
            (this._bufferType = 34962),
            (this._canRead = a),
            (this.memorySize = this._byteLength =
              this._vertexDeclaration.vertexStride * i),
            this._bind(),
            d._gl.bufferData(
              this._bufferType,
              this._byteLength,
              this._bufferUsage
            ),
            a && (this._buffer = new Float32Array(this._byteLength / 4));
        }
        a(e, 'laya.d3.graphics.VertexBuffer3D', t);
        var i = e.prototype;
        return (
          (i.bindWithIndexBuffer = function(t) {
            t && t._bind(), this._bind();
          }),
          (i.setData = function(t, e, i, n) {
            if (
              (void 0 === e && (e = 0),
              void 0 === i && (i = 0),
              void 0 === n && (n = 4294967295),
              (0 === i && 4294967295 === n) ||
                (t = new Float32Array(t.buffer, 4 * i, n)),
              this._bind(),
              d._gl.bufferSubData(this._bufferType, 4 * e, t),
              this._canRead)
            )
              if (0 !== e || 0 !== i || 4294967295 !== n) {
                var a = this._buffer.length - e;
                n > a && (n = a);
                for (var r = 0; r < n; r++) this._buffer[e + r] = t[r];
              } else this._buffer = t;
          }),
          (i.getData = function() {
            if (this._canRead) return this._buffer;
            throw new Error(
              "Can't read data from VertexBuffer with only write flag!"
            );
          }),
          (i.disposeResource = function() {
            for (
              var e = R.mainContext,
                i = this._vertexDeclaration.getVertexElements(),
                n = d._enableAtributes,
                a = 0,
                r = i.length;
              a < r;
              a++
            )
              n[a] === this._glBuffer &&
                (e.disableVertexAttribArray(a), (n[a] = null));
            t.prototype.disposeResource.call(this),
              (this._buffer = null),
              (this._vertexDeclaration = null),
              (this.memorySize = 0);
          }),
          r(0, i, 'vertexDeclaration', function() {
            return this._vertexDeclaration;
          }),
          r(0, i, 'vertexCount', function() {
            return this._vertexCount;
          }),
          r(0, i, 'canRead', function() {
            return this._canRead;
          }),
          (e.create = function(t, i, n, a) {
            return (
              void 0 === n && (n = 35044),
              void 0 === a && (a = !1),
              new e(t, i, n, a)
            );
          }),
          e
        );
      })(d),
      Ji = (function(t) {
        function e() {
          e.__super.call(this),
            this.setShaderName('PARTICLESHURIKEN'),
            (this.renderMode = 6);
        }
        a(e, 'laya.d3.core.particleShuriKen.ShurikenParticleMaterial', t);
        var s = e.prototype;
        return (
          (s.onAsynLoaded = function(i, n, a) {
            var r = n[0];
            if (r.version) t.prototype.onAsynLoaded.call(this, i, n, a);
            else {
              var s = n[1],
                o = r.props;
              for (var l in o) this[l] = o[l];
              e._parseShurikenParticleMaterial(s, this, r), this._endLoaded();
            }
          }),
          r(0, s, 'renderMode', null, function(t) {
            switch (t) {
              case 1:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 2:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 0),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 3:
                (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 0),
                  (this.renderQueue = 2e3),
                  (this.alphaTest = !0),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 4:
                (this.renderQueue = 2e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 0),
                  (this.alphaTest = !0),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 13:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 14:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 15:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 16:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !0),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 5:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 6:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 7:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 8:
                (this.renderQueue = 3e3),
                  (this.depthWrite = !1),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 9:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 10:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 771),
                  (this.alphaTest = !1),
                  this._removeShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 11:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 2),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              case 12:
                (this.renderQueue = 3e3),
                  (this.depthTest = 513),
                  (this.cull = 0),
                  (this.blend = 1),
                  (this.srcBlend = 770),
                  (this.dstBlend = 1),
                  (this.alphaTest = !1),
                  this._addShaderDefine(e.SHADERDEFINE_ADDTIVEFOG);
                break;
              default:
                throw new Error('Material:renderMode value error.');
            }
            this._conchMaterial && this._conchMaterial.setRenderMode(t);
          }),
          r(
            0,
            s,
            'tintColor',
            function() {
              return this._getColor(2);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.particleShuriKen.ShurikenParticleMaterial
                      .SHADERDEFINE_TINTCOLOR
                  )
                : this._removeShaderDefine(
                    laya.d3.core.particleShuriKen.ShurikenParticleMaterial
                      .SHADERDEFINE_TINTCOLOR
                  ),
                this._setColor(2, t);
            }
          ),
          r(
            0,
            s,
            'tilingOffset',
            function() {
              return this._getColor(3);
            },
            function(t) {
              if (t) {
                var e = t.elements;
                1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3]
                  ? this._addShaderDefine(
                      laya.d3.core.particleShuriKen.ShurikenParticleMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.particleShuriKen.ShurikenParticleMaterial
                        .SHADERDEFINE_TILINGOFFSET
                    );
              } else
                this._removeShaderDefine(
                  laya.d3.core.particleShuriKen.ShurikenParticleMaterial
                    .SHADERDEFINE_TILINGOFFSET
                );
              this._setColor(3, t);
            }
          ),
          r(
            0,
            s,
            'diffuseTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.particleShuriKen.ShurikenParticleMaterial
                      .SHADERDEFINE_DIFFUSEMAP
                  )
                : this._removeShaderDefine(
                    laya.d3.core.particleShuriKen.ShurikenParticleMaterial
                      .SHADERDEFINE_DIFFUSEMAP
                  ),
                this._setTexture(1, t);
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DIFFUSEMAP = e.shaderDefines.registerDefine(
              'DIFFUSEMAP'
            )),
              (e.SHADERDEFINE_TINTCOLOR = e.shaderDefines.registerDefine(
                'TINTCOLOR'
              )),
              (e.SHADERDEFINE_ADDTIVEFOG = e.shaderDefines.registerDefine(
                'ADDTIVEFOG'
              )),
              (e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine(
                'TILINGOFFSET'
              ));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e._parseShurikenParticleMaterial = function(t, e, i) {
            var n = i.customProps,
              a = n.diffuseTexture.texture2D;
            a && (e.diffuseTexture = v.getRes(t[a]));
            var r = n.tintColor;
            r && (e.tintColor = new Be(r[0], r[1], r[2], r[3]));
          }),
          (e.RENDERMODE_OPAQUE = 1),
          (e.RENDERMODE_OPAQUEDOUBLEFACE = 2),
          (e.RENDERMODE_CUTOUT = 3),
          (e.RENDERMODE_CUTOUTDOUBLEFACE = 4),
          (e.RENDERMODE_TRANSPARENT = 13),
          (e.RENDERMODE_TRANSPARENTDOUBLEFACE = 14),
          (e.RENDERMODE_ADDTIVE = 15),
          (e.RENDERMODE_ADDTIVEDOUBLEFACE = 16),
          (e.RENDERMODE_DEPTHREAD_TRANSPARENT = 5),
          (e.RENDERMODE_DEPTHREAD_TRANSPARENTDOUBLEFACE = 6),
          (e.RENDERMODE_DEPTHREAD_ADDTIVE = 7),
          (e.RENDERMODE_DEPTHREAD_ADDTIVEDOUBLEFACE = 8),
          (e.RENDERMODE_NONDEPTH_TRANSPARENT = 9),
          (e.RENDERMODE_NONDEPTH_TRANSPARENTDOUBLEFACE = 10),
          (e.RENDERMODE_NONDEPTH_ADDTIVE = 11),
          (e.RENDERMODE_NONDEPTH_ADDTIVEDOUBLEFACE = 12),
          (e.SHADERDEFINE_DIFFUSEMAP = 0),
          (e.SHADERDEFINE_TINTCOLOR = 0),
          (e.SHADERDEFINE_TILINGOFFSET = 0),
          (e.SHADERDEFINE_ADDTIVEFOG = 0),
          (e.DIFFUSETEXTURE = 1),
          (e.TINTCOLOR = 2),
          (e.TILINGOFFSET = 3),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            },
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(mi),
      Ki = (function(t) {
        function e() {
          e.__super.call(this),
            this.setShaderName('Trail'),
            this._setColor(2, new Be(1, 1, 1, 1));
        }
        a(e, 'laya.d3.core.trail.TrailMaterial', mi);
        var s = e.prototype;
        return (
          r(
            0,
            s,
            'tintColor',
            function() {
              return this._getColor(2);
            },
            function(t) {
              this._setColor(2, t);
            }
          ),
          r(
            0,
            s,
            'diffuseTexture',
            function() {
              return this._getTexture(1);
            },
            function(t) {
              t
                ? this._addShaderDefine(
                    laya.d3.core.trail.TrailMaterial.SHADERDEFINE_DIFFUSETEXTURE
                  )
                : this._removeShaderDefine(
                    laya.d3.core.trail.TrailMaterial.SHADERDEFINE_DIFFUSETEXTURE
                  ),
                this._setTexture(1, t);
            }
          ),
          r(
            0,
            s,
            'tilingOffset',
            function() {
              return this._getColor(3);
            },
            function(t) {
              if (t) {
                var e = t.elements;
                1 != e[0] || 1 != e[1] || 0 != e[2] || 0 != e[3]
                  ? this._addShaderDefine(
                      laya.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET
                    )
                  : this._removeShaderDefine(
                      laya.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET
                    );
              } else
                this._removeShaderDefine(
                  laya.d3.core.trail.TrailMaterial.SHADERDEFINE_TILINGOFFSET
                );
              this._setColor(3, t);
            }
          ),
          (e.__init__ = function() {
            (e.SHADERDEFINE_DIFFUSETEXTURE = e.shaderDefines.registerDefine(
              'DIFFUSETEXTURE'
            )),
              (e.SHADERDEFINE_TILINGOFFSET = e.shaderDefines.registerDefine(
                'TILINGOFFSET'
              ));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.SHADERDEFINE_DIFFUSETEXTURE = 0),
          (e.SHADERDEFINE_TILINGOFFSET = 0),
          (e.DIFFUSETEXTURE = 1),
          (e.TINTCOLOR = 2),
          (e.TILINGOFFSET = 3),
          n(e, [
            'defaultMaterial',
            function() {
              return (this.defaultMaterial = new e());
            },
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(mi.shaderDefines));
            }
          ]),
          e
        );
      })(),
      Zi =
        ((function(t) {
          function e() {
            (this._animationSprites = null),
              (this._animationSpritesInitLocalMatrix = null),
              (this._tempCurAnimationData = null),
              (this._curOriginalData = null),
              (this._lastFrameIndex = -1),
              (this._curAnimationDatas = null),
              e.__super.call(this),
              (this._animationSprites = []),
              (this._animationSpritesInitLocalMatrix = []);
          }
          a(e, 'laya.d3.component.animation.RigidAnimations', t);
          var n = e.prototype;
          (n._init = function() {
            for (
              var t = this._templet.getNodes(this.currentAnimationClipIndex),
                e = this._owner,
                i = t.length,
                n = 0,
                a = new Uint16Array(this._templet.getPublicExtData()),
                r = 0;
              r < i;
              r++
            ) {
              var s = a.slice(n + 1, n + 1 + a[n]);
              n += a[n] + 1;
              for (var o = 1; o < s.length; o++) {
                s[o];
                e = e._childs[s[o]];
              }
              var l = e.getChildByName(t[r].name);
              if (!l) break;
              this._animationSprites[r] = l;
              var h = this._animationSpritesInitLocalMatrix[r];
              h || (h = this._animationSpritesInitLocalMatrix[r] = new Te()),
                l.transform.localMatrix.cloneTo(h),
                (e = this._owner);
            }
          }),
            (n._animtionPlay = function() {
              this._templet.loaded
                ? this._init()
                : this._templet.once('loaded', this, this._init);
            }),
            (n._animtionStop = function() {
              if (
                ((this._lastFrameIndex = -1), this._player.returnToZeroStopped)
              ) {
                this._curAnimationDatas = null;
                for (var t = 0; t < this._animationSprites.length; t++)
                  this._animationSprites[
                    t
                  ].transform.localMatrix = this._animationSpritesInitLocalMatrix[
                    t
                  ];
              }
            }),
            (n._effectAnimation = function(t) {
              for (var e = 0, i = this._animationSprites.length; e < i; e++) {
                for (
                  var n = this._animationSprites[e],
                    a = n.transform.localMatrix,
                    r = a.elements,
                    s = 0;
                  s < 16;
                  s++
                )
                  r[s] = this._curAnimationDatas[16 * e + s];
                n.transform.localMatrix = a;
              }
            }),
            (n._load = function(e) {
              t.prototype._load.call(this, e),
                this._player.on('stopped', this, this._animtionStop),
                this._player.on('played', this, this._animtionPlay);
            }),
            (n._update = function(t) {
              if (
                2 === this._player.state &&
                this._templet &&
                this._templet.loaded
              ) {
                var e = this._player.playbackRate * i.timer.scale,
                  n = this._player.cachePlayRate,
                  a = this._player.isCache && e >= n,
                  r = a ? this.currentFrameIndex : -1;
                if (-1 === r || this._lastFrameIndex !== r) {
                  var s = this.currentAnimationClipIndex,
                    o = this._templet.getNodes(s),
                    l = this._templet._animationDatasCache;
                  if (a) {
                    var h = this._templet.getAnimationDataWithCache(n, l, s, r);
                    if (h)
                      return (
                        (this._curAnimationDatas = h),
                        (this._lastFrameIndex = r),
                        void this._effectAnimation(o)
                      );
                  }
                  var c = 16 * o.length;
                  a
                    ? (this._curAnimationDatas = new Float32Array(c))
                    : (this._tempCurAnimationData ||
                        (this._tempCurAnimationData = new Float32Array(c)),
                      (this._curAnimationDatas = this._tempCurAnimationData)),
                    this._curOriginalData ||
                      (this._curOriginalData = new Float32Array(
                        this._templet.getTotalkeyframesLength(s)
                      )),
                    a
                      ? this._templet.getOriginalData(
                          s,
                          this._curOriginalData,
                          this._player._fullFrames[s],
                          r,
                          this._player.currentFrameTime
                        )
                      : this._templet.getOriginalDataUnfixedRate(
                          s,
                          this._curOriginalData,
                          this._player.currentPlayTime
                        ),
                    Ke._computeRootAnimationData(
                      o,
                      this._curOriginalData,
                      this._curAnimationDatas
                    ),
                    a &&
                      this._templet.setAnimationDataWithCache(
                        n,
                        l,
                        s,
                        r,
                        this._curAnimationDatas
                      ),
                    (this._lastFrameIndex = r),
                    this._effectAnimation(o);
                }
              }
            }),
            (n._unload = function(e) {
              t.prototype._unload.call(this, e),
                (this._animationSprites = null),
                (this._animationSpritesInitLocalMatrix = null),
                (this._tempCurAnimationData = null),
                (this._curOriginalData = null),
                (this._curAnimationDatas = null);
            }),
            r(0, n, 'url', null, function(t) {
              console.log(
                'Warning: discard property,please use templet property instead.'
              );
              var e = i.loader.create(t, null, null, l);
              this._templet !== e &&
                (0 !== this._player.state && this._player.stop(!0),
                (this._templet = e),
                (this._player.templet = e),
                (this._curOriginalData = null),
                (this._curAnimationDatas = null),
                (this._tempCurAnimationData = null),
                this._templet._animationDatasCache ||
                  (this._templet._animationDatasCache = []),
                this.event('animationchanged', this));
            }),
            r(0, n, 'templet', t.prototype._$get_templet, function(t) {
              this._templet !== t &&
                (0 !== this._player.state && this._player.stop(!0),
                (this._templet = t),
                (this._player.templet = t),
                (this._curOriginalData = null),
                (this._curAnimationDatas = null),
                (this._tempCurAnimationData = null),
                this._templet._animationDatasCache ||
                  (this._templet._animationDatasCache = []),
                this.event('animationchanged', this));
            });
        })(wi),
        (function(t) {
          function e() {
            (this._tempCurAnimationData = null),
              (this._tempCurBonesData = null),
              (this._curOriginalData = null),
              (this._lastFrameIndex = -1),
              (this._curMeshAnimationData = null),
              (this._curBonesDatas = null),
              (this._curAnimationDatas = null),
              (this._ownerMesh = null),
              (this._boneIndexToMeshList = null),
              (this._oldVersion = !1),
              e.__super.call(this),
              (this._boneIndexToMeshList = []);
          }
          a(e, 'laya.d3.component.animation.SkinAnimations', t);
          var n = e.prototype;
          return (
            (n._computeBoneIndexToMeshOnTemplet = function() {
              this._templet.loaded
                ? this._computeBoneIndexToMeshOnMesh()
                : this._templet.once(
                    'loaded',
                    this,
                    this._computeBoneIndexToMeshOnMesh
                  );
            }),
            (n._computeBoneIndexToMeshOnMesh = function() {
              'LAYAANIMATION:02' === this._templet._aniVersion
                ? (this._oldVersion = !1)
                : (this._oldVersion = !0);
              var t = this._owner.meshFilter.sharedMesh;
              t.loaded
                ? this._computeBoneIndexToMesh(t)
                : t.on('loaded', this, this._computeBoneIndexToMesh);
            }),
            (n._computeBoneIndexToMesh = function(t) {
              var e = t._boneNames;
              if (e)
                for (
                  var i = e.length,
                    n = this._templet._anis,
                    a = 0,
                    r = n.length;
                  a < r;
                  a++
                ) {
                  var s = this._boneIndexToMeshList[a];
                  s || (s = this._boneIndexToMeshList[a] = []), (s.length = i);
                  for (var o = n[a], l = 0; l < i; l++)
                    s[l] = o.bone3DMap[e[l]];
                }
            }),
            (n._getAnimationDatasWithCache = function(t, e, i, n, a) {
              var r = i[n];
              if (r) {
                var s = r[t];
                if (s) {
                  var o = s[e.id];
                  return o ? o[a] : null;
                }
                return null;
              }
              return null;
            }),
            (n._setAnimationDatasWithCache = function(t, e, i, n, a, r) {
              var s = i[n] || (i[n] = {}),
                o = s[t] || (s[t] = {});
              (o[e.id] || (o[e.id] = []))[a] = r;
            }),
            (n._onAnimationPlayMeshLoaded = function() {
              for (
                var t = this._ownerMesh.meshRender._renderElements,
                  e = 0,
                  i = t.length;
                e < i;
                e++
              )
                t[e]._canDynamicBatch = !1;
            }),
            (n._onAnimationPlay = function() {
              this._ownerMesh._render._addShaderDefine(vn.SHADERDEFINE_BONE);
              var t = this._ownerMesh.meshFilter.sharedMesh;
              t.loaded
                ? this._onAnimationPlayMeshLoaded()
                : t.once('loaded', this, this._onAnimationPlayMeshLoaded);
            }),
            (n._onAnimationStop = function() {
              (this._lastFrameIndex = -1),
                this._player.returnToZeroStopped &&
                  ((this._curBonesDatas = null),
                  (this._curAnimationDatas = null),
                  this._ownerMesh._render._removeShaderDefine(
                    vn.SHADERDEFINE_BONE
                  ));
              for (
                var t = this._ownerMesh.meshRender._renderElements,
                  e = 0,
                  i = t.length;
                e < i;
                e++
              )
                t[e]._canDynamicBatch = !0;
            }),
            (n._load = function(e) {
              t.prototype._load.call(this, e),
                (this._ownerMesh = e),
                this._player.on('played', this, this._onAnimationPlay),
                this._player.on('stopped', this, this._onAnimationStop),
                this._owner.meshFilter.on(
                  'meshchanged',
                  this,
                  this._computeBoneIndexToMeshOnTemplet
                );
            }),
            (n._update = function(t) {
              var n = this._ownerMesh.meshFilter.sharedMesh;
              if (
                2 === this._player.state &&
                this._templet &&
                this._templet.loaded &&
                n.loaded
              ) {
                var a = this._player.playbackRate * i.timer.scale,
                  r = this._player.cachePlayRate,
                  s = this._player.isCache && a >= r,
                  o = s ? this.currentFrameIndex : -1;
                if (-1 === o || this._lastFrameIndex !== o) {
                  var l = this.currentAnimationClipIndex,
                    h = this._templet._animationDatasCache[0],
                    c = this._templet._animationDatasCache[1];
                  if (s) {
                    var u = this._getAnimationDatasWithCache(r, n, c, l, o);
                    if (u)
                      return (
                        (this._curAnimationDatas = u),
                        (this._curBonesDatas = this._templet.getAnimationDataWithCache(
                          r,
                          h,
                          l,
                          o
                        )),
                        void (this._lastFrameIndex = o)
                      );
                  }
                  var _ = !1;
                  s &&
                    ((this._curBonesDatas = this._templet.getAnimationDataWithCache(
                      r,
                      h,
                      l,
                      o
                    )),
                    (_ = !!this._curBonesDatas));
                  var d = this._templet.getNodes(l),
                    f = 16 * d.length,
                    p = n.InverseAbsoluteBindPoses;
                  this._oldVersion
                    ? this._curMeshAnimationData ||
                      (this._curMeshAnimationData = new Float32Array(f))
                    : this._curMeshAnimationData ||
                      (this._curMeshAnimationData = new Float32Array(
                        16 * p.length
                      ));
                  var m,
                    g,
                    y = 0,
                    v = 0,
                    b = 0,
                    w = n.getSubMeshCount();
                  if (s) {
                    for (
                      this._curAnimationDatas = [],
                        this._curAnimationDatas.length = w,
                        y = 0;
                      y < w;
                      y++
                    )
                      for (
                        m = this._curAnimationDatas[y] = [],
                          b = (g = n.getSubMesh(y))._boneIndicesList.length,
                          m.length = b,
                          v = 0;
                        v < b;
                        v++
                      )
                        m[v] = new Float32Array(
                          16 * g._boneIndicesList[v].length
                        );
                    _ || (this._curBonesDatas = new Float32Array(f));
                  } else {
                    if (!this._tempCurAnimationData)
                      for (
                        this._tempCurAnimationData = [],
                          this._tempCurAnimationData.length = w,
                          y = 0;
                        y < w;
                        y++
                      )
                        for (
                          m = this._tempCurAnimationData[y] = [],
                            b = (g = n.getSubMesh(y))._boneIndicesList.length,
                            m.length = b,
                            v = 0;
                          v < b;
                          v++
                        )
                          m[v] = new Float32Array(
                            16 * g._boneIndicesList[v].length
                          );
                    this._tempCurBonesData ||
                      (this._tempCurBonesData = new Float32Array(f)),
                      (this._curAnimationDatas = this._tempCurAnimationData),
                      (this._curBonesDatas = this._tempCurBonesData);
                  }
                  if (
                    (this._curOriginalData ||
                      (this._curOriginalData = new Float32Array(
                        this._templet.getTotalkeyframesLength(l)
                      )),
                    s
                      ? this._templet.getOriginalData(
                          l,
                          this._curOriginalData,
                          this._player._fullFrames[l],
                          o,
                          this._player.currentFrameTime
                        )
                      : this._templet.getOriginalDataUnfixedRate(
                          l,
                          this._curOriginalData,
                          this._player.currentPlayTime
                        ),
                    this._oldVersion)
                  )
                    s && _
                      ? Ke._computeAnimationDatasByArrayAndMatrixFastOld(
                          p,
                          this._curBonesDatas,
                          this._curMeshAnimationData
                        )
                      : Ke._computeBoneAndAnimationDatasByBindPoseMatrxixOld(
                          d,
                          this._curOriginalData,
                          p,
                          this._curBonesDatas,
                          this._curMeshAnimationData
                        );
                  else {
                    var x = this._boneIndexToMeshList[l];
                    s && _
                      ? Ke._computeAnimationDatasByArrayAndMatrixFast(
                          p,
                          this._curBonesDatas,
                          this._curMeshAnimationData,
                          x
                        )
                      : Ke._computeBoneAndAnimationDatasByBindPoseMatrxix(
                          d,
                          this._curOriginalData,
                          p,
                          this._curBonesDatas,
                          this._curMeshAnimationData,
                          x
                        );
                  }
                  for (y = 0; y < w; y++) {
                    var I = n.getSubMesh(y)._boneIndicesList;
                    for (
                      b = I.length, m = this._curAnimationDatas[y], v = 0;
                      v < b;
                      v++
                    )
                      e._splitAnimationDatas(
                        I[v],
                        this._curMeshAnimationData,
                        m[v]
                      );
                  }
                  s &&
                    (this._setAnimationDatasWithCache(
                      r,
                      n,
                      c,
                      l,
                      o,
                      this._curAnimationDatas
                    ),
                    _ ||
                      this._templet.setAnimationDataWithCache(
                        r,
                        h,
                        l,
                        o,
                        this._curBonesDatas
                      )),
                    (this._lastFrameIndex = o);
                }
              }
            }),
            (n._preRenderUpdate = function(t) {
              var e = t.renderElement.renderObj;
              this._curAnimationDatas
                ? (e._skinAnimationDatas = this._curAnimationDatas[
                    e._indexInMesh
                  ])
                : (e._skinAnimationDatas = null);
            }),
            (n._unload = function(e) {
              2 == this.player.state &&
                this._ownerMesh._render._removeShaderDefine(
                  vn.SHADERDEFINE_BONE
                ),
                this._templet &&
                  !this._templet.loaded &&
                  this._templet.off(
                    'loaded',
                    this,
                    this._computeBoneIndexToMeshOnMesh
                  );
              var i = this._ownerMesh.meshFilter.sharedMesh;
              i.loaded ||
                i.off('loaded', this, this._onAnimationPlayMeshLoaded),
                t.prototype._unload.call(this, e),
                (this._tempCurAnimationData = null),
                (this._tempCurBonesData = null),
                (this._curOriginalData = null),
                (this._curMeshAnimationData = null),
                (this._curBonesDatas = null),
                (this._curAnimationDatas = null),
                (this._ownerMesh = null);
            }),
            r(0, n, 'curBonesDatas', function() {
              return this._curBonesDatas;
            }),
            r(0, n, 'templet', t.prototype._$get_templet, function(t) {
              this._templet !== t &&
                (0 !== this._player.state && this._player.stop(!0),
                (this._templet = t),
                (this._player.templet = t),
                this._computeBoneIndexToMeshOnTemplet(),
                (this._curOriginalData = null),
                (this._curMeshAnimationData = null),
                (this._tempCurBonesData = null),
                (this._tempCurAnimationData = null),
                this._templet._animationDatasCache ||
                  (this._templet._animationDatasCache = [[], []]),
                this.event('animationchanged', this));
            }),
            (e._splitAnimationDatas = function(t, e, i) {
              for (var n = 0, a = t.length, r = 0; n < a; n++)
                for (var s = 0; s < 16; s++, r++) i[r] = e[(t[n] << 4) + s];
            }),
            e
          );
        })(wi)),
      Qi = (function(t) {
        function e() {
          (this._size = null),
            (this._transformOrientedBoundBox = null),
            (this.center = null),
            e.__super.call(this),
            (this._needUpdate = !1);
        }
        a(e, 'laya.d3.component.physics.BoxCollider', Ii);
        var i = e.prototype;
        return (
          (i._updateCollider = function() {
            if (this._needUpdate) {
              var t = this._transformOrientedBoundBox.transformation,
                i = this._owner.transform,
                n = i.rotation,
                a = i.scale,
                r = this.center.elements;
              0 === r[0] && 0 === r[1] && 0 === r[2]
                ? Te.createAffineTransformation(i.position, n, Re.ONE, t)
                : (Re.multiply(this.center, a, e._deviationV3),
                  Re.transformQuat(e._deviationV3, n, e._deviationV3),
                  Re.add(i.position, e._deviationV3, e._deviationV3),
                  Te.createAffineTransformation(e._deviationV3, n, Re.ONE, t)),
                (this._transformOrientedBoundBox.transformation = t);
              var s = this._transformOrientedBoundBox.extents.elements,
                o = this._size.elements,
                l = a.elements;
              (s[0] = 0.5 * o[0] * l[0]),
                (s[1] = 0.5 * o[1] * l[1]),
                (s[2] = 0.5 * o[2] * l[2]),
                (this._needUpdate = !1);
            }
          }),
          (i._onWorldMatrixChanged = function() {
            this._needUpdate = !0;
            for (var t in this._runtimeCollisonMap)
              (this._runtimeCollisonTestMap[t] = !0),
                (this._runtimeCollisonMap[t]._runtimeCollisonTestMap[
                  this.id
                ] = !0);
          }),
          (i._initialize = function(t) {
            laya.d3.component.Component3D.prototype._initialize.call(this, t),
              (this._transformOrientedBoundBox = new Me(new Re(), new Te())),
              (this._size = new Re()),
              (this.center = new Re()),
              t.transform.on(
                'worldmatrixneedchanged',
                this,
                this._onWorldMatrixChanged
              ),
              (this._needUpdate = !0);
          }),
          (i._getType = function() {
            return 1;
          }),
          (i._collisonTo = function(t) {
            switch (t._getType()) {
              case 0:
                return 0 !== this.boundBox.containsSphere(t.boundSphere);
              case 1:
                return 0 !== this.boundBox.containsOrientedBoundBox(t.boundBox);
              case 2:
                var e = t;
                if (0 !== this.boundBox.containsBoundBox(e._boundBox)) {
                  for (
                    var i = t.mesh._positions, n = 0, a = i.length;
                    n < a;
                    n++
                  )
                    if (1 === this.boundBox.containsPoint(i[n])) return !0;
                  return !1;
                }
                return !1;
              default:
                throw new Error('BoxCollider:unknown collider type.');
            }
          }),
          (i._cloneTo = function(t) {
            var e = t,
              i = e.size;
            this.size.cloneTo(i), (e.size = i), this.center.cloneTo(e.center);
          }),
          (i.raycast = function(t, e, i) {
            void 0 === i && (i = 1.79e308), this._updateCollider();
            var n = this._transformOrientedBoundBox.intersectsRay(
              t,
              e.position
            );
            return -1 !== n && n <= i
              ? ((e.distance = n), (e.sprite3D = this._owner), !0)
              : ((e.distance = -1), (e.sprite3D = null), !1);
          }),
          (i.setFromBoundBox = function(t) {
            Me.createByBoundBox(t, this._transformOrientedBoundBox);
            var e = this._transformOrientedBoundBox.extents;
            (this._size = new Re(2 * e.x, 2 * e.y, 2 * e.z)),
              (this.center = new Re()),
              Re.add(t.min, t.max, this.center),
              Re.scale(this.center, 0.5, this.center),
              (this._needUpdate = !0);
          }),
          r(0, i, 'boundBox', function() {
            return this._updateCollider(), this._transformOrientedBoundBox;
          }),
          r(
            0,
            i,
            'size',
            function() {
              return this._size;
            },
            function(t) {
              (this._size = t), (this._needUpdate = !0);
            }
          ),
          n(e, [
            '_deviationV3',
            function() {
              return (this._deviationV3 = new Re());
            },
            '_obbCenterV3',
            function() {
              return (this._obbCenterV3 = new Re());
            }
          ]),
          e
        );
      })(),
      $i = (function(t) {
        function e() {
          (this._transformBoundingBox = null),
            (this._mesh = null),
            e.__super.call(this),
            (this._transformBoundingBox = new be(new Re(), new Re())),
            (this._needUpdate = !1);
        }
        a(e, 'laya.d3.component.physics.MeshCollider', Ii);
        var i = e.prototype;
        return (
          (i._updateBoundBoxCollider = function() {
            if (this._needUpdate) {
              for (
                var t = this._owner.transform.worldMatrix,
                  i = this._mesh.boundingBoxCorners,
                  n = 0;
                n < 8;
                n++
              )
                Re.transformCoordinate(i[n], t, e._tempBoundBoxCorners[n]);
              be.createfromPoints(
                e._tempBoundBoxCorners,
                this._transformBoundingBox
              ),
                (this._needUpdate = !1);
            }
          }),
          (i._raycastMesh = function(t, i, n, a) {
            void 0 === a && (a = 1.79e308);
            var r = i.transform.worldMatrix,
              s = e._tempMatrix4x40;
            r.invert(s);
            var o = t.origin,
              l = t.direction,
              h = e._tempRay0;
            Re.transformCoordinate(o, s, h.origin),
              Re.TransformNormal(l, s, h.direction);
            for (
              var c = Number.MAX_VALUE,
                u = 0,
                _ = this._mesh.getRenderElementsCount();
              u < _;
              u++
            ) {
              var d = this._mesh.getRenderElement(u),
                f = d._getVertexBuffer(0),
                p = f.getData(),
                m = d._getIndexBuffer().getData(),
                g = e._tempRaycastHit;
              if (
                qe.rayIntersectsPositionsAndIndices(
                  h,
                  p,
                  f.vertexDeclaration,
                  m,
                  g
                )
              ) {
                Re.transformCoordinate(g.position, r, g.position);
                var y = e._tempVector30;
                Re.subtract(o, g.position, y);
                var v = Re.scalarLength(y);
                if (v < a && v < c) {
                  (g.distance = v), (g.sprite3D = i);
                  var b = g.trianglePositions;
                  Re.transformCoordinate(b[0], r, b[0]),
                    Re.transformCoordinate(b[1], r, b[1]),
                    Re.transformCoordinate(b[2], r, b[2]);
                  var w = g.triangleNormals;
                  return (
                    Re.transformCoordinate(w[0], r, w[0]),
                    Re.transformCoordinate(w[1], r, w[1]),
                    Re.transformCoordinate(w[2], r, w[2]),
                    (c = v),
                    g.cloneTo(n),
                    !0
                  );
                }
                return !1;
              }
            }
            return !1;
          }),
          (i._onWorldMatrixChanged = function() {
            this._needUpdate = !0;
          }),
          (i._initialize = function(t) {
            laya.d3.component.Component3D.prototype._initialize.call(this, t),
              t.transform.on(
                'worldmatrixneedchanged',
                this,
                this._onWorldMatrixChanged
              ),
              (this._needUpdate = !0);
          }),
          (i._getType = function() {
            return 2;
          }),
          (i._collisonTo = function(t) {
            var e = 0,
              i = 0,
              n = this.mesh._positions;
            switch (t._getType()) {
              case 0:
                var a = t;
                if (0 !== Ie.sphereContainsBox(a.boundSphere, this._boundBox)) {
                  for (e = 0, i = n.length; e < i; e++)
                    if (1 === Ie.sphereContainsPoint(a.boundSphere, n[e]))
                      return !0;
                  return !1;
                }
                return !1;
              case 1:
                var r = t;
                if (0 !== r.boundBox.containsBoundBox(this._boundBox)) {
                  for (e = 0, i = n.length; e < i; e++)
                    if (1 === r.boundBox.containsPoint(n[e])) return !0;
                  return !1;
                }
                return !1;
              case 2:
                var s = t;
                return (
                  1 !== Ie.intersectsBoxAndBox(s._boundBox, this._boundBox)
                );
              default:
                throw new Error('MeshCollider:unknown collider type.');
            }
          }),
          (i._cloneTo = function(t) {
            t.mesh = this._mesh;
          }),
          (i.raycast = function(t, e, i) {
            if (
              (void 0 === i && (i = 1.79e308),
              null == this._mesh || !this._mesh.loaded)
            )
              return !1;
            var n = Ie.intersectsRayAndBoxRD(t, this._boundBox);
            return (
              !!(
                -1 !== n &&
                n <= i &&
                this._raycastMesh(t, this._owner, e, i)
              ) || ((e.distance = -1), (e.sprite3D = null), !1)
            );
          }),
          r(0, i, '_boundBox', function() {
            return this._updateBoundBoxCollider(), this._transformBoundingBox;
          }),
          r(
            0,
            i,
            'mesh',
            function() {
              return this._mesh;
            },
            function(t) {
              this._mesh = t;
            }
          ),
          n(e, [
            '_tempRay0',
            function() {
              return (this._tempRay0 = new Ae(new Re(), new Re()));
            },
            '_tempVector30',
            function() {
              return (this._tempVector30 = new Re());
            },
            '_tempMatrix4x40',
            function() {
              return (this._tempMatrix4x40 = new Te());
            },
            '_tempRaycastHit',
            function() {
              return (this._tempRaycastHit = new Ye());
            },
            '_tempBoundBoxCorners',
            function() {
              return (this._tempBoundBoxCorners = [
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re(),
                new Re()
              ]);
            }
          ]),
          e
        );
      })(),
      tn = (function(t) {
        function e() {
          (this._originalBoundSphere = null),
            (this._transformBoundSphere = null),
            e.__super.call(this),
            (this._needUpdate = !1);
        }
        a(e, 'laya.d3.component.physics.SphereCollider', Ii);
        var i = e.prototype;
        return (
          (i._updateCollider = function() {
            if (this._needUpdate) {
              var t = NaN,
                e = this._owner.transform,
                i = e.scale;
              (t = i.x >= i.y && i.x >= i.z ? i.x : i.y >= i.z ? i.y : i.z),
                Re.transformCoordinate(
                  this._originalBoundSphere.center,
                  e.worldMatrix,
                  this._transformBoundSphere.center
                ),
                (this._transformBoundSphere.radius =
                  this._originalBoundSphere.radius * t),
                (this._needUpdate = !1);
            }
          }),
          (i._onWorldMatrixChanged = function() {
            this._needUpdate = !0;
            for (var t in this._runtimeCollisonMap)
              (this._runtimeCollisonTestMap[t] = !0),
                (this._runtimeCollisonMap[t]._runtimeCollisonTestMap[
                  this.id
                ] = !0);
          }),
          (i._initialize = function(t) {
            laya.d3.component.Component3D.prototype._initialize.call(this, t),
              (this._originalBoundSphere = new xe(new Re(0, 0, 0), 0.5)),
              (this._transformBoundSphere = new xe(new Re(0, 0, 0), 0.5)),
              t.transform.on(
                'worldmatrixneedchanged',
                this,
                this._onWorldMatrixChanged
              ),
              (this._needUpdate = !0);
          }),
          (i._getType = function() {
            return 0;
          }),
          (i._collisonTo = function(t) {
            switch (t._getType()) {
              case 0:
                return (
                  0 !== Ie.sphereContainsSphere(this.boundSphere, t.boundSphere)
                );
              case 1:
                return 0 !== t.boundBox.containsSphere(this.boundSphere);
              case 2:
                var e = t;
                if (0 !== Ie.sphereContainsBox(this.boundSphere, e._boundBox)) {
                  for (
                    var i = e.mesh._positions, n = 0, a = i.length;
                    n < a;
                    n++
                  )
                    if (1 === Ie.sphereContainsPoint(this.boundSphere, i[n]))
                      return !0;
                  return !1;
                }
                return !1;
              default:
                throw new Error('SphereCollider:unknown collider type.');
            }
          }),
          (i._cloneTo = function(t) {
            var e = t;
            e.radius = this.radius;
            var i = e.center;
            this.center.cloneTo(i), (e.center = i);
          }),
          (i.raycast = function(t, e, i) {
            void 0 === i && (i = 1.79e308), this._updateCollider();
            var n = this._transformBoundSphere.intersectsRayPoint(
              t,
              e.position
            );
            return -1 !== n && n <= i
              ? ((e.distance = n), (e.sprite3D = this._owner), !0)
              : ((e.distance = -1), (e.sprite3D = null), !1);
          }),
          r(
            0,
            i,
            'center',
            function() {
              return this._originalBoundSphere.center;
            },
            function(t) {
              this._originalBoundSphere.center = t;
            }
          ),
          r(
            0,
            i,
            'radius',
            function() {
              return this._originalBoundSphere.radius;
            },
            function(t) {
              this._originalBoundSphere.radius = t;
            }
          ),
          r(0, i, 'boundSphere', function() {
            return this._updateCollider(), this._transformBoundSphere;
          }),
          e
        );
      })(),
      en = (function(t) {
        function e() {
          (this.simLodInfo = null),
            (this._src = null),
            (this._buffer = null),
            (this._mipmaps = null),
            (this._recreateLock = !1),
            (this._needReleaseAgain = !1),
            e.__super.call(this),
            (this._type = 3553);
        }
        a(e, 'laya.d3.resource.DataTexture2D', gi);
        var s = e.prototype;
        return (
          (s.genDebugMipmaps = function() {
            var t = [];
            return (
              t.push(
                new Uint8Array(new Uint32Array(131072).fill(4278190335).buffer)
              ),
              t.push(
                new Uint8Array(new Uint32Array(32768).fill(4278223103).buffer)
              ),
              t.push(
                new Uint8Array(new Uint32Array(8192).fill(4278255615).buffer)
              ),
              t.push(
                new Uint8Array(new Uint32Array(2048).fill(4278255360).buffer)
              ),
              t.push(
                new Uint8Array(new Uint32Array(512).fill(4286595072).buffer)
              ),
              t.push(
                new Uint8Array(new Uint32Array(128).fill(4294901760).buffer)
              ),
              t.push(
                new Uint8Array(new Uint32Array(32).fill(4294901888).buffer)
              ),
              t.push(new Uint8Array(new Uint32Array(8).fill(0).buffer)),
              t.push(
                new Uint8Array(new Uint32Array(2).fill(4286611584).buffer)
              ),
              t.push(
                new Uint8Array(new Uint32Array(1).fill(4294967295).buffer)
              ),
              t
            );
          }),
          (s._onTextureLoaded = function(t) {}),
          (s._createWebGlTexture = function() {
            if (!this._buffer && !this._mipmaps)
              throw 'create GLTextur err:no data';
            var t = R.mainContext;
            t.getExtension('EXT_shader_texture_lod');
            var i = (this._source = t.createTexture()),
              n = this._width,
              a = this._height,
              r = B.curBindTexTarget,
              s = B.curBindTexValue;
            if ((B.bindTexture(t, this._type, i), this._mipmaps)) {
              if (laya.d3.resource.DataTexture2D.lodasatlas) {
                var o = 0;
                t.texImage2D(
                  this._type,
                  0,
                  6408,
                  this._width,
                  this._height,
                  0,
                  6408,
                  5121,
                  null
                );
                for (var l = 0; l < this._mipmaps.length; l++) {
                  if (this._mipmaps[l].byteLength != c * u * 4)
                    throw 'mipmap size error  level:' + l;
                  t.texSubImage2D(
                    this._type,
                    0,
                    e.simLodRect[o++],
                    e.simLodRect[o++],
                    e.simLodRect[o++],
                    e.simLodRect[o++],
                    6408,
                    5121,
                    new Uint8Array(this._mipmaps[l])
                  );
                }
                (this.minFifter = 9729), (this.magFifter = 9729);
              } else {
                var c = this._width,
                  u = this._height;
                for (
                  o = 0,
                    t.texImage2D(
                      this._type,
                      0,
                      6408,
                      this._width,
                      this._height,
                      0,
                      6408,
                      5121,
                      null
                    ),
                    l = 0;
                  l < this._mipmaps.length;
                  l++
                ) {
                  if (this._mipmaps[l].byteLength != c * u * 4)
                    throw 'mipmap size error  level:' + l;
                  t.texImage2D(
                    this._type,
                    l,
                    6408,
                    c,
                    u,
                    0,
                    6408,
                    5121,
                    new Uint8Array(this._mipmaps[l])
                  ),
                    (u /= 2),
                    (c /= 2) < 1 && (c = 1),
                    u < 1 && (u = 1),
                    (this.minFifter = 9987),
                    (this.magFifter = 9729);
                }
              }
              this.mipmap = !1;
            } else
              t.texImage2D(
                this._type,
                0,
                6408,
                n,
                a,
                0,
                6408,
                5121,
                new Uint8Array(this._buffer)
              );
            var _ = this._minFifter,
              d = this._magFifter,
              f = this._repeat ? 10497 : 33071,
              p = h.isPOT(n, a);
            if (!p) throw 'data texture must be POT';
            this._mipmap || this._mipmaps
              ? -1 !== _ || (_ = 9987)
              : -1 !== _ || (_ = 9729),
              -1 !== d || (d = 9729),
              t.texParameteri(this._type, 10241, _),
              t.texParameteri(this._type, 10240, d),
              t.texParameteri(this._type, 10242, f),
              this._mipmaps
                ? t.texParameteri(this._type, 10243, 33071)
                : t.texParameteri(this._type, 10243, f),
              this._mipmap && t.generateMipmap(this._type),
              r && s && B.bindTexture(t, r, s),
              this.src && this.src.length > 0 && (this._buffer = null),
              (this.memorySize = p ? n * a * 4 * (1 + 1 / 3) : n * a * 4),
              (this._recreateLock = !1);
          }),
          (s.recreateResource = function() {
            if (this._buffer || (null != this._src && '' !== this._src))
              if (
                ((this._needReleaseAgain = !1), this._buffer || this._mipmaps)
              ) {
                if (this._recreateLock) return;
                this._createWebGlTexture(), this.completeCreate();
              } else {
                this._recreateLock = !0;
              }
          }),
          (s.onAsynLoaded = function(t, e, i) {
            var n;
            i && (n = i[0].call(this, e)),
              n &&
                ((this._width = n.width),
                (this._height = n.height),
                (this._buffer = n.data)),
              (this._src = t),
              (this._size = new Je(this._width, this._height)),
              this._conchTexture
                ? alert('怎么给runtime传递datatexture数据')
                : this.activeResource(),
              this._endLoaded();
          }),
          (s.getPixels = function() {
            return new Uint8Array(this._buffer);
          }),
          (s.disposeResource = function() {
            this._recreateLock && (this._needReleaseAgain = !0),
              this._source &&
                (R.mainContext.deleteTexture(this._source),
                (this._source = null),
                (this._buffer = null),
                (this.memorySize = 0));
          }),
          r(0, s, 'src', function() {
            return this._src;
          }),
          (e.create = function(t, i, n, a, r, s) {
            if (
              (void 0 === a && (a = 9729),
              void 0 === r && (r = 9729),
              void 0 === s && (s = !0),
              !t || t.byteLength < i * n * 4)
            )
              throw 'DataTexture2D create error';
            var o = new e();
            return (
              (o._buffer = t),
              (o._width = i),
              (o._height = n),
              (o._mipmap = s),
              (o._magFifter = a),
              (o._minFifter = r),
              (o._size = new Je(o._width, o._height)),
              o._conchTexture
                ? alert('怎么给runtime传递datatexture数据')
                : o.activeResource(),
              o
            );
          }),
          (e.load = function(t, n, a, r, s) {
            void 0 === n && (n = 0),
              void 0 === a && (a = 0),
              void 0 === r && (r = 9729),
              void 0 === s && (s = 9729);
            if ('mipmaps' === N.getFileExtension(t)) {
              var o = i.loader.create(t, null, null, e, [
                function(t) {
                  this._mipmaps = [];
                  var e = new Uint32Array(t);
                  this._width = e[0];
                  var i = 512;
                  if (
                    (laya.d3.resource.DataTexture2D.lodasatlas &&
                      ((this._width *= 2), (i = 1024)),
                    this._width != i)
                  )
                    throw (console.error(
                      '现在只支持512x256的环境贴图。当前的是' + e[0]
                    ),
                    '现在只支持512x256的环境贴图。当前的是' + e[0]);
                  this._height = e[1];
                  for (
                    var n = laya.d3.resource.DataTexture2D.lodasatlas
                        ? this._width / 2
                        : this._width,
                      a = this._height,
                      r = 8;
                    ;

                  ) {
                    var s = n * a * 4;
                    if (r + s > t.byteLength)
                      throw 'load mipmaps data size error ';
                    var o = new Uint8Array(t, r, s);
                    if ((this._mipmaps.push(o), (r += s), 1 == n && 1 == a))
                      break;
                    (a /= 2), (n /= 2) < 1 && (n = 1), a < 1 && (a = 1);
                  }
                  return null;
                }
              ]);
              if (laya.d3.resource.DataTexture2D.lodasatlas) {
                o.simLodInfo = new Float32Array(40);
                for (var l = 0; l < o.simLodInfo.length; )
                  (o.simLodInfo[l] = (e.simLodRect[l] + 0.5) / 1024),
                    l++,
                    (o.simLodInfo[l] = (e.simLodRect[l] + 0.5) / 256),
                    l++,
                    (o.simLodInfo[l] =
                      Math.max(e.simLodRect[l] - 1, 0.1) / 1024),
                    l++,
                    (o.simLodInfo[l] =
                      Math.max(e.simLodRect[l] - 1.5, 0.1) / 256),
                    l++;
              }
              return o;
            }
            if ('number' == typeof n)
              return i.loader.create(t, null, null, e, [
                function(t) {
                  return (
                    (this._width = n),
                    (this._height = a),
                    (this._buffer = t),
                    null
                  );
                }
              ]);
            if ('function' == typeof n)
              return i.loader.create(t, null, null, e, [n]);
            throw new Error('unknown params.');
          }),
          (e.lodasatlas = !1),
          n(e, [
            'simLodRect',
            function() {
              return (this.simLodRect = new Uint32Array([
                0,
                0,
                512,
                256,
                512,
                0,
                256,
                128,
                768,
                0,
                128,
                64,
                896,
                0,
                64,
                32,
                960,
                0,
                32,
                16,
                992,
                0,
                16,
                8,
                1008,
                0,
                8,
                4,
                1016,
                0,
                4,
                2,
                1020,
                0,
                2,
                1,
                1022,
                0,
                1,
                1
              ]));
            }
          ]),
          e
        );
      })(),
      nn = (function(t) {
        function e() {
          (this._numberVertices = 0),
            (this._numberIndices = 0),
            (this._vertexBuffer = null),
            (this._indexBuffer = null),
            e.__super.call(this);
        }
        a(e, 'laya.d3.resource.models.PrimitiveMesh', yi);
        var n = e.prototype;
        return (
          i.imps(n, { 'laya.d3.core.render.IRenderable': !0 }),
          (n._getVertexBuffer = function(t) {
            return void 0 === t && (t = 0), 0 === t ? this._vertexBuffer : null;
          }),
          (n._getVertexBuffers = function() {
            return null;
          }),
          (n._getIndexBuffer = function() {
            return this._indexBuffer;
          }),
          (n._getPositions = function() {
            var t,
              e = [],
              i = this._vertexBuffer.vertexDeclaration.getVertexElements(),
              n = 0;
            for (n = 0; n < i.length; n++) {
              var a = i[n];
              if ('vector3' === a.elementFormat && 0 === a.elementUsage) {
                t = a;
                break;
              }
            }
            var r = this._vertexBuffer.getData();
            for (
              n = 0;
              n < r.length;
              n += this._vertexBuffer.vertexDeclaration.vertexStride / 4
            ) {
              var s = n + t.offset / 4,
                o = new Re(r[s + 0], r[s + 1], r[s + 2]);
              e.push(o);
            }
            return e;
          }),
          (n.getRenderElement = function(t) {
            return this;
          }),
          (n.getRenderElementsCount = function() {
            return 1;
          }),
          (n.disposeResource = function() {
            this._vertexBuffer &&
              (this._vertexBuffer.destroy(), (this._vertexBuffer = null)),
              this._indexBuffer &&
                (this._indexBuffer.destroy(), (this._indexBuffer = null)),
              (this.memorySize = 0);
          }),
          (n._beforeRender = function(t) {
            return this._vertexBuffer._bind(), this._indexBuffer._bind(), !0;
          }),
          (n._render = function(t) {
            R.mainContext.drawElements(4, this._numberIndices, 5123, 0),
              L.drawCall++,
              (L.trianglesFaces += this._numberIndices / 3);
          }),
          r(0, n, '_vertexBufferCount', function() {
            return 1;
          }),
          r(0, n, 'triangleCount', function() {
            return this._indexBuffer.indexCount / 3;
          }),
          e
        );
      })(),
      an = (function(t) {
        function e() {
          (this._materials = null),
            (this._subMeshes = null),
            (this._vertexBuffers = null),
            (this._indexBuffer = null),
            (this._boneNames = null),
            (this._inverseBindPoses = null),
            (this._skinnedDatas = null),
            e.__super.call(this),
            (this._subMeshes = []),
            (this._materials = []),
            (this._vertexBuffers = []);
        }
        a(e, 'laya.d3.resource.models.Mesh', yi);
        var n = e.prototype;
        return (
          (n._getPositions = function() {
            var t,
              e,
              i,
              n,
              a,
              r = [],
              s = 0,
              o = 0,
              l = 0;
            if (0 !== this._vertexBuffers.length) {
              var h = this._vertexBuffers.length;
              for (s = 0; s < h; s++) {
                for (
                  i = (t = this._vertexBuffers[
                    s
                  ]).vertexDeclaration.getVertexElements(),
                    o = 0;
                  o < i.length;
                  o++
                )
                  if (
                    'vector3' === (n = i[o]).elementFormat &&
                    0 === n.elementUsage
                  ) {
                    e = n;
                    break;
                  }
                for (
                  a = t.getData(), o = 0;
                  o < a.length;
                  o += t.vertexDeclaration.vertexStride / 4
                )
                  (l = o + e.offset / 4),
                    r.push(new Re(a[l + 0], a[l + 1], a[l + 2]));
              }
            } else {
              var c = this._subMeshes.length;
              for (s = 0; s < c; s++) {
                for (
                  i = (t = this._subMeshes[
                    s
                  ]._getVertexBuffer()).vertexDeclaration.getVertexElements(),
                    o = 0;
                  o < i.length;
                  o++
                )
                  if (
                    'vector3' === (n = i[o]).elementFormat &&
                    0 === n.elementUsage
                  ) {
                    e = n;
                    break;
                  }
                for (
                  a = t.getData(), o = 0;
                  o < a.length;
                  o += t.vertexDeclaration.vertexStride / 4
                )
                  (l = o + e.offset / 4),
                    r.push(new Re(a[l + 0], a[l + 1], a[l + 2]));
              }
            }
            return r;
          }),
          (n._setSubMeshes = function(t) {
            (this._subMeshes = t), (this._subMeshCount = t.length);
            for (var e = 0; e < this._subMeshCount; e++) t[e]._indexInMesh = e;
            (this._positions = this._getPositions()),
              this._generateBoundingObject();
          }),
          (n.onAsynLoaded = function(t, e, i) {
            var n = e[0],
              a = e[1];
            ve.read(n, this, this._materials, this._subMeshes, a),
              this.completeCreate(),
              this._endLoaded();
          }),
          (n.getSubMesh = function(t) {
            return this._subMeshes[t];
          }),
          (n.getSubMeshCount = function() {
            return this._subMeshes.length;
          }),
          (n.getRenderElementsCount = function() {
            return this._subMeshes.length;
          }),
          (n.getRenderElement = function(t) {
            return this._subMeshes[t];
          }),
          (n.disposeResource = function() {
            for (var t = 0; t < this._subMeshes.length; t++)
              this._subMeshes[t].dispose();
            (this._materials = null),
              (this._subMeshes = null),
              (this._vertexBuffers = null),
              (this._indexBuffer = null),
              (this._boneNames = null),
              (this._inverseBindPoses = null);
          }),
          r(0, n, 'materials', function() {
            return this._materials.slice();
          }),
          r(0, n, 'InverseAbsoluteBindPoses', function() {
            return this._inverseBindPoses;
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          e
        );
      })(),
      rn = (function(t) {
        function e(t, i, n, a, r, s, o, l, h) {
          (this._alreadyResolved = !1),
            (this._surfaceFormat = 0),
            (this._surfaceType = 0),
            (this._depthStencilFormat = 0),
            (this._frameBuffer = null),
            (this._depthStencilBuffer = null),
            void 0 === n && (n = 6408),
            void 0 === a && (a = 5121),
            void 0 === r && (r = 33189),
            void 0 === s && (s = !1),
            void 0 === o && (o = !1),
            void 0 === l && (l = -1),
            void 0 === h && (h = -1),
            e.__super.call(this),
            (this._type = 3553),
            (this._width = t),
            (this._height = i),
            (this._size = new Je(t, i)),
            (this._surfaceFormat = n),
            (this._surfaceType = a),
            (this._depthStencilFormat = r),
            (this._mipmap = s),
            (this._repeat = o),
            (this._minFifter = l),
            (this._magFifter = h),
            this.activeResource(),
            (this._alreadyResolved = !0);
        }
        a(e, 'laya.d3.resource.RenderTexture', gi);
        var n = e.prototype;
        return (
          (n.recreateResource = function() {
            var t = R.mainContext;
            (this._frameBuffer = t.createFramebuffer()),
              (this._source = t.createTexture());
            var e = B.curBindTexTarget,
              i = B.curBindTexValue;
            B.bindTexture(t, this._type, this._source),
              t.texImage2D(
                this._type,
                0,
                6408,
                this._width,
                this._height,
                0,
                this._surfaceFormat,
                this._surfaceType,
                null
              );
            var n = this._minFifter,
              a = this._magFifter,
              r = this._repeat ? 10497 : 33071;
            if (
              (h.isPOT(this._width, this._height)
                ? (this._mipmap
                    ? -1 !== n || (n = 9987)
                    : -1 !== n || (n = 9729),
                  -1 !== a || (a = 9729),
                  t.texParameteri(this._type, 10241, n),
                  t.texParameteri(this._type, 10240, a),
                  t.texParameteri(this._type, 10242, r),
                  t.texParameteri(this._type, 10243, r),
                  this._mipmap && t.generateMipmap(this._type))
                : (-1 !== n || (n = 9729),
                  -1 !== a || (a = 9729),
                  t.texParameteri(this._type, 10241, n),
                  t.texParameteri(this._type, 10240, a),
                  t.texParameteri(this._type, 10242, 33071),
                  t.texParameteri(this._type, 10243, 33071)),
              t.bindFramebuffer(36160, this._frameBuffer),
              t.framebufferTexture2D(36160, 36064, 3553, this._source, 0),
              this._depthStencilFormat)
            )
              switch (
                ((this._depthStencilBuffer = t.createRenderbuffer()),
                t.bindRenderbuffer(36161, this._depthStencilBuffer),
                t.renderbufferStorage(
                  36161,
                  this._depthStencilFormat,
                  this._width,
                  this._height
                ),
                this._depthStencilFormat)
              ) {
                case 33189:
                  t.framebufferRenderbuffer(
                    36160,
                    36096,
                    36161,
                    this._depthStencilBuffer
                  );
                  break;
                case 36168:
                  t.framebufferRenderbuffer(
                    36160,
                    36128,
                    36161,
                    this._depthStencilBuffer
                  );
                  break;
                case 34041:
                  t.framebufferRenderbuffer(
                    36160,
                    33306,
                    36161,
                    this._depthStencilBuffer
                  );
              }
            t.bindFramebuffer(36160, null),
              e && i && B.bindTexture(t, e, i),
              t.bindRenderbuffer(36161, null),
              (this.memorySize = this._width * this._height * 4),
              this.completeCreate();
          }),
          (n.start = function() {
            R.mainContext.bindFramebuffer(36160, this.frameBuffer),
              (e._currentRenderTarget = this),
              (this._alreadyResolved = !1);
          }),
          (n.end = function() {
            R.mainContext.bindFramebuffer(36160, null),
              (e._currentRenderTarget = null),
              (this._alreadyResolved = !0);
          }),
          (n.getData = function(t, e, i, n) {
            var a = R.mainContext;
            a.bindFramebuffer(36160, this._frameBuffer);
            if (!(36053 === a.checkFramebufferStatus(36160)))
              return a.bindFramebuffer(36160, null), null;
            var r = new Uint8Array(this._width * this._height * 4);
            return (
              a.readPixels(
                t,
                e,
                i,
                n,
                this._surfaceFormat,
                this._surfaceType,
                r
              ),
              a.bindFramebuffer(36160, null),
              r
            );
          }),
          (n.disposeResource = function() {
            if (this._frameBuffer) {
              var t = R.mainContext;
              t.deleteTexture(this._source),
                t.deleteFramebuffer(this._frameBuffer),
                t.deleteRenderbuffer(this._depthStencilBuffer),
                (this._source = null),
                (this._frameBuffer = null),
                (this._depthStencilBuffer = null),
                (this.memorySize = 0);
            }
          }),
          r(0, n, 'surfaceFormat', function() {
            return this._surfaceFormat;
          }),
          r(0, n, 'surfaceType', function() {
            return this._surfaceType;
          }),
          r(0, n, 'depthStencilFormat', function() {
            return this._depthStencilFormat;
          }),
          r(0, n, 'source', function() {
            return this._alreadyResolved
              ? i.superGet(gi, this, 'source')
              : null;
          }),
          r(0, n, 'depthStencilBuffer', function() {
            return this._depthStencilBuffer;
          }),
          r(0, n, 'frameBuffer', function() {
            return this._frameBuffer;
          }),
          (e._currentRenderTarget = null),
          e
        );
      })(),
      sn = (function(t) {
        function e(t) {
          (this._color = null),
            (this._pixels = null),
            e.__super.call(this),
            (this._type = 3553),
            (this._width = 1),
            (this._height = 1),
            (this._size = new Je(this.width, this.height)),
            (this._color = t),
            (this._pixels = new Uint8Array([
              255 * t.x,
              255 * t.y,
              255 * t.z,
              255 * t.w
            ]));
        }
        a(e, 'laya.d3.resource.SolidColorTexture2D', gi);
        var i = e.prototype;
        return (
          (i._createWebGlTexture = function() {
            var t = R.mainContext,
              e = (this._source = t.createTexture()),
              i = this._width,
              n = this._height,
              a = B.curBindTexTarget,
              r = B.curBindTexValue;
            B.bindTexture(t, this._type, e),
              t.texImage2D(
                this._type,
                0,
                6408,
                i,
                n,
                0,
                6408,
                5121,
                this._pixels
              );
            var s = this._minFifter,
              o = this._magFifter,
              l = this._repeat ? 10497 : 33071,
              c = h.isPOT(i, n);
            c
              ? (this._mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, l),
                t.texParameteri(this._type, 10243, l),
                this._mipmap && t.generateMipmap(this._type))
              : (-1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, 33071),
                t.texParameteri(this._type, 10243, 33071)),
              a && r && B.bindTexture(t, a, r),
              (this.memorySize = c ? i * n * 4 * (1 + 1 / 3) : i * n * 4);
          }),
          (i.recreateResource = function() {
            this._createWebGlTexture(), this.completeCreate();
          }),
          (i.disposeResource = function() {
            this._source &&
              (R.mainContext.deleteTexture(this._source),
              (this._source = null),
              (this.memorySize = 0));
          }),
          n(e, [
            'magentaTexture',
            function() {
              return (this.magentaTexture = new e(new Be(1, 0, 1, 1)));
            },
            'grayTexture',
            function() {
              return (this.grayTexture = new e(new Be(0.5, 0.5, 0.5, 1)));
            }
          ]),
          e
        );
      })(),
      on = (function(t) {
        function e(t) {
          (this._color = null),
            (this._pixels = null),
            (this._texCount = 6),
            e.__super.call(this),
            (this._type = 34067),
            (this._width = 1),
            (this._height = 1),
            (this._size = new Je(this.width, this.height)),
            (this._color = t),
            (this._pixels = new Uint8Array([
              255 * t.x,
              255 * t.y,
              255 * t.z,
              255 * t.w
            ]));
        }
        a(e, 'laya.d3.resource.SolidColorTextureCube', gi);
        var i = e.prototype;
        return (
          (i._createWebGlTexture = function() {
            var t = R.mainContext,
              e = (this._source = t.createTexture()),
              i = this._width,
              n = this._height,
              a = B.curBindTexTarget,
              r = B.curBindTexValue;
            B.bindTexture(t, this._type, e),
              t.texImage2D(34069, 0, 6408, i, n, 0, 6408, 5121, this._pixels),
              t.texImage2D(34070, 0, 6408, i, n, 0, 6408, 5121, this._pixels),
              t.texImage2D(34071, 0, 6408, i, n, 0, 6408, 5121, this._pixels),
              t.texImage2D(34072, 0, 6408, i, n, 0, 6408, 5121, this._pixels),
              t.texImage2D(34073, 0, 6408, i, n, 0, 6408, 5121, this._pixels),
              t.texImage2D(34074, 0, 6408, i, n, 0, 6408, 5121, this._pixels);
            var s = this.minFifter,
              o = this.magFifter,
              l = this._repeat ? 10497 : 33071,
              c = h.isPOT(i, n);
            c
              ? (this.mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, l),
                t.texParameteri(this._type, 10243, l),
                this.mipmap && t.generateMipmap(this._type))
              : (-1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, 33071),
                t.texParameteri(this._type, 10243, 33071)),
              a && r && B.bindTexture(t, a, r),
              (this.memorySize = c
                ? i * n * 4 * (1 + 1 / 3) * this._texCount
                : i * n * 4 * this._texCount);
          }),
          (i.recreateResource = function() {
            this._createWebGlTexture(), this.completeCreate();
          }),
          (i.disposeResource = function() {
            this._source &&
              (R.mainContext.deleteTexture(this._source),
              (this._source = null),
              (this.memorySize = 0));
          }),
          n(e, [
            'magentaTexture',
            function() {
              return (this.magentaTexture = new e(new Be(1, 0, 1, 1)));
            },
            'grayTexture',
            function() {
              return (this.grayTexture = new e(new Be(0.5, 0.5, 0.5, 1)));
            }
          ]),
          e
        );
      })(),
      ln = (function(e) {
        function n(t, e, i, a) {
          (this._canRead = !1),
            (this._image = null),
            (this._pixels = null),
            void 0 === t && (t = !1),
            void 0 === e && (e = !0),
            void 0 === i && (i = 6408),
            void 0 === a && (a = !0),
            n.__super.call(this),
            (this._type = 3553),
            (this._repeat = e),
            (this._canRead = t),
            (this._format = i),
            (this._mipmap = a);
        }
        a(n, 'laya.d3.resource.Texture2D', gi);
        var s = n.prototype;
        return (
          (s._createWebGlTexture = function() {
            if (!this._image)
              throw 'create GLTextur err:no data:' + this._image;
            var t = R.mainContext,
              e = (this._source = t.createTexture()),
              i = this._width,
              n = this._height,
              a = B.curBindTexTarget,
              r = B.curBindTexValue;
            switch ((B.bindTexture(t, this._type, e), this._format)) {
              case 6407:
              case 6408:
                this._canRead
                  ? t.texImage2D(
                      this._type,
                      0,
                      this._format,
                      i,
                      n,
                      0,
                      this._format,
                      5121,
                      this._pixels
                    )
                  : t.texImage2D(
                      this._type,
                      0,
                      this._format,
                      this._format,
                      5121,
                      this._image
                    );
                break;
              case R.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                t.compressedTexImage2D(
                  this._type,
                  0,
                  this._format,
                  this._width,
                  this._height,
                  0,
                  this._image
                );
            }
            var s = this._minFifter,
              o = this._magFifter,
              l = this._repeat ? 10497 : 33071,
              c = 0 == this._wrapModeU ? 10497 : 33071,
              u = 0 == this._wrapModeV ? 10497 : 33071,
              _ = h.isPOT(i, n);
            _
              ? (this._mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, l),
                t.texParameteri(this._type, 10243, l),
                t.texParameteri(this._type, 10242, c),
                t.texParameteri(this._type, 10243, u),
                this._mipmap && t.generateMipmap(this._type))
              : (-1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, 33071),
                t.texParameteri(this._type, 10243, 33071)),
              a && r && B.bindTexture(t, a, r),
              (this._image.onload = null),
              (this._image = null),
              (this.memorySize = _ ? i * n * 4 * (1 + 1 / 3) : i * n * 4);
          }),
          (s.recreateResource = function() {
            this._createWebGlTexture(), this.completeCreate();
          }),
          (s.onAsynLoaded = function(e, i, n) {
            if (n) {
              var a = n[0];
              void 0 !== a && (this._canRead = a);
              var r = n[1];
              void 0 !== r && (this._repeat = r);
              var s = n[2];
              void 0 !== s && (this._format = s);
              var o = n[3];
              void 0 !== o && (this._mipmap = o);
              var l = n.wrapModeU;
              void 0 !== l && (this._wrapModeU = l);
              var h = n.wrapModeV;
              void 0 !== h && (this._wrapModeV = h);
            }
            switch (this._format) {
              case 6407:
              case 6408:
                this._image = i;
                var c = i.width,
                  u = i.height;
                (this._width = c),
                  (this._height = u),
                  (this._size = new Je(c, u)),
                  this._canRead &&
                    (I.isConchApp
                      ? i instanceof t.HTMLElement &&
                        (this._pixels = new Uint8Array(
                          i.getImageData(0, 0, c, u)
                        ))
                      : (_.canvas.size(c, u),
                        _.canvas.clear(),
                        _.context.drawImage(i, 0, 0, c, u),
                        (this._pixels = new Uint8Array(
                          _.context.getImageData(0, 0, c, u).data.buffer
                        ))));
                break;
              case R.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                var d = new f(i);
                d.readUTFBytes(4), d.readUTFBytes(2), d.getInt16();
                (d.endian = 'bigEndian'),
                  (this._width = d.getInt16()),
                  (this._height = d.getInt16()),
                  (this._size = new Je(this._width, this._height));
                d.getInt16(), d.getInt16();
                this._image = new Uint8Array(i, d.pos);
            }
            this.recreateResource(), this._endLoaded();
          }),
          (s.getPixels = function() {
            if (this._canRead) return this._pixels;
            throw new Error('Texture2D: must set texture canRead is true.');
          }),
          (s.disposeResource = function() {
            this._source &&
              (R.mainContext.deleteTexture(this._source),
              (this._source = null),
              (this._image = null),
              (this.memorySize = 0));
          }),
          r(0, s, '_src', function() {
            return this.url;
          }),
          r(0, s, 'src', function() {
            return this.url;
          }),
          (n.load = function(t) {
            return i.loader.create(t, null, null, n);
          }),
          n
        );
      })(),
      hn =
        ((function(e) {
          function n(t, e, i, a) {
            n.__super.call(this, t, e, i, a);
          }
          a(n, 'laya.d3.resource.Texture2D_caps', ln);
          var s = n.prototype;
          (s._createWebGlTexture = function() {
            if (!this._image)
              throw 'create GLTextur err:no data:' + this._image;
            var t = R.mainContext,
              e = (this._source = t.createTexture()),
              i = this._width,
              n = this._height,
              a = B.curBindTexTarget,
              r = B.curBindTexValue;
            switch ((B.bindTexture(t, this._type, e), this._format)) {
              case 6407:
              case 6408:
                this._canRead
                  ? t.texImage2D(
                      this._type,
                      0,
                      this._format,
                      i,
                      n,
                      0,
                      this._format,
                      5121,
                      this._pixels
                    )
                  : t.texImage2D(
                      this._type,
                      0,
                      this._format,
                      this._format,
                      5121,
                      this._image
                    );
                break;
              case R.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                t.compressedTexImage2D(
                  this._type,
                  0,
                  this._format,
                  this._width,
                  this._height,
                  0,
                  this._image
                );
            }
            var s = this._minFifter,
              o = this._magFifter,
              l = this._repeat ? 10497 : 33071,
              c = 0 == this._wrapModeU ? 10497 : 33071,
              u = 0 == this._wrapModeV ? 10497 : 33071,
              _ = h.isPOT(i, n);
            _
              ? (this._mipmap ? -1 !== s || (s = 9987) : -1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, l),
                t.texParameteri(this._type, 10243, l),
                t.texParameteri(this._type, 10242, c),
                t.texParameteri(this._type, 10243, u),
                this._mipmap && t.generateMipmap(this._type))
              : (-1 !== s || (s = 9729),
                -1 !== o || (o = 9729),
                t.texParameteri(this._type, 10241, s),
                t.texParameteri(this._type, 10240, o),
                t.texParameteri(this._type, 10242, 33071),
                t.texParameteri(this._type, 10243, 33071)),
              a && r && B.bindTexture(t, a, r),
              (this._image.onload = null),
              (this.memorySize = _ ? i * n * 4 * (1 + 1 / 3) : i * n * 4);
          }),
            (s.recreateResource = function() {
              this._source ||
                (this._createWebGlTexture(), this.completeCreate());
            }),
            (s.clearTexture = function() {
              this._source &&
                (R.mainContext.deleteTexture(this._source),
                (this._source = null),
                (this.memorySize = 0));
            }),
            (s.onAsynLoaded = function(e, i, n) {
              if (n) {
                var a = n[0];
                void 0 !== a && (this._canRead = a);
                var r = n[1];
                void 0 !== r && (this._repeat = r);
                var s = n[2];
                void 0 !== s && (this._format = s);
                var o = n[3];
                void 0 !== o && (this._mipmap = o);
                var l = n.wrapModeU;
                void 0 !== l && (this._wrapModeU = l);
                var h = n.wrapModeV;
                void 0 !== h && (this._wrapModeV = h);
              }
              switch (this._format) {
                case 6407:
                case 6408:
                  this._image = i;
                  var c = i.width,
                    u = i.height;
                  (this._width = c),
                    (this._height = u),
                    (this._size = new Je(c, u)),
                    this._canRead &&
                      (I.isConchApp
                        ? i instanceof t.HTMLElement &&
                          (this._pixels = new Uint8Array(
                            i.getImageData(0, 0, c, u)
                          ))
                        : (_.canvas.size(c, u),
                          _.canvas.clear(),
                          _.context.drawImage(i, 0, 0, c, u),
                          (this._pixels = new Uint8Array(
                            _.context.getImageData(0, 0, c, u).data.buffer
                          ))));
                  break;
                case R.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                  var d = new f(i);
                  d.readUTFBytes(4), d.readUTFBytes(2), d.getInt16();
                  (d.endian = 'bigEndian'),
                    (this._width = d.getInt16()),
                    (this._height = d.getInt16()),
                    (this._size = new Je(this._width, this._height));
                  d.getInt16(), d.getInt16();
                  this._image = new Uint8Array(i, d.pos);
              }
              this._endLoaded();
            }),
            r(0, s, '_src', function() {
              return this.url;
            }),
            r(0, s, 'src', function() {
              return this.url;
            }),
            (n.load = function(t) {
              return i.loader.create(t, null, null, n);
            });
        })(),
        (function(t) {
          function e() {
            e.__super.call(this), (this._type = 34067);
          }
          a(e, 'laya.d3.resource.TextureCube', gi);
          var n = e.prototype;
          return (
            (n._onTextureLoaded = function(t) {
              this._images = t;
              for (var e = 2147483647, i = 2147483647, n = 0; n < 6; n++) {
                var a = t[n];
                (e = Math.min(e, a.width)), (i = Math.min(i, a.height));
              }
              (this._width = e),
                (this._height = i),
                (this._size = new Je(e, i));
            }),
            (n._createWebGlTexture = function() {
              var t = 0;
              for (t = 0; t < 6; t++)
                if (!this._images[t])
                  throw 'create GLTextur err:no data:' + this._images[t];
              var e = R.mainContext,
                i = (this._source = e.createTexture()),
                n = this._width,
                a = this._height,
                r = B.curBindTexTarget,
                s = B.curBindTexValue;
              B.bindTexture(e, this._type, i),
                e.texImage2D(34069, 0, 6408, 6408, 5121, this._images[0]),
                e.texImage2D(34070, 0, 6408, 6408, 5121, this._images[1]),
                e.texImage2D(34071, 0, 6408, 6408, 5121, this._images[2]),
                e.texImage2D(34072, 0, 6408, 6408, 5121, this._images[3]),
                e.texImage2D(34073, 0, 6408, 6408, 5121, this._images[4]),
                e.texImage2D(34074, 0, 6408, 6408, 5121, this._images[5]);
              var o = this.minFifter,
                l = this.magFifter,
                c = this._repeat ? 10497 : 33071,
                u = h.isPOT(n, a);
              for (
                u
                  ? (this.mipmap
                      ? -1 !== o || (o = 9987)
                      : -1 !== o || (o = 9729),
                    -1 !== l || (l = 9729),
                    e.texParameteri(this._type, 10241, o),
                    e.texParameteri(this._type, 10240, l),
                    e.texParameteri(this._type, 10242, c),
                    e.texParameteri(this._type, 10243, c),
                    this.mipmap && e.generateMipmap(this._type))
                  : (-1 !== o || (o = 9729),
                    -1 !== l || (l = 9729),
                    e.texParameteri(this._type, 10241, o),
                    e.texParameteri(this._type, 10240, l),
                    e.texParameteri(this._type, 10242, 33071),
                    e.texParameteri(this._type, 10243, 33071)),
                  r && s && B.bindTexture(e, r, s),
                  t = 0;
                t < 6;
                t++
              )
                (this._images[t].onload = null), (this._images[t] = null);
              this.memorySize = u ? n * a * 4 * (1 + 1 / 3) * 6 : n * a * 4 * 6;
            }),
            (n.recreateResource = function() {
              null != this._url &&
                (this._createWebGlTexture(), this.completeCreate());
            }),
            (n.onAsynLoaded = function(t, e, i) {
              this._onTextureLoaded(e),
                this.activeResource(),
                this._endLoaded();
            }),
            (n.disposeResource = function() {
              this._source &&
                (R.mainContext.deleteTexture(this._source),
                (this._source = null),
                (this.memorySize = 0));
            }),
            r(0, n, 'defaulteTexture', function() {
              return on.grayTexture;
            }),
            (e.load = function(t) {
              return i.loader.create(t, null, null, e);
            }),
            e
          );
        })()),
      cn = (function(t) {
        function e(t) {
          (this._hasIndependentBound = !0),
            e.__super.call(this, t),
            this._owner.transform.off(
              'worldmatrixneedchanged',
              this,
              this._onWorldMatNeedChange
            ),
            (this._cacheAnimationNodeIndex = []),
            (this._cacheAnimationNode = []),
            (this._localBoundingBoxCorners = s(8, null)),
            this._owner.meshFilter.on(
              'meshchanged',
              this,
              this._$3__onMeshChanged
            );
        }
        a(e, 'laya.d3.core.SkinnedMeshRender', t);
        var i = e.prototype;
        return (
          (i._getCacheAnimationNodes = function() {
            var t = this._cacheMesh._boneNames,
              e = t.length;
            (this._cacheAnimationNode.length = e),
              (this._cacheAnimationNodeIndex.length = e);
            for (
              var i = this._cacheAnimator._avatarNodes,
                n = this._cacheAnimator._avatarNodeMap,
                a = 0;
              a < e;
              a++
            ) {
              var r = n[t[a]];
              (this._cacheAnimationNode[a] = r),
                (this._cacheAnimationNodeIndex[a] = i.indexOf(r));
            }
          }),
          (i._offComputeBoneIndexToMeshEvent = function(t, e) {
            t.loaded
              ? e.loaded || e.off('loaded', this, this._getCacheAnimationNodes)
              : t.off(
                  'loaded',
                  this,
                  this._computeBoneIndexToMeshWithAsyncMesh
                );
          }),
          (i._computeBoneIndexToMeshWithAsyncAvatar = function() {
            this._cacheAvatar.loaded
              ? this._computeBoneIndexToMeshWithAsyncMesh()
              : this._cacheAvatar.once(
                  'loaded',
                  this,
                  this._computeBoneIndexToMeshWithAsyncMesh
                );
          }),
          (i._computeBoneIndexToMeshWithAsyncMesh = function() {
            this._cacheMesh.loaded
              ? this._getCacheAnimationNodes()
              : this._cacheMesh.on(
                  'loaded',
                  this,
                  this._getCacheAnimationNodes
                );
          }),
          (i._$3__onMeshChanged = function(t, e, i) {
            (this._cacheMesh = i),
              e && !e.loaded && i.off('loaded', this, this._onMeshLoaded),
              i.loaded
                ? this._onMeshLoaded(i)
                : i.on('loaded', this, this._onMeshLoaded),
              this._cacheAvatar &&
                (e &&
                  this._offComputeBoneIndexToMeshEvent(this._cacheAvatar, e),
                i && this._computeBoneIndexToMeshWithAsyncAvatar());
          }),
          (i._onMeshLoaded = function(t) {
            var e = t.subMeshCount;
            (this._subSkinnedDatas = []), (this._subSkinnedDatas.length = e);
            for (var i = 0; i < e; i++)
              for (
                var n = (this._subSkinnedDatas[i] = []),
                  a = t.getSubMesh(i)._boneIndicesList,
                  r = 0,
                  s = a.length;
                r < s;
                r++
              )
                n[r] = new Float32Array(16 * a[r].length);
          }),
          (i._setCacheAnimator = function(t) {
            (this._cacheAnimator = t),
              this._rootBone &&
                (this._rootIndex = t._avatarNodes.indexOf(
                  t._avatarNodeMap[this._rootBone]
                ));
          }),
          (i._setRootBone = function(t) {
            (this._rootBone = t),
              this._cacheAnimator &&
                (this._rootIndex = this._cacheAnimator._avatarNodes.indexOf(
                  this._cacheAnimator._avatarNodeMap[t]
                ));
          }),
          (i._setCacheAvatar = function(t) {
            this._cacheAvatar !== t &&
              (this._cacheMesh
                ? (this._cacheAvatar &&
                    this._offComputeBoneIndexToMeshEvent(
                      this._cacheAvatar,
                      this._cacheMesh
                    ),
                  (this._cacheAvatar = t),
                  t &&
                    (this._addShaderDefine(vn.SHADERDEFINE_BONE),
                    this._computeBoneIndexToMeshWithAsyncAvatar()))
                : (this._cacheAvatar = t));
          }),
          (i._calculateBoundingBox = function() {
            if (this._hasIndependentBound) {
              if (this._cacheAnimator) {
                var e = this._owner.transform,
                  i = e.worldMatrix;
                if (this._cacheAnimator._canCache) {
                  var n = this._cacheAnimator._curAvatarNodeDatas;
                  Ke.matrix4x4MultiplyMFM(
                    this._cacheAnimator.owner.transform.worldMatrix,
                    n[this._rootIndex],
                    i
                  );
                } else
                  Ke.matrix4x4MultiplyMFM(
                    this._cacheAnimator.owner.transform.worldMatrix,
                    this._cacheAnimator._avatarNodeMap[
                      this._rootBone
                    ].transform.getWorldMatrix(),
                    i
                  );
                e.worldMatrix = i;
                null == this._cacheAnimator._avatarNodeMap[this._rootBone] ||
                null == this._localBoundBox
                  ? this._boundingBox.toDefault()
                  : this._calculateBoundBoxByInitCorners(
                      this._localBoundingBoxCorners
                    );
              }
            } else t.prototype._calculateBoundingBox.call(this);
          }),
          (i._calculateBoundingSphere = function() {
            if (this._hasIndependentBound) {
              if (this._cacheAnimator) {
                var e = this._owner.transform,
                  i = e.worldMatrix;
                if (this._cacheAnimator._canCache) {
                  var n = this._cacheAnimator._curAvatarNodeDatas;
                  Ke.matrix4x4MultiplyMFM(
                    this._cacheAnimator.owner.transform.worldMatrix,
                    n[this._rootIndex],
                    i
                  );
                } else
                  Ke.matrix4x4MultiplyMFM(
                    this._cacheAnimator.owner.transform.worldMatrix,
                    this._cacheAnimator._avatarNodeMap[
                      this._rootBone
                    ].transform.getWorldMatrix(),
                    i
                  );
                e.worldMatrix = i;
                null == this._cacheAnimator._avatarNodeMap[this._rootBone] ||
                null == this.localBoundSphere
                  ? this._boundingSphere.toDefault()
                  : this._calculateBoundingSphereByInitSphere(
                      this.localBoundSphere
                    );
              }
            } else t.prototype._calculateBoundingSphere.call(this);
          }),
          (i._updateOctreeNode = function() {
            var t = this._treeNode;
            t && t.updateObject(this);
          }),
          (i._renderUpdate = function(t) {
            var i,
              n = this._cacheAnimator,
              a = this._cacheMesh.subMeshCount,
              r = this._owner.transform;
            if (n) {
              var s = n._canCache,
                o = this._cacheAnimator._curAvatarNodeDatas,
                l = n.owner;
              if (
                (this._setShaderValueMatrix4x4(0, l._transform.worldMatrix),
                (i = l.getProjectionViewWorldMatrix(t)),
                this._setShaderValueMatrix4x4(1, i),
                this._cacheMesh &&
                  this._cacheMesh.loaded &&
                  this._cacheAvatar &&
                  this._cacheAvatar.loaded)
              ) {
                var h = 0,
                  c = 0,
                  u = this._cacheMesh._inverseBindPoses,
                  _ = this._cacheMesh._skinnedDatas;
                if (s)
                  for (h = 0, c = u.length; h < c; h++)
                    Ke._mulMatrixArray(
                      o[this._cacheAnimationNodeIndex[h]],
                      u[h],
                      _,
                      16 * h
                    );
                else
                  for (h = 0, c = u.length; h < c; h++)
                    Ke._mulMatrixArray(
                      this._cacheAnimationNode[h].transform.getWorldMatrix(),
                      u[h],
                      _,
                      16 * h
                    );
                for (h = 0; h < a; h++) {
                  for (
                    var d = this._cacheMesh.getSubMesh(h)._boneIndicesList,
                      f = d.length,
                      p = this._subSkinnedDatas[h],
                      m = 0;
                    m < f;
                    m++
                  )
                    e._splitAnimationDatas(d[m], _, p[m]);
                  this._renderElements[h]._skinAnimationDatas = p;
                }
              }
            } else
              this._setShaderValueMatrix4x4(0, r.worldMatrix),
                (i = this._owner.getProjectionViewWorldMatrix(t)),
                this._setShaderValueMatrix4x4(1, i);
            return Ze.debugMode && this._renderRenderableBoundBox(), !0;
          }),
          r(
            0,
            i,
            'localBoundBox',
            function() {
              return this._localBoundBox;
            },
            function(t) {
              (this._localBoundBox = t),
                t.getCorners(this._localBoundingBoxCorners);
            }
          ),
          r(0, i, 'boundingSphere', function() {
            return this._calculateBoundingSphere(), this._boundingSphere;
          }),
          r(0, i, 'boundingBox', function() {
            return this._calculateBoundingBox(), this._boundingBox;
          }),
          r(0, i, 'boundingBoxCenter', function() {
            var t = this.boundingBox;
            return (
              Re.add(t.min, t.max, this._boundingBoxCenter),
              Re.scale(this._boundingBoxCenter, 0.5, this._boundingBoxCenter),
              this._boundingBoxCenter
            );
          }),
          (e._splitAnimationDatas = function(t, e, i) {
            for (var n = 0, a = t.length, r = 0; n < a; n++)
              for (var s = t[n] << 4, o = 0; o < 16; o++, r++) i[r] = e[s + o];
          }),
          e
        );
      })(Mi),
      un = (function(t) {
        function e(t, n) {
          e.__super.call(this),
            void 0 === t && (t = 0.3),
            void 0 === n && (n = 1e3),
            (this._tempVector3 = new Re()),
            (this._position = new Re()),
            (this._up = new Re()),
            (this._forward = new Re()),
            (this._right = new Re()),
            (this._fieldOfView = 60),
            (this._useUserProjectionMatrix = !1),
            (this._orthographic = !1),
            (this._viewportExpressedInClipSpace = !0),
            (this._renderTargetSize = Je.fullScreen),
            (this._orthographicVerticalSize = 10),
            (this.renderingOrder = 0),
            (this._nearPlane = t),
            (this._farPlane = n),
            (this.cullingMask = 2147483647),
            (this.clearFlag = 0),
            (this.useOcclusionCulling = !0),
            this._calculateProjectionMatrix(),
            i.stage.on('resize', this, this._onScreenSizeChanged);
        }
        a(e, 'laya.d3.core.BaseCamera', t);
        var s = e.prototype;
        return (
          (s._sortCamerasByRenderingOrder = function() {
            if (this._displayedInStage)
              for (
                var t = this.scene._cameraPool, e = t.length - 1, i = 0;
                i < e;
                i++
              )
                if (t[i].renderingOrder > t[e].renderingOrder) {
                  var n = t[i];
                  (t[i] = t[e]), (t[e] = n);
                }
          }),
          (s._calculateProjectionMatrix = function() {}),
          (s._onScreenSizeChanged = function() {
            this._calculateProjectionMatrix();
          }),
          (s._prepareCameraToRender = function() {
            z._currentCameraCullingMask = this.cullingMask;
            var t = this._shaderValues;
            t.setValue(0, this.transform.position.elements),
              t.setValue(5, this.forward.elements),
              t.setValue(6, this.up.elements);
          }),
          (s._prepareCameraViewProject = function(t, e) {
            var i = this._shaderValues;
            i.setValue(1, t.elements), i.setValue(2, e.elements);
          }),
          (s._renderCamera = function(t, e, i) {}),
          (s.addLayer = function(t) {
            29 !== t.number &&
              30 != t.number &&
              (this.cullingMask = this.cullingMask | t.mask);
          }),
          (s.removeLayer = function(t) {
            29 !== t.number &&
              30 != t.number &&
              (this.cullingMask = this.cullingMask & ~t.mask);
          }),
          (s.addAllLayers = function() {
            this.cullingMask = 2147483647;
          }),
          (s.removeAllLayers = function() {
            this.cullingMask =
              0 | z.getLayerByNumber(29).mask | z.getLayerByNumber(30).mask;
          }),
          (s.ResetProjectionMatrix = function() {
            (this._useUserProjectionMatrix = !1),
              this._calculateProjectionMatrix();
          }),
          (s.moveForward = function(t) {
            (this._tempVector3.elements[0] = this._tempVector3.elements[1] = 0),
              (this._tempVector3.elements[2] = t),
              this.transform.translate(this._tempVector3);
          }),
          (s.moveRight = function(t) {
            (this._tempVector3.elements[1] = this._tempVector3.elements[2] = 0),
              (this._tempVector3.elements[0] = t),
              this.transform.translate(this._tempVector3);
          }),
          (s.moveVertical = function(t) {
            (this._tempVector3.elements[0] = this._tempVector3.elements[2] = 0),
              (this._tempVector3.elements[1] = t),
              this.transform.translate(this._tempVector3, !1);
          }),
          (s._addSelfRenderObjects = function() {
            var t = this.scene._cameraPool,
              e = t.length;
            if (e > 0) {
              for (var i = e - 1; i >= 0; i--)
                if (this.renderingOrder <= t[i].renderingOrder) {
                  t.splice(i + 1, 0, this);
                  break;
                }
            } else
              t.push(this),
                this.scene.conchModel &&
                  this.scene.conchModel.setCurrentCamera(this.conchModel);
          }),
          (s._clearSelfRenderObjects = function() {
            var t = this.scene._cameraPool;
            t.splice(t.indexOf(this), 1);
          }),
          (s.destroy = function(e) {
            void 0 === e && (e = !0),
              this._sky && this._sky.destroy(),
              (this.renderTarget = null),
              i.stage.off('resize', this, this._onScreenSizeChanged),
              t.prototype.destroy.call(this, e);
          }),
          r(
            0,
            s,
            'sky',
            function() {
              return this._sky;
            },
            function(t) {
              (this._sky = t), (t._ownerCamera = this);
            }
          ),
          r(0, s, 'forward', function() {
            var t = this.transform.worldMatrix.elements,
              e = this._forward.elements;
            return (
              (e[0] = -t[8]), (e[1] = -t[9]), (e[2] = -t[10]), this._forward
            );
          }),
          r(0, s, 'position', function() {
            var t = this.transform.worldMatrix.elements,
              e = this._position.elements;
            return (
              (e[0] = t[12]), (e[1] = t[13]), (e[2] = t[14]), this._position
            );
          }),
          r(
            0,
            s,
            'renderTarget',
            function() {
              return this._renderTarget;
            },
            function(t) {
              (this._renderTarget = t),
                null != t && (this._renderTargetSize = t.size);
            }
          ),
          r(0, s, 'up', function() {
            var t = this.transform.worldMatrix.elements,
              e = this._up.elements;
            return (e[0] = t[4]), (e[1] = t[5]), (e[2] = t[6]), this._up;
          }),
          r(0, s, 'right', function() {
            var t = this.transform.worldMatrix.elements,
              e = this._right.elements;
            return (e[0] = t[0]), (e[1] = t[1]), (e[2] = t[2]), this._right;
          }),
          r(
            0,
            s,
            'renderTargetSize',
            function() {
              return this._renderTargetSize;
            },
            function(t) {
              null != this.renderTarget && this._renderTargetSize,
                (this._renderTargetSize = t),
                this._calculateProjectionMatrix();
            }
          ),
          r(
            0,
            s,
            'fieldOfView',
            function() {
              return this._fieldOfView;
            },
            function(t) {
              (this._fieldOfView = t), this._calculateProjectionMatrix();
            }
          ),
          r(
            0,
            s,
            'nearPlane',
            function() {
              return this._nearPlane;
            },
            function(t) {
              (this._nearPlane = t), this._calculateProjectionMatrix();
            }
          ),
          r(
            0,
            s,
            'farPlane',
            function() {
              return this._farPlane;
            },
            function(t) {
              (this._farPlane = t), this._calculateProjectionMatrix();
            }
          ),
          r(
            0,
            s,
            'orthographic',
            function() {
              return this._orthographic;
            },
            function(t) {
              (this._orthographic = t), this._calculateProjectionMatrix();
            }
          ),
          r(
            0,
            s,
            'orthographicVerticalSize',
            function() {
              return this._orthographicVerticalSize;
            },
            function(t) {
              (this._orthographicVerticalSize = t),
                this._calculateProjectionMatrix();
            }
          ),
          r(
            0,
            s,
            'renderingOrder',
            function() {
              return this._renderingOrder;
            },
            function(t) {
              (this._renderingOrder = t), this._sortCamerasByRenderingOrder();
            }
          ),
          (e.CAMERAPOS = 0),
          (e.VIEWMATRIX = 1),
          (e.PROJECTMATRIX = 2),
          (e.VPMATRIX = 3),
          (e.VPMATRIX_NO_TRANSLATE = 4),
          (e.CAMERADIRECTION = 5),
          (e.CAMERAUP = 6),
          (e.ENVIRONMENTDIFFUSE = 7),
          (e.ENVIRONMENTSPECULAR = 8),
          (e.SIMLODINFO = 9),
          (e.DIFFUSEIRRADMATR = 10),
          (e.DIFFUSEIRRADMATG = 11),
          (e.DIFFUSEIRRADMATB = 12),
          (e.HDREXPOSURE = 13),
          (e.RENDERINGTYPE_DEFERREDLIGHTING = 'DEFERREDLIGHTING'),
          (e.RENDERINGTYPE_FORWARDRENDERING = 'FORWARDRENDERING'),
          (e.CLEARFLAG_SOLIDCOLOR = 0),
          (e.CLEARFLAG_SKY = 1),
          (e.CLEARFLAG_DEPTHONLY = 2),
          (e.CLEARFLAG_NONE = 3),
          n(e, [
            '_invertYScaleMatrix',
            function() {
              return (this._invertYScaleMatrix = new Te(
                1,
                0,
                0,
                0,
                0,
                -1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1
              ));
            },
            '_invertYProjectionMatrix',
            function() {
              return (this._invertYProjectionMatrix = new Te());
            },
            '_invertYProjectionViewMatrix',
            function() {
              return (this._invertYProjectionViewMatrix = new Te());
            }
          ]),
          e
        );
      })(Pi),
      _n = (function(t) {
        function e(t) {
          (this._render = null),
            (this._geometryFilter = null),
            e.__super.call(this, t);
        }
        a(e, 'laya.d3.core.RenderableSprite3D', t);
        var i = e.prototype;
        return (
          (i._addToInitStaticBatchManager = function() {}),
          (i._setBelongScene = function(e) {
            t.prototype._setBelongScene.call(this, e),
              e._renderableSprite3Ds.push(this),
              this._render._applyLightMapParams();
          }),
          (i._setUnBelongScene = function() {
            var e = this._scene._renderableSprite3Ds,
              i = e.indexOf(this);
            e.splice(i, 1),
              this._render._removeShaderDefine(
                laya.d3.core.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP
              ),
              t.prototype._setUnBelongScene.call(this);
          }),
          (i._update = function(t) {
            (t.owner = this),
              this._activeInHierarchy &&
                (this._updateComponents(t),
                this._render._updateOctreeNode(),
                this._lateUpdateComponents(t),
                L.spriteCount++,
                this._childs.length && this._updateChilds(t));
          }),
          (i.destroy = function(e) {
            void 0 === e && (e = !0),
              t.prototype.destroy.call(this, e),
              this._render._destroy(),
              (this._render = null);
          }),
          (e.__init__ = function() {
            (e.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV = e.shaderDefines.registerDefine(
              'SCALEOFFSETLIGHTINGMAPUV'
            )),
              (e.SAHDERDEFINE_LIGHTMAP = e.shaderDefines.registerDefine(
                'LIGHTMAP'
              ));
          }),
          (e.SHADERDEFINE_SCALEOFFSETLIGHTINGMAPUV = 2),
          (e.SAHDERDEFINE_LIGHTMAP = 4),
          (e.LIGHTMAPSCALEOFFSET = 2),
          (e.LIGHTMAP = 3),
          n(e, [
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue());
            }
          ]),
          e
        );
      })(Pi),
      dn = (function(t) {
        function e() {
          (this._intensityColor = null),
            (this._intensity = NaN),
            (this._shadow = !1),
            (this._shadowFarPlane = 0),
            (this._shadowMapSize = 0),
            (this._shadowMapCount = 0),
            (this._shadowMapPCFType = 0),
            (this._parallelSplitShadowMap = null),
            (this._lightmapBakedType = 0),
            (this.color = null),
            e.__super.call(this),
            (this._intensity = 1),
            (this._intensityColor = new Re()),
            (this.color = new Re(1, 1, 1)),
            (this._shadow = !1),
            (this._shadowFarPlane = 8),
            (this._shadowMapSize = 512),
            (this._shadowMapCount = 1),
            (this._shadowMapPCFType = 0),
            (this._lightmapBakedType = e.LIGHTMAPBAKEDTYPE_REALTIME);
        }
        a(e, 'laya.d3.core.light.LightSprite', Pi);
        var i = e.prototype;
        return (
          (i._parseCustomProps = function(t, e, i, n) {
            var a = i.color,
              r = this.color.elements;
            (r[0] = a[0]), (r[1] = a[1]), (r[2] = a[2]);
          }),
          (i._addSelfRenderObjects = function() {
            this.lightmapBakedType !== e.LIGHTMAPBAKEDTYPE_BAKED &&
              this._scene._addLight(this);
          }),
          (i._clearSelfRenderObjects = function() {
            this.lightmapBakedType !== e.LIGHTMAPBAKEDTYPE_BAKED &&
              this._scene._removeLight(this);
          }),
          (i._prepareToScene = function(t) {
            return !1;
          }),
          r(
            0,
            i,
            'lightmapBakedType',
            function() {
              return this._lightmapBakedType;
            },
            function(t) {
              this._lightmapBakedType !== t &&
                ((this._lightmapBakedType = t),
                this._activeInHierarchy &&
                  (t !== e.LIGHTMAPBAKEDTYPE_BAKED
                    ? this._scene._addLight(this)
                    : this._scene._removeLight(this)));
            }
          ),
          r(
            0,
            i,
            'shadowPCFType',
            function() {
              return this._shadowMapPCFType;
            },
            function(t) {
              (this._shadowMapPCFType = t),
                this._parallelSplitShadowMap &&
                  this._parallelSplitShadowMap.setPCFType(t);
            }
          ),
          r(
            0,
            i,
            'intensity',
            function() {
              return this._intensity;
            },
            function(t) {
              this._intensity = t;
            }
          ),
          r(
            0,
            i,
            'shadow',
            function() {
              return this._shadow;
            },
            function(t) {
              throw new Error('LightSprite: must override it.');
            }
          ),
          r(
            0,
            i,
            'shadowDistance',
            function() {
              return this._shadowFarPlane;
            },
            function(t) {
              (this._shadowFarPlane = t),
                this._parallelSplitShadowMap &&
                  this._parallelSplitShadowMap.setFarDistance(t);
            }
          ),
          r(
            0,
            i,
            'shadowPSSMCount',
            function() {
              return this._shadowMapCount;
            },
            function(t) {
              (this._shadowMapCount = t),
                this._parallelSplitShadowMap &&
                  (this._parallelSplitShadowMap.PSSMNum = t);
            }
          ),
          r(
            0,
            i,
            'shadowResolution',
            function() {
              return this._shadowMapSize;
            },
            function(t) {
              (this._shadowMapSize = t),
                this._parallelSplitShadowMap &&
                  this._parallelSplitShadowMap.setShadowMapTextureSize(t);
            }
          ),
          r(
            0,
            i,
            'diffuseColor',
            function() {
              return (
                console.log(
                  'LightSprite: discard property,please use color property instead.'
                ),
                this.color
              );
            },
            function(t) {
              console.log(
                'LightSprite: discard property,please use color property instead.'
              ),
                (this.color = t);
            }
          ),
          (e.LIGHTMAPBAKEDTYPE_REALTIME = 0),
          (e.LIGHTMAPBAKEDTYPE_MIXED = 1),
          (e.LIGHTMAPBAKEDTYPE_BAKED = 2),
          e
        );
      })(),
      fn = (function(t) {
        function e(t) {
          (this._terrainRes = null),
            (this._lightmapScaleOffset = null),
            e.__super.call(this),
            (this._lightmapScaleOffset = new Be(1, 1, 0, 0)),
            t &&
              ((this._terrainRes = t),
              t.loaded
                ? this.buildTerrain(t)
                : t.once('loaded', this, this.buildTerrain));
        }
        a(e, 'laya.d3.terrain.Terrain', Pi);
        var n = e.prototype;
        return (
          (n._parseCustomProps = function(t, e, i, n) {
            this.terrainRes = v.getRes(e[i.dataPath]);
            var a = i.lightmapIndex;
            null != a && this.setLightmapIndex(a);
            var r = i.lightmapScaleOffset;
            r && this.setLightmapScaleOffset(new Be(r[0], r[1], r[2], r[3]));
          }),
          (n.setLightmapIndex = function(t) {
            for (var e = 0; e < this._childs.length; e++) {
              this._childs[e].terrainRender.lightmapIndex = t;
            }
          }),
          (n.setLightmapScaleOffset = function(t) {
            if (t) {
              t.cloneTo(this._lightmapScaleOffset);
              for (var e = 0; e < this._childs.length; e++) {
                this._childs[
                  e
                ].terrainRender.lightmapScaleOffset = this._lightmapScaleOffset;
              }
            }
          }),
          (n.disableLight = function() {
            for (var t = 0, e = this._childs.length; t < e; t++)
              for (
                var i = this._childs[t],
                  n = 0,
                  a = i._render.sharedMaterials.length;
                n < a;
                n++
              ) {
                i._render.sharedMaterials[n].disableLight();
              }
          }),
          (n.buildTerrain = function(t) {
            for (
              var e = t._chunkNumX,
                i = t._chunkNumZ,
                n = t._heightData,
                a = 0,
                r = 0;
              r < i;
              r++
            )
              for (var s = 0; s < e; s++) {
                for (
                  var o = new wn(
                      s,
                      r,
                      t._gridSize,
                      n._terrainHeightData,
                      n._width,
                      n._height,
                      t._cameraCoordinateInverse
                    ),
                    l = t._chunkInfos[a++],
                    h = 0;
                  h < l.alphaMap.length;
                  h++
                ) {
                  var c = l.detailID[h].length,
                    u =
                      c > 0
                        ? t._detailTextureInfos[l.detailID[h][0]].diffuseTexture
                        : null,
                    _ =
                      c > 1
                        ? t._detailTextureInfos[l.detailID[h][1]].diffuseTexture
                        : null,
                    d =
                      c > 2
                        ? t._detailTextureInfos[l.detailID[h][2]].diffuseTexture
                        : null,
                    f =
                      c > 3
                        ? t._detailTextureInfos[l.detailID[h][3]].diffuseTexture
                        : null,
                    p =
                      c > 0
                        ? t._detailTextureInfos[l.detailID[h][0]].scale
                        : null,
                    m =
                      c > 1
                        ? t._detailTextureInfos[l.detailID[h][1]].scale
                        : null,
                    g =
                      c > 2
                        ? t._detailTextureInfos[l.detailID[h][2]].scale
                        : null,
                    y =
                      c > 3
                        ? t._detailTextureInfos[l.detailID[h][3]].scale
                        : null;
                  o.buildRenderElementAndMaterial(
                    c,
                    l.normalMap,
                    l.alphaMap[h],
                    u,
                    _,
                    d,
                    f,
                    t._materialInfo.ambientColor,
                    t._materialInfo.diffuseColor,
                    t._materialInfo.specularColor,
                    p ? p.x : 1,
                    p ? p.y : 1,
                    m ? m.x : 1,
                    m ? m.y : 1,
                    g ? g.x : 1,
                    g ? g.y : 1,
                    y ? y.x : 1,
                    y ? y.y : 1
                  );
                }
                (o.terrainRender.receiveShadow = !0),
                  (o.terrainRender.lightmapScaleOffset = this._lightmapScaleOffset),
                  this.addChild(o);
              }
          }),
          (n.width = function() {
            return (
              this._terrainRes._chunkNumX *
              Ge.CHUNK_GRID_NUM *
              this._terrainRes._gridSize
            );
          }),
          (n.depth = function() {
            return (
              this._terrainRes._chunkNumZ *
              Ge.CHUNK_GRID_NUM *
              this._terrainRes._gridSize
            );
          }),
          (n.getHeightXZ = function(t, i) {
            if (!this._terrainRes || !this._terrainRes.loaded) return NaN;
            if (
              ((t -= this.transform.position.x),
              (i -= this.transform.position.z),
              e.__VECTOR3__ || (e.__VECTOR3__ = new Re()),
              (e.__VECTOR3__.elements[0] = t),
              (e.__VECTOR3__.elements[1] = 0),
              (e.__VECTOR3__.elements[2] = i),
              Re.transformV3ToV3(
                e.__VECTOR3__,
                Ge.__ADAPT_MATRIX_INV__,
                e.__VECTOR3__
              ),
              (t = e.__VECTOR3__.elements[0]),
              (i = e.__VECTOR3__.elements[2]),
              t < 0 || t > this.width() || i < 0 || i > this.depth())
            )
              return NaN;
            var n = this._terrainRes._gridSize,
              a = parseInt('' + t / n),
              r = parseInt('' + i / n),
              s = t - a * n,
              o = i - r * n,
              l = NaN,
              h = NaN,
              c = NaN,
              u = NaN,
              _ = NaN,
              d = this._terrainRes._heightData;
            return s + o > n
              ? ((l = d._terrainHeightData[(r + 1 - 1) * d._width + a + 1]),
                (h = d._terrainHeightData[(r + 1 - 1) * d._width + a]),
                (c = d._terrainHeightData[(r - 1) * d._width + a + 1]),
                (u = (n - s) / n),
                (_ = (n - o) / n),
                l + (h - l) * u + (c - l) * _)
              : ((l = d._terrainHeightData[Math.max(0, r - 1) * d._width + a]),
                (h =
                  d._terrainHeightData[
                    Math.min(
                      d._width * d._height - 1,
                      (r + 1 - 1) * d._width + a
                    )
                  ]),
                (c =
                  d._terrainHeightData[
                    Math.min(
                      d._width * d._height - 1,
                      Math.max(0, r - 1) * d._width + a + 1
                    )
                  ]),
                (u = s / n),
                (_ = o / n),
                l + (h - l) * _ + (c - l) * u);
          }),
          r(0, n, 'terrainRes', null, function(t) {
            t &&
              ((this._terrainRes = t),
              t.loaded
                ? this.buildTerrain(t)
                : t.once('loaded', this, this.buildTerrain));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e, null, 1, !1);
          }),
          (e.RENDER_LINE_MODEL = !1),
          (e.LOD_TOLERANCE_VALUE = 4),
          (e.LOD_DISTANCE_FACTOR = 2),
          (e.__VECTOR3__ = null),
          e
        );
      })(),
      pn =
        ((function(t) {
          function e(t, i, n) {
            (this._long = NaN),
              (this._width = NaN),
              (this._height = NaN),
              void 0 === t && (t = 1),
              void 0 === i && (i = 1),
              void 0 === n && (n = 1),
              e.__super.call(this),
              (this._long = t),
              (this._width = i),
              (this._height = n),
              this.activeResource(),
              (this._positions = this._getPositions()),
              this._generateBoundingObject();
          }
          a(e, 'laya.d3.resource.models.BoxMesh', nn);
          var i = e.prototype;
          (i.recreateResource = function() {
            (this._numberVertices = 24), (this._numberIndices = 36);
            var t = Zt.vertexDeclaration,
              e = (t.vertexStride, this._long / 2),
              i = this._height / 2,
              n = this._width / 2,
              a = new Float32Array([
                -e,
                i,
                -n,
                0,
                1,
                0,
                0,
                0,
                e,
                i,
                -n,
                0,
                1,
                0,
                1,
                0,
                e,
                i,
                n,
                0,
                1,
                0,
                1,
                1,
                -e,
                i,
                n,
                0,
                1,
                0,
                0,
                1,
                -e,
                -i,
                -n,
                0,
                -1,
                0,
                0,
                1,
                e,
                -i,
                -n,
                0,
                -1,
                0,
                1,
                1,
                e,
                -i,
                n,
                0,
                -1,
                0,
                1,
                0,
                -e,
                -i,
                n,
                0,
                -1,
                0,
                0,
                0,
                -e,
                i,
                -n,
                -1,
                0,
                0,
                0,
                0,
                -e,
                i,
                n,
                -1,
                0,
                0,
                1,
                0,
                -e,
                -i,
                n,
                -1,
                0,
                0,
                1,
                1,
                -e,
                -i,
                -n,
                -1,
                0,
                0,
                0,
                1,
                e,
                i,
                -n,
                1,
                0,
                0,
                1,
                0,
                e,
                i,
                n,
                1,
                0,
                0,
                0,
                0,
                e,
                -i,
                n,
                1,
                0,
                0,
                0,
                1,
                e,
                -i,
                -n,
                1,
                0,
                0,
                1,
                1,
                -e,
                i,
                n,
                0,
                0,
                1,
                0,
                0,
                e,
                i,
                n,
                0,
                0,
                1,
                1,
                0,
                e,
                -i,
                n,
                0,
                0,
                1,
                1,
                1,
                -e,
                -i,
                n,
                0,
                0,
                1,
                0,
                1,
                -e,
                i,
                -n,
                0,
                0,
                -1,
                1,
                0,
                e,
                i,
                -n,
                0,
                0,
                -1,
                0,
                0,
                e,
                -i,
                -n,
                0,
                0,
                -1,
                0,
                1,
                -e,
                -i,
                -n,
                0,
                0,
                -1,
                1,
                1
              ]),
              r = new Uint16Array([
                0,
                1,
                2,
                2,
                3,
                0,
                4,
                7,
                6,
                6,
                5,
                4,
                8,
                9,
                10,
                10,
                11,
                8,
                12,
                15,
                14,
                14,
                13,
                12,
                16,
                17,
                18,
                18,
                19,
                16,
                20,
                23,
                22,
                22,
                21,
                20
              ]);
            (this._vertexBuffer = new Yi(t, this._numberVertices, 35044, !0)),
              (this._indexBuffer = new qi(
                'ushort',
                this._numberIndices,
                35044,
                !0
              )),
              this._vertexBuffer.setData(a),
              this._indexBuffer.setData(r),
              (this.memorySize =
                2 *
                (this._vertexBuffer._byteLength +
                  this._indexBuffer._byteLength)),
              this.completeCreate();
          }),
            r(
              0,
              i,
              'long',
              function() {
                return this._long;
              },
              function(t) {
                this._long !== t &&
                  ((this._long = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'width',
              function() {
                return this._width;
              },
              function(t) {
                this._width !== t &&
                  ((this._width = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'height',
              function() {
                return this._height;
              },
              function(t) {
                this._height !== t &&
                  ((this._height = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            );
        })(),
        (function(t) {
          function e(t, i, n, a) {
            (this._radius = NaN),
              (this._height = NaN),
              (this._slices = 0),
              (this._stacks = 0),
              void 0 === t && (t = 0.5),
              void 0 === i && (i = 2),
              void 0 === n && (n = 16),
              void 0 === a && (a = 32),
              e.__super.call(this),
              (this._radius = t),
              (this._height = i < 2 * t ? 2 * t : i),
              (this._stacks = n),
              (this._slices = a),
              this.recreateResource(),
              (this._positions = this._getPositions()),
              this._generateBoundingObject();
          }
          a(e, 'laya.d3.resource.models.CapsuleMesh', nn);
          var i = e.prototype;
          (i.recreateResource = function() {
            (this._numberVertices =
              (this._stacks + 1) * (this.slices + 1) * 2 +
              2 * (this._slices + 1)),
              (this._numberIndices =
                3 * this._stacks * (this._slices + 1) * 2 * 2 +
                2 * this._slices * 3);
            var t = Zt.vertexDeclaration,
              e = t.vertexStride / 4,
              i = new Float32Array(this._numberVertices * e),
              n = new Uint16Array(this._numberIndices),
              a = Math.PI / 2 / this._stacks,
              r = (2 * Math.PI) / this._slices,
              s = this._height / 2 - this._radius,
              o = 0,
              l = 0,
              h = 0,
              c = 0,
              u = 0,
              _ = 0,
              d = 0,
              f = 0;
            for (d = 0; d <= this._stacks; d++)
              for (f = 0; f <= this._slices; f++)
                (o =
                  this._radius * Math.cos(d * a) * Math.cos(f * r + Math.PI)),
                  (l = this._radius * Math.sin(d * a)),
                  (h =
                    this._radius * Math.cos(d * a) * Math.sin(f * r + Math.PI)),
                  (i[c++] = o),
                  (i[c++] = l + s),
                  (i[c++] = h),
                  (i[c++] = o),
                  (i[c++] = l),
                  (i[c++] = h),
                  (i[c++] = 1 - f / this._slices),
                  (i[c++] =
                    (1 - d / this._stacks) *
                    ((Math.PI * this._radius) /
                      2 /
                      (this._height + Math.PI * this._radius))),
                  d < this._stacks &&
                    ((n[u++] = d * (this._slices + 1) + f + (this._slices + 1)),
                    (n[u++] = d * (this._slices + 1) + f),
                    (n[u++] = d * (this._slices + 1) + f + 1),
                    (n[u++] = d * (this._slices + 1) + f + this._slices),
                    (n[u++] = d * (this._slices + 1) + f),
                    (n[u++] = d * (this._slices + 1) + f + (this._slices + 1)));
            for (
              _ += (this._stacks + 1) * (this._slices + 1), d = 0;
              d <= this._stacks;
              d++
            )
              for (f = 0; f <= this._slices; f++)
                (o =
                  this._radius * Math.cos(d * a) * Math.cos(f * r + Math.PI)),
                  (l = this._radius * Math.sin(-d * a)),
                  (h =
                    this._radius * Math.cos(d * a) * Math.sin(f * r + Math.PI)),
                  (i[c++] = o),
                  (i[c++] = l - s),
                  (i[c++] = h),
                  (i[c++] = o),
                  (i[c++] = l),
                  (i[c++] = h),
                  (i[c++] = 1 - f / this._slices),
                  (i[c++] =
                    ((d / this._stacks) * ((Math.PI * this._radius) / 2) +
                      (this._height + (Math.PI * this._radius) / 2)) /
                    (this._height + Math.PI * this._radius)),
                  d < this._stacks &&
                    ((n[u++] = _ + d * (this._slices + 1) + f),
                    (n[u++] =
                      _ + d * (this._slices + 1) + f + (this._slices + 1)),
                    (n[u++] = _ + d * (this._slices + 1) + f + 1),
                    (n[u++] = _ + d * (this._slices + 1) + f),
                    (n[u++] = _ + d * (this._slices + 1) + f + this._slices),
                    (n[u++] =
                      _ + d * (this._slices + 1) + f + (this._slices + 1)));
            for (
              _ += (this._stacks + 1) * (this._slices + 1), f = 0;
              f <= this._slices;
              f++
            )
              (o = this._radius * Math.cos(f * r + Math.PI)),
                (l = s),
                (h = this._radius * Math.sin(f * r + Math.PI)),
                (i[c++] = o),
                (i[c + 8 * (this._slices + 1) - 1] = o),
                (i[c++] = l),
                (i[c + 8 * (this._slices + 1) - 1] = -l),
                (i[c++] = h),
                (i[c + 8 * (this._slices + 1) - 1] = h),
                (i[c++] = o),
                (i[c + 8 * (this._slices + 1) - 1] = o),
                (i[c++] = 0),
                (i[c + 8 * (this._slices + 1) - 1] = 0),
                (i[c++] = h),
                (i[c + 8 * (this._slices + 1) - 1] = h),
                (i[c++] = 1 - (1 * f) / this._slices),
                (i[c + 8 * (this._slices + 1) - 1] =
                  1 - (1 * f) / this._slices),
                (i[c++] =
                  (Math.PI * this._radius) /
                  2 /
                  (this._height + Math.PI * this._radius)),
                (i[c + 8 * (this._slices + 1) - 1] =
                  ((Math.PI * this._radius) / 2 + this._height) /
                  (this._height + Math.PI * this._radius));
            for (f = 0; f < this._slices; f++)
              (n[u++] = f + _ + (this._slices + 1)),
                (n[u++] = f + _ + 1),
                (n[u++] = f + _),
                (n[u++] = f + _ + (this._slices + 1)),
                (n[u++] = f + _ + (this._slices + 1) + 1),
                (n[u++] = f + _ + 1);
            (_ += 2 * (this._slices + 1)),
              (this._vertexBuffer = new Yi(t, this._numberVertices, 35044, !0)),
              (this._indexBuffer = new qi(
                'ushort',
                this._numberIndices,
                35044,
                !0
              )),
              this._vertexBuffer.setData(i),
              this._indexBuffer.setData(n),
              (this.memorySize =
                2 *
                (this._vertexBuffer._byteLength +
                  this._indexBuffer._byteLength)),
              this.completeCreate();
          }),
            r(
              0,
              i,
              'radius',
              function() {
                return this._radius;
              },
              function(t) {
                this._radius !== t &&
                  ((this._radius = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'height',
              function() {
                return this._height;
              },
              function(t) {
                this._height !== t &&
                  ((this._height = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'stacks',
              function() {
                return this._stacks;
              },
              function(t) {
                this._stacks !== t &&
                  ((this._stacks = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'slices',
              function() {
                return this._slices;
              },
              function(t) {
                this._slices !== t &&
                  ((this._slices = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            );
        })(),
        (function(t) {
          function e(t, i, n) {
            (this._radius = NaN),
              (this._height = NaN),
              (this._slices = 0),
              void 0 === t && (t = 0.5),
              void 0 === i && (i = 2),
              void 0 === n && (n = 32),
              e.__super.call(this),
              (this._radius = t),
              (this._height = i),
              (this._slices = n),
              this.recreateResource(),
              (this._positions = this._getPositions()),
              this._generateBoundingObject();
          }
          a(e, 'laya.d3.resource.models.CylinderMesh', nn);
          var i = e.prototype;
          (i.recreateResource = function() {
            (this._numberVertices =
              this._slices +
              1 +
              1 +
              2 * (this._slices + 1) +
              (this._slices + 1 + 1)),
              (this._numberIndices =
                3 * this._slices + 6 * this._slices + 3 * this._slices);
            for (
              var t = Zt.vertexDeclaration,
                e = t.vertexStride / 4,
                i = new Float32Array(this._numberVertices * e),
                n = new Uint16Array(this._numberIndices),
                a = (2 * Math.PI) / this._slices,
                r = this._height / 2,
                s = 0,
                o = 0,
                l = 0,
                h = 0,
                c = 0,
                u = 0,
                _ = 0,
                d = 0;
              d <= this._slices;
              d++
            )
              0 === d &&
                ((i[u++] = 0),
                (i[u++] = r),
                (i[u++] = 0),
                (i[u++] = 0),
                (i[u++] = 1),
                (i[u++] = 0),
                (i[u++] = 0.5),
                (i[u++] = 0.5)),
                (s = d * a),
                (l = Math.cos(s) * this._radius),
                (h = r),
                (c = Math.sin(s) * this._radius),
                (i[u++] = l),
                (i[u++] = h),
                (i[u++] = c),
                (i[u++] = 0),
                (i[u++] = 1),
                (i[u++] = 0),
                (i[u++] = 0.5 + 0.5 * Math.cos(s)),
                (i[u++] = 0.5 + 0.5 * Math.sin(s));
            for (var f = 0; f < this._slices; f++)
              (n[_++] = 0), (n[_++] = f + 1), (n[_++] = f + 2);
            o += this._slices + 1 + 1;
            for (var p = 0; p <= this._slices; p++)
              (s = p * a),
                (l = Math.cos(s + Math.PI) * this._radius),
                (h = r),
                (c = Math.sin(s + Math.PI) * this._radius),
                (i[u++] = l),
                (i[u + 8 * (this._slices + 1) - 1] = l),
                (i[u++] = h),
                (i[u + 8 * (this._slices + 1) - 1] = -h),
                (i[u++] = c),
                (i[u + 8 * (this._slices + 1) - 1] = c),
                (i[u++] = l),
                (i[u + 8 * (this._slices + 1) - 1] = l),
                (i[u++] = 0),
                (i[u + 8 * (this._slices + 1) - 1] = 0),
                (i[u++] = c),
                (i[u + 8 * (this._slices + 1) - 1] = c),
                (i[u++] = 1 - (1 * p) / this._slices),
                (i[u + 8 * (this._slices + 1) - 1] =
                  1 - (1 * p) / this._slices),
                (i[u++] = 0),
                (i[u + 8 * (this._slices + 1) - 1] = 1);
            u += 8 * (this._slices + 1);
            for (var m = 0; m < this._slices; m++)
              (n[_++] = m + o + (this._slices + 1)),
                (n[_++] = m + o + 1),
                (n[_++] = m + o),
                (n[_++] = m + o + (this._slices + 1)),
                (n[_++] = m + o + (this._slices + 1) + 1),
                (n[_++] = m + o + 1);
            o += 2 * (this._slices + 1);
            for (var g = 0; g <= this._slices; g++)
              0 === g &&
                ((i[u++] = 0),
                (i[u++] = -r),
                (i[u++] = 0),
                (i[u++] = 0),
                (i[u++] = -1),
                (i[u++] = 0),
                (i[u++] = 0.5),
                (i[u++] = 0.5)),
                (s = g * a),
                (l = Math.cos(s + Math.PI) * this._radius),
                (h = -r),
                (c = Math.sin(s + Math.PI) * this._radius),
                (i[u++] = l),
                (i[u++] = h),
                (i[u++] = c),
                (i[u++] = 0),
                (i[u++] = -1),
                (i[u++] = 0),
                (i[u++] = 0.5 + 0.5 * Math.cos(s)),
                (i[u++] = 0.5 + 0.5 * Math.sin(s));
            for (var y = 0; y < this._slices; y++)
              (n[_++] = 0 + o), (n[_++] = y + 2 + o), (n[_++] = y + 1 + o);
            (o += this._slices + 1 + 1),
              (this._vertexBuffer = new Yi(t, this._numberVertices, 35044, !0)),
              (this._indexBuffer = new qi(
                'ushort',
                this._numberIndices,
                35044,
                !0
              )),
              this._vertexBuffer.setData(i),
              this._indexBuffer.setData(n),
              (this.memorySize =
                2 *
                (this._vertexBuffer._byteLength +
                  this._indexBuffer._byteLength)),
              this.completeCreate();
          }),
            r(
              0,
              i,
              'radius',
              function() {
                return this._radius;
              },
              function(t) {
                this._radius !== t &&
                  ((this._radius = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'height',
              function() {
                return this._height;
              },
              function(t) {
                this._height !== t &&
                  ((this._height = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'slices',
              function() {
                return this._slices;
              },
              function(t) {
                this._slices !== t &&
                  ((this._slices = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            );
        })(),
        (function(t) {
          function e(t, i, n, a) {
            (this._long = NaN),
              (this._width = NaN),
              (this._stacks = 0),
              (this._slices = 0),
              void 0 === t && (t = 10),
              void 0 === i && (i = 10),
              void 0 === n && (n = 10),
              void 0 === a && (a = 10),
              e.__super.call(this),
              (this._long = t),
              (this._width = i),
              (this._stacks = n),
              (this._slices = a),
              this.activeResource(),
              (this._positions = this._getPositions()),
              this._generateBoundingObject();
          }
          a(e, 'laya.d3.resource.models.PlaneMesh', nn);
          var i = e.prototype;
          (i.recreateResource = function() {
            (this._numberVertices = (this._stacks + 1) * (this._slices + 1)),
              (this._numberIndices = this._stacks * this._slices * 2 * 3);
            for (
              var t = new Uint16Array(this._numberIndices),
                e = Zt.vertexDeclaration,
                i = e.vertexStride / 4,
                n = new Float32Array(this._numberVertices * i),
                a = this._long / 2,
                r = this._width / 2,
                s = this._long / this._stacks,
                o = this._width / this._slices,
                l = 0,
                h = 0;
              h <= this._slices;
              h++
            )
              for (var c = 0; c <= this._stacks; c++)
                (n[l++] = c * s - a),
                  (n[l++] = 0),
                  (n[l++] = h * o - r),
                  (n[l++] = 0),
                  (n[l++] = 1),
                  (n[l++] = 0),
                  (n[l++] = (1 * c) / this._stacks),
                  (n[l++] = (1 * h) / this._slices);
            var u = 0;
            for (h = 0; h < this._slices; h++)
              for (c = 0; c < this._stacks; c++)
                (t[u++] = (h + 1) * (this._stacks + 1) + c),
                  (t[u++] = h * (this._stacks + 1) + c),
                  (t[u++] = (h + 1) * (this._stacks + 1) + c + 1),
                  (t[u++] = h * (this._stacks + 1) + c),
                  (t[u++] = h * (this._stacks + 1) + c + 1),
                  (t[u++] = (h + 1) * (this._stacks + 1) + c + 1);
            (this._vertexBuffer = new Yi(e, this._numberVertices, 35044, !0)),
              (this._indexBuffer = new qi(
                'ushort',
                this._numberIndices,
                35044,
                !0
              )),
              this._vertexBuffer.setData(n),
              this._indexBuffer.setData(t),
              (this.memorySize =
                2 *
                (this._vertexBuffer._byteLength +
                  this._indexBuffer._byteLength)),
              this.completeCreate();
          }),
            r(
              0,
              i,
              'long',
              function() {
                return this._long;
              },
              function(t) {
                this._long !== t &&
                  ((this._long = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'width',
              function() {
                return this._width;
              },
              function(t) {
                this._width !== t &&
                  ((this._width = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'stacks',
              function() {
                return this._stacks;
              },
              function(t) {
                this._stacks !== t &&
                  ((this._stacks = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'slices',
              function() {
                return this._slices;
              },
              function(t) {
                this._slices !== t &&
                  ((this._slices = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            );
        })(),
        (function(t) {
          function e(t, i) {
            (this._long = NaN),
              (this._width = NaN),
              void 0 === t && (t = 1),
              void 0 === i && (i = 1),
              e.__super.call(this),
              (this._long = t),
              (this._width = i),
              this.activeResource(),
              (this._positions = this._getPositions()),
              this._generateBoundingObject();
          }
          a(e, 'laya.d3.resource.models.QuadMesh', nn);
          var i = e.prototype;
          (i.recreateResource = function() {
            (this._numberVertices = 4), (this._numberIndices = 6);
            var t = Zt.vertexDeclaration,
              e = (t.vertexStride, this._long / 2),
              i = this._width / 2,
              n = new Float32Array([
                -e,
                i,
                0,
                0,
                0,
                1,
                0,
                0,
                e,
                i,
                0,
                0,
                0,
                1,
                1,
                0,
                -e,
                -i,
                0,
                0,
                0,
                1,
                0,
                1,
                e,
                -i,
                0,
                0,
                0,
                1,
                1,
                1
              ]),
              a = new Uint16Array([0, 1, 2, 3, 2, 1]);
            (this._vertexBuffer = new Yi(t, this._numberVertices, 35044, !0)),
              (this._indexBuffer = new qi(
                'ushort',
                this._numberIndices,
                35044,
                !0
              )),
              this._vertexBuffer.setData(n),
              this._indexBuffer.setData(a),
              (this.memorySize =
                2 *
                (this._vertexBuffer._byteLength +
                  this._indexBuffer._byteLength)),
              this.completeCreate();
          }),
            r(
              0,
              i,
              'long',
              function() {
                return this._long;
              },
              function(t) {
                this._long !== t &&
                  ((this._long = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'width',
              function() {
                return this._width;
              },
              function(t) {
                this._width !== t &&
                  ((this._width = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            );
        })(),
        (function(t) {
          function e(t, i, n) {
            (this._radius = NaN),
              (this._slices = 0),
              (this._stacks = 0),
              void 0 === t && (t = 0.5),
              void 0 === i && (i = 32),
              void 0 === n && (n = 32),
              e.__super.call(this),
              (this._radius = t),
              (this._stacks = i),
              (this._slices = n),
              this.activeResource(),
              (this._positions = this._getPositions()),
              this._generateBoundingObject();
          }
          a(e, 'laya.d3.resource.models.SphereMesh', nn);
          var i = e.prototype;
          (i.recreateResource = function() {
            (this._numberVertices = (this._stacks + 1) * (this._slices + 1)),
              (this._numberIndices = 3 * this._stacks * (this._slices + 1) * 2);
            for (
              var t = new Uint16Array(this._numberIndices),
                e = Zt.vertexDeclaration,
                i = e.vertexStride / 4,
                n = new Float32Array(this._numberVertices * i),
                a = Math.PI / this._stacks,
                r = (2 * Math.PI) / this._slices,
                s = 0,
                o = 0,
                l = 0,
                h = 0;
              h < this._stacks + 1;
              h++
            )
              for (
                var c = Math.sin(h * a), u = Math.cos(h * a), _ = 0;
                _ < this._slices + 1;
                _++
              ) {
                var d = c * Math.sin(_ * r + (1 * Math.PI) / 2),
                  f = c * Math.cos(_ * r + (1 * Math.PI) / 2);
                (n[o + 0] = d * this._radius),
                  (n[o + 1] = u * this._radius),
                  (n[o + 2] = f * this._radius),
                  (n[o + 3] = d),
                  (n[o + 4] = u),
                  (n[o + 5] = f),
                  (n[o + 6] = _ / this._slices),
                  (n[o + 7] = h / this._stacks),
                  (o += i),
                  h != this._stacks - 1 &&
                    ((t[l++] = s + (this._slices + 1)),
                    (t[l++] = s),
                    (t[l++] = s + 1),
                    (t[l++] = s + this._slices),
                    (t[l++] = s),
                    (t[l++] = s + (this._slices + 1)),
                    s++);
              }
            (this._vertexBuffer = new Yi(e, this._numberVertices, 35044, !0)),
              (this._indexBuffer = new qi(
                'ushort',
                this._numberIndices,
                35044,
                !0
              )),
              this._vertexBuffer.setData(n),
              this._indexBuffer.setData(t),
              (this.memorySize =
                2 *
                (this._vertexBuffer._byteLength +
                  this._indexBuffer._byteLength)),
              this.completeCreate();
          }),
            r(
              0,
              i,
              'radius',
              function() {
                return this._radius;
              },
              function(t) {
                this._radius !== t &&
                  ((this._radius = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'slices',
              function() {
                return this._slices;
              },
              function(t) {
                this._slices !== t &&
                  ((this._slices = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            ),
            r(
              0,
              i,
              'stacks',
              function() {
                return this._stacks;
              },
              function(t) {
                this._stacks !== t &&
                  ((this._stacks = t),
                  this.releaseResource(),
                  this.activeResource());
              }
            );
        })(),
        (function(t) {
          function e(t, i, n) {
            void 0 === t && (t = 0),
              void 0 === i && (i = 0.3),
              void 0 === n && (n = 1e3),
              (this._viewMatrix = new Te()),
              (this._projectionMatrix = new Te()),
              (this._projectionViewMatrix = new Te()),
              (this._viewport = new ke(0, 0, 0, 0)),
              (this._normalizedViewport = new ke(0, 0, 1, 1)),
              (this._aspectRatio = t),
              (this._boundFrustumUpdate = !0),
              (this._boundFrustum = new we(Te.DEFAULT)),
              e.__super.call(this, i, n),
              this.transform.on(
                'worldmatrixneedchanged',
                this,
                this._onWorldMatrixChanged
              );
          }
          a(e, 'laya.d3.core.Camera', un);
          var s = e.prototype;
          return (
            (s._onWorldMatrixChanged = function() {
              this._boundFrustumUpdate = !0;
            }),
            (s._parseCustomProps = function(t, e, i, n) {
              var a = i.clearColor;
              this.clearColor = new Be(a[0], a[1], a[2], a[3]);
              var r = i.viewport;
              this.normalizedViewport = new ke(r[0], r[1], r[2], r[3]);
            }),
            (s._calculateProjectionMatrix = function() {
              if (!this._useUserProjectionMatrix)
                if (this._orthographic) {
                  var t =
                      this.orthographicVerticalSize * this.aspectRatio * 0.5,
                    e = 0.5 * this.orthographicVerticalSize;
                  Te.createOrthoOffCenterRH(
                    -t,
                    t,
                    -e,
                    e,
                    this.nearPlane,
                    this.farPlane,
                    this._projectionMatrix
                  );
                } else
                  Te.createPerspective(
                    (3.1416 * this.fieldOfView) / 180,
                    this.aspectRatio,
                    this.nearPlane,
                    this.farPlane,
                    this._projectionMatrix
                  );
              this._boundFrustumUpdate = !0;
            }),
            (s._update = function(t) {
              this.conchModel &&
                (this.conchModel.setViewMatrix(this.viewMatrix.elements),
                this.conchModel.setProjectMatrix(
                  this.projectionMatrix.elements
                )),
                laya.d3.core.Sprite3D.prototype._update.call(this, t);
            }),
            (s._renderCamera = function(t, e, i) {
              i.parallelSplitShadowMaps[0] && i._renderShadowMap(t, e, this),
                (e.camera = this),
                this._prepareCameraToRender(),
                i._preRenderUpdateComponents(e);
              var n, a;
              n = e._viewMatrix = this.viewMatrix;
              var r = this._renderTarget;
              r
                ? (r.start(),
                  Te.multiply(
                    un._invertYScaleMatrix,
                    this._projectionMatrix,
                    un._invertYProjectionMatrix
                  ),
                  Te.multiply(
                    un._invertYScaleMatrix,
                    this.projectionViewMatrix,
                    un._invertYProjectionViewMatrix
                  ),
                  (a = e._projectionMatrix = un._invertYProjectionMatrix),
                  (e._projectionViewMatrix = un._invertYProjectionViewMatrix))
                : ((a = e._projectionMatrix = this._projectionMatrix),
                  (e._projectionViewMatrix = this.projectionViewMatrix)),
                this._prepareCameraViewProject(n, a),
                (e._viewport = this.viewport),
                i._preRenderScene(t, e, this.boundFrustum),
                i._clear(t, e),
                i._renderScene(t, e),
                i._postRenderUpdateComponents(e),
                r && r.end();
            }),
            (s.viewportPointToRay = function(t, e) {
              qe.calculateCursorRay(
                t,
                this.viewport,
                this._projectionMatrix,
                this.viewMatrix,
                null,
                e
              );
            }),
            (s.normalizedViewportPointToRay = function(t, i) {
              var n = e._tempVector20,
                a = this.viewport,
                r = t.elements,
                s = n.elements;
              (s[0] = r[0] * a.width),
                (s[1] = r[1] * a.height),
                qe.calculateCursorRay(
                  n,
                  this.viewport,
                  this._projectionMatrix,
                  this.viewMatrix,
                  null,
                  i
                );
            }),
            (s.worldToViewportPoint = function(t, e) {
              Te.multiply(
                this._projectionMatrix,
                this._viewMatrix,
                this._projectionViewMatrix
              ),
                this.viewport.project(t, this._projectionViewMatrix, e);
              var n = e.elements;
              (n[0] = n[0] / i.stage.clientScaleX),
                (n[1] = n[1] / i.stage.clientScaleY);
            }),
            (s.worldToNormalizedViewportPoint = function(t, e) {
              Te.multiply(
                this._projectionMatrix,
                this._viewMatrix,
                this._projectionViewMatrix
              ),
                this.normalizedViewport.project(
                  t,
                  this._projectionViewMatrix,
                  e
                );
              var n = e.elements;
              (n[0] = n[0] / i.stage.clientScaleX),
                (n[1] = n[1] / i.stage.clientScaleY);
            }),
            (s.convertScreenCoordToOrthographicCoord = function(t, e) {
              if (this._orthographic) {
                var i = _t.clientWidth,
                  n = _t.clientHeight,
                  a = (this.orthographicVerticalSize * this.aspectRatio) / i,
                  r = this.orthographicVerticalSize / n,
                  s = t.elements,
                  o = e.elements;
                return (
                  (o[0] = (-i / 2 + s[0]) * a),
                  (o[1] = (n / 2 - s[1]) * r),
                  (o[2] =
                    ((this.nearPlane - this.farPlane) * (s[2] + 1)) / 2 -
                    this.nearPlane),
                  Re.transformCoordinate(e, this.transform.worldMatrix, e),
                  !0
                );
              }
              return !1;
            }),
            r(0, s, 'projectionViewMatrix', function() {
              return (
                Te.multiply(
                  this.projectionMatrix,
                  this.viewMatrix,
                  this._projectionViewMatrix
                ),
                this._projectionViewMatrix
              );
            }),
            r(
              0,
              s,
              'aspectRatio',
              function() {
                if (0 === this._aspectRatio) {
                  var t = this.viewport;
                  return t.width / t.height;
                }
                return this._aspectRatio;
              },
              function(t) {
                if (t < 0)
                  throw new Error(
                    'Camera: the aspect ratio has to be a positive real number.'
                  );
                (this._aspectRatio = t), this._calculateProjectionMatrix();
              }
            ),
            r(0, s, 'boundFrustum', function() {
              return (
                this._boundFrustumUpdate &&
                  (this._boundFrustum.matrix = this.projectionViewMatrix),
                this._boundFrustum
              );
            }),
            r(0, s, 'needViewport', function() {
              var t = this.normalizedViewport;
              return 0 === t.x && 0 === t.y && 1 === t.width && 1 === t.height;
            }),
            r(
              0,
              s,
              'viewport',
              function() {
                if (this._viewportExpressedInClipSpace) {
                  var t = this._normalizedViewport,
                    e = this.renderTargetSize,
                    i = e.width,
                    n = e.height;
                  (this._viewport.x = t.x * i),
                    (this._viewport.y = t.y * n),
                    (this._viewport.width = t.width * i),
                    (this._viewport.height = t.height * n);
                }
                return this._viewport;
              },
              function(t) {
                if (
                  null != this.renderTarget &&
                  (t.x < 0 || t.y < 0 || 0 == t.width || 0 == t.height)
                )
                  throw new Error('Camera: viewport size invalid.', 'value');
                (this._viewportExpressedInClipSpace = !1),
                  (this._viewport = t),
                  this._calculateProjectionMatrix();
              }
            ),
            r(
              0,
              s,
              'normalizedViewport',
              function() {
                if (!this._viewportExpressedInClipSpace) {
                  var t = this._viewport,
                    e = this.renderTargetSize,
                    i = e.width,
                    n = e.height;
                  (this._normalizedViewport.x = t.x / i),
                    (this._normalizedViewport.y = t.y / n),
                    (this._normalizedViewport.width = t.width / i),
                    (this._normalizedViewport.height = t.height / n);
                }
                return this._normalizedViewport;
              },
              function(t) {
                t.x < 0 &&
                  ((t.x = 0),
                  console.warn('Camera: viewport.x must large than 0.0.')),
                  t.y < 0 &&
                    ((t.y = 0),
                    console.warn('Camera: viewport.y must large than 0.0.')),
                  t.x + t.width > 1 &&
                    ((t.width = 1 - t.x),
                    console.warn(
                      'Camera: viewport.width + viewport.x must less than 1.0.'
                    )),
                  t.y + t.height > 1 &&
                    ((t.height = 1 - t.y),
                    console.warn(
                      'Camera: viewport.height + viewport.y must less than 1.0.'
                    )),
                  (this._viewportExpressedInClipSpace = !0),
                  (this._normalizedViewport = t),
                  this._calculateProjectionMatrix();
              }
            ),
            r(
              0,
              s,
              'projectionMatrix',
              function() {
                return this._projectionMatrix;
              },
              function(t) {
                (this._projectionMatrix = t),
                  (this._useUserProjectionMatrix = !0);
              }
            ),
            r(0, s, 'viewMatrix', function() {
              return (
                this.transform.worldMatrix.invert(this._viewMatrix),
                this._viewMatrix
              );
            }),
            n(e, [
              '_tempVector20',
              function() {
                return (this._tempVector20 = new Ne());
              }
            ]),
            e
          );
        })()),
      mn =
        ((function(t) {
          function e() {
            e.__super.call(this),
              (this._render = new Si(this)),
              this._render.on('materialchanged', this, this._onMaterialChanged);
            var t = new Fi();
            (this._render.sharedMaterial = t),
              (this._geometryFilter = new Ni(this)),
              (t.renderMode = 8),
              this._changeRenderObject(0);
          }
          a(e, 'laya.d3.core.glitter.Glitter', t);
          var i = e.prototype;
          (i._changeRenderObject = function(t) {
            var e = this._render._renderElements,
              i = e[t];
            i || (i = e[t] = new ct()), (i._render = this._render);
            var n = this._render.sharedMaterials[t];
            n || (n = Fi.defaultMaterial);
            var a = this._geometryFilter;
            return (
              (i._mainSortID = 0),
              (i._sprite3D = this),
              (i.renderObj = a),
              (i._material = n),
              i
            );
          }),
            (i._onMaterialChanged = function(t, e, i) {
              e < t._renderElements.length && this._changeRenderObject(e);
            }),
            (i._clearSelfRenderObjects = function() {
              this.scene.removeFrustumCullingObject(this._render);
            }),
            (i._addSelfRenderObjects = function() {
              this.scene.addFrustumCullingObject(this._render);
            }),
            (i._update = function(e) {
              this._geometryFilter._update(e.elapsedTime),
                t.prototype._update.call(this, e);
            }),
            (i.addGlitterByPositions = function(t, e) {
              this._geometryFilter.addVertexPosition(t, e);
            }),
            (i.addGlitterByPositionsVelocitys = function(t, e, i, n) {
              this._geometryFilter.addVertexPositionVelocity(t, e, i, n);
            }),
            (i.cloneTo = function(t) {
              var e = t,
                i = e.templet,
                n = this._geometryFilter;
              (i.lifeTime = n.lifeTime),
                (i.minSegmentDistance = n.minSegmentDistance),
                (i.minInterpDistance = n.minInterpDistance),
                (i.maxSlerpCount = n.maxSlerpCount),
                (i._maxSegments = n._maxSegments);
              var a = e._render,
                r = this._render;
              (a.sharedMaterials = r.sharedMaterials),
                (a.enable = r.enable),
                laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
            }),
            (i.destroy = function(e) {
              void 0 === e && (e = !0),
                this.destroyed ||
                  (t.prototype.destroy.call(this, e),
                  this._geometryFilter._destroy(),
                  (this._geometryFilter = null));
            }),
            r(0, i, 'templet', function() {
              return this._geometryFilter;
            }),
            r(0, i, 'glitterRender', function() {
              return this._render;
            }),
            (e.CURRENTTIME = 2),
            (e.DURATION = 3);
        })(_n),
        (function(t) {
          function e() {
            (this._direction = null),
              (this._updateDirection = !1),
              e.__super.call(this),
              (this._updateDirection = !1),
              (this._direction = new Re()),
              this.transform.on(
                'worldmatrixneedchanged',
                this,
                this._onWorldMatrixChange
              );
          }
          a(e, 'laya.d3.core.light.DirectionLight', t);
          var i = e.prototype;
          return (
            (i._initShadow = function() {
              if (this._shadow)
                (this._parallelSplitShadowMap = new He()),
                  this.scene.parallelSplitShadowMaps.push(
                    this._parallelSplitShadowMap
                  ),
                  this.transform.worldMatrix.getForward(this._direction),
                  Re.normalize(this._direction, this._direction),
                  this._parallelSplitShadowMap.setInfo(
                    this.scene,
                    this._shadowFarPlane,
                    this._direction,
                    this._shadowMapSize,
                    this._shadowMapCount,
                    this._shadowMapPCFType
                  );
              else {
                var t = this.scene.parallelSplitShadowMaps;
                t.splice(t.indexOf(this._parallelSplitShadowMap), 1),
                  this._parallelSplitShadowMap.disposeAllRenderTarget(),
                  (this._parallelSplitShadowMap = null),
                  this.scene.removeShaderDefine(He.SHADERDEFINE_SHADOW_PSSM1),
                  this.scene.removeShaderDefine(He.SHADERDEFINE_SHADOW_PSSM2),
                  this.scene.removeShaderDefine(He.SHADERDEFINE_SHADOW_PSSM3);
              }
            }),
            (i._addSelfRenderObjects = function() {
              t.prototype._addSelfRenderObjects.call(this),
                this._shadow && this._initShadow();
            }),
            (i._clearSelfRenderObjects = function() {
              var t = this.scene,
                e = t._shaderValues;
              e.setValue(4, null),
                e.setValue(3, null),
                t.removeShaderDefine(ci.SHADERDEFINE_DIRECTIONLIGHT);
            }),
            (i._prepareToScene = function(t) {
              var e = t.scene;
              if (e.enableLight && this._activeInHierarchy) {
                var i = e._shaderValues;
                return (
                  e.addShaderDefine(ci.SHADERDEFINE_DIRECTIONLIGHT),
                  Re.scale(this.color, this._intensity, this._intensityColor),
                  i.setValue(4, this._intensityColor.elements),
                  this.transform.worldMatrix.getForward(this._direction),
                  Re.normalize(this._direction, this._direction),
                  i.setValue(3, this._direction.elements),
                  !0
                );
              }
              return e.removeShaderDefine(ci.SHADERDEFINE_DIRECTIONLIGHT), !1;
            }),
            (i._onWorldMatrixChange = function() {
              this._updateDirection = !0;
            }),
            r(0, i, 'shadow', t.prototype._$get_shadow, function(t) {
              this._shadow !== t &&
                ((this._shadow = t), this.scene && this._initShadow());
            }),
            r(
              0,
              i,
              'direction',
              function() {
                return (
                  console.log(
                    "Warning: discard property,please use transform's property instead."
                  ),
                  this._updateDirection &&
                    (this.transform.worldMatrix.getForward(this._direction),
                    Re.normalize(this._direction, this._direction),
                    (this._updateDirection = !1)),
                  this._direction
                );
              },
              function(t) {
                console.log(
                  "Warning: discard property,please use transform's property instead."
                );
                var e = this.transform.worldMatrix;
                e.setForward(t),
                  (this.transform.worldMatrix = e),
                  Re.normalize(t, t),
                  (this._direction = t),
                  this.shadow &&
                    this._parallelSplitShadowMap &&
                    this._parallelSplitShadowMap._setGlobalParallelLightDir(
                      this._direction
                    );
              }
            ),
            e
          );
        })(dn)),
      gn =
        ((function(t) {
          function e() {
            (this._range = NaN),
              (this._attenuation = null),
              e.__super.call(this),
              (this._range = 6),
              (this._attenuation = new Re(0.6, 0.6, 0.6));
          }
          a(e, 'laya.d3.core.light.PointLight', dn);
          var i = e.prototype;
          (i._clearSelfRenderObjects = function() {
            var t = this.scene,
              e = t._shaderValues;
            e.setValue(8, null),
              e.setValue(5, null),
              e.setValue(6, null),
              e.setValue(7, null),
              t.removeShaderDefine(ci.SHADERDEFINE_POINTLIGHT);
          }),
            (i._prepareToScene = function(t) {
              var e = t.scene;
              if (e.enableLight && this._activeInHierarchy) {
                var i = e._shaderValues;
                return (
                  e.addShaderDefine(ci.SHADERDEFINE_POINTLIGHT),
                  Re.scale(this.color, this._intensity, this._intensityColor),
                  i.setValue(8, this._intensityColor.elements),
                  i.setValue(5, this.transform.position.elements),
                  i.setValue(6, this.range),
                  i.setValue(7, this.attenuation.elements),
                  !0
                );
              }
              return e.removeShaderDefine(ci.SHADERDEFINE_POINTLIGHT), !1;
            }),
            r(
              0,
              i,
              'range',
              function() {
                return this._range;
              },
              function(t) {
                this._range = t;
              }
            ),
            r(
              0,
              i,
              'attenuation',
              function() {
                return this._attenuation;
              },
              function(t) {
                this._attenuation = t;
              }
            );
        })(),
        (function(t) {
          function e() {
            (this._updateDirection = !1),
              (this._direction = null),
              (this._spot = NaN),
              (this._range = NaN),
              (this._attenuation = null),
              e.__super.call(this),
              (this._updateDirection = !1),
              (this.direction = new Re(0, -1, -1)),
              (this._attenuation = new Re(0.6, 0.6, 0.6)),
              (this._spot = 96),
              (this._range = 6),
              this.transform.on(
                'worldmatrixneedchanged',
                this,
                this._onWorldMatrixChange
              );
          }
          a(e, 'laya.d3.core.light.SpotLight', dn);
          var i = e.prototype;
          (i._onWorldMatrixChange = function() {
            this._updateDirection = !0;
          }),
            (i._clearSelfRenderObjects = function() {
              var t = this.scene,
                e = t._shaderValues;
              e.setValue(14, null),
                e.setValue(9, null),
                e.setValue(10, null),
                e.setValue(12, null),
                e.setValue(11, null),
                e.setValue(13, null),
                t.removeShaderDefine(ci.SHADERDEFINE_SPOTLIGHT);
            }),
            (i._prepareToScene = function(t) {
              var e = t.scene;
              if (e.enableLight && this._activeInHierarchy) {
                var i = e._shaderValues;
                return (
                  e.addShaderDefine(ci.SHADERDEFINE_SPOTLIGHT),
                  Re.scale(this.color, this._intensity, this._intensityColor),
                  i.setValue(14, this._intensityColor.elements),
                  i.setValue(9, this.transform.position.elements),
                  this.transform.worldMatrix.getForward(this._direction),
                  Re.normalize(this._direction, this._direction),
                  i.setValue(10, this._direction.elements),
                  i.setValue(12, this.range),
                  i.setValue(11, this.spot),
                  i.setValue(13, this.attenuation.elements),
                  !0
                );
              }
              return e.removeShaderDefine(ci.SHADERDEFINE_SPOTLIGHT), !1;
            }),
            r(
              0,
              i,
              'spot',
              function() {
                return this._spot;
              },
              function(t) {
                this._spot = t;
              }
            ),
            r(
              0,
              i,
              'direction',
              function() {
                return (
                  console.log(
                    "Warning: discard property,please use transform's property instead."
                  ),
                  this._updateDirection &&
                    (this.transform.worldMatrix.getForward(this._direction),
                    (this._updateDirection = !1)),
                  this._direction
                );
              },
              function(t) {
                console.log(
                  "Warning: discard property,please use transform's property instead."
                );
                var e = this.transform.worldMatrix;
                e.setForward(t),
                  (this.transform.worldMatrix = e),
                  (this._direction = t);
              }
            ),
            r(
              0,
              i,
              'range',
              function() {
                return this._range;
              },
              function(t) {
                this._range = t;
              }
            ),
            r(
              0,
              i,
              'attenuation',
              function() {
                return this._attenuation;
              },
              function(t) {
                this._attenuation = t;
              }
            );
        })(),
        (function(t) {
          function e(t, i) {
            e.__super.call(this, i),
              (this._geometryFilter = new Ti(this)),
              (this._render = new Mi(this)),
              this._geometryFilter.on('meshchanged', this, this._onMeshChanged),
              this._render.on('materialchanged', this, this._onMaterialChanged),
              t &&
                ((this._geometryFilter.sharedMesh = t),
                t instanceof laya.d3.resource.models.Mesh &&
                  (t.loaded
                    ? (this._render.sharedMaterials = t.materials)
                    : t.once('loaded', this, this._applyMeshMaterials)));
          }
          a(e, 'laya.d3.core.MeshSprite3D', t);
          var s = e.prototype;
          return (
            (s._changeRenderObjectByMesh = function(t) {
              var e = this._render._renderElements,
                i = e[t];
              i || (i = e[t] = new hi()), (i._render = this._render);
              var n = this._render.sharedMaterials[t];
              n || (n = ji.defaultMaterial);
              var a = this._geometryFilter.sharedMesh.getRenderElement(t);
              return (
                (i._mainSortID = this._getSortID(a, n)),
                (i._sprite3D = this),
                (i.renderObj = a),
                (i._material = n),
                i
              );
            }),
            (s._changeRenderObjectByMaterial = function(t, e) {
              var i = this._render._renderElements[t];
              e || (e = ji.defaultMaterial);
              var n = this._geometryFilter.sharedMesh.getRenderElement(t);
              return (
                (i._mainSortID = this._getSortID(n, e)),
                (i._sprite3D = this),
                (i.renderObj = n),
                (i._material = e),
                i
              );
            }),
            (s._changeRenderObjectsByMesh = function() {
              var t = this._geometryFilter.sharedMesh.getRenderElementsCount();
              this._render._renderElements.length = t;
              for (var e = 0; e < t; e++) this._changeRenderObjectByMesh(e);
            }),
            (s._onMeshChanged = function(t) {
              var e = t.sharedMesh;
              e.loaded
                ? this._changeRenderObjectsByMesh()
                : e.once('loaded', this, this._onMeshLoaded);
            }),
            (s._onMeshLoaded = function(t) {
              t === this.meshFilter.sharedMesh &&
                this._changeRenderObjectsByMesh();
            }),
            (s._onMaterialChanged = function(t, e, i) {
              e < this._render._renderElements.length &&
                this._changeRenderObjectByMaterial(e, i);
            }),
            (s._clearSelfRenderObjects = function() {
              this.scene.removeFrustumCullingObject(this._render);
            }),
            (s._addSelfRenderObjects = function() {
              this.scene.addFrustumCullingObject(this._render);
            }),
            (s._parseCustomProps = function(t, e, i, n) {
              var a = this.meshRender,
                r = i.lightmapIndex;
              null != r && (a.lightmapIndex = r);
              var s = i.lightmapScaleOffset;
              s && (a.lightmapScaleOffset = new Be(s[0], s[1], s[2], s[3]));
              var o, l;
              if (n.instanceParams)
                (o = n.instanceParams.loadPath) &&
                  ((l = v.getRes(e[o])),
                  (this.meshFilter.sharedMesh = l),
                  l.loaded
                    ? (a.sharedMaterials = l.materials)
                    : l.once('loaded', this, this._applyMeshMaterials));
              else {
                (o = i.meshPath) &&
                  ((l = v.getRes(e[o])), (this.meshFilter.sharedMesh = l));
                var h = i.materials;
                if (h) {
                  var c = a.sharedMaterials,
                    u = h.length;
                  c.length = u;
                  for (var _ = 0; _ < u; _++) c[_] = v.getRes(e[h[_].path]);
                  a.sharedMaterials = c;
                }
              }
            }),
            (s._applyMeshMaterials = function(t) {
              for (
                var e = this._render.sharedMaterials,
                  i = t.materials,
                  n = 0,
                  a = i.length;
                n < a;
                n++
              )
                e[n] || (e[n] = i[n]);
              this._render.sharedMaterials = e;
            }),
            (s._addToInitStaticBatchManager = function() {
              e._staticBatchManager._addInitBatchSprite(this);
            }),
            (s.cloneTo = function(t) {
              var e = t;
              e._geometryFilter.sharedMesh = this._geometryFilter.sharedMesh;
              var i = this._render,
                n = e._render;
              (n.enable = i.enable),
                (n.sharedMaterials = i.sharedMaterials),
                (n.castShadow = i.castShadow);
              var a = i.lightmapScaleOffset;
              a && (n.lightmapScaleOffset = a.clone()),
                (n.lightmapIndex = i.lightmapIndex),
                (n.receiveShadow = i.receiveShadow),
                (n.sortingFudge = i.sortingFudge),
                laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
            }),
            (s.destroy = function(e) {
              if ((void 0 === e && (e = !0), !this.destroyed)) {
                var i = this.meshFilter.sharedMesh;
                i.loaded || i.off('loaded', this, this._applyMeshMaterials),
                  t.prototype.destroy.call(this, e),
                  this._geometryFilter._destroy();
              }
            }),
            r(0, s, 'meshFilter', function() {
              return this._geometryFilter;
            }),
            r(0, s, 'meshRender', function() {
              return this._render;
            }),
            (e.__init__ = function() {
              Ct._staticBatchManagers.push(e._staticBatchManager);
            }),
            (e.load = function(t) {
              return i.loader.create(t, null, null, e);
            }),
            n(e, [
              '_staticBatchManager',
              function() {
                return (this._staticBatchManager = new ui());
              }
            ]),
            e
          );
        })(_n)),
      yn = (function(t) {
        function e(t) {
          e.__super.call(this),
            (this._render = new Li(this)),
            this._render.on('materialchanged', this, this._onMaterialChanged),
            (this._geometryFilter = new Ei(this)),
            this._createRenderElement(0),
            t && (this._render.sharedMaterial = t);
        }
        a(e, 'laya.d3.core.particleShuriKen.ShuriKenParticle3D', t);
        var s = e.prototype;
        return (
          (s._initParticleVelocity = function(t) {
            for (
              var e = new Q(), i = t.velocitys, n = 0, a = i.length;
              n < a;
              n++
            ) {
              var r = i[n];
              e.add(r.key, r.value);
            }
            return e;
          }),
          (s._initParticleColor = function(t) {
            var e = new K(),
              i = t.alphas,
              n = 0,
              a = 0;
            for (n = 0, a = i.length; n < a; n++) {
              var r = i[n];
              e.addAlpha(r.key, r.value);
            }
            var s = t.rgbs;
            for (n = 0, a = s.length; n < a; n++) {
              var o = s[n],
                l = o.value;
              e.addRGB(o.key, new Re(l[0], l[1], l[2]));
            }
            return e;
          }),
          (s._initParticleSize = function(t) {
            for (
              var e = new Q(), i = t.sizes, n = 0, a = i.length;
              n < a;
              n++
            ) {
              var r = i[n];
              e.add(r.key, r.value);
            }
            return e;
          }),
          (s._initParticleRotation = function(t) {
            for (
              var e = new Q(), i = t.angularVelocitys, n = 0, a = i.length;
              n < a;
              n++
            ) {
              var r = i[n];
              e.add(r.key, (r.value / 180) * Math.PI);
            }
            return e;
          }),
          (s._initParticleFrame = function(t) {
            for (
              var e = new Z(), i = t.frames, n = 0, a = i.length;
              n < a;
              n++
            ) {
              var r = i[n];
              e.add(r.key, r.value);
            }
            return e;
          }),
          (s._createRenderElement = function(t) {
            var e = (this._render._renderElements[t] = new ct());
            e._render = this._render;
            var i = this._render.sharedMaterials[t];
            i || (i = Ji.defaultMaterial);
            var n = this._geometryFilter;
            (e._mainSortID = 0),
              (e._sprite3D = this),
              (e.renderObj = n),
              (e._material = i);
          }),
          (s._onMaterialChanged = function(t, e, i) {
            var n = t._renderElements;
            if (e < n.length) {
              n[e]._material = i || Ji.defaultMaterial;
            }
          }),
          (s._clearSelfRenderObjects = function() {
            this.scene.removeFrustumCullingObject(this._render);
          }),
          (s._addSelfRenderObjects = function() {
            this.scene.addFrustumCullingObject(this._render);
          }),
          (s._parseCustomProps = function(t, i, n, a) {
            var r,
              s = Math.PI / 180,
              o = 0,
              l = 0,
              h = this.particleRender,
              c = n.material;
            if (c) r = v.getRes(i[c.path]);
            else {
              var u = n.materialPath;
              u
                ? (r = v.getRes(i[u]))
                : ((r = new Ji()).diffuseTexture = i
                    ? v.getRes(i[n.texturePath])
                    : ln.load(n.texturePath));
            }
            h.sharedMaterial = r;
            var _ = n.meshPath;
            _ && (h.mesh = v.getRes(i[_])),
              (h.renderMode = n.renderMode),
              (h.stretchedBillboardCameraSpeedScale =
                n.stretchedBillboardCameraSpeedScale),
              (h.stretchedBillboardSpeedScale = n.stretchedBillboardSpeedScale),
              (h.stretchedBillboardLengthScale =
                n.stretchedBillboardLengthScale),
              (h.sortingFudge = n.sortingFudge ? n.sortingFudge : 0);
            var d = this.particleSystem;
            (d.isPerformanceMode = n.isPerformanceMode),
              (d.duration = n.duration),
              (d.looping = n.looping),
              (d.prewarm = n.prewarm),
              (d.startDelayType = n.startDelayType),
              (d.startDelay = n.startDelay),
              (d.startDelayMin = n.startDelayMin),
              (d.startDelayMax = n.startDelayMax),
              (d.startLifetimeType = n.startLifetimeType),
              (d.startLifetimeConstant = n.startLifetimeConstant),
              (d.startLifeTimeGradient = e._initStartLife(
                n.startLifetimeGradient
              )),
              (d.startLifetimeConstantMin = n.startLifetimeConstantMin),
              (d.startLifetimeConstantMax = n.startLifetimeConstantMax),
              (d.startLifeTimeGradientMin = e._initStartLife(
                n.startLifetimeGradientMin
              )),
              (d.startLifeTimeGradientMax = e._initStartLife(
                n.startLifetimeGradientMax
              )),
              (d.startSpeedType = n.startSpeedType),
              (d.startSpeedConstant = n.startSpeedConstant),
              (d.startSpeedConstantMin = n.startSpeedConstantMin),
              (d.startSpeedConstantMax = n.startSpeedConstantMax),
              (d.threeDStartSize = n.threeDStartSize),
              (d.startSizeType = n.startSizeType),
              (d.startSizeConstant = n.startSizeConstant);
            var f = n.startSizeConstantSeparate,
              p = d.startSizeConstantSeparate.elements;
            (p[0] = f[0]),
              (p[1] = f[1]),
              (p[2] = f[2]),
              (d.startSizeConstantMin = n.startSizeConstantMin),
              (d.startSizeConstantMax = n.startSizeConstantMax);
            var m = n.startSizeConstantMinSeparate,
              g = d.startSizeConstantMinSeparate.elements;
            (g[0] = m[0]), (g[1] = m[1]), (g[2] = m[2]);
            var y = n.startSizeConstantMaxSeparate,
              b = d.startSizeConstantMaxSeparate.elements;
            (b[0] = y[0]),
              (b[1] = y[1]),
              (b[2] = y[2]),
              (d.threeDStartRotation = n.threeDStartRotation),
              (d.startRotationType = n.startRotationType),
              (d.startRotationConstant = n.startRotationConstant * s);
            var w = n.startRotationConstantSeparate,
              x = d.startRotationConstantSeparate.elements;
            (x[0] = w[0] * s),
              (x[1] = w[1] * s),
              (x[2] = w[2] * s),
              (d.startRotationConstantMin = n.startRotationConstantMin * s),
              (d.startRotationConstantMax = n.startRotationConstantMax * s);
            var I = n.startRotationConstantMinSeparate,
              C = d.startRotationConstantMinSeparate.elements;
            (C[0] = I[0] * s), (C[1] = I[1] * s), (C[2] = I[2] * s);
            var S = n.startRotationConstantMaxSeparate,
              T = d.startRotationConstantMaxSeparate.elements;
            (T[0] = S[0] * s),
              (T[1] = S[1] * s),
              (T[2] = S[2] * s),
              (d.randomizeRotationDirection = n.randomizeRotationDirection),
              (d.startColorType = n.startColorType);
            var M = n.startColorConstant,
              E = d.startColorConstant.elements;
            (E[0] = M[0]), (E[1] = M[1]), (E[2] = M[2]), (E[3] = M[3]);
            var L = n.startColorConstantMin,
              D = d.startColorConstantMin.elements;
            (D[0] = L[0]), (D[1] = L[1]), (D[2] = L[2]), (D[3] = L[3]);
            var A = n.startColorConstantMax,
              N = d.startColorConstantMax.elements;
            (N[0] = A[0]),
              (N[1] = A[1]),
              (N[2] = A[2]),
              (N[3] = A[3]),
              (d.gravityModifier = n.gravityModifier),
              (d.simulationSpace = n.simulationSpace),
              (d.scaleMode = n.scaleMode),
              (d.playOnAwake = n.playOnAwake),
              (d.maxParticles = n.maxParticles);
            var R = n.autoRandomSeed;
            null != R && (d.autoRandomSeed = R);
            var B = n.randomSeed;
            null != B && (d.randomSeed[0] = B);
            var k = n.emission,
              P = d.emission;
            if (k) {
              P.emissionRate = k.emissionRate;
              var O = k.bursts;
              if (O)
                for (o = 0, l = O.length; o < l; o++) {
                  var U = O[o];
                  P.addBurst(new j(U.time, U.min, U.max));
                }
              P.enbale = k.enable;
            } else P.enbale = !1;
            var V = n.shape;
            if (V) {
              var F;
              switch (V.shapeType) {
                case 0:
                  var H;
                  (F = H = new li()),
                    (H.radius = V.sphereRadius),
                    (H.emitFromShell = V.sphereEmitFromShell),
                    (H.randomDirection = V.sphereRandomDirection);
                  break;
                case 1:
                  var G;
                  (F = G = new oi()),
                    (G.radius = V.hemiSphereRadius),
                    (G.emitFromShell = V.hemiSphereEmitFromShell),
                    (G.randomDirection = V.hemiSphereRandomDirection);
                  break;
                case 2:
                  var z;
                  (F = z = new si()),
                    (z.angle = V.coneAngle * s),
                    (z.radius = V.coneRadius),
                    (z.length = V.coneLength),
                    (z.emitType = V.coneEmitType),
                    (z.randomDirection = V.coneRandomDirection);
                  break;
                case 3:
                  var X;
                  (F = X = new ai()),
                    (X.x = V.boxX),
                    (X.y = V.boxY),
                    (X.z = V.boxZ),
                    (X.randomDirection = V.boxRandomDirection);
                  break;
                case 7:
                  var K;
                  (F = K = new ri()),
                    (K.radius = V.circleRadius),
                    (K.arc = V.circleArc * s),
                    (K.emitFromEdge = V.circleEmitFromEdge),
                    (K.randomDirection = V.circleRandomDirection);
                  break;
                default:
                  var Z;
                  (F = Z = new ri()),
                    (Z.radius = V.circleRadius),
                    (Z.arc = V.circleArc * s),
                    (Z.emitFromEdge = V.circleEmitFromEdge),
                    (Z.randomDirection = V.circleRandomDirection);
              }
              (F.enable = V.enable), (d.shape = F);
            }
            var Q = n.velocityOverLifetime;
            if (Q) {
              var it,
                nt = Q.velocity;
              switch (nt.type) {
                case 0:
                  var lt = nt.constant;
                  it = tt.createByConstant(new Re(lt[0], lt[1], lt[2]));
                  break;
                case 1:
                  it = tt.createByGradient(
                    this._initParticleVelocity(nt.gradientX),
                    this._initParticleVelocity(nt.gradientY),
                    this._initParticleVelocity(nt.gradientZ)
                  );
                  break;
                case 2:
                  var ht = nt.constantMin,
                    ct = nt.constantMax;
                  it = tt.createByRandomTwoConstant(
                    new Re(ht[0], ht[1], ht[2]),
                    new Re(ct[0], ct[1], ct[2])
                  );
                  break;
                case 3:
                  it = tt.createByRandomTwoGradient(
                    this._initParticleVelocity(nt.gradientXMin),
                    this._initParticleVelocity(nt.gradientXMax),
                    this._initParticleVelocity(nt.gradientYMin),
                    this._initParticleVelocity(nt.gradientYMax),
                    this._initParticleVelocity(nt.gradientZMin),
                    this._initParticleVelocity(nt.gradientZMax)
                  );
              }
              var ut = new ot(it);
              (ut.space = Q.space),
                (ut.enbale = Q.enable),
                (d.velocityOverLifetime = ut);
            }
            var _t = n.colorOverLifetime;
            if (_t) {
              var dt,
                ft = _t.color;
              switch (ft.type) {
                case 0:
                  var pt = ft.constant;
                  dt = J.createByConstant(new Be(pt[0], pt[1], pt[2], pt[3]));
                  break;
                case 1:
                  dt = J.createByGradient(this._initParticleColor(ft.gradient));
                  break;
                case 2:
                  var mt = ft.constantMin,
                    gt = ft.constantMax;
                  dt = J.createByRandomTwoConstant(
                    new Be(mt[0], mt[1], mt[2], mt[3]),
                    new Be(gt[0], gt[1], gt[2], gt[3])
                  );
                  break;
                case 3:
                  dt = J.createByRandomTwoGradient(
                    this._initParticleColor(ft.gradientMin),
                    this._initParticleColor(ft.gradientMax)
                  );
              }
              var yt = new W(dt);
              (yt.enbale = _t.enable), (d.colorOverLifetime = yt);
            }
            var vt = n.sizeOverLifetime;
            if (vt) {
              var bt,
                wt = vt.size;
              switch (wt.type) {
                case 0:
                  bt = wt.separateAxes
                    ? $.createByGradientSeparate(
                        this._initParticleSize(wt.gradientX),
                        this._initParticleSize(wt.gradientY),
                        this._initParticleSize(wt.gradientZ)
                      )
                    : $.createByGradient(this._initParticleSize(wt.gradient));
                  break;
                case 1:
                  if (wt.separateAxes) {
                    var xt = wt.constantMinSeparate,
                      It = wt.constantMaxSeparate;
                    bt = $.createByRandomTwoConstantSeparate(
                      new Re(xt[0], xt[1], xt[2]),
                      new Re(It[0], It[1], It[2])
                    );
                  } else
                    bt = $.createByRandomTwoConstant(
                      wt.constantMin,
                      wt.constantMax
                    );
                  break;
                case 2:
                  bt = wt.separateAxes
                    ? $.createByRandomTwoGradientSeparate(
                        this._initParticleSize(wt.gradientXMin),
                        this._initParticleSize(wt.gradientYMin),
                        this._initParticleSize(wt.gradientZMin),
                        this._initParticleSize(wt.gradientXMax),
                        this._initParticleSize(wt.gradientYMax),
                        this._initParticleSize(wt.gradientZMax)
                      )
                    : $.createByRandomTwoGradient(
                        this._initParticleSize(wt.gradientMin),
                        this._initParticleSize(wt.gradientMax)
                      );
              }
              var Ct = new at(bt);
              (Ct.enbale = vt.enable), (d.sizeOverLifetime = Ct);
            }
            var St = n.rotationOverLifetime;
            if (St) {
              var Tt,
                Mt = St.angularVelocity;
              switch (Mt.type) {
                case 0:
                  Mt.separateAxes || (Tt = Y.createByConstant(Mt.constant * s));
                  break;
                case 1:
                  Mt.separateAxes ||
                    (Tt = Y.createByGradient(
                      this._initParticleRotation(Mt.gradient)
                    ));
                  break;
                case 2:
                  if (Mt.separateAxes) {
                    var Et = Mt.constantMinSeparate,
                      Lt = Mt.constantMaxSeparate;
                    Tt = Y.createByRandomTwoConstantSeparate(
                      new Re(Et[0] * s, Et[1] * s, Et[2] * s),
                      new Re(Lt[0] * s, Lt[1] * s, Lt[2] * s)
                    );
                  } else
                    Tt = Y.createByRandomTwoConstant(
                      Mt.constantMin * s,
                      Mt.constantMax * s
                    );
                  break;
                case 3:
                  Mt.separateAxes ||
                    (Tt = Y.createByRandomTwoGradient(
                      this._initParticleRotation(Mt.gradientMin),
                      this._initParticleRotation(Mt.gradientMax)
                    ));
              }
              var Dt = new et(Tt);
              (Dt.enbale = St.enable), (d.rotationOverLifetime = Dt);
            }
            var At = n.textureSheetAnimation;
            if (At) {
              var Nt,
                Rt = At.frame;
              switch (Rt.type) {
                case 0:
                  Nt = q.createByConstant(Rt.constant);
                  break;
                case 1:
                  Nt = q.createByOverTime(this._initParticleFrame(Rt.overTime));
                  break;
                case 2:
                  Nt = q.createByRandomTwoConstant(
                    Rt.constantMin,
                    Rt.constantMax
                  );
                  break;
                case 3:
                  Nt = q.createByRandomTwoOverTime(
                    this._initParticleFrame(Rt.overTimeMin),
                    this._initParticleFrame(Rt.overTimeMax)
                  );
              }
              var Bt,
                kt = At.startFrame;
              switch (kt.type) {
                case 0:
                  Bt = rt.createByConstant(kt.constant);
                  break;
                case 1:
                  Bt = rt.createByRandomTwoConstant(
                    kt.constantMin,
                    kt.constantMax
                  );
              }
              var Pt = new st(Nt, Bt);
              Pt.enable = At.enable;
              var Ot = At.tiles;
              (Pt.tiles = new Ne(Ot[0], Ot[1])),
                (Pt.type = At.type),
                (Pt.randomRow = At.randomRow);
              var Ut = At.rowIndex;
              void 0 !== Ut && (Pt.rowIndex = Ut),
                (Pt.cycles = At.cycles),
                (d.textureSheetAnimation = Pt);
            }
          }),
          (s._activeHierarchy = function() {
            laya.d3.core.Sprite3D.prototype._activeHierarchy.call(this),
              this.particleSystem.playOnAwake && this.particleSystem.play();
          }),
          (s._inActiveHierarchy = function() {
            laya.d3.core.Sprite3D.prototype._inActiveHierarchy.call(this),
              this.particleSystem.isAlive &&
                this.particleSystem.simulate(0, !0);
          }),
          (s.cloneTo = function(t) {
            var e = t,
              i = e._geometryFilter;
            this._geometryFilter.cloneTo(i);
            var n = e._render,
              a = this._render;
            (n.sharedMaterials = a.sharedMaterials),
              (n.enable = a.enable),
              (n.renderMode = a.renderMode),
              (n.mesh = a.mesh),
              (n.stretchedBillboardCameraSpeedScale =
                a.stretchedBillboardCameraSpeedScale),
              (n.stretchedBillboardSpeedScale = a.stretchedBillboardSpeedScale),
              (n.stretchedBillboardLengthScale =
                a.stretchedBillboardLengthScale),
              (n.sortingFudge = a.sortingFudge),
              laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
          }),
          (s.destroy = function(e) {
            void 0 === e && (e = !0),
              this.destroyed ||
                (t.prototype.destroy.call(this, e),
                this._geometryFilter._destroy(),
                (this._geometryFilter = null));
          }),
          r(0, s, 'particleSystem', function() {
            return this._geometryFilter;
          }),
          r(0, s, 'particleRender', function() {
            return this._render;
          }),
          (e.__init__ = function() {
            (e.SHADERDEFINE_RENDERMODE_BILLBOARD = e.shaderDefines.registerDefine(
              'SPHERHBILLBOARD'
            )),
              (e.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = e.shaderDefines.registerDefine(
                'STRETCHEDBILLBOARD'
              )),
              (e.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = e.shaderDefines.registerDefine(
                'HORIZONTALBILLBOARD'
              )),
              (e.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = e.shaderDefines.registerDefine(
                'VERTICALBILLBOARD'
              )),
              (e.SHADERDEFINE_COLOROVERLIFETIME = e.shaderDefines.registerDefine(
                'COLOROVERLIFETIME'
              )),
              (e.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = e.shaderDefines.registerDefine(
                'RANDOMCOLOROVERLIFETIME'
              )),
              (e.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = e.shaderDefines.registerDefine(
                'VELOCITYOVERLIFETIMECONSTANT'
              )),
              (e.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = e.shaderDefines.registerDefine(
                'VELOCITYOVERLIFETIMECURVE'
              )),
              (e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = e.shaderDefines.registerDefine(
                'VELOCITYOVERLIFETIMERANDOMCONSTANT'
              )),
              (e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = e.shaderDefines.registerDefine(
                'VELOCITYOVERLIFETIMERANDOMCURVE'
              )),
              (e.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = e.shaderDefines.registerDefine(
                'TEXTURESHEETANIMATIONCURVE'
              )),
              (e.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = e.shaderDefines.registerDefine(
                'TEXTURESHEETANIMATIONRANDOMCURVE'
              )),
              (e.SHADERDEFINE_ROTATIONOVERLIFETIME = e.shaderDefines.registerDefine(
                'ROTATIONOVERLIFETIME'
              )),
              (e.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = e.shaderDefines.registerDefine(
                'ROTATIONOVERLIFETIMESEPERATE'
              )),
              (e.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = e.shaderDefines.registerDefine(
                'ROTATIONOVERLIFETIMECONSTANT'
              )),
              (e.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = e.shaderDefines.registerDefine(
                'ROTATIONOVERLIFETIMECURVE'
              )),
              (e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = e.shaderDefines.registerDefine(
                'ROTATIONOVERLIFETIMERANDOMCURVES'
              )),
              (e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = e.shaderDefines.registerDefine(
                'ROTATIONOVERLIFETIMERANDOMCURVES'
              )),
              (e.SHADERDEFINE_SIZEOVERLIFETIMECURVE = e.shaderDefines.registerDefine(
                'SIZEOVERLIFETIMECURVE'
              )),
              (e.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = e.shaderDefines.registerDefine(
                'SIZEOVERLIFETIMECURVESEPERATE'
              )),
              (e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = e.shaderDefines.registerDefine(
                'SIZEOVERLIFETIMERANDOMCURVES'
              )),
              (e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = e.shaderDefines.registerDefine(
                'SIZEOVERLIFETIMERANDOMCURVESSEPERATE'
              )),
              (e.SHADERDEFINE_RENDERMODE_MESH = e.shaderDefines.registerDefine(
                'RENDERMODE_MESH'
              )),
              (e.SHADERDEFINE_SHAPE = e.shaderDefines.registerDefine('SHAPE'));
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e._initStartLife = function(t) {
            for (
              var e = new Q(), i = t.startLifetimes, n = 0, a = i.length;
              n < a;
              n++
            ) {
              var r = i[n];
              e.add(r.key, r.value);
            }
            return e;
          }),
          (e.SHADERDEFINE_RENDERMODE_BILLBOARD = 0),
          (e.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = 0),
          (e.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = 0),
          (e.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = 0),
          (e.SHADERDEFINE_COLOROVERLIFETIME = 0),
          (e.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = 0),
          (e.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = 0),
          (e.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = 0),
          (e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = 0),
          (e.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = 0),
          (e.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = 0),
          (e.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = 0),
          (e.SHADERDEFINE_ROTATIONOVERLIFETIME = 0),
          (e.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = 0),
          (e.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = 0),
          (e.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = 0),
          (e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = 0),
          (e.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = 0),
          (e.SHADERDEFINE_SIZEOVERLIFETIMECURVE = 0),
          (e.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = 0),
          (e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = 0),
          (e.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = 0),
          (e.SHADERDEFINE_RENDERMODE_MESH = 0),
          (e.SHADERDEFINE_SHAPE = 0),
          (e.WORLDPOSITION = 0),
          (e.WORLDROTATION = 1),
          (e.POSITIONSCALE = 4),
          (e.SIZESCALE = 5),
          (e.SCALINGMODE = 6),
          (e.GRAVITY = 7),
          (e.THREEDSTARTROTATION = 8),
          (e.STRETCHEDBILLBOARDLENGTHSCALE = 9),
          (e.STRETCHEDBILLBOARDSPEEDSCALE = 10),
          (e.SIMULATIONSPACE = 11),
          (e.CURRENTTIME = 12),
          (e.VOLVELOCITYCONST = 13),
          (e.VOLVELOCITYGRADIENTX = 14),
          (e.VOLVELOCITYGRADIENTY = 15),
          (e.VOLVELOCITYGRADIENTZ = 16),
          (e.VOLVELOCITYCONSTMAX = 17),
          (e.VOLVELOCITYGRADIENTXMAX = 18),
          (e.VOLVELOCITYGRADIENTYMAX = 19),
          (e.VOLVELOCITYGRADIENTZMAX = 20),
          (e.VOLSPACETYPE = 21),
          (e.COLOROVERLIFEGRADIENTALPHAS = 22),
          (e.COLOROVERLIFEGRADIENTCOLORS = 23),
          (e.MAXCOLOROVERLIFEGRADIENTALPHAS = 24),
          (e.MAXCOLOROVERLIFEGRADIENTCOLORS = 25),
          (e.SOLSIZEGRADIENT = 26),
          (e.SOLSIZEGRADIENTX = 27),
          (e.SOLSIZEGRADIENTY = 28),
          (e.SOLSizeGradientZ = 29),
          (e.SOLSizeGradientMax = 30),
          (e.SOLSIZEGRADIENTXMAX = 31),
          (e.SOLSIZEGRADIENTYMAX = 32),
          (e.SOLSizeGradientZMAX = 33),
          (e.ROLANGULARVELOCITYCONST = 34),
          (e.ROLANGULARVELOCITYCONSTSEPRARATE = 35),
          (e.ROLANGULARVELOCITYGRADIENT = 36),
          (e.ROLANGULARVELOCITYGRADIENTX = 37),
          (e.ROLANGULARVELOCITYGRADIENTY = 38),
          (e.ROLANGULARVELOCITYGRADIENTZ = 39),
          (e.ROLANGULARVELOCITYGRADIENTW = 40),
          (e.ROLANGULARVELOCITYCONSTMAX = 41),
          (e.ROLANGULARVELOCITYCONSTMAXSEPRARATE = 42),
          (e.ROLANGULARVELOCITYGRADIENTMAX = 43),
          (e.ROLANGULARVELOCITYGRADIENTXMAX = 44),
          (e.ROLANGULARVELOCITYGRADIENTYMAX = 45),
          (e.ROLANGULARVELOCITYGRADIENTZMAX = 46),
          (e.ROLANGULARVELOCITYGRADIENTWMAX = 47),
          (e.TEXTURESHEETANIMATIONCYCLES = 48),
          (e.TEXTURESHEETANIMATIONSUBUVLENGTH = 49),
          (e.TEXTURESHEETANIMATIONGRADIENTUVS = 50),
          (e.TEXTURESHEETANIMATIONGRADIENTMAXUVS = 51),
          n(e, [
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(_n.shaderDefines));
            }
          ]),
          e
        );
      })(_n),
      vn = (function(t) {
        function e(t, i) {
          (this._subMeshOffset = null),
            e.__super.call(this, i),
            (this._subMeshOffset = []),
            (this._geometryFilter = new Ti(this)),
            (this._render = new cn(this)),
            this._geometryFilter.on('meshchanged', this, this._onMeshChanged),
            this._render.on('materialchanged', this, this._onMaterialChanged),
            t && (this._geometryFilter.sharedMesh = t);
        }
        a(e, 'laya.d3.core.SkinnedMeshSprite3D', t);
        var s = e.prototype;
        return (
          (s._changeRenderObjectByMesh = function(t) {
            var e = this._render._renderElements,
              i = e[t];
            i || (i = e[t] = new hi()), (i._render = this._render);
            var n = this._render.sharedMaterials[t];
            n || (n = ji.defaultMaterial);
            var a = this._geometryFilter.sharedMesh.getRenderElement(t);
            return (
              (i._mainSortID = this._getSortID(a, n)),
              (i._sprite3D = this),
              (i.renderObj = a),
              (i._material = n),
              i
            );
          }),
          (s._changeRenderObjectByMaterial = function(t, e) {
            var i = this._render._renderElements[t];
            e || (e = ji.defaultMaterial);
            var n = this._geometryFilter.sharedMesh.getRenderElement(t);
            return (
              (i._mainSortID = this._getSortID(n, e)),
              (i._sprite3D = this),
              (i.renderObj = n),
              (i._material = e),
              i
            );
          }),
          (s._changeRenderObjectsByMesh = function() {
            var t = this._geometryFilter.sharedMesh.getRenderElementsCount();
            this._render._renderElements.length = t;
            for (var e = 0; e < t; e++) this._changeRenderObjectByMesh(e);
          }),
          (s._onMeshChanged = function(t) {
            var e = t.sharedMesh;
            e.loaded
              ? this._changeRenderObjectsByMesh()
              : e.once('loaded', this, this._changeRenderObjectsByMesh);
          }),
          (s._onMaterialChanged = function(t, e, i) {
            e < this._render._renderElements.length &&
              this._changeRenderObjectByMaterial(e, i);
          }),
          (s._parseCustomProps = function(t, e, i, n) {
            var a = this.skinnedMeshRender,
              r = i.lightmapIndex;
            null != r && (a.lightmapIndex = r);
            var s = i.lightmapScaleOffset;
            s && (a.lightmapScaleOffset = new Be(s[0], s[1], s[2], s[3]));
            var o, l;
            if (n.instanceParams)
              (o = n.instanceParams.loadPath) &&
                ((l = v.getRes(e[o])),
                (this.meshFilter.sharedMesh = l),
                l.loaded
                  ? (a.sharedMaterials = l.materials)
                  : l.once('loaded', this, this._applyMeshMaterials));
            else {
              (o = i.meshPath) &&
                ((l = v.getRes(e[o])), (this.meshFilter.sharedMesh = l));
              var h = i.materials;
              if (h) {
                var c = a.sharedMaterials,
                  u = h.length;
                c.length = u;
                for (var _ = 0; _ < u; _++) c[_] = v.getRes(e[h[_].path]);
                a.sharedMaterials = c;
              }
              var d = i.rootBone;
              d && a._setRootBone(d);
              var f = i.boundBox;
              if (f) {
                var p = f.min,
                  m = f.max,
                  g = new be(
                    new Re(p[0], p[1], p[2]),
                    new Re(m[0], m[1], m[2])
                  );
                a.localBoundBox = g;
              } else a._hasIndependentBound = !1;
              var y = i.boundSphere;
              if (y) {
                var b = y.center,
                  w = new xe(new Re(b[0], b[1], b[2]), y.radius);
                a.localBoundSphere = w;
              }
            }
          }),
          (s._changeHierarchyAnimator = function(t) {
            if (t) {
              var e = this.skinnedMeshRender;
              e._setCacheAnimator(t);
              var i = t.avatar;
              i && e._setCacheAvatar(i);
            }
            laya.d3.core.Sprite3D.prototype._changeHierarchyAnimator.call(
              this,
              t
            );
          }),
          (s._clearSelfRenderObjects = function() {
            this._scene.removeFrustumCullingObject(this._render);
          }),
          (s._addSelfRenderObjects = function() {
            this._scene.addFrustumCullingObject(this._render);
          }),
          (s._applyMeshMaterials = function(t) {
            for (
              var e = this._render.sharedMaterials,
                i = t.materials,
                n = 0,
                a = i.length;
              n < a;
              n++
            )
              e[n] || (e[n] = i[n]);
            this._render.sharedMaterials = e;
          }),
          (s.cloneTo = function(t) {
            var e = t;
            e._geometryFilter.sharedMesh = this._geometryFilter.sharedMesh;
            var i = this._render,
              n = e._render;
            (n.enable = i.enable),
              (n.sharedMaterials = i.sharedMaterials),
              (n.castShadow = i.castShadow);
            var a = i.lightmapScaleOffset;
            a && (n.lightmapScaleOffset = a.clone()),
              (n.receiveShadow = i.receiveShadow),
              (n.sortingFudge = i.sortingFudge),
              (n._rootBone = i._rootBone);
            var r = i.localBoundSphere;
            r && (n.localBoundSphere = r.clone());
            var s = i.localBoundBox;
            s && (n.localBoundBox = s.clone()),
              (n._hasIndependentBound = i._hasIndependentBound),
              laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
          }),
          (s.destroy = function(e) {
            void 0 === e && (e = !0),
              this.destroyed ||
                (t.prototype.destroy.call(this, e),
                this._geometryFilter._destroy());
          }),
          r(0, s, 'meshFilter', function() {
            return this._geometryFilter;
          }),
          r(0, s, 'skinnedMeshRender', function() {
            return this._render;
          }),
          (e.__init__ = function() {
            e.SHADERDEFINE_BONE = e.shaderDefines.registerDefine('BONE');
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e);
          }),
          (e.SHADERDEFINE_BONE = 8),
          (e.BONES = 0),
          n(e, [
            'shaderDefines',
            function() {
              return (this.shaderDefines = new Ue(_n.shaderDefines));
            }
          ]),
          e
        );
      })(_n),
      bn =
        ((function(t) {
          function e(t, i, n, a, r) {
            void 0 === t && (t = 0.1),
              void 0 === i && (i = 0),
              void 0 === n && (n = 0),
              void 0 === a && (a = 0.3),
              void 0 === r && (r = 1e3),
              (this._tempMatrix = new Te()),
              (this._leftViewMatrix = new Te()),
              (this._leftProjectionMatrix = new Te()),
              (this._leftProjectionViewMatrix = new Te()),
              (this._leftViewport = new ke(0, 0, 0, 0)),
              (this._leftNormalizedViewport = new ke(0, 0, 0.5, 1)),
              (this._leftAspectRatio = i),
              (this._rightViewMatrix = new Te()),
              (this._rightProjectionMatrix = new Te()),
              (this._rightProjectionViewMatrix = new Te()),
              (this._rightViewport = new ke(0, 0, 0, 0)),
              (this._rightNormalizedViewport = new ke(0.5, 0, 0.5, 1)),
              (this._rightAspectRatio = n),
              (this._pupilDistande = t),
              (this._leftBoundFrustumUpdate = !0),
              (this._leftBoundFrustum = new we(Te.DEFAULT)),
              (this._rightBoundFrustumUpdate = !0),
              (this._rightBoundFrustum = new we(Te.DEFAULT)),
              e.__super.call(this, a, r),
              this.transform.on(
                'worldmatrixneedchanged',
                this,
                this._onWorldMatrixChanged
              );
          }
          a(e, 'laya.d3.core.VRCamera', un);
          var i = e.prototype;
          (i._onWorldMatrixChanged = function() {
            this._leftBoundFrustumUpdate = this._rightBoundFrustumUpdate = !0;
          }),
            (i._calculatePupilOffset = function() {
              var t = this._tempVector3;
              return (
                Re.scale(this.right, this._pupilDistande / 2, t), t.elements
              );
            }),
            (i._calculateLeftProjectionMatrix = function() {
              if (!this._useUserProjectionMatrix)
                if (this._orthographic) {
                  var t =
                      this.orthographicVerticalSize *
                      this.leftAspectRatio *
                      0.5,
                    e = 0.5 * this.orthographicVerticalSize;
                  Te.createOrthoOffCenterRH(
                    -t,
                    t,
                    -e,
                    e,
                    this.nearPlane,
                    this.farPlane,
                    this._leftProjectionMatrix
                  );
                } else
                  Te.createPerspective(
                    (3.1416 * this.fieldOfView) / 180,
                    this.leftAspectRatio,
                    this.nearPlane,
                    this.farPlane,
                    this._rightProjectionMatrix
                  );
              this._leftBoundFrustumUpdate = !0;
            }),
            (i._calculateRightProjectionMatrix = function() {
              if (!this._useUserProjectionMatrix)
                if (this._orthographic) {
                  var t =
                      this.orthographicVerticalSize *
                      this.rightAspectRatio *
                      0.5,
                    e = 0.5 * this.orthographicVerticalSize;
                  Te.createOrthoOffCenterRH(
                    -t,
                    t,
                    e,
                    e,
                    this.nearPlane,
                    this.farPlane,
                    this._rightProjectionMatrix
                  );
                } else
                  Te.createPerspective(
                    (3.1416 * this.fieldOfView) / 180,
                    this.rightAspectRatio,
                    this.nearPlane,
                    this.farPlane,
                    this._rightProjectionMatrix
                  );
              this._rightBoundFrustumUpdate = !0;
            }),
            (i._calculateProjectionMatrix = function() {
              if (!this._useUserProjectionMatrix)
                if (this._orthographic) {
                  var t =
                      this.orthographicVerticalSize *
                      this.leftAspectRatio *
                      0.5,
                    e = 0.5 * this.orthographicVerticalSize,
                    i =
                      this.orthographicVerticalSize *
                      this.rightAspectRatio *
                      0.5,
                    n = 0.5 * this.orthographicVerticalSize;
                  Te.createOrthoOffCenterRH(
                    -t,
                    t,
                    -e,
                    e,
                    this.nearPlane,
                    this.farPlane,
                    this._leftProjectionMatrix
                  ),
                    Te.createOrthoOffCenterRH(
                      -i,
                      i,
                      n,
                      n,
                      this.nearPlane,
                      this.farPlane,
                      this._rightProjectionMatrix
                    );
                } else
                  Te.createPerspective(
                    (3.1416 * this.fieldOfView) / 180,
                    this.leftAspectRatio,
                    this.nearPlane,
                    this.farPlane,
                    this._leftProjectionMatrix
                  ),
                    Te.createPerspective(
                      (3.1416 * this.fieldOfView) / 180,
                      this.rightAspectRatio,
                      this.nearPlane,
                      this.farPlane,
                      this._rightProjectionMatrix
                    );
              this._leftBoundFrustumUpdate = this._rightBoundFrustumUpdate = !0;
            }),
            (i._renderCamera = function(t, e, i) {
              (e.camera = this),
                this._prepareCameraToRender(),
                i._preRenderUpdateComponents(e);
              var n, a;
              n = e._viewMatrix = this.leftViewMatrix;
              var r = this._renderTarget;
              r
                ? (r.start(),
                  Te.multiply(
                    un._invertYScaleMatrix,
                    this._leftProjectionMatrix,
                    un._invertYProjectionMatrix
                  ),
                  Te.multiply(
                    un._invertYScaleMatrix,
                    this.leftProjectionViewMatrix,
                    un._invertYProjectionViewMatrix
                  ),
                  (a = e._projectionMatrix = un._invertYProjectionMatrix),
                  (e._projectionViewMatrix = un._invertYProjectionViewMatrix))
                : ((a = e._projectionMatrix = this._leftProjectionMatrix),
                  (e._projectionViewMatrix = this.leftProjectionViewMatrix)),
                this._prepareCameraViewProject(n, a),
                (e._viewport = this.leftViewport),
                i._preRenderScene(t, e, this.leftBoundFrustum),
                i._clear(t, e),
                i._renderScene(t, e);
              var s, o;
              (s = e._viewMatrix = this.rightViewMatrix),
                r
                  ? (r.start(),
                    Te.multiply(
                      un._invertYScaleMatrix,
                      this._rightProjectionMatrix,
                      un._invertYProjectionMatrix
                    ),
                    Te.multiply(
                      un._invertYScaleMatrix,
                      this.rightProjectionViewMatrix,
                      un._invertYProjectionViewMatrix
                    ),
                    (e._projectionMatrix = un._invertYProjectionMatrix),
                    (o = e._projectionViewMatrix =
                      un._invertYProjectionViewMatrix))
                  : ((o = e._projectionMatrix = this._rightProjectionMatrix),
                    (e._projectionViewMatrix = this.rightProjectionViewMatrix)),
                this._prepareCameraViewProject(s, o),
                (e._viewport = this.rightViewport),
                i._preRenderScene(t, e, this.rightBoundFrustum),
                i._clear(t, e),
                i._renderScene(t, e),
                i._postRenderUpdateComponents(e),
                r && r.end();
            }),
            r(0, i, 'rightBoundFrustum', function() {
              return (
                this._rightBoundFrustumUpdate &&
                  (this._rightBoundFrustum.matrix = this.rightProjectionViewMatrix),
                this._rightBoundFrustum
              );
            }),
            r(0, i, 'leftNormalizedViewport', function() {
              if (!this._viewportExpressedInClipSpace) {
                var t = this._leftViewport,
                  e = this.renderTargetSize,
                  i = e.width,
                  n = e.height;
                (this._leftNormalizedViewport.x = t.x / i),
                  (this._leftNormalizedViewport.y = t.y / n),
                  (this._leftNormalizedViewport.width = t.width / i),
                  (this._leftNormalizedViewport.height = t.height / n);
              }
              return this._leftNormalizedViewport;
            }),
            r(0, i, 'rightViewport', function() {
              if (this._viewportExpressedInClipSpace) {
                var t = this._rightNormalizedViewport,
                  e = this.renderTargetSize,
                  i = e.width,
                  n = e.height;
                (this._rightViewport.x = t.x * i),
                  (this._rightViewport.y = t.y * n),
                  (this._rightViewport.width = t.width * i),
                  (this._rightViewport.height = t.height * n);
              }
              return this._rightViewport;
            }),
            r(0, i, 'viewport', null, function(t) {
              if (
                null != this.renderTarget &&
                (t.x < 0 || t.y < 0 || 0 == t.width || 0 == t.height)
              )
                throw new Error('VRCamera: viewport size invalid.', 'value');
              (this._viewportExpressedInClipSpace = !1),
                (this._leftViewport = new ke(0, 0, t.width / 2, t.height)),
                (this._rightViewport = new ke(
                  t.width / 2,
                  0,
                  t.width / 2,
                  t.height
                )),
                this._calculateProjectionMatrix();
            }),
            r(0, i, 'leftAspectRatio', function() {
              if (0 === this._leftAspectRatio) {
                var t = this.leftViewport;
                return t.width / t.height;
              }
              return this._leftAspectRatio;
            }),
            r(0, i, 'rightAspectRatio', function() {
              if (0 === this._rightAspectRatio) {
                var t = this.rightViewport;
                return t.width / t.height;
              }
              return this._rightAspectRatio;
            }),
            r(0, i, 'aspectRatio', null, function(t) {
              if (t < 0)
                throw new Error(
                  'VRCamera: the aspect ratio has to be a positive real number.'
                );
              (this._leftAspectRatio = t),
                (this._rightAspectRatio = t),
                this._calculateRightProjectionMatrix();
            }),
            r(0, i, 'rightNormalizedViewport', function() {
              if (!this._viewportExpressedInClipSpace) {
                var t = this._rightViewport,
                  e = this.renderTargetSize,
                  i = e.width,
                  n = e.height;
                (this._rightNormalizedViewport.x = t.x / i),
                  (this._rightNormalizedViewport.y = t.y / n),
                  (this._rightNormalizedViewport.width = t.width / i),
                  (this._rightNormalizedViewport.height = t.height / n);
              }
              return this._rightNormalizedViewport;
            }),
            r(0, i, 'normalizedViewport', null, function(t) {
              if (t.x < 0 || t.y < 0 || t.x + t.width > 1 || t.x + t.height > 1)
                throw new Error('VRCamera: viewport size invalid.', 'value');
              (this._viewportExpressedInClipSpace = !0),
                (this._leftNormalizedViewport = new ke(
                  0,
                  0,
                  t.width / 2,
                  t.height
                )),
                (this._rightNormalizedViewport = new ke(
                  t.width / 2,
                  0,
                  t.width / 2,
                  t.height
                )),
                this._calculateProjectionMatrix();
            }),
            r(0, i, 'leftViewport', function() {
              if (this._viewportExpressedInClipSpace) {
                var t = this._leftNormalizedViewport,
                  e = this.renderTargetSize,
                  i = e.width,
                  n = e.height;
                (this._leftViewport.x = t.x * i),
                  (this._leftViewport.y = t.y * n),
                  (this._leftViewport.width = t.width * i),
                  (this._leftViewport.height = t.height * n);
              }
              return this._leftViewport;
            }),
            r(0, i, 'needLeftViewport', function() {
              var t = this.leftNormalizedViewport;
              return 0 === t.x && 0 === t.y && 1 === t.width && 1 === t.height;
            }),
            r(0, i, 'needRightViewport', function() {
              var t = this.rightNormalizedViewport;
              return 0 === t.x && 0 === t.y && 1 === t.width && 1 === t.height;
            }),
            r(0, i, 'leftViewMatrix', function() {
              var t = this._calculatePupilOffset(),
                e = this._tempMatrix;
              this.transform.worldMatrix.cloneTo(e);
              var i = e.elements;
              return (
                (i[12] -= t[0]),
                (i[13] -= t[1]),
                (i[14] -= t[2]),
                e.invert(this._leftViewMatrix),
                this._leftViewMatrix
              );
            }),
            r(0, i, 'rightViewMatrix', function() {
              var t = this._calculatePupilOffset(),
                e = this._tempMatrix;
              this.transform.worldMatrix.cloneTo(e);
              var i = e.elements;
              return (
                (i[12] += t[0]),
                (i[13] += t[1]),
                (i[14] += t[2]),
                e.invert(this._rightViewMatrix),
                this._rightViewMatrix
              );
            }),
            r(0, i, 'leftProjectionMatrix', function() {
              return this._leftProjectionMatrix;
            }),
            r(0, i, 'leftProjectionViewMatrix', function() {
              return (
                Te.multiply(
                  this.leftProjectionMatrix,
                  this.leftViewMatrix,
                  this._leftProjectionViewMatrix
                ),
                this._leftProjectionViewMatrix
              );
            }),
            r(0, i, 'rightProjectionMatrix', function() {
              return this._rightProjectionMatrix;
            }),
            r(0, i, 'rightProjectionViewMatrix', function() {
              return (
                Te.multiply(
                  this.rightProjectionMatrix,
                  this.rightViewMatrix,
                  this._rightProjectionViewMatrix
                ),
                this._rightProjectionViewMatrix
              );
            }),
            r(0, i, 'leftBoundFrustum', function() {
              return (
                this._leftBoundFrustumUpdate &&
                  (this._leftBoundFrustum.matrix = this.leftProjectionViewMatrix),
                this._leftBoundFrustum
              );
            });
        })(),
        (function(t) {
          function e() {
            e.__super.call(this),
              (this._geometryFilter = new Di(this)),
              (this._render = new Ai(this)),
              this._changeRenderObjectsByMaterial(
                this._render,
                0,
                Ki.defaultMaterial
              ),
              this._render.on(
                'materialchanged',
                this,
                this._changeRenderObjectsByMaterial
              ),
              this._geometryFilter.on(
                'trailfilterchange',
                this,
                this._changeRenderObjectsByRenderElement
              );
          }
          a(e, 'laya.d3.core.trail.TrailSprite3D', t);
          var i = e.prototype;
          return (
            (i._changeRenderObjectsByMaterial = function(t, e, i) {
              var n = this._geometryFilter.getRenderElementsCount();
              this._render._renderElements.length = n;
              for (var a = 0; a < n; a++)
                this._changeRenderObjectByMaterial(a, i);
            }),
            (i._changeRenderObjectByMaterial = function(t, e) {
              var i = this._render._renderElements;
              e || (e = Ki.defaultMaterial);
              var n = i[t];
              n || (n = i[t] = new ct()),
                (n._sprite3D = this),
                (n.renderObj = this._geometryFilter.getRenderElement(t)),
                (n._render = this._render),
                (n._material = e);
            }),
            (i._changeRenderObjectsByRenderElement = function(t, e) {
              var i = this._render._renderElements,
                n = i[t];
              n || (n = i[t] = new ct()),
                (n._sprite3D = this),
                (n.renderObj = e),
                (n._render = this._render),
                (n._material = this._render.sharedMaterial);
            }),
            (i._clearSelfRenderObjects = function() {
              this.scene.removeFrustumCullingObject(this._render);
            }),
            (i._addSelfRenderObjects = function() {
              this.scene.addFrustumCullingObject(this._render);
            }),
            (i._update = function(e) {
              t.prototype._update.call(this, e),
                this._geometryFilter._update(e);
            }),
            (i._parseCustomProps = function(t, e, i, n) {
              var a = this._render,
                r = this._geometryFilter,
                s = 0,
                o = 0,
                l = i.materials;
              if (l) {
                var h = a.sharedMaterials,
                  c = l.length;
                for (h.length = c, s = 0; s < c; s++)
                  h[s] = v.getRes(e[l[s].path]);
                a.sharedMaterials = h;
              }
              var u = n.props;
              (r.time = u.time),
                (r.minVertexDistance = u.minVertexDistance),
                (r.widthMultiplier = u.widthMultiplier),
                (r.textureMode = u.textureMode);
              var _ = [],
                d = i.widthCurve;
              for (s = 0, o = d.length; s < o; s++) {
                var f = new yt();
                (f.time = d[s].time),
                  (f.inTangent = d[s].inTangent),
                  (f.outTangent = d[s].outTangent),
                  (f.value = d[s].value),
                  _.push(f);
              }
              r.widthCurve = _;
              var p = i.colorGradient,
                m = new pt();
              m.mode = p.mode;
              var g,
                y,
                b = [],
                w = p.colorKeys;
              for (s = 0, o = w.length; s < o; s++)
                (y = w[s]),
                  (g = new gt(
                    new ft(y.value[0], y.value[1], y.value[2], 1),
                    y.time
                  )),
                  b.push(g);
              var x,
                I,
                C = [],
                S = p.alphaKeys;
              for (s = 0, o = S.length; s < o; s++)
                (I = S[s]), (x = new mt(I.value, I.time)), C.push(x);
              m.setKeys(b, C), (r.colorGradient = m);
            }),
            (i.reset = function() {
              this.trailFilter.reset();
            }),
            (i.cloneTo = function(t) {
              laya.d3.core.Sprite3D.prototype.cloneTo.call(this, t);
              var e = 0,
                i = 0,
                n = t,
                a = n.trailFilter;
              (a.time = this.trailFilter.time),
                (a.minVertexDistance = this.trailFilter.minVertexDistance),
                (a.widthMultiplier = this.trailFilter.widthMultiplier);
              var r = this.trailFilter.widthCurve,
                s = [];
              for (e = 0, i = r.length; e < i; e++) {
                var o = new yt();
                r[e].cloneTo(o), s.push(o);
              }
              a.widthCurve = s;
              var l = new pt();
              this.trailFilter.colorGradient.cloneTo(l),
                (a.colorGradient = l),
                (a.textureMode = this.trailFilter.textureMode);
              n.trailRender.sharedMaterial = this.trailRender.sharedMaterial;
            }),
            (i.destroy = function(e) {
              void 0 === e && (e = !0),
                this.destroyed ||
                  (t.prototype.destroy.call(this, e),
                  this._geometryFilter._destroy(),
                  (this._geometryFilter = null));
            }),
            r(0, i, 'trailFilter', function() {
              return this._geometryFilter;
            }),
            r(0, i, 'trailRender', function() {
              return this._render;
            }),
            (e.__init__ = function() {
              e.SHADERDEFINE_GRADIENTMODE_BLEND = e.shaderDefines.registerDefine(
                'GRADIENTMODE_BLEND'
              );
            }),
            (e.CURTIME = 3),
            (e.LIFETIME = 4),
            (e.WIDTHCURVE = 5),
            (e.WIDTHCURVEKEYLENGTH = 6),
            (e.GRADIENTCOLORKEY = 7),
            (e.GRADIENTALPHAKEY = 8),
            (e.SHADERDEFINE_GRADIENTMODE_BLEND = 0),
            n(e, [
              'shaderDefines',
              function() {
                return (this.shaderDefines = new Ue(_n.shaderDefines));
              }
            ]),
            e
          );
        })(_n)),
      wn = (function(t) {
        function e(t, i, n, a, r, s, o, l) {
          e.__super.call(this, l),
            (this._geometryFilter = new Ri(this, t, i, n, a, r, s, o)),
            (this._render = new Bi(this));
        }
        a(e, 'laya.d3.terrain.TerrainChunk', t);
        var n = e.prototype;
        return (
          (n.buildRenderElementAndMaterial = function(
            t,
            e,
            i,
            n,
            a,
            r,
            s,
            o,
            l,
            h,
            c,
            u,
            _,
            d,
            f,
            p,
            m,
            g
          ) {
            void 0 === c && (c = 1),
              void 0 === u && (u = 1),
              void 0 === _ && (_ = 1),
              void 0 === d && (d = 1),
              void 0 === f && (f = 1),
              void 0 === p && (p = 1),
              void 0 === m && (m = 1),
              void 0 === g && (g = 1);
            var y = new Wi();
            l && (y.diffuseColor = l),
              o && (y.ambientColor = o),
              h && (y.specularColor = h),
              (y.splatAlphaTexture = v.getRes(i)),
              (y.normalTexture = e ? v.getRes(e) : null),
              (y.diffuseTexture1 = n ? v.getRes(n) : null),
              (y.diffuseTexture2 = a ? v.getRes(a) : null),
              (y.diffuseTexture3 = r ? v.getRes(r) : null),
              (y.diffuseTexture4 = s ? v.getRes(s) : null),
              y.setDiffuseScale1(c, u),
              y.setDiffuseScale2(_, d),
              y.setDiffuseScale3(f, p),
              y.setDiffuseScale4(m, g),
              y.setDetailNum(t),
              0 != this._render._renderElements.length && (y.renderMode = 2);
            var b = new ct();
            (b._mainSortID = 0),
              (b._sprite3D = this),
              (b.renderObj = this._geometryFilter),
              (b._material = y),
              this._render._materials.push(y),
              this._render._renderElements.push(b);
          }),
          (n._clearSelfRenderObjects = function() {
            this.scene.removeFrustumCullingObject(this._render);
          }),
          (n._addSelfRenderObjects = function() {
            this.scene.addFrustumCullingObject(this._render);
          }),
          (n._applyMeshMaterials = function(t) {
            for (
              var e = this._render.sharedMaterials,
                i = t.materials,
                n = 0,
                a = i.length;
              n < a;
              n++
            )
              e[n] || (e[n] = i[n]);
            this._render.sharedMaterials = e;
          }),
          (n.cloneTo = function(t) {
            console.log("Terrain Chunk can't clone");
          }),
          (n.destroy = function(e) {
            void 0 === e && (e = !0),
              this.destroyed ||
                (t.prototype.destroy.call(this, e),
                this._geometryFilter._destroy());
          }),
          r(0, n, 'terrainFilter', function() {
            return this._geometryFilter;
          }),
          r(0, n, 'terrainRender', function() {
            return this._render;
          }),
          (e.load = function(t) {
            return i.loader.create(t, null, null, e, null, 1, !1);
          }),
          e
        );
      })(_n);
    !(function(t) {
      function e(t, i, n) {
        (this._minX = NaN),
          (this._minZ = NaN),
          (this._cellSize = null),
          (this._heightMap = null),
          e.__super.call(this, t, n),
          (this._heightMap = i),
          (this._cellSize = new Ne());
      }
      a(e, 'laya.d3.core.MeshTerrainSprite3D', gn);
      var i = e.prototype;
      (i._disableRotation = function() {
        var t = this.transform.rotation;
        (t.elements[0] = 0),
          (t.elements[1] = 0),
          (t.elements[2] = 0),
          (t.elements[3] = 1),
          (this.transform.rotation = t);
      }),
        (i._getScaleX = function() {
          var t = this.transform.worldMatrix.elements,
            e = t[0],
            i = t[1],
            n = t[2];
          return Math.sqrt(e * e + i * i + n * n);
        }),
        (i._getScaleZ = function() {
          var t = this.transform.worldMatrix.elements,
            e = t[8],
            i = t[9],
            n = t[10];
          return Math.sqrt(e * e + i * i + n * n);
        }),
        (i._initCreateFromMesh = function(t, e) {
          this._heightMap = G.creatFromMesh(
            this.meshFilter.sharedMesh,
            t,
            e,
            this._cellSize
          );
          var i = this.meshFilter.sharedMesh.boundingBox,
            n = i.min;
          i.max;
          (this._minX = n.x), (this._minZ = n.z);
        }),
        (i._initCreateFromMeshHeightMap = function(t, e, i) {
          var n = this,
            a = this.meshFilter.sharedMesh.boundingBox;
          t.loaded
            ? ((this._heightMap = G.createFromImage(t, e, i)),
              this._computeCellSize(a))
            : t.once('loaded', null, function() {
                (n._heightMap = G.createFromImage(t, e, i)),
                  n._computeCellSize(a);
              });
          var r = a.min;
          a.max;
          (this._minX = r.x), (this._minZ = r.z);
        }),
        (i._computeCellSize = function(t) {
          var e = t.min,
            i = t.max,
            n = e.x,
            a = e.z,
            r = i.x - n,
            s = i.z - a;
          (this._cellSize.elements[0] = r / (this._heightMap.width - 1)),
            (this._cellSize.elements[1] = s / (this._heightMap.height - 1));
        }),
        (i._update = function(t) {
          this._disableRotation(),
            laya.d3.core.RenderableSprite3D.prototype._update.call(this, t);
        }),
        (i.getHeight = function(t, i) {
          (e._tempVector3.elements[0] = t),
            (e._tempVector3.elements[1] = 0),
            (e._tempVector3.elements[2] = i),
            this._disableRotation();
          var n = this.transform.worldMatrix;
          n.invert(e._tempMatrix4x4),
            Re.transformCoordinate(
              e._tempVector3,
              e._tempMatrix4x4,
              e._tempVector3
            ),
            (t = e._tempVector3.elements[0]),
            (i = e._tempVector3.elements[2]);
          var a = (t - this._minX) / this._cellSize.x,
            r = (i - this._minZ) / this._cellSize.y,
            s = Math.floor(r),
            o = Math.floor(a),
            l = a - o,
            h = r - s,
            c = NaN,
            u = NaN,
            _ = n.elements,
            d = _[4],
            f = _[5],
            p = _[6],
            m = Math.sqrt(d * d + f * f + p * p),
            g = _[13],
            y = this._heightMap.getHeight(s, o + 1),
            v = this._heightMap.getHeight(s + 1, o);
          if (isNaN(y) || isNaN(v)) return NaN;
          if (l + h <= 1) {
            var b = this._heightMap.getHeight(s, o);
            return isNaN(b)
              ? NaN
              : ((c = y - b), (u = v - b), (b + l * c + h * u) * m + g);
          }
          var w = this._heightMap.getHeight(s + 1, o + 1);
          return isNaN(w)
            ? NaN
            : ((c = v - w),
              (u = y - w),
              (w + (1 - l) * c + (1 - h) * u) * m + g);
        }),
        r(0, i, 'minX', function() {
          var t = this.transform.worldMatrix.elements;
          return this._minX * this._getScaleX() + t[12];
        }),
        r(0, i, 'width', function() {
          return (
            (this._heightMap.width - 1) * this._cellSize.x * this._getScaleX()
          );
        }),
        r(0, i, 'minZ', function() {
          var t = this.transform.worldMatrix.elements;
          return this._minZ * this._getScaleZ() + t[14];
        }),
        r(0, i, 'depth', function() {
          return (
            (this._heightMap.height - 1) * this._cellSize.y * this._getScaleZ()
          );
        }),
        (e.createFromMesh = function(t, i, n, a) {
          var r = new e(t, null, a);
          return (
            t.loaded
              ? r._initCreateFromMesh(i, n)
              : t.once('loaded', r, r._initCreateFromMesh, [i, n]),
            r
          );
        }),
        (e.createFromMeshAndHeightMap = function(t, i, n, a, r) {
          var s = new e(t, null, r);
          return (
            t.loaded
              ? s._initCreateFromMeshHeightMap(i, n, a)
              : t.once('loaded', s, s._initCreateFromMeshHeightMap, [i, n, a]),
            s
          );
        }),
        n(e, [
          '_tempVector3',
          function() {
            return (this._tempVector3 = new Re());
          },
          '_tempMatrix4x4',
          function() {
            return (this._tempMatrix4x4 = new Te());
          }
        ]);
    })();
  })(window, document, Laya),
  'function' == typeof define &&
    define.amd &&
    define('laya.core', ['require', 'exports'], function(t, e) {
      'use strict';
      Object.defineProperty(e, '__esModule', { value: !0 });
      for (var i in Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
      }
    }),
  (function(t, e) {
    'object' == typeof exports
      ? (module.exports = exports = e())
      : 'function' == typeof define && define.amd
      ? define([], e)
      : (t.CryptoJS = e());
  })(this, function() {
    var t =
      t ||
      (function(t, e) {
        var i =
            Object.create ||
            (function() {
              function t() {}
              return function(e) {
                var i;
                return (
                  (t.prototype = e), (i = new t()), (t.prototype = null), i
                );
              };
            })(),
          n = {},
          a = (n.lib = {}),
          r = (a.Base = {
            extend: function(t) {
              var e = i(this);
              return (
                t && e.mixIn(t),
                (e.hasOwnProperty('init') && this.init !== e.init) ||
                  (e.init = function() {
                    e.$super.init.apply(this, arguments);
                  }),
                (e.init.prototype = e),
                (e.$super = this),
                e
              );
            },
            create: function() {
              var t = this.extend();
              return t.init.apply(t, arguments), t;
            },
            init: function() {},
            mixIn: function(t) {
              for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
              t.hasOwnProperty('toString') && (this.toString = t.toString);
            },
            clone: function() {
              return this.init.prototype.extend(this);
            }
          }),
          s = (a.WordArray = r.extend({
            init: function(t, e) {
              (t = this.words = t || []),
                (this.sigBytes = void 0 != e ? e : 4 * t.length);
            },
            toString: function(t) {
              return (t || l).stringify(this);
            },
            concat: function(t) {
              var e = this.words,
                i = t.words,
                n = this.sigBytes,
                a = t.sigBytes;
              if ((this.clamp(), n % 4))
                for (s = 0; s < a; s++) {
                  var r = (i[s >>> 2] >>> (24 - (s % 4) * 8)) & 255;
                  e[(n + s) >>> 2] |= r << (24 - ((n + s) % 4) * 8);
                }
              else for (var s = 0; s < a; s += 4) e[(n + s) >>> 2] = i[s >>> 2];
              return (this.sigBytes += a), this;
            },
            clamp: function() {
              var e = this.words,
                i = this.sigBytes;
              (e[i >>> 2] &= 4294967295 << (32 - (i % 4) * 8)),
                (e.length = t.ceil(i / 4));
            },
            clone: function() {
              var t = r.clone.call(this);
              return (t.words = this.words.slice(0)), t;
            },
            random: function(e) {
              for (
                var i,
                  n = [],
                  a = function(e) {
                    var e = e,
                      i = 987654321;
                    return function() {
                      var n =
                        (((i =
                          (36969 * (65535 & i) + (i >> 16)) & 4294967295) <<
                          16) +
                          (e = (18e3 * (65535 & e) + (e >> 16)) & 4294967295)) &
                        4294967295;
                      return (
                        (n /= 4294967296),
                        (n += 0.5) * (t.random() > 0.5 ? 1 : -1)
                      );
                    };
                  },
                  r = 0;
                r < e;
                r += 4
              ) {
                var o = a(4294967296 * (i || t.random()));
                (i = 987654071 * o()), n.push((4294967296 * o()) | 0);
              }
              return new s.init(n, e);
            }
          })),
          o = (n.enc = {}),
          l = (o.Hex = {
            stringify: function(t) {
              for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a++) {
                var r = (e[a >>> 2] >>> (24 - (a % 4) * 8)) & 255;
                n.push((r >>> 4).toString(16)), n.push((15 & r).toString(16));
              }
              return n.join('');
            },
            parse: function(t) {
              for (var e = t.length, i = [], n = 0; n < e; n += 2)
                i[n >>> 3] |=
                  parseInt(t.substr(n, 2), 16) << (24 - (n % 8) * 4);
              return new s.init(i, e / 2);
            }
          }),
          h = (o.Latin1 = {
            stringify: function(t) {
              for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a++) {
                var r = (e[a >>> 2] >>> (24 - (a % 4) * 8)) & 255;
                n.push(String.fromCharCode(r));
              }
              return n.join('');
            },
            parse: function(t) {
              for (var e = t.length, i = [], n = 0; n < e; n++)
                i[n >>> 2] |= (255 & t.charCodeAt(n)) << (24 - (n % 4) * 8);
              return new s.init(i, e);
            }
          }),
          c = (o.Utf8 = {
            stringify: function(t) {
              try {
                return decodeURIComponent(escape(h.stringify(t)));
              } catch (t) {
                throw new Error('Malformed UTF-8 data');
              }
            },
            parse: function(t) {
              return h.parse(unescape(encodeURIComponent(t)));
            }
          }),
          u = (a.BufferedBlockAlgorithm = r.extend({
            reset: function() {
              (this._data = new s.init()), (this._nDataBytes = 0);
            },
            _append: function(t) {
              'string' == typeof t && (t = c.parse(t)),
                this._data.concat(t),
                (this._nDataBytes += t.sigBytes);
            },
            _process: function(e) {
              var i = this._data,
                n = i.words,
                a = i.sigBytes,
                r = this.blockSize,
                o = a / (4 * r),
                l =
                  (o = e
                    ? t.ceil(o)
                    : t.max((0 | o) - this._minBufferSize, 0)) * r,
                h = t.min(4 * l, a);
              if (l) {
                for (var c = 0; c < l; c += r) this._doProcessBlock(n, c);
                var u = n.splice(0, l);
                i.sigBytes -= h;
              }
              return new s.init(u, h);
            },
            clone: function() {
              var t = r.clone.call(this);
              return (t._data = this._data.clone()), t;
            },
            _minBufferSize: 0
          })),
          _ =
            ((a.Hasher = u.extend({
              cfg: r.extend(),
              init: function(t) {
                (this.cfg = this.cfg.extend(t)), this.reset();
              },
              reset: function() {
                u.reset.call(this), this._doReset();
              },
              update: function(t) {
                return this._append(t), this._process(), this;
              },
              finalize: function(t) {
                t && this._append(t);
                return this._doFinalize();
              },
              blockSize: 16,
              _createHelper: function(t) {
                return function(e, i) {
                  return new t.init(i).finalize(e);
                };
              },
              _createHmacHelper: function(t) {
                return function(e, i) {
                  return new _.HMAC.init(t, i).finalize(e);
                };
              }
            })),
            (n.algo = {}));
        return n;
      })(Math);
    return (
      (function() {
        var e = t,
          i = e.lib.WordArray;
        e.enc.Base64 = {
          stringify: function(t) {
            var e = t.words,
              i = t.sigBytes,
              n = this._map;
            t.clamp();
            for (var a = [], r = 0; r < i; r += 3)
              for (
                var s =
                    (((e[r >>> 2] >>> (24 - (r % 4) * 8)) & 255) << 16) |
                    (((e[(r + 1) >>> 2] >>> (24 - ((r + 1) % 4) * 8)) & 255) <<
                      8) |
                    ((e[(r + 2) >>> 2] >>> (24 - ((r + 2) % 4) * 8)) & 255),
                  o = 0;
                o < 4 && r + 0.75 * o < i;
                o++
              )
                a.push(n.charAt((s >>> (6 * (3 - o))) & 63));
            var l = n.charAt(64);
            if (l) for (; a.length % 4; ) a.push(l);
            return a.join('');
          },
          parse: function(t) {
            var e = t.length,
              n = this._map,
              a = this._reverseMap;
            if (!a) {
              a = this._reverseMap = [];
              for (var r = 0; r < n.length; r++) a[n.charCodeAt(r)] = r;
            }
            var s = n.charAt(64);
            if (s) {
              var o = t.indexOf(s);
              -1 !== o && (e = o);
            }
            return (function(t, e, n) {
              for (var a = [], r = 0, s = 0; s < e; s++)
                if (s % 4) {
                  var o = n[t.charCodeAt(s - 1)] << ((s % 4) * 2),
                    l = n[t.charCodeAt(s)] >>> (6 - (s % 4) * 2);
                  (a[r >>> 2] |= (o | l) << (24 - (r % 4) * 8)), r++;
                }
              return i.create(a, r);
            })(t, e, a);
          },
          _map:
            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
        };
      })(),
      (function(e) {
        function i(t, e, i, n, a, r, s) {
          var o = t + ((e & i) | (~e & n)) + a + s;
          return ((o << r) | (o >>> (32 - r))) + e;
        }
        function n(t, e, i, n, a, r, s) {
          var o = t + ((e & n) | (i & ~n)) + a + s;
          return ((o << r) | (o >>> (32 - r))) + e;
        }
        function a(t, e, i, n, a, r, s) {
          var o = t + (e ^ i ^ n) + a + s;
          return ((o << r) | (o >>> (32 - r))) + e;
        }
        function r(t, e, i, n, a, r, s) {
          var o = t + (i ^ (e | ~n)) + a + s;
          return ((o << r) | (o >>> (32 - r))) + e;
        }
        var s = t,
          o = s.lib,
          l = o.WordArray,
          h = o.Hasher,
          c = s.algo,
          u = [];
        !(function() {
          for (var t = 0; t < 64; t++)
            u[t] = (4294967296 * e.abs(e.sin(t + 1))) | 0;
        })();
        var _ = (c.MD5 = h.extend({
          _doReset: function() {
            this._hash = new l.init([
              1732584193,
              4023233417,
              2562383102,
              271733878
            ]);
          },
          _doProcessBlock: function(t, e) {
            for (var s = 0; s < 16; s++) {
              var o = e + s,
                l = t[o];
              t[o] =
                (16711935 & ((l << 8) | (l >>> 24))) |
                (4278255360 & ((l << 24) | (l >>> 8)));
            }
            var h = this._hash.words,
              c = t[e + 0],
              _ = t[e + 1],
              d = t[e + 2],
              f = t[e + 3],
              p = t[e + 4],
              m = t[e + 5],
              g = t[e + 6],
              y = t[e + 7],
              v = t[e + 8],
              b = t[e + 9],
              w = t[e + 10],
              x = t[e + 11],
              I = t[e + 12],
              C = t[e + 13],
              S = t[e + 14],
              T = t[e + 15],
              M = h[0],
              E = h[1],
              L = h[2],
              D = h[3];
            (E = r(
              (E = r(
                (E = r(
                  (E = r(
                    (E = a(
                      (E = a(
                        (E = a(
                          (E = a(
                            (E = n(
                              (E = n(
                                (E = n(
                                  (E = n(
                                    (E = i(
                                      (E = i(
                                        (E = i(
                                          (E = i(
                                            E,
                                            (L = i(
                                              L,
                                              (D = i(
                                                D,
                                                (M = i(M, E, L, D, c, 7, u[0])),
                                                E,
                                                L,
                                                _,
                                                12,
                                                u[1]
                                              )),
                                              M,
                                              E,
                                              d,
                                              17,
                                              u[2]
                                            )),
                                            D,
                                            M,
                                            f,
                                            22,
                                            u[3]
                                          )),
                                          (L = i(
                                            L,
                                            (D = i(
                                              D,
                                              (M = i(M, E, L, D, p, 7, u[4])),
                                              E,
                                              L,
                                              m,
                                              12,
                                              u[5]
                                            )),
                                            M,
                                            E,
                                            g,
                                            17,
                                            u[6]
                                          )),
                                          D,
                                          M,
                                          y,
                                          22,
                                          u[7]
                                        )),
                                        (L = i(
                                          L,
                                          (D = i(
                                            D,
                                            (M = i(M, E, L, D, v, 7, u[8])),
                                            E,
                                            L,
                                            b,
                                            12,
                                            u[9]
                                          )),
                                          M,
                                          E,
                                          w,
                                          17,
                                          u[10]
                                        )),
                                        D,
                                        M,
                                        x,
                                        22,
                                        u[11]
                                      )),
                                      (L = i(
                                        L,
                                        (D = i(
                                          D,
                                          (M = i(M, E, L, D, I, 7, u[12])),
                                          E,
                                          L,
                                          C,
                                          12,
                                          u[13]
                                        )),
                                        M,
                                        E,
                                        S,
                                        17,
                                        u[14]
                                      )),
                                      D,
                                      M,
                                      T,
                                      22,
                                      u[15]
                                    )),
                                    (L = n(
                                      L,
                                      (D = n(
                                        D,
                                        (M = n(M, E, L, D, _, 5, u[16])),
                                        E,
                                        L,
                                        g,
                                        9,
                                        u[17]
                                      )),
                                      M,
                                      E,
                                      x,
                                      14,
                                      u[18]
                                    )),
                                    D,
                                    M,
                                    c,
                                    20,
                                    u[19]
                                  )),
                                  (L = n(
                                    L,
                                    (D = n(
                                      D,
                                      (M = n(M, E, L, D, m, 5, u[20])),
                                      E,
                                      L,
                                      w,
                                      9,
                                      u[21]
                                    )),
                                    M,
                                    E,
                                    T,
                                    14,
                                    u[22]
                                  )),
                                  D,
                                  M,
                                  p,
                                  20,
                                  u[23]
                                )),
                                (L = n(
                                  L,
                                  (D = n(
                                    D,
                                    (M = n(M, E, L, D, b, 5, u[24])),
                                    E,
                                    L,
                                    S,
                                    9,
                                    u[25]
                                  )),
                                  M,
                                  E,
                                  f,
                                  14,
                                  u[26]
                                )),
                                D,
                                M,
                                v,
                                20,
                                u[27]
                              )),
                              (L = n(
                                L,
                                (D = n(
                                  D,
                                  (M = n(M, E, L, D, C, 5, u[28])),
                                  E,
                                  L,
                                  d,
                                  9,
                                  u[29]
                                )),
                                M,
                                E,
                                y,
                                14,
                                u[30]
                              )),
                              D,
                              M,
                              I,
                              20,
                              u[31]
                            )),
                            (L = a(
                              L,
                              (D = a(
                                D,
                                (M = a(M, E, L, D, m, 4, u[32])),
                                E,
                                L,
                                v,
                                11,
                                u[33]
                              )),
                              M,
                              E,
                              x,
                              16,
                              u[34]
                            )),
                            D,
                            M,
                            S,
                            23,
                            u[35]
                          )),
                          (L = a(
                            L,
                            (D = a(
                              D,
                              (M = a(M, E, L, D, _, 4, u[36])),
                              E,
                              L,
                              p,
                              11,
                              u[37]
                            )),
                            M,
                            E,
                            y,
                            16,
                            u[38]
                          )),
                          D,
                          M,
                          w,
                          23,
                          u[39]
                        )),
                        (L = a(
                          L,
                          (D = a(
                            D,
                            (M = a(M, E, L, D, C, 4, u[40])),
                            E,
                            L,
                            c,
                            11,
                            u[41]
                          )),
                          M,
                          E,
                          f,
                          16,
                          u[42]
                        )),
                        D,
                        M,
                        g,
                        23,
                        u[43]
                      )),
                      (L = a(
                        L,
                        (D = a(
                          D,
                          (M = a(M, E, L, D, b, 4, u[44])),
                          E,
                          L,
                          I,
                          11,
                          u[45]
                        )),
                        M,
                        E,
                        T,
                        16,
                        u[46]
                      )),
                      D,
                      M,
                      d,
                      23,
                      u[47]
                    )),
                    (L = r(
                      L,
                      (D = r(
                        D,
                        (M = r(M, E, L, D, c, 6, u[48])),
                        E,
                        L,
                        y,
                        10,
                        u[49]
                      )),
                      M,
                      E,
                      S,
                      15,
                      u[50]
                    )),
                    D,
                    M,
                    m,
                    21,
                    u[51]
                  )),
                  (L = r(
                    L,
                    (D = r(
                      D,
                      (M = r(M, E, L, D, I, 6, u[52])),
                      E,
                      L,
                      f,
                      10,
                      u[53]
                    )),
                    M,
                    E,
                    w,
                    15,
                    u[54]
                  )),
                  D,
                  M,
                  _,
                  21,
                  u[55]
                )),
                (L = r(
                  L,
                  (D = r(
                    D,
                    (M = r(M, E, L, D, v, 6, u[56])),
                    E,
                    L,
                    T,
                    10,
                    u[57]
                  )),
                  M,
                  E,
                  g,
                  15,
                  u[58]
                )),
                D,
                M,
                C,
                21,
                u[59]
              )),
              (L = r(
                L,
                (D = r(
                  D,
                  (M = r(M, E, L, D, p, 6, u[60])),
                  E,
                  L,
                  x,
                  10,
                  u[61]
                )),
                M,
                E,
                d,
                15,
                u[62]
              )),
              D,
              M,
              b,
              21,
              u[63]
            )),
              (h[0] = (h[0] + M) | 0),
              (h[1] = (h[1] + E) | 0),
              (h[2] = (h[2] + L) | 0),
              (h[3] = (h[3] + D) | 0);
          },
          _doFinalize: function() {
            var t = this._data,
              i = t.words,
              n = 8 * this._nDataBytes,
              a = 8 * t.sigBytes;
            i[a >>> 5] |= 128 << (24 - (a % 32));
            var r = e.floor(n / 4294967296),
              s = n;
            (i[15 + (((a + 64) >>> 9) << 4)] =
              (16711935 & ((r << 8) | (r >>> 24))) |
              (4278255360 & ((r << 24) | (r >>> 8)))),
              (i[14 + (((a + 64) >>> 9) << 4)] =
                (16711935 & ((s << 8) | (s >>> 24))) |
                (4278255360 & ((s << 24) | (s >>> 8)))),
              (t.sigBytes = 4 * (i.length + 1)),
              this._process();
            for (var o = this._hash, l = o.words, h = 0; h < 4; h++) {
              var c = l[h];
              l[h] =
                (16711935 & ((c << 8) | (c >>> 24))) |
                (4278255360 & ((c << 24) | (c >>> 8)));
            }
            return o;
          },
          clone: function() {
            var t = h.clone.call(this);
            return (t._hash = this._hash.clone()), t;
          }
        }));
        (s.MD5 = h._createHelper(_)), (s.HmacMD5 = h._createHmacHelper(_));
      })(Math),
      (function() {
        var e = t,
          i = e.lib,
          n = i.WordArray,
          a = i.Hasher,
          r = [],
          s = (e.algo.SHA1 = a.extend({
            _doReset: function() {
              this._hash = new n.init([
                1732584193,
                4023233417,
                2562383102,
                271733878,
                3285377520
              ]);
            },
            _doProcessBlock: function(t, e) {
              for (
                var i = this._hash.words,
                  n = i[0],
                  a = i[1],
                  s = i[2],
                  o = i[3],
                  l = i[4],
                  h = 0;
                h < 80;
                h++
              ) {
                if (h < 16) r[h] = 0 | t[e + h];
                else {
                  var c = r[h - 3] ^ r[h - 8] ^ r[h - 14] ^ r[h - 16];
                  r[h] = (c << 1) | (c >>> 31);
                }
                var u = ((n << 5) | (n >>> 27)) + l + r[h];
                (u +=
                  h < 20
                    ? 1518500249 + ((a & s) | (~a & o))
                    : h < 40
                    ? 1859775393 + (a ^ s ^ o)
                    : h < 60
                    ? ((a & s) | (a & o) | (s & o)) - 1894007588
                    : (a ^ s ^ o) - 899497514),
                  (l = o),
                  (o = s),
                  (s = (a << 30) | (a >>> 2)),
                  (a = n),
                  (n = u);
              }
              (i[0] = (i[0] + n) | 0),
                (i[1] = (i[1] + a) | 0),
                (i[2] = (i[2] + s) | 0),
                (i[3] = (i[3] + o) | 0),
                (i[4] = (i[4] + l) | 0);
            },
            _doFinalize: function() {
              var t = this._data,
                e = t.words,
                i = 8 * this._nDataBytes,
                n = 8 * t.sigBytes;
              return (
                (e[n >>> 5] |= 128 << (24 - (n % 32))),
                (e[14 + (((n + 64) >>> 9) << 4)] = Math.floor(i / 4294967296)),
                (e[15 + (((n + 64) >>> 9) << 4)] = i),
                (t.sigBytes = 4 * e.length),
                this._process(),
                this._hash
              );
            },
            clone: function() {
              var t = a.clone.call(this);
              return (t._hash = this._hash.clone()), t;
            }
          }));
        (e.SHA1 = a._createHelper(s)), (e.HmacSHA1 = a._createHmacHelper(s));
      })(),
      (function(e) {
        var i = t,
          n = i.lib,
          a = n.WordArray,
          r = n.Hasher,
          s = i.algo,
          o = [],
          l = [];
        !(function() {
          function t(t) {
            for (var i = e.sqrt(t), n = 2; n <= i; n++) if (!(t % n)) return !1;
            return !0;
          }
          function i(t) {
            return (4294967296 * (t - (0 | t))) | 0;
          }
          for (var n = 2, a = 0; a < 64; )
            t(n) &&
              (a < 8 && (o[a] = i(e.pow(n, 0.5))),
              (l[a] = i(e.pow(n, 1 / 3))),
              a++),
              n++;
        })();
        var h = [],
          c = (s.SHA256 = r.extend({
            _doReset: function() {
              this._hash = new a.init(o.slice(0));
            },
            _doProcessBlock: function(t, e) {
              for (
                var i = this._hash.words,
                  n = i[0],
                  a = i[1],
                  r = i[2],
                  s = i[3],
                  o = i[4],
                  c = i[5],
                  u = i[6],
                  _ = i[7],
                  d = 0;
                d < 64;
                d++
              ) {
                if (d < 16) h[d] = 0 | t[e + d];
                else {
                  var f = h[d - 15],
                    p =
                      ((f << 25) | (f >>> 7)) ^
                      ((f << 14) | (f >>> 18)) ^
                      (f >>> 3),
                    m = h[d - 2],
                    g =
                      ((m << 15) | (m >>> 17)) ^
                      ((m << 13) | (m >>> 19)) ^
                      (m >>> 10);
                  h[d] = p + h[d - 7] + g + h[d - 16];
                }
                var y = (n & a) ^ (n & r) ^ (a & r),
                  v =
                    ((n << 30) | (n >>> 2)) ^
                    ((n << 19) | (n >>> 13)) ^
                    ((n << 10) | (n >>> 22)),
                  b =
                    _ +
                    (((o << 26) | (o >>> 6)) ^
                      ((o << 21) | (o >>> 11)) ^
                      ((o << 7) | (o >>> 25))) +
                    ((o & c) ^ (~o & u)) +
                    l[d] +
                    h[d];
                (_ = u),
                  (u = c),
                  (c = o),
                  (o = (s + b) | 0),
                  (s = r),
                  (r = a),
                  (a = n),
                  (n = (b + (v + y)) | 0);
              }
              (i[0] = (i[0] + n) | 0),
                (i[1] = (i[1] + a) | 0),
                (i[2] = (i[2] + r) | 0),
                (i[3] = (i[3] + s) | 0),
                (i[4] = (i[4] + o) | 0),
                (i[5] = (i[5] + c) | 0),
                (i[6] = (i[6] + u) | 0),
                (i[7] = (i[7] + _) | 0);
            },
            _doFinalize: function() {
              var t = this._data,
                i = t.words,
                n = 8 * this._nDataBytes,
                a = 8 * t.sigBytes;
              return (
                (i[a >>> 5] |= 128 << (24 - (a % 32))),
                (i[14 + (((a + 64) >>> 9) << 4)] = e.floor(n / 4294967296)),
                (i[15 + (((a + 64) >>> 9) << 4)] = n),
                (t.sigBytes = 4 * i.length),
                this._process(),
                this._hash
              );
            },
            clone: function() {
              var t = r.clone.call(this);
              return (t._hash = this._hash.clone()), t;
            }
          }));
        (i.SHA256 = r._createHelper(c)),
          (i.HmacSHA256 = r._createHmacHelper(c));
      })(Math),
      (function() {
        function e(t) {
          return ((t << 8) & 4278255360) | ((t >>> 8) & 16711935);
        }
        var i = t,
          n = i.lib.WordArray,
          a = i.enc;
        a.Utf16 = a.Utf16BE = {
          stringify: function(t) {
            for (
              var e = t.words, i = t.sigBytes, n = [], a = 0;
              a < i;
              a += 2
            ) {
              var r = (e[a >>> 2] >>> (16 - (a % 4) * 8)) & 65535;
              n.push(String.fromCharCode(r));
            }
            return n.join('');
          },
          parse: function(t) {
            for (var e = t.length, i = [], a = 0; a < e; a++)
              i[a >>> 1] |= t.charCodeAt(a) << (16 - (a % 2) * 16);
            return n.create(i, 2 * e);
          }
        };
        a.Utf16LE = {
          stringify: function(t) {
            for (
              var i = t.words, n = t.sigBytes, a = [], r = 0;
              r < n;
              r += 2
            ) {
              var s = e((i[r >>> 2] >>> (16 - (r % 4) * 8)) & 65535);
              a.push(String.fromCharCode(s));
            }
            return a.join('');
          },
          parse: function(t) {
            for (var i = t.length, a = [], r = 0; r < i; r++)
              a[r >>> 1] |= e(t.charCodeAt(r) << (16 - (r % 2) * 16));
            return n.create(a, 2 * i);
          }
        };
      })(),
      (function() {
        if ('function' == typeof ArrayBuffer) {
          var e = t.lib.WordArray,
            i = e.init;
          (e.init = function(t) {
            if (
              (t instanceof ArrayBuffer && (t = new Uint8Array(t)),
              (t instanceof Int8Array ||
                ('undefined' != typeof Uint8ClampedArray &&
                  t instanceof Uint8ClampedArray) ||
                t instanceof Int16Array ||
                t instanceof Uint16Array ||
                t instanceof Int32Array ||
                t instanceof Uint32Array ||
                t instanceof Float32Array ||
                t instanceof Float64Array) &&
                (t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength)),
              t instanceof Uint8Array)
            ) {
              for (var e = t.byteLength, n = [], a = 0; a < e; a++)
                n[a >>> 2] |= t[a] << (24 - (a % 4) * 8);
              i.call(this, n, e);
            } else i.apply(this, arguments);
          }).prototype = e;
        }
      })(),
      (function(e) {
        function i(t, e, i) {
          return t ^ e ^ i;
        }
        function n(t, e, i) {
          return (t & e) | (~t & i);
        }
        function a(t, e, i) {
          return (t | ~e) ^ i;
        }
        function r(t, e, i) {
          return (t & i) | (e & ~i);
        }
        function s(t, e, i) {
          return t ^ (e | ~i);
        }
        function o(t, e) {
          return (t << e) | (t >>> (32 - e));
        }
        var l = t,
          h = l.lib,
          c = h.WordArray,
          u = h.Hasher,
          _ = l.algo,
          d = c.create([
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            7,
            4,
            13,
            1,
            10,
            6,
            15,
            3,
            12,
            0,
            9,
            5,
            2,
            14,
            11,
            8,
            3,
            10,
            14,
            4,
            9,
            15,
            8,
            1,
            2,
            7,
            0,
            6,
            13,
            11,
            5,
            12,
            1,
            9,
            11,
            10,
            0,
            8,
            12,
            4,
            13,
            3,
            7,
            15,
            14,
            5,
            6,
            2,
            4,
            0,
            5,
            9,
            7,
            12,
            2,
            10,
            14,
            1,
            3,
            8,
            11,
            6,
            15,
            13
          ]),
          f = c.create([
            5,
            14,
            7,
            0,
            9,
            2,
            11,
            4,
            13,
            6,
            15,
            8,
            1,
            10,
            3,
            12,
            6,
            11,
            3,
            7,
            0,
            13,
            5,
            10,
            14,
            15,
            8,
            12,
            4,
            9,
            1,
            2,
            15,
            5,
            1,
            3,
            7,
            14,
            6,
            9,
            11,
            8,
            12,
            2,
            10,
            0,
            4,
            13,
            8,
            6,
            4,
            1,
            3,
            11,
            15,
            0,
            5,
            12,
            2,
            13,
            9,
            7,
            10,
            14,
            12,
            15,
            10,
            4,
            1,
            5,
            8,
            7,
            6,
            2,
            13,
            14,
            0,
            3,
            9,
            11
          ]),
          p = c.create([
            11,
            14,
            15,
            12,
            5,
            8,
            7,
            9,
            11,
            13,
            14,
            15,
            6,
            7,
            9,
            8,
            7,
            6,
            8,
            13,
            11,
            9,
            7,
            15,
            7,
            12,
            15,
            9,
            11,
            7,
            13,
            12,
            11,
            13,
            6,
            7,
            14,
            9,
            13,
            15,
            14,
            8,
            13,
            6,
            5,
            12,
            7,
            5,
            11,
            12,
            14,
            15,
            14,
            15,
            9,
            8,
            9,
            14,
            5,
            6,
            8,
            6,
            5,
            12,
            9,
            15,
            5,
            11,
            6,
            8,
            13,
            12,
            5,
            12,
            13,
            14,
            11,
            8,
            5,
            6
          ]),
          m = c.create([
            8,
            9,
            9,
            11,
            13,
            15,
            15,
            5,
            7,
            7,
            8,
            11,
            14,
            14,
            12,
            6,
            9,
            13,
            15,
            7,
            12,
            8,
            9,
            11,
            7,
            7,
            12,
            7,
            6,
            15,
            13,
            11,
            9,
            7,
            15,
            11,
            8,
            6,
            6,
            14,
            12,
            13,
            5,
            14,
            13,
            13,
            7,
            5,
            15,
            5,
            8,
            11,
            14,
            14,
            6,
            14,
            6,
            9,
            12,
            9,
            12,
            5,
            15,
            8,
            8,
            5,
            12,
            9,
            12,
            5,
            14,
            6,
            8,
            13,
            6,
            5,
            15,
            13,
            11,
            11
          ]),
          g = c.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
          y = c.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
          v = (_.RIPEMD160 = u.extend({
            _doReset: function() {
              this._hash = c.create([
                1732584193,
                4023233417,
                2562383102,
                271733878,
                3285377520
              ]);
            },
            _doProcessBlock: function(t, e) {
              for (B = 0; B < 16; B++) {
                var l = e + B,
                  h = t[l];
                t[l] =
                  (16711935 & ((h << 8) | (h >>> 24))) |
                  (4278255360 & ((h << 24) | (h >>> 8)));
              }
              var c,
                u,
                _,
                v,
                b,
                w,
                x,
                I,
                C,
                S,
                T = this._hash.words,
                M = g.words,
                E = y.words,
                L = d.words,
                D = f.words,
                A = p.words,
                N = m.words;
              (w = c = T[0]),
                (x = u = T[1]),
                (I = _ = T[2]),
                (C = v = T[3]),
                (S = b = T[4]);
              for (var R, B = 0; B < 80; B += 1)
                (R = (c + t[e + L[B]]) | 0),
                  (R +=
                    B < 16
                      ? i(u, _, v) + M[0]
                      : B < 32
                      ? n(u, _, v) + M[1]
                      : B < 48
                      ? a(u, _, v) + M[2]
                      : B < 64
                      ? r(u, _, v) + M[3]
                      : s(u, _, v) + M[4]),
                  (R = ((R = o((R |= 0), A[B])) + b) | 0),
                  (c = b),
                  (b = v),
                  (v = o(_, 10)),
                  (_ = u),
                  (u = R),
                  (R = (w + t[e + D[B]]) | 0),
                  (R +=
                    B < 16
                      ? s(x, I, C) + E[0]
                      : B < 32
                      ? r(x, I, C) + E[1]
                      : B < 48
                      ? a(x, I, C) + E[2]
                      : B < 64
                      ? n(x, I, C) + E[3]
                      : i(x, I, C) + E[4]),
                  (R = ((R = o((R |= 0), N[B])) + S) | 0),
                  (w = S),
                  (S = C),
                  (C = o(I, 10)),
                  (I = x),
                  (x = R);
              (R = (T[1] + _ + C) | 0),
                (T[1] = (T[2] + v + S) | 0),
                (T[2] = (T[3] + b + w) | 0),
                (T[3] = (T[4] + c + x) | 0),
                (T[4] = (T[0] + u + I) | 0),
                (T[0] = R);
            },
            _doFinalize: function() {
              var t = this._data,
                e = t.words,
                i = 8 * this._nDataBytes,
                n = 8 * t.sigBytes;
              (e[n >>> 5] |= 128 << (24 - (n % 32))),
                (e[14 + (((n + 64) >>> 9) << 4)] =
                  (16711935 & ((i << 8) | (i >>> 24))) |
                  (4278255360 & ((i << 24) | (i >>> 8)))),
                (t.sigBytes = 4 * (e.length + 1)),
                this._process();
              for (var a = this._hash, r = a.words, s = 0; s < 5; s++) {
                var o = r[s];
                r[s] =
                  (16711935 & ((o << 8) | (o >>> 24))) |
                  (4278255360 & ((o << 24) | (o >>> 8)));
              }
              return a;
            },
            clone: function() {
              var t = u.clone.call(this);
              return (t._hash = this._hash.clone()), t;
            }
          }));
        (l.RIPEMD160 = u._createHelper(v)),
          (l.HmacRIPEMD160 = u._createHmacHelper(v));
      })(Math),
      (function() {
        var e = t,
          i = e.lib.Base,
          n = e.enc.Utf8;
        e.algo.HMAC = i.extend({
          init: function(t, e) {
            (t = this._hasher = new t.init()),
              'string' == typeof e && (e = n.parse(e));
            var i = t.blockSize,
              a = 4 * i;
            e.sigBytes > a && (e = t.finalize(e)), e.clamp();
            for (
              var r = (this._oKey = e.clone()),
                s = (this._iKey = e.clone()),
                o = r.words,
                l = s.words,
                h = 0;
              h < i;
              h++
            )
              (o[h] ^= 1549556828), (l[h] ^= 909522486);
            (r.sigBytes = s.sigBytes = a), this.reset();
          },
          reset: function() {
            var t = this._hasher;
            t.reset(), t.update(this._iKey);
          },
          update: function(t) {
            return this._hasher.update(t), this;
          },
          finalize: function(t) {
            var e = this._hasher,
              i = e.finalize(t);
            e.reset();
            return e.finalize(this._oKey.clone().concat(i));
          }
        });
      })(),
      (function() {
        var e = t,
          i = e.lib,
          n = i.Base,
          a = i.WordArray,
          r = e.algo,
          s = r.SHA1,
          o = r.HMAC,
          l = (r.PBKDF2 = n.extend({
            cfg: n.extend({ keySize: 4, hasher: s, iterations: 1 }),
            init: function(t) {
              this.cfg = this.cfg.extend(t);
            },
            compute: function(t, e) {
              for (
                var i = this.cfg,
                  n = o.create(i.hasher, t),
                  r = a.create(),
                  s = a.create([1]),
                  l = r.words,
                  h = s.words,
                  c = i.keySize,
                  u = i.iterations;
                l.length < c;

              ) {
                var _ = n.update(e).finalize(s);
                n.reset();
                for (var d = _.words, f = d.length, p = _, m = 1; m < u; m++) {
                  (p = n.finalize(p)), n.reset();
                  for (var g = p.words, y = 0; y < f; y++) d[y] ^= g[y];
                }
                r.concat(_), h[0]++;
              }
              return (r.sigBytes = 4 * c), r;
            }
          }));
        e.PBKDF2 = function(t, e, i) {
          return l.create(i).compute(t, e);
        };
      })(),
      (function() {
        var e = t,
          i = e.lib,
          n = i.Base,
          a = i.WordArray,
          r = e.algo,
          s = r.MD5,
          o = (r.EvpKDF = n.extend({
            cfg: n.extend({ keySize: 4, hasher: s, iterations: 1 }),
            init: function(t) {
              this.cfg = this.cfg.extend(t);
            },
            compute: function(t, e) {
              for (
                var i = this.cfg,
                  n = i.hasher.create(),
                  r = a.create(),
                  s = r.words,
                  o = i.keySize,
                  l = i.iterations;
                s.length < o;

              ) {
                h && n.update(h);
                var h = n.update(t).finalize(e);
                n.reset();
                for (var c = 1; c < l; c++) (h = n.finalize(h)), n.reset();
                r.concat(h);
              }
              return (r.sigBytes = 4 * o), r;
            }
          }));
        e.EvpKDF = function(t, e, i) {
          return o.create(i).compute(t, e);
        };
      })(),
      (function() {
        var e = t,
          i = e.lib.WordArray,
          n = e.algo,
          a = n.SHA256,
          r = (n.SHA224 = a.extend({
            _doReset: function() {
              this._hash = new i.init([
                3238371032,
                914150663,
                812702999,
                4144912697,
                4290775857,
                1750603025,
                1694076839,
                3204075428
              ]);
            },
            _doFinalize: function() {
              var t = a._doFinalize.call(this);
              return (t.sigBytes -= 4), t;
            }
          }));
        (e.SHA224 = a._createHelper(r)),
          (e.HmacSHA224 = a._createHmacHelper(r));
      })(),
      (function(e) {
        var i = t,
          n = i.lib,
          a = n.Base,
          r = n.WordArray,
          s = (i.x64 = {});
        (s.Word = a.extend({
          init: function(t, e) {
            (this.high = t), (this.low = e);
          }
        })),
          (s.WordArray = a.extend({
            init: function(t, e) {
              (t = this.words = t || []),
                (this.sigBytes = void 0 != e ? e : 8 * t.length);
            },
            toX32: function() {
              for (
                var t = this.words, e = t.length, i = [], n = 0;
                n < e;
                n++
              ) {
                var a = t[n];
                i.push(a.high), i.push(a.low);
              }
              return r.create(i, this.sigBytes);
            },
            clone: function() {
              for (
                var t = a.clone.call(this),
                  e = (t.words = this.words.slice(0)),
                  i = e.length,
                  n = 0;
                n < i;
                n++
              )
                e[n] = e[n].clone();
              return t;
            }
          }));
      })(),
      (function(e) {
        var i = t,
          n = i.lib,
          a = n.WordArray,
          r = n.Hasher,
          s = i.x64.Word,
          o = i.algo,
          l = [],
          h = [],
          c = [];
        !(function() {
          for (var t = 1, e = 0, i = 0; i < 24; i++) {
            l[t + 5 * e] = (((i + 1) * (i + 2)) / 2) % 64;
            var n = (2 * t + 3 * e) % 5;
            (t = e % 5), (e = n);
          }
          for (t = 0; t < 5; t++)
            for (e = 0; e < 5; e++)
              h[t + 5 * e] = e + ((2 * t + 3 * e) % 5) * 5;
          for (var a = 1, r = 0; r < 24; r++) {
            for (var o = 0, u = 0, _ = 0; _ < 7; _++) {
              if (1 & a) {
                var d = (1 << _) - 1;
                d < 32 ? (u ^= 1 << d) : (o ^= 1 << (d - 32));
              }
              128 & a ? (a = (a << 1) ^ 113) : (a <<= 1);
            }
            c[r] = s.create(o, u);
          }
        })();
        var u = [];
        !(function() {
          for (var t = 0; t < 25; t++) u[t] = s.create();
        })();
        var _ = (o.SHA3 = r.extend({
          cfg: r.cfg.extend({ outputLength: 512 }),
          _doReset: function() {
            for (var t = (this._state = []), e = 0; e < 25; e++)
              t[e] = new s.init();
            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          },
          _doProcessBlock: function(t, e) {
            for (
              var i = this._state, n = this.blockSize / 2, a = 0;
              a < n;
              a++
            ) {
              var r = t[e + 2 * a],
                s = t[e + 2 * a + 1];
              (r =
                (16711935 & ((r << 8) | (r >>> 24))) |
                (4278255360 & ((r << 24) | (r >>> 8)))),
                (s =
                  (16711935 & ((s << 8) | (s >>> 24))) |
                  (4278255360 & ((s << 24) | (s >>> 8))));
              ((E = i[a]).high ^= s), (E.low ^= r);
            }
            for (var o = 0; o < 24; o++) {
              for (T = 0; T < 5; T++) {
                for (var _ = 0, d = 0, f = 0; f < 5; f++) {
                  (_ ^= (E = i[T + 5 * f]).high), (d ^= E.low);
                }
                var p = u[T];
                (p.high = _), (p.low = d);
              }
              for (T = 0; T < 5; T++)
                for (
                  var m = u[(T + 4) % 5],
                    g = u[(T + 1) % 5],
                    y = g.high,
                    v = g.low,
                    _ = m.high ^ ((y << 1) | (v >>> 31)),
                    d = m.low ^ ((v << 1) | (y >>> 31)),
                    f = 0;
                  f < 5;
                  f++
                ) {
                  ((E = i[T + 5 * f]).high ^= _), (E.low ^= d);
                }
              for (M = 1; M < 25; M++) {
                var b = (E = i[M]).high,
                  w = E.low,
                  x = l[M];
                if (x < 32)
                  var _ = (b << x) | (w >>> (32 - x)),
                    d = (w << x) | (b >>> (32 - x));
                else
                  var _ = (w << (x - 32)) | (b >>> (64 - x)),
                    d = (b << (x - 32)) | (w >>> (64 - x));
                var I = u[h[M]];
                (I.high = _), (I.low = d);
              }
              var C = u[0],
                S = i[0];
              (C.high = S.high), (C.low = S.low);
              for (var T = 0; T < 5; T++)
                for (f = 0; f < 5; f++) {
                  var M,
                    E = i[(M = T + 5 * f)],
                    L = u[M],
                    D = u[((T + 1) % 5) + 5 * f],
                    A = u[((T + 2) % 5) + 5 * f];
                  (E.high = L.high ^ (~D.high & A.high)),
                    (E.low = L.low ^ (~D.low & A.low));
                }
              var E = i[0],
                N = c[o];
              (E.high ^= N.high), (E.low ^= N.low);
            }
          },
          _doFinalize: function() {
            var t = this._data,
              i = t.words,
              n = (this._nDataBytes, 8 * t.sigBytes),
              r = 32 * this.blockSize;
            (i[n >>> 5] |= 1 << (24 - (n % 32))),
              (i[((e.ceil((n + 1) / r) * r) >>> 5) - 1] |= 128),
              (t.sigBytes = 4 * i.length),
              this._process();
            for (
              var s = this._state,
                o = this.cfg.outputLength / 8,
                l = o / 8,
                h = [],
                c = 0;
              c < l;
              c++
            ) {
              var u = s[c],
                _ = u.high,
                d = u.low;
              (_ =
                (16711935 & ((_ << 8) | (_ >>> 24))) |
                (4278255360 & ((_ << 24) | (_ >>> 8)))),
                (d =
                  (16711935 & ((d << 8) | (d >>> 24))) |
                  (4278255360 & ((d << 24) | (d >>> 8)))),
                h.push(d),
                h.push(_);
            }
            return new a.init(h, o);
          },
          clone: function() {
            for (
              var t = r.clone.call(this),
                e = (t._state = this._state.slice(0)),
                i = 0;
              i < 25;
              i++
            )
              e[i] = e[i].clone();
            return t;
          }
        }));
        (i.SHA3 = r._createHelper(_)), (i.HmacSHA3 = r._createHmacHelper(_));
      })(Math),
      (function() {
        function e() {
          return r.create.apply(r, arguments);
        }
        var i = t,
          n = i.lib.Hasher,
          a = i.x64,
          r = a.Word,
          s = a.WordArray,
          o = i.algo,
          l = [
            e(1116352408, 3609767458),
            e(1899447441, 602891725),
            e(3049323471, 3964484399),
            e(3921009573, 2173295548),
            e(961987163, 4081628472),
            e(1508970993, 3053834265),
            e(2453635748, 2937671579),
            e(2870763221, 3664609560),
            e(3624381080, 2734883394),
            e(310598401, 1164996542),
            e(607225278, 1323610764),
            e(1426881987, 3590304994),
            e(1925078388, 4068182383),
            e(2162078206, 991336113),
            e(2614888103, 633803317),
            e(3248222580, 3479774868),
            e(3835390401, 2666613458),
            e(4022224774, 944711139),
            e(264347078, 2341262773),
            e(604807628, 2007800933),
            e(770255983, 1495990901),
            e(1249150122, 1856431235),
            e(1555081692, 3175218132),
            e(1996064986, 2198950837),
            e(2554220882, 3999719339),
            e(2821834349, 766784016),
            e(2952996808, 2566594879),
            e(3210313671, 3203337956),
            e(3336571891, 1034457026),
            e(3584528711, 2466948901),
            e(113926993, 3758326383),
            e(338241895, 168717936),
            e(666307205, 1188179964),
            e(773529912, 1546045734),
            e(1294757372, 1522805485),
            e(1396182291, 2643833823),
            e(1695183700, 2343527390),
            e(1986661051, 1014477480),
            e(2177026350, 1206759142),
            e(2456956037, 344077627),
            e(2730485921, 1290863460),
            e(2820302411, 3158454273),
            e(3259730800, 3505952657),
            e(3345764771, 106217008),
            e(3516065817, 3606008344),
            e(3600352804, 1432725776),
            e(4094571909, 1467031594),
            e(275423344, 851169720),
            e(430227734, 3100823752),
            e(506948616, 1363258195),
            e(659060556, 3750685593),
            e(883997877, 3785050280),
            e(958139571, 3318307427),
            e(1322822218, 3812723403),
            e(1537002063, 2003034995),
            e(1747873779, 3602036899),
            e(1955562222, 1575990012),
            e(2024104815, 1125592928),
            e(2227730452, 2716904306),
            e(2361852424, 442776044),
            e(2428436474, 593698344),
            e(2756734187, 3733110249),
            e(3204031479, 2999351573),
            e(3329325298, 3815920427),
            e(3391569614, 3928383900),
            e(3515267271, 566280711),
            e(3940187606, 3454069534),
            e(4118630271, 4000239992),
            e(116418474, 1914138554),
            e(174292421, 2731055270),
            e(289380356, 3203993006),
            e(460393269, 320620315),
            e(685471733, 587496836),
            e(852142971, 1086792851),
            e(1017036298, 365543100),
            e(1126000580, 2618297676),
            e(1288033470, 3409855158),
            e(1501505948, 4234509866),
            e(1607167915, 987167468),
            e(1816402316, 1246189591)
          ],
          h = [];
        !(function() {
          for (var t = 0; t < 80; t++) h[t] = e();
        })();
        var c = (o.SHA512 = n.extend({
          _doReset: function() {
            this._hash = new s.init([
              new r.init(1779033703, 4089235720),
              new r.init(3144134277, 2227873595),
              new r.init(1013904242, 4271175723),
              new r.init(2773480762, 1595750129),
              new r.init(1359893119, 2917565137),
              new r.init(2600822924, 725511199),
              new r.init(528734635, 4215389547),
              new r.init(1541459225, 327033209)
            ]);
          },
          _doProcessBlock: function(t, e) {
            for (
              var i = this._hash.words,
                n = i[0],
                a = i[1],
                r = i[2],
                s = i[3],
                o = i[4],
                c = i[5],
                u = i[6],
                _ = i[7],
                d = n.high,
                f = n.low,
                p = a.high,
                m = a.low,
                g = r.high,
                y = r.low,
                v = s.high,
                b = s.low,
                w = o.high,
                x = o.low,
                I = c.high,
                C = c.low,
                S = u.high,
                T = u.low,
                M = _.high,
                E = _.low,
                L = d,
                D = f,
                A = p,
                N = m,
                R = g,
                B = y,
                k = v,
                P = b,
                O = w,
                U = x,
                V = I,
                F = C,
                H = S,
                G = T,
                z = M,
                j = E,
                W = 0;
              W < 80;
              W++
            ) {
              var X = h[W];
              if (W < 16)
                var q = (X.high = 0 | t[e + 2 * W]),
                  Y = (X.low = 0 | t[e + 2 * W + 1]);
              else {
                var J = h[W - 15],
                  K = J.high,
                  Z = J.low,
                  Q =
                    ((K >>> 1) | (Z << 31)) ^
                    ((K >>> 8) | (Z << 24)) ^
                    (K >>> 7),
                  $ =
                    ((Z >>> 1) | (K << 31)) ^
                    ((Z >>> 8) | (K << 24)) ^
                    ((Z >>> 7) | (K << 25)),
                  tt = h[W - 2],
                  et = tt.high,
                  it = tt.low,
                  nt =
                    ((et >>> 19) | (it << 13)) ^
                    ((et << 3) | (it >>> 29)) ^
                    (et >>> 6),
                  at =
                    ((it >>> 19) | (et << 13)) ^
                    ((it << 3) | (et >>> 29)) ^
                    ((it >>> 6) | (et << 26)),
                  rt = h[W - 7],
                  st = rt.high,
                  ot = rt.low,
                  lt = h[W - 16],
                  ht = lt.high,
                  ct = lt.low,
                  q =
                    (q =
                      (q = Q + st + ((Y = $ + ot) >>> 0 < $ >>> 0 ? 1 : 0)) +
                      nt +
                      ((Y = Y + at) >>> 0 < at >>> 0 ? 1 : 0)) +
                    ht +
                    ((Y = Y + ct) >>> 0 < ct >>> 0 ? 1 : 0);
                (X.high = q), (X.low = Y);
              }
              var ut = (O & V) ^ (~O & H),
                _t = (U & F) ^ (~U & G),
                dt = (L & A) ^ (L & R) ^ (A & R),
                ft = (D & N) ^ (D & B) ^ (N & B),
                pt =
                  ((L >>> 28) | (D << 4)) ^
                  ((L << 30) | (D >>> 2)) ^
                  ((L << 25) | (D >>> 7)),
                mt =
                  ((D >>> 28) | (L << 4)) ^
                  ((D << 30) | (L >>> 2)) ^
                  ((D << 25) | (L >>> 7)),
                gt =
                  ((O >>> 14) | (U << 18)) ^
                  ((O >>> 18) | (U << 14)) ^
                  ((O << 23) | (U >>> 9)),
                yt =
                  ((U >>> 14) | (O << 18)) ^
                  ((U >>> 18) | (O << 14)) ^
                  ((U << 23) | (O >>> 9)),
                vt = l[W],
                bt = vt.high,
                wt = vt.low,
                xt = j + yt,
                It = z + gt + (xt >>> 0 < j >>> 0 ? 1 : 0),
                Ct = mt + ft;
              (z = H),
                (j = G),
                (H = V),
                (G = F),
                (V = O),
                (F = U),
                (O =
                  (k +
                    (It =
                      (It =
                        (It =
                          It + ut + ((xt = xt + _t) >>> 0 < _t >>> 0 ? 1 : 0)) +
                        bt +
                        ((xt = xt + wt) >>> 0 < wt >>> 0 ? 1 : 0)) +
                      q +
                      ((xt = xt + Y) >>> 0 < Y >>> 0 ? 1 : 0)) +
                    ((U = (P + xt) | 0) >>> 0 < P >>> 0 ? 1 : 0)) |
                  0),
                (k = R),
                (P = B),
                (R = A),
                (B = N),
                (A = L),
                (N = D),
                (L =
                  (It +
                    (pt + dt + (Ct >>> 0 < mt >>> 0 ? 1 : 0)) +
                    ((D = (xt + Ct) | 0) >>> 0 < xt >>> 0 ? 1 : 0)) |
                  0);
            }
            (f = n.low = f + D),
              (n.high = d + L + (f >>> 0 < D >>> 0 ? 1 : 0)),
              (m = a.low = m + N),
              (a.high = p + A + (m >>> 0 < N >>> 0 ? 1 : 0)),
              (y = r.low = y + B),
              (r.high = g + R + (y >>> 0 < B >>> 0 ? 1 : 0)),
              (b = s.low = b + P),
              (s.high = v + k + (b >>> 0 < P >>> 0 ? 1 : 0)),
              (x = o.low = x + U),
              (o.high = w + O + (x >>> 0 < U >>> 0 ? 1 : 0)),
              (C = c.low = C + F),
              (c.high = I + V + (C >>> 0 < F >>> 0 ? 1 : 0)),
              (T = u.low = T + G),
              (u.high = S + H + (T >>> 0 < G >>> 0 ? 1 : 0)),
              (E = _.low = E + j),
              (_.high = M + z + (E >>> 0 < j >>> 0 ? 1 : 0));
          },
          _doFinalize: function() {
            var t = this._data,
              e = t.words,
              i = 8 * this._nDataBytes,
              n = 8 * t.sigBytes;
            (e[n >>> 5] |= 128 << (24 - (n % 32))),
              (e[30 + (((n + 128) >>> 10) << 5)] = Math.floor(i / 4294967296)),
              (e[31 + (((n + 128) >>> 10) << 5)] = i),
              (t.sigBytes = 4 * e.length),
              this._process();
            return this._hash.toX32();
          },
          clone: function() {
            var t = n.clone.call(this);
            return (t._hash = this._hash.clone()), t;
          },
          blockSize: 32
        }));
        (i.SHA512 = n._createHelper(c)),
          (i.HmacSHA512 = n._createHmacHelper(c));
      })(),
      (function() {
        var e = t,
          i = e.x64,
          n = i.Word,
          a = i.WordArray,
          r = e.algo,
          s = r.SHA512,
          o = (r.SHA384 = s.extend({
            _doReset: function() {
              this._hash = new a.init([
                new n.init(3418070365, 3238371032),
                new n.init(1654270250, 914150663),
                new n.init(2438529370, 812702999),
                new n.init(355462360, 4144912697),
                new n.init(1731405415, 4290775857),
                new n.init(2394180231, 1750603025),
                new n.init(3675008525, 1694076839),
                new n.init(1203062813, 3204075428)
              ]);
            },
            _doFinalize: function() {
              var t = s._doFinalize.call(this);
              return (t.sigBytes -= 16), t;
            }
          }));
        (e.SHA384 = s._createHelper(o)),
          (e.HmacSHA384 = s._createHmacHelper(o));
      })(),
      t.lib.Cipher ||
        (function(e) {
          var i = t,
            n = i.lib,
            a = n.Base,
            r = n.WordArray,
            s = n.BufferedBlockAlgorithm,
            o = i.enc,
            l = (o.Utf8, o.Base64),
            h = i.algo.EvpKDF,
            c = (n.Cipher = s.extend({
              cfg: a.extend(),
              createEncryptor: function(t, e) {
                return this.create(this._ENC_XFORM_MODE, t, e);
              },
              createDecryptor: function(t, e) {
                return this.create(this._DEC_XFORM_MODE, t, e);
              },
              init: function(t, e, i) {
                (this.cfg = this.cfg.extend(i)),
                  (this._xformMode = t),
                  (this._key = e),
                  this.reset();
              },
              reset: function() {
                s.reset.call(this), this._doReset();
              },
              process: function(t) {
                return this._append(t), this._process();
              },
              finalize: function(t) {
                t && this._append(t);
                return this._doFinalize();
              },
              keySize: 4,
              ivSize: 4,
              _ENC_XFORM_MODE: 1,
              _DEC_XFORM_MODE: 2,
              _createHelper: (function() {
                function t(t) {
                  return 'string' == typeof t ? v : g;
                }
                return function(e) {
                  return {
                    encrypt: function(i, n, a) {
                      return t(n).encrypt(e, i, n, a);
                    },
                    decrypt: function(i, n, a) {
                      return t(n).decrypt(e, i, n, a);
                    }
                  };
                };
              })()
            })),
            u =
              ((n.StreamCipher = c.extend({
                _doFinalize: function() {
                  return this._process(!0);
                },
                blockSize: 1
              })),
              (i.mode = {})),
            _ = (n.BlockCipherMode = a.extend({
              createEncryptor: function(t, e) {
                return this.Encryptor.create(t, e);
              },
              createDecryptor: function(t, e) {
                return this.Decryptor.create(t, e);
              },
              init: function(t, e) {
                (this._cipher = t), (this._iv = e);
              }
            })),
            d = (u.CBC = (function() {
              function t(t, i, n) {
                var a = this._iv;
                if (a) {
                  r = a;
                  this._iv = e;
                } else var r = this._prevBlock;
                for (var s = 0; s < n; s++) t[i + s] ^= r[s];
              }
              var i = _.extend();
              return (
                (i.Encryptor = i.extend({
                  processBlock: function(e, i) {
                    var n = this._cipher,
                      a = n.blockSize;
                    t.call(this, e, i, a),
                      n.encryptBlock(e, i),
                      (this._prevBlock = e.slice(i, i + a));
                  }
                })),
                (i.Decryptor = i.extend({
                  processBlock: function(e, i) {
                    var n = this._cipher,
                      a = n.blockSize,
                      r = e.slice(i, i + a);
                    n.decryptBlock(e, i),
                      t.call(this, e, i, a),
                      (this._prevBlock = r);
                  }
                })),
                i
              );
            })()),
            f = ((i.pad = {}).Pkcs7 = {
              pad: function(t, e) {
                for (
                  var i = 4 * e,
                    n = i - (t.sigBytes % i),
                    a = (n << 24) | (n << 16) | (n << 8) | n,
                    s = [],
                    o = 0;
                  o < n;
                  o += 4
                )
                  s.push(a);
                var l = r.create(s, n);
                t.concat(l);
              },
              unpad: function(t) {
                var e = 255 & t.words[(t.sigBytes - 1) >>> 2];
                t.sigBytes -= e;
              }
            }),
            p =
              ((n.BlockCipher = c.extend({
                cfg: c.cfg.extend({ mode: d, padding: f }),
                reset: function() {
                  c.reset.call(this);
                  var t = this.cfg,
                    e = t.iv,
                    i = t.mode;
                  if (this._xformMode == this._ENC_XFORM_MODE)
                    n = i.createEncryptor;
                  else {
                    var n = i.createDecryptor;
                    this._minBufferSize = 1;
                  }
                  this._mode && this._mode.__creator == n
                    ? this._mode.init(this, e && e.words)
                    : ((this._mode = n.call(i, this, e && e.words)),
                      (this._mode.__creator = n));
                },
                _doProcessBlock: function(t, e) {
                  this._mode.processBlock(t, e);
                },
                _doFinalize: function() {
                  var t = this.cfg.padding;
                  if (this._xformMode == this._ENC_XFORM_MODE) {
                    t.pad(this._data, this.blockSize);
                    e = this._process(!0);
                  } else {
                    var e = this._process(!0);
                    t.unpad(e);
                  }
                  return e;
                },
                blockSize: 4
              })),
              (n.CipherParams = a.extend({
                init: function(t) {
                  this.mixIn(t);
                },
                toString: function(t) {
                  return (t || this.formatter).stringify(this);
                }
              }))),
            m = ((i.format = {}).OpenSSL = {
              stringify: function(t) {
                var e = t.ciphertext,
                  i = t.salt;
                if (i)
                  n = r
                    .create([1398893684, 1701076831])
                    .concat(i)
                    .concat(e);
                else var n = e;
                return n.toString(l);
              },
              parse: function(t) {
                var e = l.parse(t),
                  i = e.words;
                if (1398893684 == i[0] && 1701076831 == i[1]) {
                  var n = r.create(i.slice(2, 4));
                  i.splice(0, 4), (e.sigBytes -= 16);
                }
                return p.create({ ciphertext: e, salt: n });
              }
            }),
            g = (n.SerializableCipher = a.extend({
              cfg: a.extend({ format: m }),
              encrypt: function(t, e, i, n) {
                n = this.cfg.extend(n);
                var a = t.createEncryptor(i, n),
                  r = a.finalize(e),
                  s = a.cfg;
                return p.create({
                  ciphertext: r,
                  key: i,
                  iv: s.iv,
                  algorithm: t,
                  mode: s.mode,
                  padding: s.padding,
                  blockSize: t.blockSize,
                  formatter: n.format
                });
              },
              decrypt: function(t, e, i, n) {
                (n = this.cfg.extend(n)), (e = this._parse(e, n.format));
                return t.createDecryptor(i, n).finalize(e.ciphertext);
              },
              _parse: function(t, e) {
                return 'string' == typeof t ? e.parse(t, this) : t;
              }
            })),
            y = ((i.kdf = {}).OpenSSL = {
              execute: function(t, e, i, n) {
                n || (n = r.random(8));
                var a = h.create({ keySize: e + i }).compute(t, n),
                  s = r.create(a.words.slice(e), 4 * i);
                return (
                  (a.sigBytes = 4 * e), p.create({ key: a, iv: s, salt: n })
                );
              }
            }),
            v = (n.PasswordBasedCipher = g.extend({
              cfg: g.cfg.extend({ kdf: y }),
              encrypt: function(t, e, i, n) {
                var a = (n = this.cfg.extend(n)).kdf.execute(
                  i,
                  t.keySize,
                  t.ivSize
                );
                n.iv = a.iv;
                var r = g.encrypt.call(this, t, e, a.key, n);
                return r.mixIn(a), r;
              },
              decrypt: function(t, e, i, n) {
                (n = this.cfg.extend(n)), (e = this._parse(e, n.format));
                var a = n.kdf.execute(i, t.keySize, t.ivSize, e.salt);
                n.iv = a.iv;
                return g.decrypt.call(this, t, e, a.key, n);
              }
            }));
        })(),
      (t.mode.CFB = (function() {
        function e(t, e, i, n) {
          var a = this._iv;
          if (a) {
            r = a.slice(0);
            this._iv = void 0;
          } else var r = this._prevBlock;
          n.encryptBlock(r, 0);
          for (var s = 0; s < i; s++) t[e + s] ^= r[s];
        }
        var i = t.lib.BlockCipherMode.extend();
        return (
          (i.Encryptor = i.extend({
            processBlock: function(t, i) {
              var n = this._cipher,
                a = n.blockSize;
              e.call(this, t, i, a, n), (this._prevBlock = t.slice(i, i + a));
            }
          })),
          (i.Decryptor = i.extend({
            processBlock: function(t, i) {
              var n = this._cipher,
                a = n.blockSize,
                r = t.slice(i, i + a);
              e.call(this, t, i, a, n), (this._prevBlock = r);
            }
          })),
          i
        );
      })()),
      (t.mode.ECB = (function() {
        var e = t.lib.BlockCipherMode.extend();
        return (
          (e.Encryptor = e.extend({
            processBlock: function(t, e) {
              this._cipher.encryptBlock(t, e);
            }
          })),
          (e.Decryptor = e.extend({
            processBlock: function(t, e) {
              this._cipher.decryptBlock(t, e);
            }
          })),
          e
        );
      })()),
      (t.pad.AnsiX923 = {
        pad: function(t, e) {
          var i = t.sigBytes,
            n = 4 * e,
            a = n - (i % n),
            r = i + a - 1;
          t.clamp(),
            (t.words[r >>> 2] |= a << (24 - (r % 4) * 8)),
            (t.sigBytes += a);
        },
        unpad: function(t) {
          var e = 255 & t.words[(t.sigBytes - 1) >>> 2];
          t.sigBytes -= e;
        }
      }),
      (t.pad.Iso10126 = {
        pad: function(e, i) {
          var n = 4 * i,
            a = n - (e.sigBytes % n);
          e.concat(t.lib.WordArray.random(a - 1)).concat(
            t.lib.WordArray.create([a << 24], 1)
          );
        },
        unpad: function(t) {
          var e = 255 & t.words[(t.sigBytes - 1) >>> 2];
          t.sigBytes -= e;
        }
      }),
      (t.pad.Iso97971 = {
        pad: function(e, i) {
          e.concat(t.lib.WordArray.create([2147483648], 1)),
            t.pad.ZeroPadding.pad(e, i);
        },
        unpad: function(e) {
          t.pad.ZeroPadding.unpad(e), e.sigBytes--;
        }
      }),
      (t.mode.OFB = (function() {
        var e = t.lib.BlockCipherMode.extend(),
          i = (e.Encryptor = e.extend({
            processBlock: function(t, e) {
              var i = this._cipher,
                n = i.blockSize,
                a = this._iv,
                r = this._keystream;
              a && ((r = this._keystream = a.slice(0)), (this._iv = void 0)),
                i.encryptBlock(r, 0);
              for (var s = 0; s < n; s++) t[e + s] ^= r[s];
            }
          }));
        return (e.Decryptor = i), e;
      })()),
      (t.pad.NoPadding = { pad: function() {}, unpad: function() {} }),
      (function(e) {
        var i = t,
          n = i.lib.CipherParams,
          a = i.enc.Hex;
        i.format.Hex = {
          stringify: function(t) {
            return t.ciphertext.toString(a);
          },
          parse: function(t) {
            var e = a.parse(t);
            return n.create({ ciphertext: e });
          }
        };
      })(),
      (function() {
        var e = t,
          i = e.lib.BlockCipher,
          n = e.algo,
          a = [],
          r = [],
          s = [],
          o = [],
          l = [],
          h = [],
          c = [],
          u = [],
          _ = [],
          d = [];
        !(function() {
          for (var t = [], e = 0; e < 256; e++)
            t[e] = e < 128 ? e << 1 : (e << 1) ^ 283;
          for (var i = 0, n = 0, e = 0; e < 256; e++) {
            var f = n ^ (n << 1) ^ (n << 2) ^ (n << 3) ^ (n << 4);
            (f = (f >>> 8) ^ (255 & f) ^ 99), (a[i] = f), (r[f] = i);
            var p = t[i],
              m = t[p],
              g = t[m],
              y = (257 * t[f]) ^ (16843008 * f);
            (s[i] = (y << 24) | (y >>> 8)),
              (o[i] = (y << 16) | (y >>> 16)),
              (l[i] = (y << 8) | (y >>> 24)),
              (h[i] = y);
            y = (16843009 * g) ^ (65537 * m) ^ (257 * p) ^ (16843008 * i);
            (c[f] = (y << 24) | (y >>> 8)),
              (u[f] = (y << 16) | (y >>> 16)),
              (_[f] = (y << 8) | (y >>> 24)),
              (d[f] = y),
              i ? ((i = p ^ t[t[t[g ^ p]]]), (n ^= t[t[n]])) : (i = n = 1);
          }
        })();
        var f = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
          p = (n.AES = i.extend({
            _doReset: function() {
              if (!this._nRounds || this._keyPriorReset !== this._key) {
                for (
                  var t = (this._keyPriorReset = this._key),
                    e = t.words,
                    i = t.sigBytes / 4,
                    n = 4 * ((this._nRounds = i + 6) + 1),
                    r = (this._keySchedule = []),
                    s = 0;
                  s < n;
                  s++
                )
                  if (s < i) r[s] = e[s];
                  else {
                    h = r[s - 1];
                    s % i
                      ? i > 6 &&
                        s % i == 4 &&
                        (h =
                          (a[h >>> 24] << 24) |
                          (a[(h >>> 16) & 255] << 16) |
                          (a[(h >>> 8) & 255] << 8) |
                          a[255 & h])
                      : ((h =
                          (a[(h = (h << 8) | (h >>> 24)) >>> 24] << 24) |
                          (a[(h >>> 16) & 255] << 16) |
                          (a[(h >>> 8) & 255] << 8) |
                          a[255 & h]),
                        (h ^= f[(s / i) | 0] << 24)),
                      (r[s] = r[s - i] ^ h);
                  }
                for (var o = (this._invKeySchedule = []), l = 0; l < n; l++) {
                  s = n - l;
                  if (l % 4) h = r[s];
                  else var h = r[s - 4];
                  o[l] =
                    l < 4 || s <= 4
                      ? h
                      : c[a[h >>> 24]] ^
                        u[a[(h >>> 16) & 255]] ^
                        _[a[(h >>> 8) & 255]] ^
                        d[a[255 & h]];
                }
              }
            },
            encryptBlock: function(t, e) {
              this._doCryptBlock(t, e, this._keySchedule, s, o, l, h, a);
            },
            decryptBlock: function(t, e) {
              i = t[e + 1];
              (t[e + 1] = t[e + 3]),
                (t[e + 3] = i),
                this._doCryptBlock(t, e, this._invKeySchedule, c, u, _, d, r);
              var i = t[e + 1];
              (t[e + 1] = t[e + 3]), (t[e + 3] = i);
            },
            _doCryptBlock: function(t, e, i, n, a, r, s, o) {
              for (
                var l = this._nRounds,
                  h = t[e] ^ i[0],
                  c = t[e + 1] ^ i[1],
                  u = t[e + 2] ^ i[2],
                  _ = t[e + 3] ^ i[3],
                  d = 4,
                  f = 1;
                f < l;
                f++
              ) {
                var p =
                    n[h >>> 24] ^
                    a[(c >>> 16) & 255] ^
                    r[(u >>> 8) & 255] ^
                    s[255 & _] ^
                    i[d++],
                  m =
                    n[c >>> 24] ^
                    a[(u >>> 16) & 255] ^
                    r[(_ >>> 8) & 255] ^
                    s[255 & h] ^
                    i[d++],
                  g =
                    n[u >>> 24] ^
                    a[(_ >>> 16) & 255] ^
                    r[(h >>> 8) & 255] ^
                    s[255 & c] ^
                    i[d++],
                  y =
                    n[_ >>> 24] ^
                    a[(h >>> 16) & 255] ^
                    r[(c >>> 8) & 255] ^
                    s[255 & u] ^
                    i[d++];
                (h = p), (c = m), (u = g), (_ = y);
              }
              var p =
                  ((o[h >>> 24] << 24) |
                    (o[(c >>> 16) & 255] << 16) |
                    (o[(u >>> 8) & 255] << 8) |
                    o[255 & _]) ^
                  i[d++],
                m =
                  ((o[c >>> 24] << 24) |
                    (o[(u >>> 16) & 255] << 16) |
                    (o[(_ >>> 8) & 255] << 8) |
                    o[255 & h]) ^
                  i[d++],
                g =
                  ((o[u >>> 24] << 24) |
                    (o[(_ >>> 16) & 255] << 16) |
                    (o[(h >>> 8) & 255] << 8) |
                    o[255 & c]) ^
                  i[d++],
                y =
                  ((o[_ >>> 24] << 24) |
                    (o[(h >>> 16) & 255] << 16) |
                    (o[(c >>> 8) & 255] << 8) |
                    o[255 & u]) ^
                  i[d++];
              (t[e] = p), (t[e + 1] = m), (t[e + 2] = g), (t[e + 3] = y);
            },
            keySize: 8
          }));
        e.AES = i._createHelper(p);
      })(),
      (function() {
        function e(t, e) {
          var i = ((this._lBlock >>> t) ^ this._rBlock) & e;
          (this._rBlock ^= i), (this._lBlock ^= i << t);
        }
        function i(t, e) {
          var i = ((this._rBlock >>> t) ^ this._lBlock) & e;
          (this._lBlock ^= i), (this._rBlock ^= i << t);
        }
        var n = t,
          a = n.lib,
          r = a.WordArray,
          s = a.BlockCipher,
          o = n.algo,
          l = [
            57,
            49,
            41,
            33,
            25,
            17,
            9,
            1,
            58,
            50,
            42,
            34,
            26,
            18,
            10,
            2,
            59,
            51,
            43,
            35,
            27,
            19,
            11,
            3,
            60,
            52,
            44,
            36,
            63,
            55,
            47,
            39,
            31,
            23,
            15,
            7,
            62,
            54,
            46,
            38,
            30,
            22,
            14,
            6,
            61,
            53,
            45,
            37,
            29,
            21,
            13,
            5,
            28,
            20,
            12,
            4
          ],
          h = [
            14,
            17,
            11,
            24,
            1,
            5,
            3,
            28,
            15,
            6,
            21,
            10,
            23,
            19,
            12,
            4,
            26,
            8,
            16,
            7,
            27,
            20,
            13,
            2,
            41,
            52,
            31,
            37,
            47,
            55,
            30,
            40,
            51,
            45,
            33,
            48,
            44,
            49,
            39,
            56,
            34,
            53,
            46,
            42,
            50,
            36,
            29,
            32
          ],
          c = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
          u = [
            {
              0: 8421888,
              268435456: 32768,
              536870912: 8421378,
              805306368: 2,
              1073741824: 512,
              1342177280: 8421890,
              1610612736: 8389122,
              1879048192: 8388608,
              2147483648: 514,
              2415919104: 8389120,
              2684354560: 33280,
              2952790016: 8421376,
              3221225472: 32770,
              3489660928: 8388610,
              3758096384: 0,
              4026531840: 33282,
              134217728: 0,
              402653184: 8421890,
              671088640: 33282,
              939524096: 32768,
              1207959552: 8421888,
              1476395008: 512,
              1744830464: 8421378,
              2013265920: 2,
              2281701376: 8389120,
              2550136832: 33280,
              2818572288: 8421376,
              3087007744: 8389122,
              3355443200: 8388610,
              3623878656: 32770,
              3892314112: 514,
              4160749568: 8388608,
              1: 32768,
              268435457: 2,
              536870913: 8421888,
              805306369: 8388608,
              1073741825: 8421378,
              1342177281: 33280,
              1610612737: 512,
              1879048193: 8389122,
              2147483649: 8421890,
              2415919105: 8421376,
              2684354561: 8388610,
              2952790017: 33282,
              3221225473: 514,
              3489660929: 8389120,
              3758096385: 32770,
              4026531841: 0,
              134217729: 8421890,
              402653185: 8421376,
              671088641: 8388608,
              939524097: 512,
              1207959553: 32768,
              1476395009: 8388610,
              1744830465: 2,
              2013265921: 33282,
              2281701377: 32770,
              2550136833: 8389122,
              2818572289: 514,
              3087007745: 8421888,
              3355443201: 8389120,
              3623878657: 0,
              3892314113: 33280,
              4160749569: 8421378
            },
            {
              0: 1074282512,
              16777216: 16384,
              33554432: 524288,
              50331648: 1074266128,
              67108864: 1073741840,
              83886080: 1074282496,
              100663296: 1073758208,
              117440512: 16,
              134217728: 540672,
              150994944: 1073758224,
              167772160: 1073741824,
              184549376: 540688,
              201326592: 524304,
              218103808: 0,
              234881024: 16400,
              251658240: 1074266112,
              8388608: 1073758208,
              25165824: 540688,
              41943040: 16,
              58720256: 1073758224,
              75497472: 1074282512,
              92274688: 1073741824,
              109051904: 524288,
              125829120: 1074266128,
              142606336: 524304,
              159383552: 0,
              176160768: 16384,
              192937984: 1074266112,
              209715200: 1073741840,
              226492416: 540672,
              243269632: 1074282496,
              260046848: 16400,
              268435456: 0,
              285212672: 1074266128,
              301989888: 1073758224,
              318767104: 1074282496,
              335544320: 1074266112,
              352321536: 16,
              369098752: 540688,
              385875968: 16384,
              402653184: 16400,
              419430400: 524288,
              436207616: 524304,
              452984832: 1073741840,
              469762048: 540672,
              486539264: 1073758208,
              503316480: 1073741824,
              520093696: 1074282512,
              276824064: 540688,
              293601280: 524288,
              310378496: 1074266112,
              327155712: 16384,
              343932928: 1073758208,
              360710144: 1074282512,
              377487360: 16,
              394264576: 1073741824,
              411041792: 1074282496,
              427819008: 1073741840,
              444596224: 1073758224,
              461373440: 524304,
              478150656: 0,
              494927872: 16400,
              511705088: 1074266128,
              528482304: 540672
            },
            {
              0: 260,
              1048576: 0,
              2097152: 67109120,
              3145728: 65796,
              4194304: 65540,
              5242880: 67108868,
              6291456: 67174660,
              7340032: 67174400,
              8388608: 67108864,
              9437184: 67174656,
              10485760: 65792,
              11534336: 67174404,
              12582912: 67109124,
              13631488: 65536,
              14680064: 4,
              15728640: 256,
              524288: 67174656,
              1572864: 67174404,
              2621440: 0,
              3670016: 67109120,
              4718592: 67108868,
              5767168: 65536,
              6815744: 65540,
              7864320: 260,
              8912896: 4,
              9961472: 256,
              11010048: 67174400,
              12058624: 65796,
              13107200: 65792,
              14155776: 67109124,
              15204352: 67174660,
              16252928: 67108864,
              16777216: 67174656,
              17825792: 65540,
              18874368: 65536,
              19922944: 67109120,
              20971520: 256,
              22020096: 67174660,
              23068672: 67108868,
              24117248: 0,
              25165824: 67109124,
              26214400: 67108864,
              27262976: 4,
              28311552: 65792,
              29360128: 67174400,
              30408704: 260,
              31457280: 65796,
              32505856: 67174404,
              17301504: 67108864,
              18350080: 260,
              19398656: 67174656,
              20447232: 0,
              21495808: 65540,
              22544384: 67109120,
              23592960: 256,
              24641536: 67174404,
              25690112: 65536,
              26738688: 67174660,
              27787264: 65796,
              28835840: 67108868,
              29884416: 67109124,
              30932992: 67174400,
              31981568: 4,
              33030144: 65792
            },
            {
              0: 2151682048,
              65536: 2147487808,
              131072: 4198464,
              196608: 2151677952,
              262144: 0,
              327680: 4198400,
              393216: 2147483712,
              458752: 4194368,
              524288: 2147483648,
              589824: 4194304,
              655360: 64,
              720896: 2147487744,
              786432: 2151678016,
              851968: 4160,
              917504: 4096,
              983040: 2151682112,
              32768: 2147487808,
              98304: 64,
              163840: 2151678016,
              229376: 2147487744,
              294912: 4198400,
              360448: 2151682112,
              425984: 0,
              491520: 2151677952,
              557056: 4096,
              622592: 2151682048,
              688128: 4194304,
              753664: 4160,
              819200: 2147483648,
              884736: 4194368,
              950272: 4198464,
              1015808: 2147483712,
              1048576: 4194368,
              1114112: 4198400,
              1179648: 2147483712,
              1245184: 0,
              1310720: 4160,
              1376256: 2151678016,
              1441792: 2151682048,
              1507328: 2147487808,
              1572864: 2151682112,
              1638400: 2147483648,
              1703936: 2151677952,
              1769472: 4198464,
              1835008: 2147487744,
              1900544: 4194304,
              1966080: 64,
              2031616: 4096,
              1081344: 2151677952,
              1146880: 2151682112,
              1212416: 0,
              1277952: 4198400,
              1343488: 4194368,
              1409024: 2147483648,
              1474560: 2147487808,
              1540096: 64,
              1605632: 2147483712,
              1671168: 4096,
              1736704: 2147487744,
              1802240: 2151678016,
              1867776: 4160,
              1933312: 2151682048,
              1998848: 4194304,
              2064384: 4198464
            },
            {
              0: 128,
              4096: 17039360,
              8192: 262144,
              12288: 536870912,
              16384: 537133184,
              20480: 16777344,
              24576: 553648256,
              28672: 262272,
              32768: 16777216,
              36864: 537133056,
              40960: 536871040,
              45056: 553910400,
              49152: 553910272,
              53248: 0,
              57344: 17039488,
              61440: 553648128,
              2048: 17039488,
              6144: 553648256,
              10240: 128,
              14336: 17039360,
              18432: 262144,
              22528: 537133184,
              26624: 553910272,
              30720: 536870912,
              34816: 537133056,
              38912: 0,
              43008: 553910400,
              47104: 16777344,
              51200: 536871040,
              55296: 553648128,
              59392: 16777216,
              63488: 262272,
              65536: 262144,
              69632: 128,
              73728: 536870912,
              77824: 553648256,
              81920: 16777344,
              86016: 553910272,
              90112: 537133184,
              94208: 16777216,
              98304: 553910400,
              102400: 553648128,
              106496: 17039360,
              110592: 537133056,
              114688: 262272,
              118784: 536871040,
              122880: 0,
              126976: 17039488,
              67584: 553648256,
              71680: 16777216,
              75776: 17039360,
              79872: 537133184,
              83968: 536870912,
              88064: 17039488,
              92160: 128,
              96256: 553910272,
              100352: 262272,
              104448: 553910400,
              108544: 0,
              112640: 553648128,
              116736: 16777344,
              120832: 262144,
              124928: 537133056,
              129024: 536871040
            },
            {
              0: 268435464,
              256: 8192,
              512: 270532608,
              768: 270540808,
              1024: 268443648,
              1280: 2097152,
              1536: 2097160,
              1792: 268435456,
              2048: 0,
              2304: 268443656,
              2560: 2105344,
              2816: 8,
              3072: 270532616,
              3328: 2105352,
              3584: 8200,
              3840: 270540800,
              128: 270532608,
              384: 270540808,
              640: 8,
              896: 2097152,
              1152: 2105352,
              1408: 268435464,
              1664: 268443648,
              1920: 8200,
              2176: 2097160,
              2432: 8192,
              2688: 268443656,
              2944: 270532616,
              3200: 0,
              3456: 270540800,
              3712: 2105344,
              3968: 268435456,
              4096: 268443648,
              4352: 270532616,
              4608: 270540808,
              4864: 8200,
              5120: 2097152,
              5376: 268435456,
              5632: 268435464,
              5888: 2105344,
              6144: 2105352,
              6400: 0,
              6656: 8,
              6912: 270532608,
              7168: 8192,
              7424: 268443656,
              7680: 270540800,
              7936: 2097160,
              4224: 8,
              4480: 2105344,
              4736: 2097152,
              4992: 268435464,
              5248: 268443648,
              5504: 8200,
              5760: 270540808,
              6016: 270532608,
              6272: 270540800,
              6528: 270532616,
              6784: 8192,
              7040: 2105352,
              7296: 2097160,
              7552: 0,
              7808: 268435456,
              8064: 268443656
            },
            {
              0: 1048576,
              16: 33555457,
              32: 1024,
              48: 1049601,
              64: 34604033,
              80: 0,
              96: 1,
              112: 34603009,
              128: 33555456,
              144: 1048577,
              160: 33554433,
              176: 34604032,
              192: 34603008,
              208: 1025,
              224: 1049600,
              240: 33554432,
              8: 34603009,
              24: 0,
              40: 33555457,
              56: 34604032,
              72: 1048576,
              88: 33554433,
              104: 33554432,
              120: 1025,
              136: 1049601,
              152: 33555456,
              168: 34603008,
              184: 1048577,
              200: 1024,
              216: 34604033,
              232: 1,
              248: 1049600,
              256: 33554432,
              272: 1048576,
              288: 33555457,
              304: 34603009,
              320: 1048577,
              336: 33555456,
              352: 34604032,
              368: 1049601,
              384: 1025,
              400: 34604033,
              416: 1049600,
              432: 1,
              448: 0,
              464: 34603008,
              480: 33554433,
              496: 1024,
              264: 1049600,
              280: 33555457,
              296: 34603009,
              312: 1,
              328: 33554432,
              344: 1048576,
              360: 1025,
              376: 34604032,
              392: 33554433,
              408: 34603008,
              424: 0,
              440: 34604033,
              456: 1049601,
              472: 1024,
              488: 33555456,
              504: 1048577
            },
            {
              0: 134219808,
              1: 131072,
              2: 134217728,
              3: 32,
              4: 131104,
              5: 134350880,
              6: 134350848,
              7: 2048,
              8: 134348800,
              9: 134219776,
              10: 133120,
              11: 134348832,
              12: 2080,
              13: 0,
              14: 134217760,
              15: 133152,
              2147483648: 2048,
              2147483649: 134350880,
              2147483650: 134219808,
              2147483651: 134217728,
              2147483652: 134348800,
              2147483653: 133120,
              2147483654: 133152,
              2147483655: 32,
              2147483656: 134217760,
              2147483657: 2080,
              2147483658: 131104,
              2147483659: 134350848,
              2147483660: 0,
              2147483661: 134348832,
              2147483662: 134219776,
              2147483663: 131072,
              16: 133152,
              17: 134350848,
              18: 32,
              19: 2048,
              20: 134219776,
              21: 134217760,
              22: 134348832,
              23: 131072,
              24: 0,
              25: 131104,
              26: 134348800,
              27: 134219808,
              28: 134350880,
              29: 133120,
              30: 2080,
              31: 134217728,
              2147483664: 131072,
              2147483665: 2048,
              2147483666: 134348832,
              2147483667: 133152,
              2147483668: 32,
              2147483669: 134348800,
              2147483670: 134217728,
              2147483671: 134219808,
              2147483672: 134350880,
              2147483673: 134217760,
              2147483674: 134219776,
              2147483675: 0,
              2147483676: 133120,
              2147483677: 2080,
              2147483678: 131104,
              2147483679: 134350848
            }
          ],
          _ = [
            4160749569,
            528482304,
            33030144,
            2064384,
            129024,
            8064,
            504,
            2147483679
          ],
          d = (o.DES = s.extend({
            _doReset: function() {
              for (var t = this._key.words, e = [], i = 0; i < 56; i++) {
                var n = l[i] - 1;
                e[i] = (t[n >>> 5] >>> (31 - (n % 32))) & 1;
              }
              for (var a = (this._subKeys = []), r = 0; r < 16; r++) {
                for (var s = (a[r] = []), o = c[r], i = 0; i < 24; i++)
                  (s[(i / 6) | 0] |= e[(h[i] - 1 + o) % 28] << (31 - (i % 6))),
                    (s[4 + ((i / 6) | 0)] |=
                      e[28 + ((h[i + 24] - 1 + o) % 28)] << (31 - (i % 6)));
                s[0] = (s[0] << 1) | (s[0] >>> 31);
                for (i = 1; i < 7; i++) s[i] = s[i] >>> (4 * (i - 1) + 3);
                s[7] = (s[7] << 5) | (s[7] >>> 27);
              }
              for (var u = (this._invSubKeys = []), i = 0; i < 16; i++)
                u[i] = a[15 - i];
            },
            encryptBlock: function(t, e) {
              this._doCryptBlock(t, e, this._subKeys);
            },
            decryptBlock: function(t, e) {
              this._doCryptBlock(t, e, this._invSubKeys);
            },
            _doCryptBlock: function(t, n, a) {
              (this._lBlock = t[n]),
                (this._rBlock = t[n + 1]),
                e.call(this, 4, 252645135),
                e.call(this, 16, 65535),
                i.call(this, 2, 858993459),
                i.call(this, 8, 16711935),
                e.call(this, 1, 1431655765);
              for (var r = 0; r < 16; r++) {
                for (
                  var s = a[r],
                    o = this._lBlock,
                    l = this._rBlock,
                    h = 0,
                    c = 0;
                  c < 8;
                  c++
                )
                  h |= u[c][((l ^ s[c]) & _[c]) >>> 0];
                (this._lBlock = l), (this._rBlock = o ^ h);
              }
              var d = this._lBlock;
              (this._lBlock = this._rBlock),
                (this._rBlock = d),
                e.call(this, 1, 1431655765),
                i.call(this, 8, 16711935),
                i.call(this, 2, 858993459),
                e.call(this, 16, 65535),
                e.call(this, 4, 252645135),
                (t[n] = this._lBlock),
                (t[n + 1] = this._rBlock);
            },
            keySize: 2,
            ivSize: 2,
            blockSize: 2
          }));
        n.DES = s._createHelper(d);
        var f = (o.TripleDES = s.extend({
          _doReset: function() {
            var t = this._key.words;
            (this._des1 = d.createEncryptor(r.create(t.slice(0, 2)))),
              (this._des2 = d.createEncryptor(r.create(t.slice(2, 4)))),
              (this._des3 = d.createEncryptor(r.create(t.slice(4, 6))));
          },
          encryptBlock: function(t, e) {
            this._des1.encryptBlock(t, e),
              this._des2.decryptBlock(t, e),
              this._des3.encryptBlock(t, e);
          },
          decryptBlock: function(t, e) {
            this._des3.decryptBlock(t, e),
              this._des2.encryptBlock(t, e),
              this._des1.decryptBlock(t, e);
          },
          keySize: 6,
          ivSize: 2,
          blockSize: 2
        }));
        n.TripleDES = s._createHelper(f);
      })(),
      (function() {
        function e() {
          for (
            var t = this._S, e = this._i, i = this._j, n = 0, a = 0;
            a < 4;
            a++
          ) {
            i = (i + t[(e = (e + 1) % 256)]) % 256;
            var r = t[e];
            (t[e] = t[i]),
              (t[i] = r),
              (n |= t[(t[e] + t[i]) % 256] << (24 - 8 * a));
          }
          return (this._i = e), (this._j = i), n;
        }
        var i = t,
          n = i.lib.StreamCipher,
          a = i.algo,
          r = (a.RC4 = n.extend({
            _doReset: function() {
              for (
                var t = this._key,
                  e = t.words,
                  i = t.sigBytes,
                  n = (this._S = []),
                  a = 0;
                a < 256;
                a++
              )
                n[a] = a;
              for (var a = 0, r = 0; a < 256; a++) {
                var s = a % i,
                  o = (e[s >>> 2] >>> (24 - (s % 4) * 8)) & 255;
                r = (r + n[a] + o) % 256;
                var l = n[a];
                (n[a] = n[r]), (n[r] = l);
              }
              this._i = this._j = 0;
            },
            _doProcessBlock: function(t, i) {
              t[i] ^= e.call(this);
            },
            keySize: 8,
            ivSize: 0
          }));
        i.RC4 = n._createHelper(r);
        var s = (a.RC4Drop = r.extend({
          cfg: r.cfg.extend({ drop: 192 }),
          _doReset: function() {
            r._doReset.call(this);
            for (var t = this.cfg.drop; t > 0; t--) e.call(this);
          }
        }));
        i.RC4Drop = n._createHelper(s);
      })(),
      (t.mode.CTRGladman = (function() {
        function e(t) {
          if (255 == ((t >> 24) & 255)) {
            var e = (t >> 16) & 255,
              i = (t >> 8) & 255,
              n = 255 & t;
            255 === e
              ? ((e = 0),
                255 === i ? ((i = 0), 255 === n ? (n = 0) : ++n) : ++i)
              : ++e,
              (t = 0),
              (t += e << 16),
              (t += i << 8),
              (t += n);
          } else t += 1 << 24;
          return t;
        }
        var i = t.lib.BlockCipherMode.extend(),
          n = (i.Encryptor = i.extend({
            processBlock: function(t, i) {
              var n = this._cipher,
                a = n.blockSize,
                r = this._iv,
                s = this._counter;
              r && ((s = this._counter = r.slice(0)), (this._iv = void 0)),
                (function(t) {
                  0 === (t[0] = e(t[0])) && (t[1] = e(t[1]));
                })(s);
              var o = s.slice(0);
              n.encryptBlock(o, 0);
              for (var l = 0; l < a; l++) t[i + l] ^= o[l];
            }
          }));
        return (i.Decryptor = n), i;
      })()),
      (function() {
        function e() {
          for (var t = this._X, e = this._C, i = 0; i < 8; i++) r[i] = e[i];
          (e[0] = (e[0] + 1295307597 + this._b) | 0),
            (e[1] =
              (e[1] + 3545052371 + (e[0] >>> 0 < r[0] >>> 0 ? 1 : 0)) | 0),
            (e[2] = (e[2] + 886263092 + (e[1] >>> 0 < r[1] >>> 0 ? 1 : 0)) | 0),
            (e[3] =
              (e[3] + 1295307597 + (e[2] >>> 0 < r[2] >>> 0 ? 1 : 0)) | 0),
            (e[4] =
              (e[4] + 3545052371 + (e[3] >>> 0 < r[3] >>> 0 ? 1 : 0)) | 0),
            (e[5] = (e[5] + 886263092 + (e[4] >>> 0 < r[4] >>> 0 ? 1 : 0)) | 0),
            (e[6] =
              (e[6] + 1295307597 + (e[5] >>> 0 < r[5] >>> 0 ? 1 : 0)) | 0),
            (e[7] =
              (e[7] + 3545052371 + (e[6] >>> 0 < r[6] >>> 0 ? 1 : 0)) | 0),
            (this._b = e[7] >>> 0 < r[7] >>> 0 ? 1 : 0);
          for (i = 0; i < 8; i++) {
            var n = t[i] + e[i],
              a = 65535 & n,
              o = n >>> 16,
              l = ((((a * a) >>> 17) + a * o) >>> 15) + o * o,
              h = (((4294901760 & n) * n) | 0) + (((65535 & n) * n) | 0);
            s[i] = l ^ h;
          }
          (t[0] =
            (s[0] +
              ((s[7] << 16) | (s[7] >>> 16)) +
              ((s[6] << 16) | (s[6] >>> 16))) |
            0),
            (t[1] = (s[1] + ((s[0] << 8) | (s[0] >>> 24)) + s[7]) | 0),
            (t[2] =
              (s[2] +
                ((s[1] << 16) | (s[1] >>> 16)) +
                ((s[0] << 16) | (s[0] >>> 16))) |
              0),
            (t[3] = (s[3] + ((s[2] << 8) | (s[2] >>> 24)) + s[1]) | 0),
            (t[4] =
              (s[4] +
                ((s[3] << 16) | (s[3] >>> 16)) +
                ((s[2] << 16) | (s[2] >>> 16))) |
              0),
            (t[5] = (s[5] + ((s[4] << 8) | (s[4] >>> 24)) + s[3]) | 0),
            (t[6] =
              (s[6] +
                ((s[5] << 16) | (s[5] >>> 16)) +
                ((s[4] << 16) | (s[4] >>> 16))) |
              0),
            (t[7] = (s[7] + ((s[6] << 8) | (s[6] >>> 24)) + s[5]) | 0);
        }
        var i = t,
          n = i.lib.StreamCipher,
          a = [],
          r = [],
          s = [],
          o = (i.algo.Rabbit = n.extend({
            _doReset: function() {
              for (var t = this._key.words, i = this.cfg.iv, n = 0; n < 4; n++)
                t[n] =
                  (16711935 & ((t[n] << 8) | (t[n] >>> 24))) |
                  (4278255360 & ((t[n] << 24) | (t[n] >>> 8)));
              var a = (this._X = [
                  t[0],
                  (t[3] << 16) | (t[2] >>> 16),
                  t[1],
                  (t[0] << 16) | (t[3] >>> 16),
                  t[2],
                  (t[1] << 16) | (t[0] >>> 16),
                  t[3],
                  (t[2] << 16) | (t[1] >>> 16)
                ]),
                r = (this._C = [
                  (t[2] << 16) | (t[2] >>> 16),
                  (4294901760 & t[0]) | (65535 & t[1]),
                  (t[3] << 16) | (t[3] >>> 16),
                  (4294901760 & t[1]) | (65535 & t[2]),
                  (t[0] << 16) | (t[0] >>> 16),
                  (4294901760 & t[2]) | (65535 & t[3]),
                  (t[1] << 16) | (t[1] >>> 16),
                  (4294901760 & t[3]) | (65535 & t[0])
                ]);
              this._b = 0;
              for (n = 0; n < 4; n++) e.call(this);
              for (n = 0; n < 8; n++) r[n] ^= a[(n + 4) & 7];
              if (i) {
                var s = i.words,
                  o = s[0],
                  l = s[1],
                  h =
                    (16711935 & ((o << 8) | (o >>> 24))) |
                    (4278255360 & ((o << 24) | (o >>> 8))),
                  c =
                    (16711935 & ((l << 8) | (l >>> 24))) |
                    (4278255360 & ((l << 24) | (l >>> 8))),
                  u = (h >>> 16) | (4294901760 & c),
                  _ = (c << 16) | (65535 & h);
                (r[0] ^= h),
                  (r[1] ^= u),
                  (r[2] ^= c),
                  (r[3] ^= _),
                  (r[4] ^= h),
                  (r[5] ^= u),
                  (r[6] ^= c),
                  (r[7] ^= _);
                for (n = 0; n < 4; n++) e.call(this);
              }
            },
            _doProcessBlock: function(t, i) {
              var n = this._X;
              e.call(this),
                (a[0] = n[0] ^ (n[5] >>> 16) ^ (n[3] << 16)),
                (a[1] = n[2] ^ (n[7] >>> 16) ^ (n[5] << 16)),
                (a[2] = n[4] ^ (n[1] >>> 16) ^ (n[7] << 16)),
                (a[3] = n[6] ^ (n[3] >>> 16) ^ (n[1] << 16));
              for (var r = 0; r < 4; r++)
                (a[r] =
                  (16711935 & ((a[r] << 8) | (a[r] >>> 24))) |
                  (4278255360 & ((a[r] << 24) | (a[r] >>> 8)))),
                  (t[i + r] ^= a[r]);
            },
            blockSize: 4,
            ivSize: 2
          }));
        i.Rabbit = n._createHelper(o);
      })(),
      (t.mode.CTR = (function() {
        var e = t.lib.BlockCipherMode.extend(),
          i = (e.Encryptor = e.extend({
            processBlock: function(t, e) {
              var i = this._cipher,
                n = i.blockSize,
                a = this._iv,
                r = this._counter;
              a && ((r = this._counter = a.slice(0)), (this._iv = void 0));
              var s = r.slice(0);
              i.encryptBlock(s, 0), (r[n - 1] = (r[n - 1] + 1) | 0);
              for (var o = 0; o < n; o++) t[e + o] ^= s[o];
            }
          }));
        return (e.Decryptor = i), e;
      })()),
      (function() {
        function e() {
          for (var t = this._X, e = this._C, i = 0; i < 8; i++) r[i] = e[i];
          (e[0] = (e[0] + 1295307597 + this._b) | 0),
            (e[1] =
              (e[1] + 3545052371 + (e[0] >>> 0 < r[0] >>> 0 ? 1 : 0)) | 0),
            (e[2] = (e[2] + 886263092 + (e[1] >>> 0 < r[1] >>> 0 ? 1 : 0)) | 0),
            (e[3] =
              (e[3] + 1295307597 + (e[2] >>> 0 < r[2] >>> 0 ? 1 : 0)) | 0),
            (e[4] =
              (e[4] + 3545052371 + (e[3] >>> 0 < r[3] >>> 0 ? 1 : 0)) | 0),
            (e[5] = (e[5] + 886263092 + (e[4] >>> 0 < r[4] >>> 0 ? 1 : 0)) | 0),
            (e[6] =
              (e[6] + 1295307597 + (e[5] >>> 0 < r[5] >>> 0 ? 1 : 0)) | 0),
            (e[7] =
              (e[7] + 3545052371 + (e[6] >>> 0 < r[6] >>> 0 ? 1 : 0)) | 0),
            (this._b = e[7] >>> 0 < r[7] >>> 0 ? 1 : 0);
          for (i = 0; i < 8; i++) {
            var n = t[i] + e[i],
              a = 65535 & n,
              o = n >>> 16,
              l = ((((a * a) >>> 17) + a * o) >>> 15) + o * o,
              h = (((4294901760 & n) * n) | 0) + (((65535 & n) * n) | 0);
            s[i] = l ^ h;
          }
          (t[0] =
            (s[0] +
              ((s[7] << 16) | (s[7] >>> 16)) +
              ((s[6] << 16) | (s[6] >>> 16))) |
            0),
            (t[1] = (s[1] + ((s[0] << 8) | (s[0] >>> 24)) + s[7]) | 0),
            (t[2] =
              (s[2] +
                ((s[1] << 16) | (s[1] >>> 16)) +
                ((s[0] << 16) | (s[0] >>> 16))) |
              0),
            (t[3] = (s[3] + ((s[2] << 8) | (s[2] >>> 24)) + s[1]) | 0),
            (t[4] =
              (s[4] +
                ((s[3] << 16) | (s[3] >>> 16)) +
                ((s[2] << 16) | (s[2] >>> 16))) |
              0),
            (t[5] = (s[5] + ((s[4] << 8) | (s[4] >>> 24)) + s[3]) | 0),
            (t[6] =
              (s[6] +
                ((s[5] << 16) | (s[5] >>> 16)) +
                ((s[4] << 16) | (s[4] >>> 16))) |
              0),
            (t[7] = (s[7] + ((s[6] << 8) | (s[6] >>> 24)) + s[5]) | 0);
        }
        var i = t,
          n = i.lib.StreamCipher,
          a = [],
          r = [],
          s = [],
          o = (i.algo.RabbitLegacy = n.extend({
            _doReset: function() {
              var t = this._key.words,
                i = this.cfg.iv,
                n = (this._X = [
                  t[0],
                  (t[3] << 16) | (t[2] >>> 16),
                  t[1],
                  (t[0] << 16) | (t[3] >>> 16),
                  t[2],
                  (t[1] << 16) | (t[0] >>> 16),
                  t[3],
                  (t[2] << 16) | (t[1] >>> 16)
                ]),
                a = (this._C = [
                  (t[2] << 16) | (t[2] >>> 16),
                  (4294901760 & t[0]) | (65535 & t[1]),
                  (t[3] << 16) | (t[3] >>> 16),
                  (4294901760 & t[1]) | (65535 & t[2]),
                  (t[0] << 16) | (t[0] >>> 16),
                  (4294901760 & t[2]) | (65535 & t[3]),
                  (t[1] << 16) | (t[1] >>> 16),
                  (4294901760 & t[3]) | (65535 & t[0])
                ]);
              this._b = 0;
              for (_ = 0; _ < 4; _++) e.call(this);
              for (_ = 0; _ < 8; _++) a[_] ^= n[(_ + 4) & 7];
              if (i) {
                var r = i.words,
                  s = r[0],
                  o = r[1],
                  l =
                    (16711935 & ((s << 8) | (s >>> 24))) |
                    (4278255360 & ((s << 24) | (s >>> 8))),
                  h =
                    (16711935 & ((o << 8) | (o >>> 24))) |
                    (4278255360 & ((o << 24) | (o >>> 8))),
                  c = (l >>> 16) | (4294901760 & h),
                  u = (h << 16) | (65535 & l);
                (a[0] ^= l),
                  (a[1] ^= c),
                  (a[2] ^= h),
                  (a[3] ^= u),
                  (a[4] ^= l),
                  (a[5] ^= c),
                  (a[6] ^= h),
                  (a[7] ^= u);
                for (var _ = 0; _ < 4; _++) e.call(this);
              }
            },
            _doProcessBlock: function(t, i) {
              var n = this._X;
              e.call(this),
                (a[0] = n[0] ^ (n[5] >>> 16) ^ (n[3] << 16)),
                (a[1] = n[2] ^ (n[7] >>> 16) ^ (n[5] << 16)),
                (a[2] = n[4] ^ (n[1] >>> 16) ^ (n[7] << 16)),
                (a[3] = n[6] ^ (n[3] >>> 16) ^ (n[1] << 16));
              for (var r = 0; r < 4; r++)
                (a[r] =
                  (16711935 & ((a[r] << 8) | (a[r] >>> 24))) |
                  (4278255360 & ((a[r] << 24) | (a[r] >>> 8)))),
                  (t[i + r] ^= a[r]);
            },
            blockSize: 4,
            ivSize: 2
          }));
        i.RabbitLegacy = n._createHelper(o);
      })(),
      (t.pad.ZeroPadding = {
        pad: function(t, e) {
          var i = 4 * e;
          t.clamp(), (t.sigBytes += i - (t.sigBytes % i || i));
        },
        unpad: function(t) {
          for (
            var e = t.words, i = t.sigBytes - 1;
            !((e[i >>> 2] >>> (24 - (i % 4) * 8)) & 255);

          )
            i--;
          t.sigBytes = i + 1;
        }
      }),
      t
    );
  }),
  Object.getPrototypeOf ||
    (Object.getPrototypeOf = function(t) {
      if (t !== Object(t))
        throw TypeError('Object.getPrototypeOf called on non-object');
      return t.__proto__ || t.constructor.prototype || Object.prototype;
    }),
  'function' != typeof Object.getOwnPropertyNames &&
    (Object.getOwnPropertyNames = function(t) {
      if (t !== Object(t))
        throw TypeError('Object.getOwnPropertyNames called on non-object');
      var e,
        i = [];
      for (e in t) Object.prototype.hasOwnProperty.call(t, e) && i.push(e);
      return i;
    }),
  'function' != typeof Object.create &&
    (Object.create = function(t, e) {
      function i() {}
      if ('object' != typeof t) throw TypeError();
      i.prototype = t;
      var n = new i();
      if ((t && (n.constructor = i), void 0 !== e)) {
        if (e !== Object(e)) throw TypeError();
        Object.defineProperties(n, e);
      }
      return n;
    }),
  (function() {
    if (
      !Object.defineProperty ||
      !(function() {
        try {
          return Object.defineProperty({}, 'x', {}), !0;
        } catch (t) {
          return !1;
        }
      })()
    ) {
      var t = Object.defineProperty;
      Object.defineProperty = function(e, i, n) {
        if (t)
          try {
            return t(e, i, n);
          } catch (t) {}
        if (e !== Object(e))
          throw TypeError('Object.defineProperty called on non-object');
        return (
          Object.prototype.__defineGetter__ &&
            'get' in n &&
            Object.prototype.__defineGetter__.call(e, i, n.get),
          Object.prototype.__defineSetter__ &&
            'set' in n &&
            Object.prototype.__defineSetter__.call(e, i, n.set),
          'value' in n && (e[i] = n.value),
          e
        );
      };
    }
  })(),
  'function' != typeof Object.defineProperties &&
    (Object.defineProperties = function(t, e) {
      if (t !== Object(t))
        throw TypeError('Object.defineProperties called on non-object');
      var i;
      for (i in e)
        Object.prototype.hasOwnProperty.call(e, i) &&
          Object.defineProperty(t, i, e[i]);
      return t;
    }),
  Object.keys ||
    (Object.keys = function(t) {
      if (t !== Object(t)) throw TypeError('Object.keys called on non-object');
      var e,
        i = [];
      for (e in t) Object.prototype.hasOwnProperty.call(t, e) && i.push(e);
      return i;
    }),
  Function.prototype.bind ||
    (Function.prototype.bind = function(t) {
      if ('function' != typeof this)
        throw TypeError('Bind must be called on a function');
      var e = Array.prototype.slice.call(arguments, 1),
        i = this,
        n = function() {},
        a = function() {
          return i.apply(
            this instanceof n ? this : t,
            e.concat(Array.prototype.slice.call(arguments))
          );
        };
      return (
        this.prototype && (n.prototype = this.prototype),
        (a.prototype = new n()),
        a
      );
    }),
  (Array.isArray =
    Array.isArray ||
    function(t) {
      return Boolean(
        t && '[object Array]' === Object.prototype.toString.call(Object(t))
      );
    }),
  Array.prototype.indexOf ||
    (Array.prototype.indexOf = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if (0 === i) return -1;
      var n = 0;
      if (
        (arguments.length > 0 &&
          ((n = Number(arguments[1])),
          isNaN(n)
            ? (n = 0)
            : 0 !== n &&
              n !== 1 / 0 &&
              n !== -1 / 0 &&
              (n = (n > 0 || -1) * Math.floor(Math.abs(n)))),
        n >= i)
      )
        return -1;
      for (var a = n >= 0 ? n : Math.max(i - Math.abs(n), 0); a < i; a++)
        if (a in e && e[a] === t) return a;
      return -1;
    }),
  Array.prototype.lastIndexOf ||
    (Array.prototype.lastIndexOf = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if (0 === i) return -1;
      var n = i;
      arguments.length > 1 &&
        ((n = Number(arguments[1])) !== n
          ? (n = 0)
          : 0 !== n &&
            n !== 1 / 0 &&
            n !== -1 / 0 &&
            (n = (n > 0 || -1) * Math.floor(Math.abs(n))));
      for (var a = n >= 0 ? Math.min(n, i - 1) : i - Math.abs(n); a >= 0; a--)
        if (a in e && e[a] === t) return a;
      return -1;
    }),
  Array.prototype.every ||
    (Array.prototype.every = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if ('function' != typeof t) throw TypeError();
      var n,
        a = arguments[1];
      for (n = 0; n < i; n++) if (n in e && !t.call(a, e[n], n, e)) return !1;
      return !0;
    }),
  Array.prototype.some ||
    (Array.prototype.some = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if ('function' != typeof t) throw TypeError();
      var n,
        a = arguments[1];
      for (n = 0; n < i; n++) if (n in e && t.call(a, e[n], n, e)) return !0;
      return !1;
    }),
  Array.prototype.forEach ||
    (Array.prototype.forEach = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if ('function' != typeof t) throw TypeError();
      var n,
        a = arguments[1];
      for (n = 0; n < i; n++) n in e && t.call(a, e[n], n, e);
    }),
  Array.prototype.map ||
    (Array.prototype.map = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if ('function' != typeof t) throw TypeError();
      var n = [];
      n.length = i;
      var a,
        r = arguments[1];
      for (a = 0; a < i; a++) a in e && (n[a] = t.call(r, e[a], a, e));
      return n;
    }),
  Array.prototype.filter ||
    (Array.prototype.filter = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if ('function' != typeof t) throw TypeError();
      var n,
        a = [],
        r = arguments[1];
      for (n = 0; n < i; n++)
        if (n in e) {
          var s = e[n];
          t.call(r, s, n, e) && a.push(s);
        }
      return a;
    }),
  Array.prototype.reduce ||
    (Array.prototype.reduce = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if ('function' != typeof t) throw TypeError();
      if (0 === i && 1 === arguments.length) throw TypeError();
      var n,
        a = 0;
      if (arguments.length >= 2) n = arguments[1];
      else
        for (;;) {
          if (a in e) {
            n = e[a++];
            break;
          }
          if (++a >= i) throw TypeError();
        }
      for (; a < i; ) a in e && (n = t.call(void 0, n, e[a], a, e)), a++;
      return n;
    }),
  Array.prototype.reduceRight ||
    (Array.prototype.reduceRight = function(t) {
      if (void 0 === this || null === this) throw TypeError();
      var e = Object(this),
        i = e.length >>> 0;
      if ('function' != typeof t) throw TypeError();
      if (0 === i && 1 === arguments.length) throw TypeError();
      var n,
        a = i - 1;
      if (arguments.length >= 2) n = arguments[1];
      else
        for (;;) {
          if (a in this) {
            n = this[a--];
            break;
          }
          if (--a < 0) throw TypeError();
        }
      for (; a >= 0; ) a in e && (n = t.call(void 0, n, e[a], a, e)), a--;
      return n;
    }),
  String.prototype.trim ||
    (String.prototype.trim = function() {
      return String(this)
        .replace(/^\s+/, '')
        .replace(/\s+$/, '');
    }),
  Date.now ||
    (Date.now = function() {
      return Number(new Date());
    }),
  Date.prototype.toISOString ||
    (Date.prototype.toISOString = function() {
      function t(t) {
        return ('00' + t).slice(-2);
      }
      return (
        this.getUTCFullYear() +
        '-' +
        t(this.getUTCMonth() + 1) +
        '-' +
        t(this.getUTCDate()) +
        'T' +
        t(this.getUTCHours()) +
        ':' +
        t(this.getUTCMinutes()) +
        ':' +
        t(this.getUTCSeconds()) +
        '.' +
        (function(t) {
          return ('000' + t).slice(-3);
        })(this.getUTCMilliseconds()) +
        'Z'
      );
    }),
  (function(t) {
    'use strict';
    function e(e) {
      return e === t ? A : e;
    }
    function i(t, e) {
      for (
        var i = Object.getOwnPropertyDescriptor(t, e),
          n = Object.getPrototypeOf(t);
        !i && n;

      )
        (i = Object.getOwnPropertyDescriptor(n, e)),
          (n = Object.getPrototypeOf(n));
      return i;
    }
    function n(t, e, i, n) {
      (e in t && !n && !D) ||
        ('function' == typeof i
          ? Object.defineProperty(t, e, {
              value: i,
              configurable: !0,
              enumerable: !1,
              writable: !0
            })
          : Object.defineProperty(t, e, {
              value: i,
              configurable: !1,
              enumerable: !1,
              writable: !1
            }));
    }
    function a(t, e, i) {
      Object.defineProperty(t, e, {
        value: i,
        configurable: !1,
        enumerable: !1,
        writable: !0
      });
    }
    function r() {
      function t(t) {
        var i = 'function' == typeof t.valueOf && t.valueOf(e);
        return i === t ? null : i;
      }
      var e = S(null);
      return {
        clear: function() {
          e = S(null);
        },
        remove: function(e) {
          var i = t(e);
          return !(!i || !g(i, 'value') || (delete i.value, 0));
        },
        get: function(e, i) {
          var n = t(e);
          return n && g(n, 'value') ? n.value : i;
        },
        has: function(e) {
          var i = t(e);
          return Boolean(i && g(i, 'value'));
        },
        set: function(i, n) {
          (
            t(i) ||
            (function(t) {
              var i = t.valueOf,
                n = S(null);
              return (
                Object.defineProperty(t, 'valueOf', {
                  value: (function(e) {
                    return function(a) {
                      return a === e ? n : i.apply(t, arguments);
                    };
                  })(e),
                  configurable: !0,
                  writeable: !0,
                  enumerable: !1
                }),
                n
              );
            })(i)
          ).value = n;
        }
      };
    }
    function s(e) {
      switch (typeof e) {
        case 'undefined':
          return 'undefined';
        case 'boolean':
          return 'boolean';
        case 'number':
          return 'number';
        case 'string':
          return 'string';
        case 'symbol':
          return 'symbol';
        default:
          return null === e
            ? 'null'
            : e instanceof t.Symbol
            ? 'symbol'
            : 'object';
      }
    }
    function o(t) {
      return (
        (t = Number(t)),
        R(t)
          ? 0
          : 0 === t || t === 1 / 0 || t === -1 / 0
          ? t
          : (t < 0 ? -1 : 1) * G(V(t))
      );
    }
    function l(t) {
      return t >>> 0;
    }
    function h(t) {
      if (null === t || t === A) throw TypeError();
      return Object(t);
    }
    function c(t) {
      var e = o(t);
      return e <= 0
        ? 0
        : e === 1 / 0
        ? 9007199254740991
        : W(e, 9007199254740991);
    }
    function u(t) {
      return 'function' == typeof t;
    }
    function _(t) {
      return (
        !!/Constructor/.test(Object.prototype.toString.call(t)) ||
        !!/Function/.test(Object.prototype.toString.call(t)) ||
        'function' == typeof t
      );
    }
    function d(t, e) {
      if (typeof t != typeof e) return !1;
      switch (typeof t) {
        case 'undefined':
          return !0;
        case 'number':
          return (
            (t != t && e != e) ||
            (0 === t && 0 === e ? 1 / t == 1 / e : t === e)
          );
        case 'boolean':
        case 'string':
        case 'object':
        default:
          return t === e;
      }
    }
    function f(t, e) {
      if (typeof t != typeof e) return !1;
      switch (typeof t) {
        case 'undefined':
          return !0;
        case 'number':
          return (t != t && e != e) || t === e;
        case 'boolean':
        case 'string':
        case 'object':
        default:
          return t === e;
      }
    }
    function p(t, e) {
      var i = (function(t, e) {
        return h(t)[e];
      })(t, e);
      if (i === A || null === i) return A;
      if (!u(i)) throw TypeError();
      return i;
    }
    function m(t, e) {
      for (; t; ) {
        if (Object.prototype.hasOwnProperty.call(t, e)) return !0;
        if ('object' !== s(t)) return !1;
        var i = Object.getPrototypeOf(t);
        if (i === t) return !1;
        t = i;
      }
      return !1;
    }
    function g(t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }
    function y(t, e) {
      arguments.length < 2 && (e = p(t, et));
      var i = e.call(t);
      if ('object' !== s(i)) throw TypeError();
      return i;
    }
    function v(t) {
      return t.value;
    }
    function b(t, e) {
      var i = (function(t, e) {
          if (arguments.length < 2) var i = t.next();
          else i = t.next(e);
          if ('object' !== s(i)) throw TypeError();
          return i;
        })(t, e),
        n = i.done;
      return !0 !== Boolean(n) && i;
    }
    function w(t, e) {
      var i = {};
      return (i.value = t), (i.done = e), i;
    }
    function x(t, e, i) {
      N(function() {
        e.apply(A, i);
      });
    }
    function I(t) {}
    function C(t) {
      return Object.getOwnPropertyNames(t);
    }
    function S(t, e) {
      return Object.create(t, e);
    }
    function T() {}
    function M() {}
    function E(t, e) {
      var i = h(t),
        n = new M();
      return (
        a(n, '[[IteratedObject]]', i),
        a(n, '[[ArrayIteratorNextIndex]]', 0),
        a(n, '[[ArrayIterationKind]]', e),
        n
      );
    }
    var L,
      D = !1,
      A = void 0,
      N = (function(t, e) {
        return t
          ? function(e) {
              t.resolve().then(function() {
                e();
              });
            }
          : e
          ? function(t) {
              e(t);
            }
          : function(t) {
              setTimeout(t, 0);
            };
      })(t.Promise, t.setImmediate),
      R = t.isNaN,
      B = t.parseInt,
      k = t.parseFloat,
      P = Math.E,
      O = Math.LOG10E,
      U = Math.LOG2E,
      V = Math.abs,
      F = Math.ceil,
      H = Math.exp,
      G = Math.floor,
      z = Math.log,
      j = Math.max,
      W = Math.min,
      X = Math.pow,
      q = Math.random,
      Y = Math.sqrt,
      J = String.prototype.match,
      K = String.prototype.replace,
      Z = String.prototype.search,
      Q = String.prototype.split,
      $ = Object.create(null);
    !(function() {
      function i(t) {
        if (!(this instanceof i)) return new i(t, r);
        if (this instanceof i && arguments[1] !== r) throw TypeError();
        var e = t === A ? A : String(t);
        return (
          a(
            this,
            '[[SymbolData]]',
            (function(t) {
              return Array(t + 1)
                .join('x')
                .replace(/x/g, function() {
                  return q() < 0.5 ? '‌' : '‍';
                });
            })(128)
          ),
          a(this, '[[Description]]', e),
          (s[this] = this),
          this
        );
      }
      var r = Object.create(null),
        s = {};
      L = function(t) {
        return s[t];
      };
      var o = [];
      ('Symbol' in t && !D) || (t.Symbol = i),
        n(i, 'for', function(t) {
          for (var e = String(t), n = 0; n < o.length; ++n) {
            var a = o[n];
            if (d(a['[[key]]'], e)) return a['[[symbol]]'];
          }
          var r = i(t);
          return o.push({ '[[key]]': e, '[[symbol]]': r }), r;
        }),
        n(t.Symbol, 'iterator', t.Symbol('Symbol.iterator')),
        n(i, 'keyFor', function(t) {
          if (!(t instanceof i)) throw TypeError();
          for (var e = 0; e < o.length; ++e) {
            var n = o[e];
            if (d(n['[[symbol]]'], t)) return n['[[key]]'];
          }
          return A;
        }),
        n(t.Symbol, 'match', t.Symbol('Symbol.match')),
        n(t.Symbol, 'replace', t.Symbol('Symbol.replace')),
        n(t.Symbol, 'search', t.Symbol('Symbol.search')),
        n(t.Symbol, 'split', t.Symbol('Symbol.split')),
        n(t.Symbol, 'toStringTag', t.Symbol('Symbol.toStringTag')),
        Object.defineProperty(i.prototype, 'toString', {
          value: function() {
            var t = e(this),
              i = t['[[Description]]'];
            return 'Symbol(' + (i === A ? '' : i) + t['[[SymbolData]]'] + ')';
          },
          configurable: !0,
          writeable: !0,
          enumerable: !1
        }),
        Object.defineProperty(i.prototype, 'valueOf', {
          value: function() {
            throw TypeError();
          },
          configurable: !0,
          writeable: !0,
          enumerable: !1
        });
    })();
    var tt = {},
      et = t.Symbol.iterator,
      it = t.Symbol.match,
      nt = t.Symbol.replace,
      at = t.Symbol.search,
      rt = t.Symbol.split,
      st = t.Symbol.toStringTag;
    n(Object, 'assign', function(t, e) {
      var i = h(t);
      if (arguments.length < 2) return i;
      for (var n = 1; n < arguments.length; ) {
        var a = arguments[n++];
        if (a === A || null === a) var r = [];
        else {
          var s = h(a);
          r = C(s);
        }
        for (var o = 0; o < r.length; ++o) {
          var l = r[o],
            c = Object.getOwnPropertyDescriptor(s, l);
          if (c !== A && c.enumerable) {
            var u = s[l];
            i[l] = u;
          }
        }
      }
      return i;
    }),
      (function() {
        function e(t) {
          return !L(t);
        }
        var i = 'symbol' == typeof t.Symbol(),
          a = Object.getOwnPropertyNames,
          r = Object.keys,
          s = 'object' == typeof window ? a(window) : [];
        n(
          Object,
          'getOwnPropertyNames',
          function(t) {
            if ('[object Window]' === Object.prototype.toString.call(t))
              try {
                return a(t).filter(e);
              } catch (t) {
                return s.slice();
              }
            return a(t).filter(e);
          },
          !i
        ),
          n(
            Object,
            'getOwnPropertySymbols',
            function(t) {
              return a(t)
                .filter(L)
                .map(L);
            },
            !i
          ),
          n(
            Object,
            'keys',
            function(t) {
              return r(t).filter(e);
            },
            !i
          );
      })(),
      n(Object, 'is', function(t, e) {
        return d(t, e);
      }),
      n(Object, 'setPrototypeOf', function(t, e) {
        if ('object' !== s(t)) throw TypeError();
        if ('object' !== s(e) && 'null' !== s(e)) throw TypeError();
        return (t.__proto__ = e), t;
      });
    var ot = Object.prototype.toString;
    n(Object.prototype, 'toString', function() {
      var t = e(this);
      return t === Object(t) && st in t
        ? '[object ' + t[st] + ']'
        : ot.apply(t, arguments);
    }),
      n(t.Symbol.prototype, t.Symbol.toStringTag, 'Symbol'),
      n(
        Number,
        'EPSILON',
        (function() {
          var t, e;
          for (t = 1; 1 + t !== 1; t /= 2) e = t;
          return e;
        })()
      ),
      n(Number, 'isFinite', function(t) {
        return 'number' === s(t) && t == t && t !== 1 / 0 && t !== -1 / 0;
      }),
      n(Number, 'isInteger', function(t) {
        return (
          'number' === s(t) &&
          t == t &&
          t !== 1 / 0 &&
          t !== -1 / 0 &&
          o(t) === t
        );
      }),
      n(Number, 'isNaN', function(t) {
        return 'number' === s(t) && t != t;
      }),
      n(Number, 'isSafeInteger', function(t) {
        if ('number' !== s(t)) return !1;
        if (t != t || t === 1 / 0 || t === -1 / 0) return !1;
        var e = o(t);
        return e === t && V(e) <= 9007199254740991;
      }),
      n(Number, 'MAX_SAFE_INTEGER', 9007199254740991),
      n(Number, 'MIN_SAFE_INTEGER', -9007199254740991),
      n(Number, 'parseFloat', k),
      n(Number, 'parseInt', B),
      n(Math, st, 'Math'),
      n(Math, 'acosh', function(t) {
        return (t = Number(t)), z(t + Y(t * t - 1));
      }),
      n(Math, 'asinh', function(t) {
        if (((t = Number(t)), d(t, -0))) return t;
        var e = Y(t * t + 1);
        return z(e === -t ? 0 : t + e);
      }),
      n(Math, 'atanh', function(t) {
        return 0 === (t = Number(t)) ? t : z((1 + t) / (1 - t)) / 2;
      }),
      n(Math, 'cbrt', function(t) {
        if (((t = Number(t)), R(t / t))) return t;
        var e = X(V(t), 1 / 3),
          i = t / e / e;
        return e + (e * (i - e)) / (2 * e + i);
      }),
      n(Math, 'clz32', function(t) {
        function e(t) {
          return 240 & t
            ? 128 & t
              ? 0
              : 64 & t
              ? 1
              : 32 & t
              ? 2
              : 3
            : 8 & t
            ? 4
            : 4 & t
            ? 5
            : 2 & t
            ? 6
            : 1 & t
            ? 7
            : 8;
        }
        return 4278190080 & (t = l(t))
          ? e(t >> 24)
          : 16711680 & t
          ? e(t >> 16) + 8
          : 65280 & t
          ? e(t >> 8) + 16
          : e(t) + 24;
      }),
      n(Math, 'cosh', function(t) {
        return (t = Number(t)), (X(P, t) + X(P, -t)) / 2;
      }),
      n(Math, 'expm1', function(t) {
        return (
          (t = Number(t)),
          d(t, -0) ? -0 : V(t) < 1e-5 ? t + 0.5 * t * t : H(t) - 1
        );
      }),
      n(Math, 'fround', function(t) {
        return R(t)
          ? NaN
          : 1 / t == 1 / 0 || 1 / t == -1 / 0 || t === 1 / 0 || t === -1 / 0
          ? t
          : new Float32Array([t])[0];
      }),
      n(Math, 'hypot', function() {
        for (var t = [], e = 0, i = !1, n = 0; n < arguments.length; ++n) {
          var a = V(Number(arguments[n]));
          if (a === 1 / 0) return a;
          a != a && (i = !0), a > e && (e = a), (t[n] = a);
        }
        if (i) return NaN;
        if (0 === e) return 0;
        var r = 0;
        for (n = 0; n < t.length; ++n) {
          var s = t[n] / e;
          r += s * s;
        }
        return e * Y(r);
      }),
      n(
        Math,
        'imul',
        function(t, e) {
          var i = l(t),
            n = l(e),
            a = 65535 & i,
            r = 65535 & n;
          return (
            (a * r +
              (((((i >>> 16) & 65535) * r + a * ((n >>> 16) & 65535)) << 16) >>>
                0)) |
            0
          );
        },
        'imul' in Math && 0 === Math.imul(1, 2147483648)
      ),
      n(Math, 'log1p', function(t) {
        return (t = Number(t)) < -1
          ? NaN
          : d(t, -0)
          ? -0
          : V(t) > 1e-4
          ? z(1 + t)
          : (-0.5 * t + 1) * t;
      }),
      n(Math, 'log10', function(t) {
        return (t = Number(t)), z(t) * O;
      }),
      n(Math, 'log2', function(t) {
        return (t = Number(t)), z(t) * U;
      }),
      n(Math, 'sign', function(t) {
        return (t = Number(t)) < 0 ? -1 : t > 0 ? 1 : t;
      }),
      n(Math, 'sinh', function(t) {
        return (t = Number(t)), d(t, -0) ? t : (X(P, t) - X(P, -t)) / 2;
      }),
      n(Math, 'tanh', function(t) {
        t = Number(t);
        var e = X(P, 2 * t) - 1,
          i = X(P, 2 * t) + 1;
        return d(t, -0) ? t : e === i ? 1 : e / i;
      }),
      n(Math, 'trunc', function(t) {
        return (t = Number(t)), R(t) ? NaN : t < 0 ? F(t) : G(t);
      });
    var lt = (function() {
      var t = {},
        e = Symbol();
      return (
        (t[Symbol.match] = function() {
          return e;
        }),
        ''.match(t) === e
      );
    })();
    n(String, 'fromCodePoint', function() {
      for (var t = arguments, e = t.length, i = [], n = 0; n < e; ) {
        var a = t[n],
          r = Number(a);
        if (!d(r, o(r)) || r < 0 || r > 1114111)
          throw RangeError('Invalid code point ' + r);
        r < 65536
          ? i.push(String.fromCharCode(r))
          : ((r -= 65536),
            i.push(String.fromCharCode(55296 + (r >> 10))),
            i.push(String.fromCharCode((r % 1024) + 56320))),
          (n += 1);
      }
      return i.join('');
    }),
      n(String, 'raw', function(t) {
        var e = [].slice.call(arguments, 1),
          i = Object(t).raw,
          n = Object(i),
          a = c(n.length);
        if (a <= 0) return '';
        for (var r = [], s = 0; ; ) {
          var o = n[s],
            l = String(o);
          if ((r.push(l), s + 1 === a)) return r.join('');
          o = e[s];
          var h = String(o);
          r.push(h), (s += 1);
        }
      }),
      n(String.prototype, 'codePointAt', function(t) {
        var i = e(this),
          n = String(i),
          a = o(t),
          r = n.length;
        if (a < 0 || a >= r) return A;
        var s = n.charCodeAt(a);
        if (s < 55296 || s > 56319 || a + 1 === r) return s;
        var l = n.charCodeAt(a + 1);
        return l < 56320 || l > 57343
          ? s
          : 1024 * (s - 55296) + (l - 56320) + 65536;
      }),
      n(String.prototype, 'endsWith', function(t) {
        var i = arguments[1],
          n = e(this),
          a = String(n),
          r = String(t),
          s = a.length,
          l = i === A ? s : o(i),
          h = W(j(l, 0), s),
          c = r.length,
          u = h - c;
        return !(u < 0) && a.substring(u, u + c) === r;
      }),
      n(String.prototype, 'includes', function(t) {
        var i = arguments[1],
          n = e(this),
          a = String(n),
          r = String(t),
          s = o(i),
          l = a.length,
          h = W(j(s, 0), l);
        return -1 !== a.indexOf(r, h);
      }),
      n(
        String.prototype,
        'match',
        function(t) {
          var i = e(this),
            n = String(i);
          if (m(t, it)) var a = t;
          else a = new RegExp(t);
          return a[it](n);
        },
        !lt
      ),
      n(String.prototype, 'repeat', function(t) {
        var i = e(this),
          n = String(i),
          a = o(t);
        if (a < 0) throw RangeError();
        if (a === 1 / 0) throw RangeError();
        return new Array(a + 1).join(n);
      }),
      n(
        String.prototype,
        'replace',
        function(t, i) {
          var n = e(this);
          return m(t, nt) ? t[nt](n, i) : K.call(n, t, i);
        },
        !lt
      ),
      n(
        String.prototype,
        'search',
        function(t) {
          var i = e(this),
            n = String(i);
          if (m(t, at)) var a = t;
          else a = new RegExp(t);
          return a[at](n);
        },
        !lt
      ),
      n(
        String.prototype,
        'split',
        function(t, i) {
          var n = e(this);
          return m(t, rt) ? t[rt](n, i) : Q.call(n, t, i);
        },
        !lt
      ),
      n(String.prototype, 'startsWith', function(t) {
        var i = arguments[1],
          n = e(this),
          a = String(n),
          r = String(t),
          s = o(i),
          l = a.length,
          h = W(j(s, 0), l),
          c = r.length;
        return !(c + h > l) && a.substring(h, h + c) === r;
      }),
      n(String.prototype, et, function() {
        return (function(t, e) {
          var i = String(t),
            n = new T();
          return (
            a(n, '[[IteratedString]]', i),
            a(n, '[[StringIteratorNextIndex]]', 0),
            a(n, '[[StringIterationKind]]', e),
            n
          );
        })(this, 'value');
      });
    var ht = Object.create(tt);
    (T.prototype = ht),
      n(ht, 'next', function() {
        var t = h(this),
          e = String(t['[[IteratedString]]']),
          i = t['[[StringIteratorNextIndex]]'];
        if (i >= e.length)
          return a(t, '[[StringIteratorNextIndex]]', 1 / 0), w(A, !0);
        var n = e.codePointAt(i);
        return (
          a(t, '[[StringIteratorNextIndex]]', i + (n > 65535 ? 2 : 1)),
          w(String.fromCodePoint(n), !1)
        );
      }),
      n(ht, st, 'String Iterator'),
      'flags' in RegExp.prototype ||
        Object.defineProperty(RegExp.prototype, 'flags', {
          get: function() {
            var t = String(this);
            return t.substring(t.lastIndexOf('/') + 1);
          }
        }),
      n(RegExp.prototype, it, function(t) {
        var i = e(this);
        return J.call(t, i);
      }),
      n(RegExp.prototype, nt, function(t, i) {
        var n = e(this);
        return K.call(t, n, i);
      }),
      n(RegExp.prototype, at, function(t) {
        var i = e(this);
        return Z.call(t, i);
      }),
      n(RegExp.prototype, rt, function(t, i) {
        var n = e(this);
        return Q.call(t, n, i);
      }),
      n(Array, 'from', function(t) {
        var i = arguments[1],
          n = arguments[2],
          a = e(this);
        if (i === A) var r = !1;
        else {
          if (!u(i)) throw TypeError();
          var s = n;
          r = !0;
        }
        var o = p(t, et);
        if (o !== A) {
          if (_(a)) var l = new a();
          else l = new Array(0);
          for (var d = y(t, o), f = 0; ; ) {
            var m = b(d);
            if (!1 === m) return (l.length = f), l;
            var g = v(m);
            if (r) var w = i.call(s, g);
            else w = g;
            (l[f] = w), (f += 1);
          }
        }
        var x = h(t),
          I = c(x.length);
        for (l = _(a) ? new a(I) : new Array(I), f = 0; f < I; ) {
          var C = x[f];
          (w = r ? i.call(s, C, f) : C), (l[f] = w), (f += 1);
        }
        return (l.length = I), l;
      }),
      n(Array, 'of', function() {
        var t,
          i = arguments,
          n = l(i.length),
          a = e(this);
        t = _(a) ? h((t = new a(n))) : new Array(n);
        for (var r = 0; r < n; ) (t[r] = i[r]), (r += 1);
        return (t.length = n), t;
      }),
      n(Array.prototype, 'copyWithin', function(t, e) {
        var i = arguments[2],
          n = h(this),
          a = c(n.length);
        a = j(a, 0);
        var r,
          s = o(t);
        r = s < 0 ? j(a + s, 0) : W(s, a);
        var l,
          u = o(e);
        l = u < 0 ? j(a + u, 0) : W(u, a);
        var _, d;
        d = (_ = i === A ? a : o(i)) < 0 ? j(a + _, 0) : W(_, a);
        var f,
          p = W(d - l, a - r);
        for (
          l < r && r < l + p
            ? ((f = -1), (l = l + p - 1), (r = r + p - 1))
            : (f = 1);
          p > 0;

        ) {
          var g = String(l),
            y = String(r);
          if (m(n, g)) {
            var v = n[g];
            n[y] = v;
          } else delete n[y];
          (l += f), (r += f), (p -= 1);
        }
        return n;
      });
    var ct = 'entries' in Array.prototype && 'next' in [].entries();
    n(
      Array.prototype,
      'entries',
      function() {
        return E(this, 'key+value');
      },
      !ct
    ),
      n(Array.prototype, 'fill', function(t) {
        var e = arguments[1],
          i = arguments[2],
          n = h(this),
          a = c(n.length);
        a = j(a, 0);
        var r,
          s = o(e);
        r = s < 0 ? j(a + s, 0) : W(s, a);
        var l, u;
        for (u = (l = i === A ? a : o(i)) < 0 ? j(a + l, 0) : W(l, a); r < u; )
          (n[String(r)] = t), (r += 1);
        return n;
      }),
      n(Array.prototype, 'find', function(t) {
        var e = h(this),
          i = o(e.length);
        if (!u(t)) throw TypeError();
        for (var n = arguments.length > 1 ? arguments[1] : A, a = 0; a < i; ) {
          var r = String(a);
          if (m(e, r)) {
            var s = e[r],
              l = t.call(n, s, a, e);
            if (Boolean(l)) return s;
          }
          ++a;
        }
        return A;
      }),
      n(Array.prototype, 'findIndex', function(t) {
        var e = h(this),
          i = c(e.length);
        if (!u(t)) throw TypeError();
        for (var n = arguments.length > 1 ? arguments[1] : A, a = 0; a < i; ) {
          var r = String(a);
          if (m(e, r)) {
            var s = e[r],
              o = t.call(n, s, a, e);
            if (Boolean(o)) return a;
          }
          ++a;
        }
        return -1;
      }),
      n(
        Array.prototype,
        'keys',
        function() {
          return E(this, 'key');
        },
        !ct
      ),
      n(
        Array.prototype,
        'values',
        function() {
          return E(this, 'value');
        },
        !ct
      ),
      n(Array.prototype, et, Array.prototype.values);
    var ut = Object.create(tt);
    (M.prototype = ut),
      n(ut, 'next', function() {
        var t = e(this);
        if ('object' !== s(t)) throw TypeError();
        var i,
          n,
          r = t['[[IteratedObject]]'],
          o = t['[[ArrayIteratorNextIndex]]'],
          h = t['[[ArrayIterationKind]]'],
          c = l(r.length);
        if (-1 !== h.indexOf('sparse'))
          for (var u = !1; !u && o < c; )
            (u = m(r, (i = String(o)))) || (o += 1);
        if (o >= c) return a(t, '[[ArrayIteratorNextIndex]]', 1 / 0), w(A, !0);
        if (
          ((i = o),
          a(t, '[[ArrayIteratorNextIndex]]', o + 1),
          -1 !== h.indexOf('value') && (n = r[i]),
          -1 !== h.indexOf('key+value'))
        )
          return w([i, n], !1);
        if (-1 !== h.indexOf('key')) return w(i, !1);
        if ('value' === h) return w(n, !1);
        throw Error('Internal error');
      }),
      n(ut, st, 'Array Iterator'),
      [
        'Int8Array',
        'Uint8Array',
        'Uint8ClampedArray',
        'Int16Array',
        'Uint16Array',
        'Int32Array',
        'Uint32Array',
        'Float32Array',
        'Float64Array'
      ].forEach(function(i) {
        if (i in t) {
          var a = t[i];
          n(a, 'from', function(t) {
            var i = arguments[1],
              n = arguments[2],
              a = e(this);
            if (!_(a)) throw TypeError();
            if (i === A) var r = !1;
            else {
              if (u(i)) throw TypeError();
              var s = n;
              r = !0;
            }
            var o = p(t, et);
            if (o !== A) {
              for (var l = y(t, o), d = [], f = !0; !1 !== f; )
                if (!1 !== (f = b(l))) {
                  var m = v(f);
                  d.push(m);
                }
              for (var g = d.length, w = new a(g), x = 0; x < g; ) {
                var I = d.shift();
                if (r) var C = i.call(s, I);
                else C = I;
                (w[x] = C), ++x;
              }
              return w;
            }
            var S = h(t);
            for (w = new a((g = c(S.length))), x = 0; x < g; )
              (I = S[x]), (C = r ? i.call(s, I, x) : I), (w[x] = C), ++x;
            return w;
          }),
            n(a, 'of', function() {
              for (
                var t = arguments, i = t.length, n = new (e(this))(i), a = 0;
                a < i;

              )
                (n[a] = t[a]), ++a;
              return n;
            }),
            n(a.prototype, 'copyWithin', Array.prototype.copyWithin),
            n(a.prototype, 'entries', Array.prototype.entries),
            n(a.prototype, 'every', Array.prototype.every),
            n(a.prototype, 'fill', function(t) {
              var e = arguments[1],
                i = arguments[2],
                n = h(this),
                a = c(n.length);
              a = j(a, 0);
              var r,
                s = o(e);
              r = s < 0 ? j(a + s, 0) : W(s, a);
              var l, u;
              for (
                u = (l = i === A ? a : o(i)) < 0 ? j(a + l, 0) : W(l, a);
                r < u;

              )
                (n[String(r)] = t), (r += 1);
              return n;
            }),
            n(a.prototype, 'filter', function(t) {
              var e = arguments[1],
                i = h(this),
                n = c(i.length);
              if (!u(t)) throw TypeError();
              for (
                var a = e, r = i.constructor, s = [], o = 0, l = 0;
                o < n;

              ) {
                var _ = i[o];
                t.call(a, _, o, i) && (s.push(_), ++l), ++o;
              }
              for (var d = new r(l), f = 0, p = 0; p < s.length; ++p) {
                var m = s[p];
                (d[f] = m), ++f;
              }
              return d;
            }),
            n(a.prototype, 'find', Array.prototype.find),
            n(a.prototype, 'findIndex', Array.prototype.findIndex),
            n(a.prototype, 'forEach', Array.prototype.forEach),
            n(a.prototype, 'indexOf', Array.prototype.indexOf),
            n(a.prototype, 'join', Array.prototype.join),
            n(a.prototype, 'keys', Array.prototype.keys),
            n(a.prototype, 'lastIndexOf', Array.prototype.lastIndexOf),
            n(a.prototype, 'map', function(t) {
              var e = arguments[1],
                i = h(this),
                n = c(i.length);
              if (!u(t)) throw TypeError();
              var a = e,
                r = A,
                s = i.constructor;
              _(s) && (r = new s(n)), r === A && (r = new Array(n));
              for (var o = 0; o < n; ) {
                if (m(i, o)) {
                  var l = i[o],
                    d = t.call(a, l, o, i);
                  r[o] = d;
                }
                ++o;
              }
              return r;
            }),
            n(a.prototype, 'reduce', Array.prototype.reduce),
            n(a.prototype, 'reduceRight', Array.prototype.reduceRight),
            n(a.prototype, 'reverse', Array.prototype.reverse),
            n(a.prototype, 'slice', function(t, e) {
              var i = h(this),
                n = c(i.length),
                a = o(t),
                r = a < 0 ? j(n + a, 0) : W(a, n),
                s = e === A ? n : o(e),
                l = s < 0 ? j(n + s, 0) : W(s, n),
                u = l - r,
                d = i.constructor;
              if (!_(d)) throw TypeError();
              for (var f = new d(u), p = 0; r < l; ) {
                var m = i[r];
                (f[p] = m), ++r, ++p;
              }
              return f;
            }),
            n(a.prototype, 'some', Array.prototype.some),
            n(a.prototype, 'sort', function() {
              var t = arguments[0];
              return Array.prototype.sort.call(this, function(e, i) {
                return e != e && i != i
                  ? 0
                  : e != e
                  ? 1
                  : i != i
                  ? -1
                  : t !== A
                  ? t(e, i)
                  : e < i
                  ? -1
                  : e > i
                  ? 1
                  : 0;
              });
            }),
            n(a.prototype, 'values', Array.prototype.values),
            n(a.prototype, et, a.prototype.values),
            n(a.prototype, st, i);
        }
      }),
      (function() {
        function i() {
          var t = e(this),
            i = arguments[0];
          if ('object' !== s(t)) throw TypeError();
          if ('[[MapData]]' in t) throw TypeError();
          if (i !== A) {
            var n = t.set;
            if (!u(n)) throw TypeError();
            var r = y(h(i));
          }
          if ((a(t, '[[MapData]]', { keys: [], values: [] }), r === A))
            return t;
          for (;;) {
            var o = b(r);
            if (!1 === o) return t;
            var l = v(o);
            if ('object' !== s(l)) throw TypeError();
            var c = l[0],
              _ = l[1];
            n.call(t, c, _);
          }
          return t;
        }
        function r(t, e) {
          var i;
          if (e == e) return t.keys.indexOf(e);
          for (i = 0; i < t.keys.length; i += 1) if (f(t.keys[i], e)) return i;
          return -1;
        }
        function o() {}
        function l(t, e) {
          if ('object' !== s(t)) throw TypeError();
          if (!('[[MapData]]' in t)) throw TypeError();
          if (t['[[MapData]]'] === A) throw TypeError();
          var i = new o();
          return (
            a(i, '[[Map]]', t),
            a(i, '[[MapNextIndex]]', 0),
            a(i, '[[MapIterationKind]]', e),
            i
          );
        }
        ('Map' in t &&
          !D &&
          !(function() {
            try {
              return new t.Map([]), !1;
            } catch (t) {
              return !0;
            }
          })() &&
          !(function() {
            try {
              return !new t.Map().entries().next;
            } catch (t) {
              return !0;
            }
          })() &&
          1 === new t.Map([['a', 1]]).size) ||
          (t.Map = i);
        n((i.prototype = {}), 'clear', function() {
          var t = e(this);
          if ('object' !== s(t)) throw TypeError();
          if (!('[[MapData]]' in t)) throw TypeError();
          if (t['[[MapData]]'] === A) throw TypeError();
          var i = t['[[MapData]]'];
          return (i.keys.length = 0), (i.values.length = 0), A;
        }),
          n(i.prototype, 'delete', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (!('[[MapData]]' in i)) throw TypeError();
            if (i['[[MapData]]'] === A) throw TypeError();
            var n = i['[[MapData]]'],
              a = r(n, t);
            return !(a < 0 || ((n.keys[a] = $), (n.values[a] = $), 0));
          }),
          n(i.prototype, 'entries', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            return l(t, 'key+value');
          }),
          n(i.prototype, 'forEach', function(t) {
            var i = arguments[1],
              n = e(this);
            if ('object' !== s(n)) throw TypeError();
            if (!('[[MapData]]' in n)) throw TypeError();
            if (n['[[MapData]]'] === A) throw TypeError();
            var a = n['[[MapData]]'];
            if (!u(t))
              throw TypeError('First argument to forEach is not callable.');
            for (var r = 0; r < a.keys.length; ++r)
              a.keys[r] !== $ && t.call(i, a.values[r], a.keys[r], n);
            return A;
          }),
          n(i.prototype, 'get', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (!('[[MapData]]' in i)) throw TypeError();
            if (i['[[MapData]]'] === A) throw TypeError();
            var n = i['[[MapData]]'],
              a = r(n, t);
            return a >= 0 ? n.values[a] : A;
          }),
          n(i.prototype, 'has', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (!('[[MapData]]' in i)) throw TypeError();
            if (i['[[MapData]]'] === A) throw TypeError();
            return r(i['[[MapData]]'], t) >= 0;
          }),
          n(i.prototype, 'keys', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            return l(t, 'key');
          }),
          n(i.prototype, 'set', function(t, i) {
            var n = e(this);
            if ('object' !== s(n)) throw TypeError();
            if (!('[[MapData]]' in n)) throw TypeError();
            if (n['[[MapData]]'] === A) throw TypeError();
            var a = n['[[MapData]]'],
              o = r(a, t);
            return (
              o < 0 && (o = a.keys.length),
              d(t, -0) && (t = 0),
              (a.keys[o] = t),
              (a.values[o] = i),
              n
            );
          }),
          Object.defineProperty(i.prototype, 'size', {
            get: function() {
              var t = e(this);
              if ('object' !== s(t)) throw TypeError();
              if (!('[[MapData]]' in t)) throw TypeError();
              if (t['[[MapData]]'] === A) throw TypeError();
              for (
                var i = t['[[MapData]]'], n = 0, a = 0;
                a < i.keys.length;
                ++a
              )
                i.keys[a] !== $ && (n += 1);
              return n;
            }
          }),
          n(i.prototype, 'values', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            return l(t, 'value');
          }),
          n(i.prototype, et, function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            return l(t, 'key+value');
          }),
          n(t.Map.prototype, st, 'Map');
        var c = Object.create(tt);
        (o.prototype = c),
          n(c, 'next', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            for (
              var i = t['[[Map]]'],
                n = t['[[MapNextIndex]]'],
                r = t['[[MapIterationKind]]'],
                o = i['[[MapData]]'];
              n < o.keys.length;

            ) {
              var l = { key: o.keys[n], value: o.values[n] };
              if (((n = n += 1), a(t, '[[MapNextIndex]]', n), l.key !== $))
                return 'key' === r
                  ? w(l.key, !1)
                  : 'value' === r
                  ? w(l.value, !1)
                  : w([l.key, l.value], !1);
            }
            return w(A, !0);
          }),
          n(c, st, 'Map Iterator');
      })(),
      (function() {
        function i() {
          var t = e(this),
            i = arguments[0];
          if ('object' !== s(t)) throw TypeError();
          if ('[[SetData]]' in t) throw TypeError();
          if (i !== A) {
            var n = t.add;
            if (!u(n)) throw TypeError();
            var r = y(h(i));
          }
          if ((a(t, '[[SetData]]', []), r === A)) return t;
          for (;;) {
            var o = b(r);
            if (!1 === o) return t;
            var l = v(o);
            n.call(t, l);
          }
          return t;
        }
        function r(t, e) {
          var i;
          if (e == e) return t.indexOf(e);
          for (i = 0; i < t.length; i += 1) if (f(t[i], e)) return i;
          return -1;
        }
        function o() {}
        function l(t, e) {
          if ('object' !== s(t)) throw TypeError();
          if (!('[[SetData]]' in t)) throw TypeError();
          if (t['[[SetData]]'] === A) throw TypeError();
          var i = new o();
          return (
            a(i, '[[IteratedSet]]', t),
            a(i, '[[SetNextIndex]]', 0),
            a(i, '[[SetIterationKind]]', e),
            i
          );
        }
        ('Set' in t &&
          !D &&
          !(function() {
            try {
              return !new t.Set().entries().next;
            } catch (t) {
              return !0;
            }
          })() &&
          1 === new t.Set([1]).size) ||
          (t.Set = i);
        n((i.prototype = {}), 'add', function(t) {
          var i = e(this);
          if ('object' !== s(i)) throw TypeError();
          if (!('[[SetData]]' in i)) throw TypeError();
          if (i['[[SetData]]'] === A) throw TypeError();
          d(t, -0) && (t = 0);
          var n = r(i['[[SetData]]'], t);
          return (
            n < 0 && (n = i['[[SetData]]'].length), (i['[[SetData]]'][n] = t), i
          );
        }),
          n(i.prototype, 'clear', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            if (!('[[SetData]]' in t)) throw TypeError();
            if (t['[[SetData]]'] === A) throw TypeError();
            return (t['[[SetData]]'].length = 0), A;
          }),
          n(i.prototype, 'delete', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (!('[[SetData]]' in i)) throw TypeError();
            if (i['[[SetData]]'] === A) throw TypeError();
            var n = i['[[SetData]]'],
              a = r(n, t);
            return !(a < 0 || ((n[a] = $), 0));
          }),
          n(i.prototype, 'entries', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            return l(t, 'key+value');
          }),
          n(i.prototype, 'forEach', function(t) {
            var i = arguments[1],
              n = e(this);
            if ('object' !== s(n)) throw TypeError();
            if (!('[[SetData]]' in n)) throw TypeError();
            if (n['[[SetData]]'] === A) throw TypeError();
            var a = n['[[SetData]]'];
            if (!u(t))
              throw TypeError('First argument to forEach is not callable.');
            for (var r = 0; r < a.length; ++r)
              a[r] !== $ && t.call(i, a[r], a[r], n);
          }),
          n(i.prototype, 'has', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (!('[[SetData]]' in i)) throw TypeError();
            if (i['[[SetData]]'] === A) throw TypeError();
            return -1 !== r(i['[[SetData]]'], t);
          }),
          Object.defineProperty(i.prototype, 'size', {
            get: function() {
              var t = e(this);
              if ('object' !== s(t)) throw TypeError();
              if (!('[[SetData]]' in t)) throw TypeError();
              if (t['[[SetData]]'] === A) throw TypeError();
              for (var i = t['[[SetData]]'], n = 0, a = 0; a < i.length; ++a)
                i[a] !== $ && (n += 1);
              return n;
            }
          }),
          n(i.prototype, 'values', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            return l(t, 'value');
          }),
          (i.prototype.keys = i.prototype.values),
          n(i.prototype, et, function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            return l(t);
          }),
          n(t.Set.prototype, st, 'Set');
        var c = Object.create(tt);
        (o.prototype = c),
          n(c, 'next', function() {
            var t = e(this);
            if ('object' !== s(t)) throw TypeError();
            for (
              var i = t['[[IteratedSet]]'],
                n = t['[[SetNextIndex]]'],
                r = t['[[SetIterationKind]]'],
                o = i['[[SetData]]'];
              n < o.length;

            ) {
              var l = o[n];
              if (((n = n += 1), a(t, '[[SetNextIndex]]', n), l !== $))
                return 'key+value' === r ? w([l, l], !1) : w(l, !1);
            }
            return w(A, !0);
          }),
          n(c, st, 'Set Iterator');
      })(),
      (function() {
        function i() {
          var t = e(this),
            i = arguments[0];
          if ('object' !== s(t)) throw TypeError();
          if ('[[WeakMapData]]' in t) throw TypeError();
          if (i !== A) {
            var n = t.set;
            if (!u(n)) throw TypeError();
            var o = y(h(i));
          }
          if ((a(t, '[[WeakMapData]]', new r()), o === A)) return t;
          for (;;) {
            var l = b(o);
            if (!1 === l) return t;
            var c = v(l);
            if ('object' !== s(c)) throw TypeError();
            var _ = c[0],
              d = c[1];
            n.call(t, _, d);
          }
          return t;
        }
        ('WeakMap' in t && !D) || (t.WeakMap = i);
        n((i.prototype = {}), 'delete', function(t) {
          var i = e(this);
          if ('object' !== s(i)) throw TypeError();
          if (i['[[WeakMapData]]'] === A) throw TypeError();
          if ('object' !== s(t)) throw TypeError('Expected object');
          return i['[[WeakMapData]]'].remove(t);
        }),
          n(i.prototype, 'get', function(t, i) {
            var n = e(this);
            if ('object' !== s(n)) throw TypeError();
            if (n['[[WeakMapData]]'] === A) throw TypeError();
            if ('object' !== s(t)) throw TypeError('Expected object');
            return n['[[WeakMapData]]'].get(t, i);
          }),
          n(i.prototype, 'has', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (i['[[WeakMapData]]'] === A) throw TypeError();
            if ('object' !== s(t)) throw TypeError('Expected object');
            return i['[[WeakMapData]]'].has(t);
          }),
          n(i.prototype, 'set', function(t, i) {
            var n = e(this);
            if ('object' !== s(n)) throw TypeError();
            if (n['[[WeakMapData]]'] === A) throw TypeError();
            if ('object' !== s(t)) throw TypeError('Expected object');
            return n['[[WeakMapData]]'].set(t, i), n;
          }),
          n(t.WeakMap.prototype, st, 'WeakMap'),
          (function() {
            var e = new t.WeakMap(),
              i = t.WeakMap.prototype.set;
            n(
              t.WeakMap.prototype,
              'set',
              function() {
                return i.apply(this, arguments), this;
              },
              e.set({}, 0) !== e
            );
          })();
      })(),
      (function() {
        function i() {
          var t = e(this),
            i = arguments[0];
          if ('object' !== s(t)) throw TypeError();
          if ('[[WeakSetData]]' in t) throw TypeError();
          if (i !== A) {
            var n = t.add;
            if (!u(n)) throw TypeError();
            var o = y(h(i));
          }
          if ((a(t, '[[WeakSetData]]', new r()), o === A)) return t;
          for (;;) {
            var l = b(o);
            if (!1 === l) return t;
            var c = v(l);
            n.call(t, c);
          }
          return t;
        }
        ('WeakSet' in t && !D) || (t.WeakSet = i);
        n((i.prototype = {}), 'add', function(t) {
          var i = e(this);
          if ('object' !== s(i)) throw TypeError();
          if (i['[[WeakSetData]]'] === A) throw TypeError();
          if ('object' !== s(t)) throw TypeError('Expected object');
          return i['[[WeakSetData]]'].set(t, !0), i;
        }),
          n(i.prototype, 'delete', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (i['[[WeakSetData]]'] === A) throw TypeError();
            if ('object' !== s(t)) throw TypeError('Expected object');
            return i['[[WeakSetData]]'].remove(t);
          }),
          n(i.prototype, 'has', function(t) {
            var i = e(this);
            if ('object' !== s(i)) throw TypeError();
            if (i['[[WeakSetData]]'] === A) throw TypeError();
            if ('object' !== s(t)) throw TypeError('Expected object');
            return i['[[WeakSetData]]'].has(t);
          }),
          n(t.WeakSet.prototype, st, 'WeakSet'),
          (function() {
            var e = new t.WeakSet(),
              i = t.WeakSet.prototype.add;
            n(
              t.WeakSet.prototype,
              'add',
              function() {
                return i.apply(this, arguments), this;
              },
              e.add({}) !== e
            );
          })();
      })(),
      'ArrayBuffer' in t &&
        (n(ArrayBuffer, 'isView', function(t) {
          return (
            'object' === s(t) &&
            'buffer' in t &&
            t.buffer instanceof ArrayBuffer
          );
        }),
        n(ArrayBuffer.prototype, st, 'ArrayBuffer')),
      'DataView' in t && n(DataView.prototype, st, 'DataView'),
      n(JSON, st, 'JSON'),
      n(tt, et, function() {
        return this;
      }),
      (function() {
        function i(t) {
          var e = { '[[value]]': !1 },
            i = (function() {
              var t = function(e) {
                var i = t['[[Promise]]'],
                  n = t['[[AlreadyResolved]]'];
                if (n['[[value]]']) return A;
                if ((a(n, '[[value]]', !0), d(e, i))) {
                  var o = TypeError();
                  return h(i, o);
                }
                if ('object' !== s(e)) return r(i, e);
                try {
                  var l = e.then;
                } catch (l) {
                  return h(i, l);
                }
                return u(l) ? (x(0, f, [i, e, l]), A) : r(i, e);
              };
              return t;
            })();
          a(i, '[[Promise]]', t), a(i, '[[AlreadyResolved]]', e);
          var n = (function() {
            var t = function(e) {
              var i = t['[[Promise]]'],
                n = t['[[AlreadyResolved]]'];
              return n['[[value]]'] ? A : (a(n, '[[value]]', !0), h(i, e));
            };
            return t;
          })();
          return (
            a(n, '[[Promise]]', t),
            a(n, '[[AlreadyResolved]]', e),
            { '[[Resolve]]': i, '[[Reject]]': n }
          );
        }
        function r(t, e) {
          var i = t['[[PromiseFulfillReactions]]'];
          return (
            a(t, '[[PromiseResult]]', e),
            a(t, '[[PromiseFulfillReactions]]', A),
            a(t, '[[PromiseRejectReactions]]', A),
            a(t, '[[PromiseState]]', 'fulfilled'),
            c(i, e)
          );
        }
        function o(t) {
          return (function(t, e) {
            var i = {};
            a(i, '[[Promise]]', t),
              a(i, '[[Resolve]]', A),
              a(i, '[[Reject]]', A);
            var n = (function() {
              var t = function(e, i) {
                var n = t['[[Capability]]'];
                if (n['[[Resolve]]'] !== A) throw TypeError();
                if (n['[[Reject]]'] !== A) throw TypeError();
                return a(n, '[[Resolve]]', e), a(n, '[[Reject]]', i), A;
              };
              return t;
            })();
            a(n, '[[Capability]]', i);
            var r = (t = new e(n));
            if ((a(i, '[[Promise]]', t), !u(i['[[Resolve]]'])))
              throw TypeError();
            if (!u(i['[[Reject]]'])) throw TypeError();
            if ('object' === s(r) && !d(t, r)) throw TypeError();
            return i;
          })(A, t);
        }
        function l(t) {
          return (
            'object' === s(t) &&
            '[[PromiseState]]' in t &&
            t['[[PromiseState]]'] !== A
          );
        }
        function h(t, e) {
          var i = t['[[PromiseRejectReactions]]'];
          return (
            a(t, '[[PromiseResult]]', e),
            a(t, '[[PromiseFulfillReactions]]', A),
            a(t, '[[PromiseRejectReactions]]', A),
            a(t, '[[PromiseState]]', 'rejected'),
            c(i, e)
          );
        }
        function c(t, e) {
          for (var i = 0, n = t.length; i < n; ++i) x(0, _, [t[i], e]);
          return A;
        }
        function _(t, e) {
          var i,
            n = t['[[Capabilities]]'],
            a = t['[[Handler]]'];
          try {
            if ('Identity' === a) i = e;
            else {
              if ('Thrower' === a) throw e;
              i = a.call(A, e);
            }
          } catch (i) {
            return n['[[Reject]]'].call(A, i), void I();
          }
          I(n['[[Resolve]]'].call(A, i));
        }
        function f(t, e, n) {
          var a = i(t);
          try {
            n.call(e, a['[[Resolve]]'], a['[[Reject]]']);
          } catch (t) {
            return void I(a['[[Reject]]'].call(A, t));
          }
          I();
        }
        function p(t) {
          var e = { configurable: !1, enumerable: !1, writable: !0, value: A };
          Object.defineProperty(this, '[[PromiseState]]', e),
            Object.defineProperty(this, '[[PromiseConstructor]]', e),
            Object.defineProperty(this, '[[PromiseResult]]', e),
            Object.defineProperty(this, '[[PromiseFulfillReactions]]', e),
            Object.defineProperty(this, '[[PromiseRejectReactions]]', e);
          if ('object' !== s(this)) throw new TypeError();
          if (!('[[PromiseState]]' in this)) throw TypeError();
          if (this['[[PromiseState]]'] !== A) throw TypeError();
          if (!u(t)) throw TypeError();
          return (
            a(this, '[[PromiseConstructor]]', p),
            (function(t, e) {
              a(t, '[[PromiseState]]', 'pending'),
                a(t, '[[PromiseFulfillReactions]]', []),
                a(t, '[[PromiseRejectReactions]]', []);
              var n = i(t);
              try {
                e.call(A, n['[[Resolve]]'], n['[[Reject]]']);
              } catch (t) {
                n['[[Reject]]'].call(A, t);
              }
              return t;
            })(this, t)
          );
        }
        function m() {
          var t = function(e) {
            var i = t['[[AlreadyCalled]]'];
            if (i.value) return A;
            i.value = !0;
            var n = t['[[Index]]'],
              a = t['[[Values]]'],
              r = t['[[Capabilities]]'],
              s = t['[[RemainingElements]]'];
            try {
              a[n] = e;
            } catch (t) {
              return r['[[Reject]]'].call(A, t), r['[[Promise]]'];
            }
            return (
              (s.value -= 1), 0 === s.value ? r['[[Resolve]]'].call(A, a) : A
            );
          };
          return t;
        }
        n(p, 'all', function(t) {
          var i = e(this),
            n = o(i);
          try {
            var r = y(t);
          } catch (t) {
            return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
          }
          for (var s = [], l = { value: 1 }, h = 0; ; ) {
            try {
              var c = b(r);
            } catch (t) {
              return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
            }
            if (!c)
              return (
                (l.value -= 1),
                0 === l.value && n['[[Resolve]]'].apply(A, s),
                n['[[Promise]]']
              );
            try {
              var u = v(c);
            } catch (t) {
              return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
            }
            try {
              var _ = i.resolve(u);
            } catch (t) {
              return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
            }
            var d = m();
            a(d, '[[AlreadyCalled]]', { value: !1 }),
              a(d, '[[Index]]', h),
              a(d, '[[Values]]', s),
              a(d, '[[Capabilities]]', n),
              a(d, '[[RemainingElements]]', l),
              (l.value += 1);
            try {
              _.then(d, n['[[Reject]]']);
            } catch (t) {
              return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
            }
            h += 1;
          }
        }),
          (p.prototype = {}),
          n(p, 'race', function(t) {
            var i = e(this),
              n = o(i);
            try {
              var a = y(t);
            } catch (t) {
              return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
            }
            for (;;) {
              try {
                var r = b(a);
              } catch (t) {
                return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
              }
              if (!r) return n['[[Promise]]'];
              try {
                var s = v(r);
              } catch (t) {
                return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
              }
              try {
                var l = i.resolve(s);
              } catch (t) {
                return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
              }
              try {
                l.then(n['[[Resolve]]'], n['[[Reject]]']);
              } catch (t) {
                return n['[[Reject]]'].call(A, t), n['[[Promise]]'];
              }
            }
          }),
          n(p, 'reject', function(t) {
            var i = o(e(this));
            return i['[[Reject]]'].call(A, t), i['[[Promise]]'];
          }),
          n(p, 'resolve', function(t) {
            var i = e(this);
            if (l(t) && d(t['[[PromiseConstructor]]'], i)) return t;
            var n = o(i);
            return n['[[Resolve]]'].call(A, t), n['[[Promise]]'];
          }),
          n(p.prototype, 'catch', function(t) {
            return this.then(A, t);
          }),
          (p.prototype.constructor = p),
          n(p.prototype, 'then', function(t, e) {
            if (!l(this)) throw TypeError();
            u(t) || (t = 'Identity'), u(e) || (e = 'Thrower');
            var i = o(this.constructor),
              n = { '[[Capabilities]]': i, '[[Handler]]': t },
              a = { '[[Capabilities]]': i, '[[Handler]]': e };
            return (
              'pending' === this['[[PromiseState]]']
                ? (this['[[PromiseFulfillReactions]]'].push(n),
                  this['[[PromiseRejectReactions]]'].push(a))
                : 'fulfilled' === this['[[PromiseState]]']
                ? x(0, _, [n, this['[[PromiseResult]]']])
                : 'rejected' === this['[[PromiseState]]'] &&
                  x(0, _, [a, this['[[PromiseResult]]']]),
              i['[[Promise]]']
            );
          }),
          ('Promise' in t && !D) || (t.Promise = p),
          'cast' in t.Promise && (t.Promise.resolve = t.Promise.cast);
      })(),
      n(Promise.prototype, st, 'Promise'),
      ('Reflect' in t && !D) || (t.Reflect = {}),
      n(Reflect, 'apply', function(t, e, i) {
        if (!u(t)) throw TypeError();
        return Function.prototype.apply.call(t, e, i);
      }),
      n(Reflect, 'construct', function(t, e) {
        return __cons(t, e);
      }),
      n(Reflect, 'defineProperty', function(t, e, i) {
        try {
          return Object.defineProperty(t, e, i), !0;
        } catch (t) {
          return !1;
        }
      }),
      n(Reflect, 'deleteProperty', function(t, e) {
        try {
          return delete t[e], !g(t, e);
        } catch (t) {
          return !1;
        }
      }),
      n(Reflect, 'enumerate', function(t) {
        return (function(t) {
          var e = [];
          if (Object(t) !== t) return e;
          for (var i = new Set(); null !== t; )
            Object.getOwnPropertyNames(t).forEach(function(n) {
              if (!i.has(n)) {
                var a = Object.getOwnPropertyDescriptor(t, n);
                a && (i.add(n), a.enumerable && e.push(n));
              }
            }),
              (t = Object.getPrototypeOf(t));
          return e[et]();
        })((t = h(t)));
      }),
      n(Reflect, 'get', function(t, e, n) {
        (t = h(t)), (e = String(e)), (n = n === A ? t : h(n));
        var a = i(t, e);
        return a && 'get' in a ? Function.prototype.call.call(a.get, n) : t[e];
      }),
      n(Reflect, 'getOwnPropertyDescriptor', Object.getOwnPropertyDescriptor),
      n(Reflect, 'getPrototypeOf', Object.getPrototypeOf),
      n(Reflect, 'has', function(t, e) {
        return String(e) in h(t);
      }),
      n(Reflect, 'isExtensible', Object.isExtensible),
      n(Reflect, 'ownKeys', function(t) {
        var e = h(t);
        return Object.getOwnPropertyNames(e);
      }),
      n(Reflect, 'preventExtensions', function(t) {
        try {
          return Object.preventExtensions(t), !0;
        } catch (t) {
          return !1;
        }
      }),
      n(Reflect, 'set', function(t, e, n, a) {
        (t = h(t)), (e = String(e)), (a = a === A ? t : h(a));
        var r = i(t, e);
        try {
          return (
            r && 'set' in r
              ? Function.prototype.call.call(r.set, a, n)
              : (t[e] = n),
            !0
          );
        } catch (t) {
          return !1;
        }
      }),
      n(Reflect, 'setPrototypeOf', function(t, e) {
        try {
          return (t.__proto__ = e), Reflect.getPrototypeOf(t) === e;
        } catch (t) {
          return !1;
        }
      });
  })(self),
  (function(t) {
    'use strict';
    function e(t) {
      return (
        (t = Number(t)),
        a(t)
          ? 0
          : 0 === t || t === 1 / 0 || t === -1 / 0
          ? t
          : (t < 0 ? -1 : 1) * s(r(t))
      );
    }
    function i(t, e) {
      if (typeof t != typeof e) return !1;
      switch (typeof t) {
        case 'undefined':
          return !0;
        case 'number':
          return (t != t && e != e) || t === e;
        case 'boolean':
        case 'string':
        case 'object':
        default:
          return t === e;
      }
    }
    var n = void 0,
      a = t.isNaN,
      r = Math.abs,
      s = Math.floor,
      o = (Math.max, Math.min);
    !(function(t, e, i, n) {
      ('includes' in t && !0) ||
        ('function' == typeof i
          ? Object.defineProperty(t, 'includes', {
              value: i,
              configurable: !0,
              enumerable: !1,
              writable: !0
            })
          : Object.defineProperty(t, 'includes', {
              value: i,
              configurable: !1,
              enumerable: !1,
              writable: !1
            }));
    })(Array.prototype, 0, function(t) {
      var a = arguments[1],
        r = (function(t) {
          if (null === t || t === n) throw TypeError();
          return Object(t);
        })(this),
        s = (function(t) {
          var i = e(t);
          return i <= 0 ? 0 : o(i, 9007199254740991);
        })(r.length);
      if (0 === s) return !1;
      var l = e(a);
      if (l >= 0) var h = l;
      else (h = s + l) < 0 && (h = 0);
      for (; h < s; ) {
        if ((r[h], i(r[h], t))) return !0;
        h += 1;
      }
      return !1;
    });
  })(this),
  (function(t) {
    'use strict';
    function e(t, e, i, n) {
      (e in t && !n) ||
        ('function' == typeof i
          ? Object.defineProperty(t, e, {
              value: i,
              configurable: !0,
              enumerable: !1,
              writable: !0
            })
          : Object.defineProperty(t, e, {
              value: i,
              configurable: !1,
              enumerable: !1,
              writable: !1
            }));
    }
    function i(t) {
      if (null === t || t === s) throw TypeError();
      return Object(t);
    }
    function n(t) {
      var e = (function(t) {
        return (
          (t = Number(t)),
          o(t)
            ? 0
            : 0 === t || t === 1 / 0 || t === -1 / 0
            ? t
            : (t < 0 ? -1 : 1) * h(l(t))
        );
      })(t);
      return e <= 0 ? 0 : c(e, 9007199254740991);
    }
    function a(t, e, i) {
      Object.defineProperty(t, e, {
        value: i,
        writable: !0,
        enumerable: !0,
        configurable: !0
      });
    }
    function r(t, e) {
      var i = [];
      return (
        Object.keys(t).forEach(function(n) {
          var a = Object.getOwnPropertyDescriptor(t, n);
          if (a && a.enumerable)
            if ('key' === e) i.push(n);
            else {
              var r = t[n];
              'value' === e ? i.push(r) : i.push([n, r]);
            }
        }),
        i
      );
    }
    var s = void 0,
      o = t.isNaN,
      l = Math.abs,
      h = Math.floor,
      c = Math.min;
    e(Object, 'entries', function(t) {
      return r(i(t), 'key+value');
    }),
      e(Object, 'getOwnPropertyDescriptors', function(t) {
        for (
          var e = i(t), n = Object.getOwnPropertyNames(e), r = {}, s = 0;
          s < n.length;
          ++s
        ) {
          var o = n[s];
          a(r, o, Object.getOwnPropertyDescriptor(e, o));
        }
        return r;
      }),
      e(Object, 'values', function(t) {
        return r(i(t), 'value');
      }),
      e(String.prototype, 'padEnd', function(t) {
        var e = arguments[1],
          i = String(this),
          a = i.length;
        if (e === s) var r = '';
        else r = String(e);
        '' === r && (r = ' ');
        var o = n(t);
        if (o <= a) return i;
        for (var l = o - a, h = ''; h.length < l; ) h += r;
        return i + h.substring(0, l);
      }),
      e(String.prototype, 'padStart', function(t) {
        var e = arguments[1],
          i = String(this),
          a = i.length;
        if (e === s) var r = '';
        else r = String(e);
        '' === r && (r = ' ');
        var o = n(t);
        if (o <= a) return i;
        for (var l = o - a, h = ''; h.length < l; ) h += r;
        return h.substring(0, l) + i;
      });
  })(this),
  (function(t) {
    'use strict';
    'window' in t &&
      'document' in t &&
      ('head' in document ||
        (document.head = document.getElementsByTagName('head')[0]),
      [
        'abbr',
        'article',
        'aside',
        'audio',
        'bdi',
        'canvas',
        'data',
        'datalist',
        'details',
        'dialog',
        'figcaption',
        'figure',
        'footer',
        'header',
        'hgroup',
        'main',
        'mark',
        'meter',
        'nav',
        'output',
        'picture',
        'progress',
        'section',
        'summary',
        'template',
        'time',
        'video'
      ].forEach(function(t) {
        document.createElement(t);
      }),
      !('dataset' in document.createElement('span')) &&
        'Element' in t &&
        Element.prototype &&
        Object.defineProperty &&
        Object.defineProperty(Element.prototype, 'dataset', {
          get: function() {
            for (
              var t = Object.create(null), e = 0;
              e < this.attributes.length;
              ++e
            ) {
              var i = this.attributes[e];
              i.specified &&
                'data-' === i.name.substring(0, 5) &&
                (function(e, i) {
                  var n = i.replace(/-([a-z])/g, function(t, e) {
                    return e.toUpperCase();
                  });
                  (t[n] = e.getAttribute('data-' + i)),
                    Object.defineProperty(t, n, {
                      get: function() {
                        return e.getAttribute('data-' + i);
                      },
                      set: function(t) {
                        e.setAttribute('data-' + i, t);
                      }
                    });
                })(this, i.name.substring(5));
            }
            return t;
          }
        }),
      (function() {
        if (!('atob' in t && 'btoa' in t)) {
          var e =
            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
          (t.atob = function(t) {
            var i = 0,
              n = [],
              a = 0,
              r = 0;
            if (
              ((t = (t = String(t)).replace(/\s/g, '')).length % 4 == 0 &&
                (t = t.replace(/=+$/, '')),
              t.length % 4 == 1)
            )
              throw Error('InvalidCharacterError');
            if (/[^+/0-9A-Za-z]/.test(t)) throw Error('InvalidCharacterError');
            for (; i < t.length; )
              (a = (a << 6) | e.indexOf(t.charAt(i))),
                24 === (r += 6) &&
                  (n.push(String.fromCharCode((a >> 16) & 255)),
                  n.push(String.fromCharCode((a >> 8) & 255)),
                  n.push(String.fromCharCode(255 & a)),
                  (r = 0),
                  (a = 0)),
                (i += 1);
            return (
              12 === r
                ? ((a >>= 4), n.push(String.fromCharCode(255 & a)))
                : 18 === r &&
                  ((a >>= 2),
                  n.push(String.fromCharCode((a >> 8) & 255)),
                  n.push(String.fromCharCode(255 & a))),
              n.join('')
            );
          }),
            (t.btoa = function(t) {
              t = String(t);
              var i,
                n,
                a,
                r,
                s,
                o,
                l,
                h = 0,
                c = [];
              if (/[^\x00-\xFF]/.test(t)) throw Error('InvalidCharacterError');
              for (; h < t.length; )
                (r = (i = t.charCodeAt(h++)) >> 2),
                  (s = ((3 & i) << 4) | ((n = t.charCodeAt(h++)) >> 4)),
                  (o = ((15 & n) << 2) | ((a = t.charCodeAt(h++)) >> 6)),
                  (l = 63 & a),
                  h === t.length + 2
                    ? ((o = 64), (l = 64))
                    : h === t.length + 1 && (l = 64),
                  c.push(e.charAt(r), e.charAt(s), e.charAt(o), e.charAt(l));
              return c.join('');
            });
        }
      })(),
      (function() {
        function e() {
          var t = i;
          (i = Object.create(null)),
            (a = -1),
            Object.keys(t).forEach(function(e) {
              var i = t[e];
              (i.element &&
                !(function(t) {
                  return t.offsetWidth > 0 && t.offsetHeight > 0;
                })(i.element)) ||
                i.callback(Date.now());
            });
        }
        if (!('requestAnimationFrame' in t)) {
          var i = Object.create(null),
            n = 0,
            a = -1;
          (t.requestAnimationFrame = function(r, s) {
            var o = ++n;
            return (
              (i[o] = { callback: r, element: s }),
              -1 === a && (a = t.setTimeout(e, 1e3 / 60)),
              o
            );
          }),
            (t.cancelAnimationFrame = function(e) {
              delete i[e],
                0 === Object.keys(i).length && (t.clearTimeout(a), (a = -1));
            });
        }
      })());
  })(self),
  (function(t) {
    'use strict';
    function e(t, e) {
      t &&
        Object.keys(e).forEach(function(i) {
          if (!(i in t || i in t.prototype))
            try {
              Object.defineProperty(
                t.prototype,
                i,
                Object.getOwnPropertyDescriptor(e, i)
              );
            } catch (n) {
              t[i] = e[i];
            }
        });
    }
    function i(t) {
      var e = null;
      return (
        1 ===
        (t = t.map(function(t) {
          return t instanceof Node ? t : document.createTextNode(t);
        })).length
          ? (e = t[0])
          : ((e = document.createDocumentFragment()),
            t.forEach(function(t) {
              e.appendChild(t);
            })),
        e
      );
    }
    if ('window' in t && 'document' in t) {
      document.querySelectorAll ||
        (document.querySelectorAll = function(t) {
          var e,
            i = document.createElement('style'),
            n = [];
          for (
            document.documentElement.firstChild.appendChild(i),
              document._qsa = [],
              i.styleSheet.cssText =
                t +
                '{x-qsa:expression(document._qsa && document._qsa.push(this))}',
              window.scrollBy(0, 0),
              i.parentNode.removeChild(i);
            document._qsa.length;

          )
            (e = document._qsa.shift()).style.removeAttribute('x-qsa'),
              n.push(e);
          return (document._qsa = null), n;
        }),
        document.querySelector ||
          (document.querySelector = function(t) {
            var e = document.querySelectorAll(t);
            return e.length ? e[0] : null;
          }),
        document.getElementsByClassName ||
          (document.getElementsByClassName = function(t) {
            return (
              (t = String(t).replace(/^|\s+/g, '.')),
              document.querySelectorAll(t)
            );
          }),
        (t.Node =
          t.Node ||
          function() {
            throw TypeError('Illegal constructor');
          }),
        [
          ['ELEMENT_NODE', 1],
          ['ATTRIBUTE_NODE', 2],
          ['TEXT_NODE', 3],
          ['CDATA_SECTION_NODE', 4],
          ['ENTITY_REFERENCE_NODE', 5],
          ['ENTITY_NODE', 6],
          ['PROCESSING_INSTRUCTION_NODE', 7],
          ['COMMENT_NODE', 8],
          ['DOCUMENT_NODE', 9],
          ['DOCUMENT_TYPE_NODE', 10],
          ['DOCUMENT_FRAGMENT_NODE', 11],
          ['NOTATION_NODE', 12]
        ].forEach(function(e) {
          e[0] in t.Node || (t.Node[e[0]] = e[1]);
        }),
        (t.DOMException =
          t.DOMException ||
          function() {
            throw TypeError('Illegal constructor');
          }),
        [
          ['INDEX_SIZE_ERR', 1],
          ['DOMSTRING_SIZE_ERR', 2],
          ['HIERARCHY_REQUEST_ERR', 3],
          ['WRONG_DOCUMENT_ERR', 4],
          ['INVALID_CHARACTER_ERR', 5],
          ['NO_DATA_ALLOWED_ERR', 6],
          ['NO_MODIFICATION_ALLOWED_ERR', 7],
          ['NOT_FOUND_ERR', 8],
          ['NOT_SUPPORTED_ERR', 9],
          ['INUSE_ATTRIBUTE_ERR', 10],
          ['INVALID_STATE_ERR', 11],
          ['SYNTAX_ERR', 12],
          ['INVALID_MODIFICATION_ERR', 13],
          ['NAMESPACE_ERR', 14],
          ['INVALID_ACCESS_ERR', 15]
        ].forEach(function(e) {
          e[0] in t.DOMException || (t.DOMException[e[0]] = e[1]);
        }),
        (function() {
          function e(t, e, i) {
            if ('function' == typeof e) {
              'DOMContentLoaded' === t && (t = 'load');
              var n = this,
                a = function(t) {
                  (t._timeStamp = Date.now()),
                    (t._currentTarget = n),
                    e.call(this, t),
                    (t._currentTarget = null);
                };
              (this['_' + t + e] = a), this.attachEvent('on' + t, a);
            }
          }
          function i(t, e, i) {
            if ('function' == typeof e) {
              'DOMContentLoaded' === t && (t = 'load');
              var n = this['_' + t + e];
              n && (this.detachEvent('on' + t, n), (this['_' + t + e] = null));
            }
          }
          'Element' in t &&
            !Element.prototype.addEventListener &&
            Object.defineProperty &&
            ((Event.CAPTURING_PHASE = 1),
            (Event.AT_TARGET = 2),
            (Event.BUBBLING_PHASE = 3),
            Object.defineProperties(Event.prototype, {
              CAPTURING_PHASE: {
                get: function() {
                  return 1;
                }
              },
              AT_TARGET: {
                get: function() {
                  return 2;
                }
              },
              BUBBLING_PHASE: {
                get: function() {
                  return 3;
                }
              },
              target: {
                get: function() {
                  return this.srcElement;
                }
              },
              currentTarget: {
                get: function() {
                  return this._currentTarget;
                }
              },
              eventPhase: {
                get: function() {
                  return this.srcElement === this.currentTarget
                    ? Event.AT_TARGET
                    : Event.BUBBLING_PHASE;
                }
              },
              bubbles: {
                get: function() {
                  switch (this.type) {
                    case 'click':
                    case 'dblclick':
                    case 'mousedown':
                    case 'mouseup':
                    case 'mouseover':
                    case 'mousemove':
                    case 'mouseout':
                    case 'mousewheel':
                    case 'keydown':
                    case 'keypress':
                    case 'keyup':
                    case 'resize':
                    case 'scroll':
                    case 'select':
                    case 'change':
                    case 'submit':
                    case 'reset':
                      return !0;
                  }
                  return !1;
                }
              },
              cancelable: {
                get: function() {
                  switch (this.type) {
                    case 'click':
                    case 'dblclick':
                    case 'mousedown':
                    case 'mouseup':
                    case 'mouseover':
                    case 'mouseout':
                    case 'mousewheel':
                    case 'keydown':
                    case 'keypress':
                    case 'keyup':
                    case 'submit':
                      return !0;
                  }
                  return !1;
                }
              },
              timeStamp: {
                get: function() {
                  return this._timeStamp;
                }
              },
              stopPropagation: {
                value: function() {
                  this.cancelBubble = !0;
                }
              },
              preventDefault: {
                value: function() {
                  this.returnValue = !1;
                }
              },
              defaultPrevented: {
                get: function() {
                  return !1 === this.returnValue;
                }
              }
            }),
            [Window, HTMLDocument, Element].forEach(function(t) {
              (t.prototype.addEventListener = e),
                (t.prototype.removeEventListener = i);
            }));
        })(),
        (function() {
          function e(t, e) {
            e = e || { bubbles: !1, cancelable: !1, detail: void 0 };
            var i = document.createEvent('CustomEvent');
            return i.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), i;
          }
          ('CustomEvent' in t && 'function' == typeof t.CustomEvent) ||
            ((e.prototype = t.Event.prototype), (t.CustomEvent = e));
        })(),
        (window.addEvent = function(t, e, i) {
          t.addEventListener
            ? t.addEventListener(e, i, !1)
            : t.attachEvent &&
              ((t['e' + e + i] = i),
              (t[e + i] = function() {
                var n = window.event;
                (n.currentTarget = t),
                  (n.preventDefault = function() {
                    n.returnValue = !1;
                  }),
                  (n.stopPropagation = function() {
                    n.cancelBubble = !0;
                  }),
                  (n.target = n.srcElement),
                  (n.timeStamp = Date.now()),
                  t['e' + e + i].call(this, n);
              }),
              t.attachEvent('on' + e, t[e + i]));
        }),
        (window.removeEvent = function(t, e, i) {
          t.removeEventListener
            ? t.removeEventListener(e, i, !1)
            : t.detachEvent &&
              (t.detachEvent('on' + e, t[e + i]),
              (t[e + i] = null),
              (t['e' + e + i] = null));
        }),
        (function() {
          function e(t, e) {
            function i(t) {
              return t.length ? t.split(/\s+/g) : [];
            }
            function n(t, e) {
              var n = i(e),
                a = n.indexOf(t);
              return -1 !== a && n.splice(a, 1), n.join(' ');
            }
            if (
              (Object.defineProperties(this, {
                length: {
                  get: function() {
                    return i(t[e]).length;
                  }
                },
                item: {
                  value: function(n) {
                    var a = i(t[e]);
                    return 0 <= n && n < a.length ? a[n] : null;
                  }
                },
                contains: {
                  value: function(n) {
                    if (0 === (n = String(n)).length) throw SyntaxError();
                    if (/\s/.test(n)) throw Error('InvalidCharacterError');
                    return -1 !== i(t[e]).indexOf(n);
                  }
                },
                add: {
                  value: function() {
                    var n = Array.prototype.slice.call(arguments).map(String);
                    if (
                      n.some(function(t) {
                        return 0 === t.length;
                      })
                    )
                      throw SyntaxError();
                    if (
                      n.some(function(t) {
                        return /\s/.test(t);
                      })
                    )
                      throw Error('InvalidCharacterError');
                    try {
                      var a = t[e],
                        r = i(a);
                      if (
                        0 ===
                        (n = n.filter(function(t) {
                          return -1 === r.indexOf(t);
                        })).length
                      )
                        return;
                      0 === a.length || /\s$/.test(a) || (a += ' '),
                        (a += n.join(' ')),
                        (t[e] = a);
                    } finally {
                      var s = i(t[e]).length;
                      this.length !== s && (this.length = s);
                    }
                  }
                },
                remove: {
                  value: function() {
                    var a = Array.prototype.slice.call(arguments).map(String);
                    if (
                      a.some(function(t) {
                        return 0 === t.length;
                      })
                    )
                      throw SyntaxError();
                    if (
                      a.some(function(t) {
                        return /\s/.test(t);
                      })
                    )
                      throw Error('InvalidCharacterError');
                    try {
                      var r = t[e];
                      a.forEach(function(t) {
                        r = n(t, r);
                      }),
                        (t[e] = r);
                    } finally {
                      var s = i(t[e]).length;
                      this.length !== s && (this.length = s);
                    }
                  }
                },
                toggle: {
                  value: function(a) {
                    var r = arguments[1];
                    try {
                      if (0 === (a = String(a)).length) throw SyntaxError();
                      if (/\s/.test(a)) throw Error('InvalidCharacterError');
                      var s = i(t[e]).indexOf(a);
                      if (-1 !== s && (!r || void 0 === r))
                        return (t[e] = n(a, t[e])), !1;
                      if (-1 !== s && r) return !0;
                      var o = t[e];
                      return (
                        0 === o.length || /\s$/.test(o) || (o += ' '),
                        (o += a),
                        (t[e] = o),
                        !0
                      );
                    } finally {
                      var l = i(t[e]).length;
                      this.length !== l && (this.length = l);
                    }
                  }
                },
                toString: {
                  value: function() {
                    return t[e];
                  }
                }
              }),
              'length' in this)
            )
              for (var a = 0; a < 100; ++a)
                Object.defineProperty(this, String(a), {
                  get: (function(t) {
                    return function() {
                      return this.item(t);
                    };
                  })(a)
                });
            else this.length = i(t[e]).length;
          }
          function i(e, i) {
            'Element' in t &&
              Element.prototype &&
              Object.defineProperty &&
              Object.defineProperty(Element.prototype, e, { get: i });
          }
          'classList' in document.createElement('span')
            ? (window.getClassList = function(t) {
                return t.classList;
              })
            : ((window.getClassList = function(t) {
                return new e(t, 'className');
              }),
              i('classList', function() {
                return new e(this, 'className');
              })),
            'relList' in document.createElement('link')
              ? (window.getRelList = function(t) {
                  return t.relList;
                })
              : ((window.getRelList = function(t) {
                  return new e(t, 'rel');
                }),
                i('relList', function() {
                  return new e(this, 'rel');
                })),
            (function() {
              if ('DOMTokenList' in t) {
                var e = document.createElement('span');
                'classList' in e &&
                  (e.classList.toggle('x', !1),
                  e.classList.contains('x') &&
                    (t.DOMTokenList.prototype.toggle = function(t) {
                      var e = arguments[1];
                      if (void 0 === e) {
                        var i = !this.contains(t);
                        return this[i ? 'add' : 'remove'](t), i;
                      }
                      return (e = !!e), this[e ? 'add' : 'remove'](t), e;
                    }));
              }
            })(),
            'previousElementSibling' in document.documentElement ||
              i('previousElementSibling', function() {
                for (
                  var t = this.previousSibling;
                  t && t.nodeType !== Node.ELEMENT_NODE;

                )
                  t = t.previousSibling;
                return t;
              }),
            'nextElementSibling' in document.documentElement ||
              i('nextElementSibling', function() {
                for (
                  var t = this.nextSibling;
                  t && t.nodeType !== Node.ELEMENT_NODE;

                )
                  t = t.nextSibling;
                return t;
              });
        })(),
        'Element' in t &&
          !Element.prototype.matches &&
          (Element.prototype.msMatchesSelector
            ? (Element.prototype.matches = Element.prototype.msMatchesSelector)
            : Element.prototype.oMatchesSelector
            ? (Element.prototype.matches = Element.prototype.oMatchesSelector)
            : Element.prototype.mozMatchesSelector
            ? (Element.prototype.matches = Element.prototype.mozMatchesSelector)
            : Element.prototype.webkitMatchesSelector
            ? (Element.prototype.matches =
                Element.prototype.webkitMatchesSelector)
            : document.querySelectorAll &&
              (Element.prototype.matches = function(t) {
                for (
                  var e = (
                      this.document || this.ownerDocument
                    ).querySelectorAll(t),
                    i = e.length;
                  --i >= 0 && e.item(i) !== this;

                );
                return i > -1;
              })),
        window.Element &&
          !Element.prototype.closest &&
          (Element.prototype.closest = function(t) {
            var e,
              i = (this.document || this.ownerDocument).querySelectorAll(t),
              n = this;
            do {
              for (e = i.length; --e >= 0 && i.item(e) !== n; );
            } while (e < 0 && (n = n.parentElement));
            return n;
          });
      var n = {
        prepend: function() {
          var t = [].slice.call(arguments);
          (t = i(t)), this.insertBefore(t, this.firstChild);
        },
        append: function() {
          var t = [].slice.call(arguments);
          (t = i(t)), this.appendChild(t);
        }
      };
      e(t.Document || t.HTMLDocument, n),
        e(t.DocumentFragment, n),
        e(t.Element, n);
      var a = {
        before: function() {
          var t = [].slice.call(arguments),
            e = this.parentNode;
          if (e) {
            for (var n = this.previousSibling; -1 !== t.indexOf(n); )
              n = n.previousSibling;
            var a = i(t);
            e.insertBefore(a, n ? n.nextSibling : e.firstChild);
          }
        },
        after: function() {
          var t = [].slice.call(arguments),
            e = this.parentNode;
          if (e) {
            for (var n = this.nextSibling; -1 !== t.indexOf(n); )
              n = n.nextSibling;
            var a = i(t);
            e.insertBefore(a, n);
          }
        },
        replaceWith: function() {
          var t = [].slice.call(arguments),
            e = this.parentNode;
          if (e) {
            for (var n = this.nextSibling; -1 !== t.indexOf(n); )
              n = n.nextSibling;
            var a = i(t);
            this.parentNode === e
              ? e.replaceChild(a, this)
              : e.insertBefore(a, n);
          }
        },
        remove: function() {
          this.parentNode && this.parentNode.removeChild(this);
        }
      };
      e(t.DocumentType, a), e(t.Element, a), e(t.CharacterData, a);
    }
  })(self),
  (function(t) {
    'use strict';
    'window' in t &&
      'document' in t &&
      ((t.XMLHttpRequest =
        t.XMLHttpRequest ||
        function() {
          try {
            return new ActiveXObject('Msxml2.XMLHTTP.6.0');
          } catch (t) {}
          try {
            return new ActiveXObject('Msxml2.XMLHTTP.3.0');
          } catch (t) {}
          try {
            return new ActiveXObject('Msxml2.XMLHTTP');
          } catch (t) {}
          throw Error('This browser does not support XMLHttpRequest.');
        }),
      [
        ['UNSENT', 0],
        ['OPENED', 1],
        ['HEADERS_RECEIVED', 2],
        ['LOADING', 3],
        ['DONE', 4]
      ].forEach(function(e) {
        e[0] in t.XMLHttpRequest || (t.XMLHttpRequest[e[0]] = e[1]);
      }),
      (function() {
        function e(t) {
          if (((this._data = []), t))
            for (var e = 0; e < t.elements.length; ++e) {
              var i = t.elements[e];
              '' !== i.name && this.append(i.name, i.value);
            }
        }
        if (!('FormData' in t)) {
          (e.prototype = {
            append: function(e, i) {
              if ('Blob' in t && i instanceof t.Blob)
                throw TypeError('Blob not supported');
              (e = String(e)), this._data.push([e, i]);
            },
            toString: function() {
              return this._data
                .map(function(t) {
                  return (
                    encodeURIComponent(t[0]) + '=' + encodeURIComponent(t[1])
                  );
                })
                .join('&');
            }
          }),
            (t.FormData = e);
          var i = t.XMLHttpRequest.prototype.send;
          t.XMLHttpRequest.prototype.send = function(t) {
            return (
              t instanceof e &&
                (this.setRequestHeader(
                  'Content-Type',
                  'application/x-www-form-urlencoded'
                ),
                (arguments[0] = t.toString())),
              i.apply(this, arguments)
            );
          };
        }
      })());
  })(self),
  (function(t) {
    'use strict';
    'window' in t &&
      'document' in t &&
      'TextRectangle' in t &&
      !('width' in t.TextRectangle.prototype) &&
      Object.defineProperties(t.TextRectangle.prototype, {
        width: {
          get: function() {
            return this.right - this.left;
          }
        },
        height: {
          get: function() {
            return this.bottom - this.top;
          }
        }
      });
  })(self),
  (function(t) {
    'use strict';
    function e(e) {
      return (
        !!e &&
        (('Symbol' in t &&
          'iterator' in t.Symbol &&
          'function' == typeof e[Symbol.iterator]) ||
          !!Array.isArray(e))
      );
    }
    function i(t) {
      return 'from' in Array ? Array.from(t) : Array.prototype.slice.call(t);
    }
    !(function() {
      function n(t) {
        var e = '',
          i = !0;
        return (
          t.forEach(function(t) {
            var n = encodeURIComponent(t.name),
              a = encodeURIComponent(t.value);
            i || (e += '&'), (e += n + '=' + a), (i = !1);
          }),
          e.replace(/%20/g, '+')
        );
      }
      function a(t, e) {
        var i = t.split('&');
        e && -1 === i[0].indexOf('=') && (i[0] = '=' + i[0]);
        var n = [];
        i.forEach(function(t) {
          if (0 !== t.length) {
            var e = t.indexOf('=');
            if (-1 !== e)
              var i = t.substring(0, e),
                a = t.substring(e + 1);
            else (i = t), (a = '');
            (i = i.replace(/\+/g, ' ')),
              (a = a.replace(/\+/g, ' ')),
              n.push({ name: i, value: a });
          }
        });
        var a = [];
        return (
          n.forEach(function(t) {
            a.push({
              name: decodeURIComponent(t.name),
              value: decodeURIComponent(t.value)
            });
          }),
          a
        );
      }
      function r(t) {
        var s = this;
        (this._list = []),
          void 0 === t ||
            null === t ||
            (t instanceof r
              ? (this._list = a(String(t)))
              : 'object' == typeof t && e(t)
              ? i(t).forEach(function(t) {
                  if (!e(t)) throw TypeError();
                  var n = i(t);
                  if (2 !== n.length) throw TypeError();
                  s._list.push({ name: String(n[0]), value: String(n[1]) });
                })
              : 'object' == typeof t && t
              ? Object.keys(t).forEach(function(e) {
                  s._list.push({ name: String(e), value: String(t[e]) });
                })
              : ('?' === (t = String(t)).substring(0, 1) &&
                  (t = t.substring(1)),
                (this._list = a(t)))),
          (this._url_object = null),
          (this._setList = function(t) {
            o || (s._list = t);
          });
        var o = !1;
        this._update_steps = function() {
          o ||
            ((o = !0),
            s._url_object &&
              ('about:' === s._url_object.protocol &&
                -1 !== s._url_object.pathname.indexOf('?') &&
                (s._url_object.pathname = s._url_object.pathname.split('?')[0]),
              (s._url_object.search = n(s._list)),
              (o = !1)));
        };
      }
      function s(t, e) {
        var i = 0;
        this.next = function() {
          if (i >= t.length) return { done: !0, value: void 0 };
          var n = t[i++];
          return {
            done: !1,
            value:
              'key' === e ? n.name : 'value' === e ? n.value : [n.name, n.value]
          };
        };
      }
      function o(e, i) {
        function n() {
          var t = o.href.replace(/#$|\?$|\?(?=#)/g, '');
          o.href !== t && (o.href = t);
        }
        function s() {
          u._setList(o.search ? a(o.search.substring(1)) : []),
            u._update_steps();
        }
        if (!(this instanceof t.URL))
          throw new TypeError(
            "Failed to construct 'URL': Please use the 'new' operator."
          );
        i &&
          (e = (function() {
            if (l) return new h(e, i).href;
            var t;
            try {
              var n;
              if (
                ('[object OperaMini]' ===
                Object.prototype.toString.call(window.operamini)
                  ? (((t = document.createElement('iframe')).style.display =
                      'none'),
                    document.documentElement.appendChild(t),
                    (n = t.contentWindow.document))
                  : document.implementation &&
                    document.implementation.createHTMLDocument
                  ? (n = document.implementation.createHTMLDocument(''))
                  : document.implementation &&
                    document.implementation.createDocument
                  ? ((n = document.implementation.createDocument(
                      'http://www.w3.org/1999/xhtml',
                      'html',
                      null
                    )).documentElement.appendChild(n.createElement('head')),
                    n.documentElement.appendChild(n.createElement('body')))
                  : window.ActiveXObject &&
                    ((n = new window.ActiveXObject('htmlfile')).write(
                      '<head></head><body></body>'
                    ),
                    n.close()),
                !n)
              )
                throw Error('base not supported');
              var a = n.createElement('base');
              (a.href = i), n.getElementsByTagName('head')[0].appendChild(a);
              var r = n.createElement('a');
              return (r.href = e), r.href;
            } finally {
              t && t.parentNode.removeChild(t);
            }
          })());
        var o = (function(t) {
            if (l) return new h(t);
            var e = document.createElement('a');
            return (e.href = t), e;
          })(e || ''),
          c = (function() {
            if (!('defineProperties' in Object)) return !1;
            try {
              var t = {};
              return (
                Object.defineProperties(t, {
                  prop: {
                    get: function() {
                      return !0;
                    }
                  }
                }),
                t.prop
              );
            } catch (t) {
              return !1;
            }
          })()
            ? this
            : document.createElement('a'),
          u = new r(o.search ? o.search.substring(1) : null);
        return (
          (u._url_object = c),
          Object.defineProperties(c, {
            href: {
              get: function() {
                return o.href;
              },
              set: function(t) {
                (o.href = t), n(), s();
              },
              enumerable: !0,
              configurable: !0
            },
            origin: {
              get: function() {
                return 'origin' in o
                  ? o.origin
                  : this.protocol + '//' + this.host;
              },
              enumerable: !0,
              configurable: !0
            },
            protocol: {
              get: function() {
                return o.protocol;
              },
              set: function(t) {
                o.protocol = t;
              },
              enumerable: !0,
              configurable: !0
            },
            username: {
              get: function() {
                return o.username;
              },
              set: function(t) {
                o.username = t;
              },
              enumerable: !0,
              configurable: !0
            },
            password: {
              get: function() {
                return o.password;
              },
              set: function(t) {
                o.password = t;
              },
              enumerable: !0,
              configurable: !0
            },
            host: {
              get: function() {
                var t = { 'http:': /:80$/, 'https:': /:443$/, 'ftp:': /:21$/ }[
                  o.protocol
                ];
                return t ? o.host.replace(t, '') : o.host;
              },
              set: function(t) {
                o.host = t;
              },
              enumerable: !0,
              configurable: !0
            },
            hostname: {
              get: function() {
                return o.hostname;
              },
              set: function(t) {
                o.hostname = t;
              },
              enumerable: !0,
              configurable: !0
            },
            port: {
              get: function() {
                return o.port;
              },
              set: function(t) {
                o.port = t;
              },
              enumerable: !0,
              configurable: !0
            },
            pathname: {
              get: function() {
                return '/' !== o.pathname.charAt(0)
                  ? '/' + o.pathname
                  : o.pathname;
              },
              set: function(t) {
                o.pathname = t;
              },
              enumerable: !0,
              configurable: !0
            },
            search: {
              get: function() {
                return o.search;
              },
              set: function(t) {
                o.search !== t && ((o.search = t), n(), s());
              },
              enumerable: !0,
              configurable: !0
            },
            searchParams: {
              get: function() {
                return u;
              },
              enumerable: !0,
              configurable: !0
            },
            hash: {
              get: function() {
                return o.hash;
              },
              set: function(t) {
                (o.hash = t), n();
              },
              enumerable: !0,
              configurable: !0
            },
            toString: {
              value: function() {
                return o.toString();
              },
              enumerable: !1,
              configurable: !0
            },
            valueOf: {
              value: function() {
                return o.valueOf();
              },
              enumerable: !1,
              configurable: !0
            }
          }),
          c
        );
      }
      var l,
        h = t.URL;
      try {
        if (h) {
          if ('searchParams' in (l = new t.URL('http://example.com'))) return;
          'href' in l || (l = void 0);
        }
      } catch (t) {}
      if (
        (Object.defineProperties(r.prototype, {
          append: {
            value: function(t, e) {
              this._list.push({ name: t, value: e }), this._update_steps();
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          delete: {
            value: function(t) {
              for (var e = 0; e < this._list.length; )
                this._list[e].name === t ? this._list.splice(e, 1) : ++e;
              this._update_steps();
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          get: {
            value: function(t) {
              for (var e = 0; e < this._list.length; ++e)
                if (this._list[e].name === t) return this._list[e].value;
              return null;
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          getAll: {
            value: function(t) {
              for (var e = [], i = 0; i < this._list.length; ++i)
                this._list[i].name === t && e.push(this._list[i].value);
              return e;
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          has: {
            value: function(t) {
              for (var e = 0; e < this._list.length; ++e)
                if (this._list[e].name === t) return !0;
              return !1;
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          set: {
            value: function(t, e) {
              for (var i = !1, n = 0; n < this._list.length; )
                this._list[n].name === t
                  ? i
                    ? this._list.splice(n, 1)
                    : ((this._list[n].value = e), (i = !0), ++n)
                  : ++n;
              i || this._list.push({ name: t, value: e }), this._update_steps();
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          entries: {
            value: function() {
              return new s(this._list, 'key+value');
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          keys: {
            value: function() {
              return new s(this._list, 'key');
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          values: {
            value: function() {
              return new s(this._list, 'value');
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          forEach: {
            value: function(t) {
              var e = arguments.length > 1 ? arguments[1] : void 0;
              this._list.forEach(function(i, n) {
                t.call(e, i.value, i.name);
              });
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          },
          toString: {
            value: function() {
              return n(this._list);
            },
            writable: !0,
            enumerable: !1,
            configurable: !0
          }
        }),
        'Symbol' in t &&
          'iterator' in t.Symbol &&
          (Object.defineProperty(r.prototype, t.Symbol.iterator, {
            value: r.prototype.entries,
            writable: !0,
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(s.prototype, t.Symbol.iterator, {
            value: function() {
              return this;
            },
            writable: !0,
            enumerable: !0,
            configurable: !0
          })),
        h)
      )
        for (var c in h)
          h.hasOwnProperty(c) && 'function' == typeof h[c] && (o[c] = h[c]);
      (t.URL = o), (t.URLSearchParams = r);
    })(),
      (function() {
        if (
          '1' !== new t.URLSearchParams([['a', 1]]).get('a') ||
          '1' !== new t.URLSearchParams({ a: 1 }).get('a')
        ) {
          var n = t.URLSearchParams;
          t.URLSearchParams = function(t) {
            if (t && 'object' == typeof t && e(t)) {
              var a = new n();
              return (
                i(t).forEach(function(t) {
                  if (!e(t)) throw TypeError();
                  var n = i(t);
                  if (2 !== n.length) throw TypeError();
                  a.append(n[0], n[1]);
                }),
                a
              );
            }
            return t && 'object' == typeof t
              ? ((a = new n()),
                Object.keys(t).forEach(function(e) {
                  a.set(e, t[e]);
                }),
                a)
              : new n(t);
          };
        }
      })();
  })(self),
  (function(t) {
    'use strict';
    function e(t) {
      if ((t = String(t)).match(/[^\x00-\xFF]/))
        throw TypeError('Not a valid ByteString');
      return t;
    }
    function i(t) {
      return (t = String(t)).replace(
        /([\u0000-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDFFF])/g,
        function(t) {
          return /^[\uD800-\uDFFF]$/.test(t) ? '�' : t;
        }
      );
    }
    function n(t) {
      return String(t).replace(/[a-z]/g, function(t) {
        return t.toUpperCase();
      });
    }
    function a(t) {
      return /^[!#$%&'*+\-.09A-Z^_`a-z|~]+$/.test(t);
    }
    function r(t) {
      return (
        {
          'accept-charset': !0,
          'accept-encoding': !0,
          'access-control-request-headers': !0,
          'access-control-request-method': !0,
          connection: !0,
          'content-length': !0,
          cookie: !0,
          cookie2: !0,
          date: !0,
          dnt: !0,
          expect: !0,
          host: !0,
          'keep-alive': !0,
          origin: !0,
          referer: !0,
          te: !0,
          trailer: !0,
          'transfer-encoding': !0,
          upgrade: !0,
          'user-agent': !0,
          via: !0
        }[(t = String(t).toLowerCase())] ||
        'proxy-' === t.substring(0, 6) ||
        'sec-' === t.substring(0, 4)
      );
    }
    function s(t) {
      return { 'set-cookie': !0, 'set-cookie2': !0 }[
        (t = String(t).toLowerCase())
      ];
    }
    function o(t, e) {
      return (
        'accept' === (t = String(t).toLowerCase()) ||
        'accept-language' === t ||
        'content-language' === t ||
        ('content-type' === t &&
          -1 !==
            [
              'application/x-www-form-encoded',
              'multipart/form-data',
              'text/plain'
            ].indexOf(e))
      );
    }
    function l(t) {
      (this._guard = 'none'), (this._headerList = []), t && h(this, t);
    }
    function h(t, e) {
      e instanceof l
        ? e._headerList.forEach(function(e) {
            t.append(e[0], e[1]);
          })
        : Array.isArray(e)
        ? e.forEach(function(e) {
            if (!Array.isArray(e) || 2 !== e.length) throw TypeError();
            t.append(e[0], e[1]);
          })
        : ((e = Object(e)),
          Object.keys(e).forEach(function(i) {
            t.append(i, e[i]);
          }));
    }
    function c(t) {
      (this._headers = t), (this._index = 0);
    }
    function u(t) {
      (this._stream = t), (this.bodyUsed = !1);
    }
    function _(t, a) {
      if (arguments.length < 1) throw TypeError('Not enough arguments');
      if (
        (u.call(this, null),
        (this.method = 'GET'),
        (this.url = ''),
        (this.headers = new l()),
        (this.headers._guard = 'request'),
        (this.referrer = null),
        (this.mode = null),
        (this.credentials = 'omit'),
        t instanceof _)
      ) {
        if (t.bodyUsed) throw TypeError();
        (t.bodyUsed = !0),
          (this.method = t.method),
          (this.url = t.url),
          (this.headers = new l(t.headers)),
          (this.headers._guard = t.headers._guard),
          (this.credentials = t.credentials),
          (this._stream = t._stream);
      } else (t = i(t)), (this.url = String(new URL(t, self.location)));
      if ('method' in (a = Object(a))) {
        var r = e(a.method);
        if (
          (function(t) {
            return 'CONNECT' === (t = n(t)) || 'TRACE' === t || 'TRACK' === t;
          })(r)
        )
          throw TypeError();
        this.method = (function(t) {
          var e = n(t);
          return 'DELETE' === e ||
            'GET' === e ||
            'HEAD' === e ||
            'OPTIONS' === e ||
            'POST' === e ||
            'PUT' === e
            ? e
            : t;
        })(r);
      }
      'headers' in a && ((this.headers = new l()), h(this.headers, a.headers)),
        'body' in a && (this._stream = a.body),
        'credentials' in a &&
          -1 !== ['omit', 'same-origin', 'include'].indexOf(a.credentials) &&
          (this.credentials = a.credentials);
    }
    function d(t, e) {
      if (
        (arguments.length < 1 && (t = ''),
        (this.headers = new l()),
        (this.headers._guard = 'response'),
        t instanceof XMLHttpRequest && '_url' in t)
      ) {
        var n = t;
        return (
          (this.type = 'basic'),
          (this.url = i(n._url)),
          (this.status = n.status),
          (this.ok = 200 <= this.status && this.status <= 299),
          (this.statusText = n.statusText),
          n
            .getAllResponseHeaders()
            .split(/\r?\n/)
            .filter(function(t) {
              return t.length;
            })
            .forEach(function(t) {
              var e = t.indexOf(':');
              this.headers.append(t.substring(0, e), t.substring(e + 2));
            }, this),
          void u.call(this, n.responseText)
        );
      }
      u.call(this, t), (e = Object(e) || {}), (this.url = '');
      var a =
        'status' in e
          ? (function(t) {
              return 65535 & t;
            })(e.status)
          : 200;
      if (a < 200 || a > 599) throw RangeError();
      (this.status = a), (this.ok = 200 <= this.status && this.status <= 299);
      var r = 'statusText' in e ? String(e.statusText) : 'OK';
      if (/[^\x00-\xFF]/.test(r)) throw TypeError();
      (this.statusText = r),
        'headers' in e && h(this.headers, e),
        (this.type = 'basic');
    }
    ((l.prototype = {
      append: function(t, i) {
        if (((t = e(t)), !a(t))) throw TypeError();
        if ('immutable' === this._guard) throw TypeError();
        ('request' === this._guard && r(t)) ||
          (('request-no-CORS' !== this._guard || o(t, i)) &&
            (('response' === this._guard && s(t)) ||
              ((t = t.toLowerCase()), this._headerList.push([t, i]))));
      },
      delete: function(t) {
        if (((t = e(t)), !a(t))) throw TypeError();
        if ('immutable' === this._guard) throw TypeError();
        if (
          ('request' !== this._guard || !r(t)) &&
          ('request-no-CORS' !== this._guard || o(t, 'invalid')) &&
          ('response' !== this._guard || !s(t))
        ) {
          t = t.toLowerCase();
          for (var i = 0; i < this._headerList.length; )
            this._headerList[i][0] === t ? this._headerList.splice(i, 1) : ++i;
        }
      },
      get: function(t) {
        if (((t = e(t)), !a(t))) throw TypeError();
        t = t.toLowerCase();
        for (var i = 0; i < this._headerList.length; ++i)
          if (this._headerList[i][0] === t) return this._headerList[i][1];
        return null;
      },
      getAll: function(t) {
        if (((t = e(t)), !a(t))) throw TypeError();
        t = t.toLowerCase();
        for (var i = [], n = 0; n < this._headerList.length; ++n)
          this._headerList[n][0] === t && i.push(this._headerList[n][1]);
        return i;
      },
      has: function(t) {
        if (((t = e(t)), !a(t))) throw TypeError();
        t = t.toLowerCase();
        for (var i = 0; i < this._headerList.length; ++i)
          if (this._headerList[i][0] === t) return !0;
        return !1;
      },
      set: function(t, i) {
        if (((t = e(t)), !a(t))) throw TypeError();
        if ('immutable' === this._guard) throw TypeError();
        if (
          ('request' !== this._guard || !r(t)) &&
          ('request-no-CORS' !== this._guard || o(t, i)) &&
          ('response' !== this._guard || !s(t))
        ) {
          t = t.toLowerCase();
          for (var n = 0; n < this._headerList.length; ++n)
            if (this._headerList[n][0] === t) {
              for (this._headerList[n++][1] = i; n < this._headerList.length; )
                this._headerList[n][0] === t
                  ? this._headerList.splice(n, 1)
                  : ++n;
              return;
            }
          this._headerList.push([t, i]);
        }
      }
    })[Symbol.iterator] = function() {
      return new c(this);
    }),
      ((c.prototype = {}).next = function() {
        return this._index >= this._headers._headerList.length
          ? { value: void 0, done: !0 }
          : { value: this._headers._headerList[this._index++], done: !1 };
      }),
      (c.prototype[Symbol.iterator] = function() {
        return this;
      }),
      (_.prototype = u.prototype = {
        arrayBuffer: function() {
          if (this.bodyUsed) return Promise.reject(TypeError());
          if (((this.bodyUsed = !0), this._stream instanceof ArrayBuffer))
            return Promise.resolve(this._stream);
          var t = this._stream;
          return new Promise(function(e, i) {
            var n = unescape(encodeURIComponent(t))
              .split('')
              .map(function(t) {
                return t.charCodeAt(0);
              });
            e(new Uint8Array(n).buffer);
          });
        },
        blob: function() {
          return this.bodyUsed
            ? Promise.reject(TypeError())
            : ((this.bodyUsed = !0),
              this._stream instanceof Blob
                ? Promise.resolve(this._stream)
                : Promise.resolve(new Blob([this._stream])));
        },
        formData: function() {
          return this.bodyUsed
            ? Promise.reject(TypeError())
            : ((this.bodyUsed = !0),
              this._stream instanceof FormData
                ? Promise.resolve(this._stream)
                : Promise.reject(Error('Not yet implemented')));
        },
        json: function() {
          if (this.bodyUsed) return Promise.reject(TypeError());
          this.bodyUsed = !0;
          var t = this;
          return new Promise(function(e, i) {
            e(JSON.parse(t._stream));
          });
        },
        text: function() {
          return this.bodyUsed
            ? Promise.reject(TypeError())
            : ((this.bodyUsed = !0), Promise.resolve(String(this._stream)));
        }
      }),
      (d.prototype = u.prototype),
      (d.redirect = function() {
        throw Error('Not supported');
      }),
      'fetch' in t ||
        ((t.Headers = l),
        (t.Request = _),
        (t.Response = d),
        (t.fetch = function(t, e) {
          return new Promise(function(i, n) {
            var a = new _(t, e),
              r = new XMLHttpRequest();
            r._url = a.url;
            try {
              r.open(a.method, a.url, !0);
            } catch (t) {
              throw TypeError(t.message);
            }
            for (
              var s = a.headers[Symbol.iterator](), o = s.next();
              !o.done;
              o = s.next()
            )
              r.setRequestHeader(o.value[0], o.value[1]);
            'include' === a.credentials && (r.withCredentials = !0),
              (r.onreadystatechange = function() {
                r.readyState === XMLHttpRequest.DONE &&
                  (0 === r.status
                    ? n(new TypeError('Network error'))
                    : i(new d(r)));
              }),
              r.send(a._stream);
          });
        }));
  })(self);
